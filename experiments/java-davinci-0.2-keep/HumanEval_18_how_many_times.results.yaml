name: HumanEval_18_how_many_times
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmp7g6n2_du.java:20)\n\
    \tat Problem.main(tmp7g6n2_du.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                boolean found = true;\n                for (int j = 1; j\
    \ < substring.length(); j++) {\n                    if (i + j >= string.length()\
    \ || string.charAt(i + j) != substring.charAt(j)) {\n                        found\
    \ = false;\n                        break;\n                    }\n          \
    \      }\n                if (found) {\n                    count++;\n       \
    \         }\n            }\n        }\n        return count;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpii1tuc94.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                boolean found = true;\n                for (int j = 1; j\
    \ < substring.length(); j++) {\n                    if (i + j >= string.length()\
    \ || string.charAt(i + j) != substring.charAt(j)) {\n                        found\
    \ = false;\n                        break;\n                    }\n          \
    \      }\n                if (found) {\n                    count++;\n       \
    \         }\n            }\n        }\n        return count;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpeisjwjk1.java:20)\n\
    \tat Problem.main(tmpeisjwjk1.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        if (string.length() == 0 || substring.length()\
    \ == 0) {\n            return 0;\n        }\n        long count = 0;\n       \
    \ for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i).startsWith(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmp35g3n0i8.java:20)\n\
    \tat Problem.main(tmp35g3n0i8.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return string.chars().mapToObj(c -> (char)\
    \ c).collect(Collectors.groupingBy(c -> c, Collectors.counting())).entrySet().stream().map(e\
    \ -> e.getValue() / substring.chars().mapToObj(c -> (char) c).collect(Collectors.groupingBy(c\
    \ -> c, Collectors.counting())).get(e.getKey())).reduce(1L, (a, b) -> a * b);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj510os9h.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpow4z22zm.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        if (string.length() == 0 || substring.length()\
    \ == 0) return 0;\n        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.charAt(i) == substring.charAt(0)) {\n       \
    \         if (string.length() - i < substring.length()) break;\n             \
    \   if (string.substring(i, i + substring.length()).equals(substring)) count++;\n\
    \            }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.startsWith(substring, i))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7e9fuq6m.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpu0vun3to.java:20)\n\
    \tat Problem.main(tmpu0vun3to.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppf7oa26q.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfazljoap.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        if (string.length() == 0 || substring.length()\
    \ == 0) {\n            return 0;\n        }\n        long count = 0;\n       \
    \ for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i).startsWith(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpuv4w1n_u.java:20)\n\
    \tat Problem.main(tmpuv4w1n_u.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf_dyyuyr.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return 0;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp5brfs_v.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmp3mfem05h.java:20)\n\
    \tat Problem.main(tmp3mfem05h.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5pc60hfv.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return string.length() - string.replace(substring,\
    \ \"\").length();\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmg8xgaz0.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return 0;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdm8s4sgk.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index < string.length()) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index == -1) {\n                break;\n          \
    \  }\n            count++;\n            index++;\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpvt9fyk6k.java:20)\n\
    \tat Problem.main(tmpvt9fyk6k.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                boolean found = true;\n                for (int j = 1; j\
    \ < substring.length(); j++) {\n                    if (i + j >= string.length()\
    \ || string.charAt(i + j) != substring.charAt(j)) {\n                        found\
    \ = false;\n                        break;\n                    }\n          \
    \      }\n                if (found) {\n                    count++;\n       \
    \         }\n            }\n        }\n        return count;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index < string.length()) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index == -1) {\n                break;\n          \
    \  }\n            count++;\n            index++;\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpb4a7dmyu.java:20)\n\
    \tat Problem.main(tmpb4a7dmyu.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpt2a_p6mz.java:20)\n\
    \tat Problem.main(tmpt2a_p6mz.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = string.indexOf(substring);\n\
    \        while (index != -1) {\n            count++;\n            index = string.indexOf(substring,\
    \ index + 1);\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return 0;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpivx_e8zg.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2uj3ib4d.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmphnq2z4i3.java:20)\n\
    \tat Problem.main(tmphnq2z4i3.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return 0;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqje3mvs1.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return string.chars().mapToObj(c -> (char)\
    \ c).collect(Collectors.toList()).stream().reduce(0L, (acc, c) -> {\n        \
    \    if (c == substring.charAt(0)) {\n                if (string.substring(string.indexOf(c)).startsWith(substring))\
    \ {\n                    return acc + 1;\n                }\n            }\n \
    \           return acc;\n        }, (a, b) -> a + b);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptl5xxm3x.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                index += substring.length();\n\
    \                count++;\n            }\n        }\n        return count;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6211eg5i.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                boolean found = true;\n                for (int j = 1; j\
    \ < substring.length(); j++) {\n                    if (i + j >= string.length()\
    \ || string.charAt(i + j) != substring.charAt(j)) {\n                        found\
    \ = false;\n                        break;\n                    }\n          \
    \      }\n                if (found) {\n                    count++;\n       \
    \         }\n            }\n        }\n        return count;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return 0;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq2t73dcq.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpzqkfycu0.java:20)\n\
    \tat Problem.main(tmpzqkfycu0.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmp_xw86wv3.java:20)\n\
    \tat Problem.main(tmp_xw86wv3.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while ((index = string.indexOf(substring, index)) != -1) {\n        \
    \    index += substring.length();\n            count++;\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprqetwhb6.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbt6d1cwt.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return 0;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy1mhmohx.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long result = 0;\n        for (int i =\
    \ 0; i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    result++;\n                }\n            }\n       \
    \ }\n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpnga0504r.java:20)\n\
    \tat Problem.main(tmpnga0504r.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while ((index = string.indexOf(substring, index)) != -1) {\n        \
    \    count++;\n            index += substring.length();\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6zdmw_l.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmphndbmc3h.java:20)\n\
    \tat Problem.main(tmphndbmc3h.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while ((index = string.indexOf(substring, index)) != -1) {\n        \
    \    index += substring.length();\n            count++;\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp460fw91t.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index < string.length()) {\n            int indexOf = string.indexOf(substring,\
    \ index);\n            if (indexOf == -1) {\n                break;\n        \
    \    }\n            count++;\n            index = indexOf + 1;\n        }\n  \
    \      return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps5jo92lt.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp00cula2k.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp13lg9or9.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpmy91fl_8.java:20)\n\
    \tat Problem.main(tmpmy91fl_8.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index < string.length()) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index == -1) {\n                break;\n          \
    \  }\n            count++;\n            index++;\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpjg3pmkf0.java:20)\n\
    \tat Problem.main(tmpjg3pmkf0.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (true) {\n            index = string.indexOf(substring, index);\n\
    \            if (index == -1) {\n                break;\n            }\n     \
    \       count++;\n            index++;\n        }\n        return count;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpcfnfygen.java:20)\n\
    \tat Problem.main(tmpcfnfygen.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmp_0vq41qr.java:20)\n\
    \tat Problem.main(tmp_0vq41qr.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7m7hiyfl.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpr3r4s5ks.java:20)\n\
    \tat Problem.main(tmpr3r4s5ks.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return string.chars().mapToObj(c -> (char)\
    \ c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()\n \
    \   }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfu225nd7.java:17: error: ')' expected\n        return string.chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()\n \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \  "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmprq7vfcd1.java:20)\n\
    \tat Problem.main(tmprq7vfcd1.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclrd5455.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe4wheq0r.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index < string.length()) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index == -1) {\n                break;\n          \
    \  }\n            count++;\n            index++;\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return 0;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6rzhhitz.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmphorjua4j.java:20)\n\
    \tat Problem.main(tmphorjua4j.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpi_nux_je.java:20)\n\
    \tat Problem.main(tmpi_nux_je.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                boolean found = true;\n                for (int j = 1; j\
    \ < substring.length(); j++) {\n                    if (i + j >= string.length()\
    \ || string.charAt(i + j) != substring.charAt(j)) {\n                        found\
    \ = false;\n                        break;\n                    }\n          \
    \      }\n                if (found) {\n                    count++;\n       \
    \         }\n            }\n        }\n        return count;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                index += substring.length();\n\
    \                count++;\n            }\n        }\n        return count;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9_00lixr.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppd6q2pdj.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                boolean found = true;\n                for (int j = 1; j\
    \ < substring.length(); j++) {\n                    if (i + j >= string.length()\
    \ || string.charAt(i + j) != substring.charAt(j)) {\n                        found\
    \ = false;\n                        break;\n                    }\n          \
    \      }\n                if (found) {\n                    count++;\n       \
    \         }\n            }\n        }\n        return count;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index < string.length()) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index == -1) {\n                break;\n          \
    \  }\n            count++;\n            index++;\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmp03tge8r6.java:20)\n\
    \tat Problem.main(tmp03tge8r6.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                boolean match = true;\n                for (int j = 1; j\
    \ < substring.length(); j++) {\n                    if (i + j >= string.length()\
    \ || string.charAt(i + j) != substring.charAt(j)) {\n                        match\
    \ = false;\n                        break;\n                    }\n          \
    \      }\n                if (match) {\n                    count++;\n       \
    \         }\n            }\n        }\n        return count;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1bd9bobv.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return string.chars().mapToObj(c -> (char)\
    \ c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).split(substring).length\
    \ - 1;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4c5ea0cg.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2hyzqynh.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return 0;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqtoq2nz1.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.startsWith(substring, i))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpa_prcb8c.java:20)\n\
    \tat Problem.main(tmpa_prcb8c.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmp7danow_c.java:20)\n\
    \tat Problem.main(tmp7danow_c.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf4o182w.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return 0;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdogjmwek.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmp0a4mf1ov.java:20)\n\
    \tat Problem.main(tmp0a4mf1ov.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.startsWith(substring, i))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return 0;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9nwnuudx.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpsm5b4i4c.java:20)\n\
    \tat Problem.main(tmpsm5b4i4c.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpp_mxsv9w.java:20)\n\
    \tat Problem.main(tmpp_mxsv9w.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpug2tovpn.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbk3u4dlg.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_21gqnc.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return 0;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp778323og.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return string.length() - string.replace(substring,\
    \ \"\").length();\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz8e_lbve.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpon4yarap.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpmph9a6f4.java:20)\n\
    \tat Problem.main(tmpmph9a6f4.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblfq0_mv.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpuelgrtx7.java:20)\n\
    \tat Problem.main(tmpuelgrtx7.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return 0;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6wd1r2w.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmp5hpgunjn.java:20)\n\
    \tat Problem.main(tmp5hpgunjn.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return 0;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6zanmn0f.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_964cdn4.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeo6gtgq8.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpf2dtl673.java:20)\n\
    \tat Problem.main(tmpf2dtl673.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx62h9ipn.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                boolean found = true;\n                for (int j = 1; j\
    \ < substring.length(); j++) {\n                    if (i + j >= string.length()\
    \ || string.charAt(i + j) != substring.charAt(j)) {\n                        found\
    \ = false;\n                        break;\n                    }\n          \
    \      }\n                if (found) {\n                    count++;\n       \
    \         }\n            }\n        }\n        return count;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return 0;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq8q6v7qy.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return 0;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp194jt8et.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpv8bqh_6l.java:20)\n\
    \tat Problem.main(tmpv8bqh_6l.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                boolean found = true;\n                for (int j = 1; j\
    \ < substring.length(); j++) {\n                    if (i + j >= string.length()\
    \ || string.charAt(i + j) != substring.charAt(j)) {\n                        found\
    \ = false;\n                        break;\n                    }\n          \
    \      }\n                if (found) {\n                    count++;\n       \
    \         }\n            }\n        }\n        return count;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpmex362i9.java:20)\n\
    \tat Problem.main(tmpmex362i9.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return 0;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvqyinz57.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv2b1mgvf.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index < string.length()) {\n            int found = string.indexOf(substring,\
    \ index);\n            if (found == -1) {\n                break;\n          \
    \  }\n            count++;\n            index = found + 1;\n        }\n      \
    \  return count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while ((index = string.indexOf(substring, index)) != -1) {\n        \
    \    count++;\n            index += substring.length();\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsjsqvgcd.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpllibcv46.java:20)\n\
    \tat Problem.main(tmpllibcv46.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpno59g8yk.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = 0;\n\
    \        while ((index = string.indexOf(substring, index)) != -1) {\n        \
    \    index += substring.length();\n            count++;\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfcn2v8y.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return string.length() - string.replace(substring,\
    \ \"\").length();\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9i6mdgga.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                boolean found = true;\n                for (int j = 1; j\
    \ < substring.length(); j++) {\n                    if (i + j >= string.length()\
    \ || string.charAt(i + j) != substring.charAt(j)) {\n                        found\
    \ = false;\n                        break;\n                    }\n          \
    \      }\n                if (found) {\n                    count++;\n       \
    \         }\n            }\n        }\n        return count;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcfah7vxl.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpmzjqdx49.java:20)\n\
    \tat Problem.main(tmpmzjqdx49.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpput0r0vj.java:20)\n\
    \tat Problem.main(tmpput0r0vj.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5pu26j2j.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpgnk7rykj.java:20)\n\
    \tat Problem.main(tmpgnk7rykj.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.length() - i < substring.length()) {\n       \
    \             break;\n                }\n                if (string.substring(i,\
    \ i + substring.length()).equals(substring)) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        // your code here\n        return 0;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5uwa_f8c.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphs60fmxp.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxjbqemi.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpopqlaxia.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        if (string.length() == 0 || substring.length()\
    \ == 0) {\n            return 0;\n        }\n        long count = 0;\n       \
    \ for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i).startsWith(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmp6ndgri3c.java:20)\n\
    \tat Problem.main(tmp6ndgri3c.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpi4sani7o.java:20)\n\
    \tat Problem.main(tmpi4sani7o.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgejq0jzg.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while ((index = string.indexOf(substring, index)) != -1) {\n        \
    \    index += substring.length();\n            count++;\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgg511c7k.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0v9zhueh.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmp00x71v8y.java:20)\n\
    \tat Problem.main(tmp00x71v8y.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        int index = 0;\n        int count = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7gewawfo.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9nff5eaq.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpymesm7kb.java:20)\n\
    \tat Problem.main(tmpymesm7kb.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmp1uht4lvs.java:20)\n\
    \tat Problem.main(tmp1uht4lvs.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmcck91ci.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpzrpzbuf_.java:20)\n\
    \tat Problem.main(tmpzrpzbuf_.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnywpfakc.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpwq9j7qqg.java:20)\n\
    \tat Problem.main(tmpwq9j7qqg.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpd8prq55f.java:20)\n\
    \tat Problem.main(tmpd8prq55f.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (i + substring.length() <= string.length()) {\n      \
    \              if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (i + substring.length() <= string.length()) {\n      \
    \              if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvabd0lbk.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = string.indexOf(substring);\n\
    \        while (index != -1) {\n            count++;\n            index = string.indexOf(substring,\
    \ index + 1);\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return string.chars().mapToObj(c -> (char)\
    \ c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).split(substring).length\
    \ - 1;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4vvjo0u3.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                index += substring.length();\n\
    \                count++;\n            }\n        }\n        return count;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx09hq7fj.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpxbn7abnx.java:20)\n\
    \tat Problem.main(tmpxbn7abnx.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while ((index = string.indexOf(substring, index)) != -1) {\n        \
    \    count++;\n            index += substring.length();\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3kj4md_h.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpopmn6m01.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6h4ngluu.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index++;\n            }\n        }\n        return count;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        return string.length() - string.replace(substring,\
    \ \"\").length();\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7ig_wq4u.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long howManyTimes(String\
    \ string, String substring) {\n        long count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpmd964xja.java:20)\n\
    \tat Problem.main(tmpmd964xja.java:31)\n"
  exit_code: 1
  status: Exception

name: HumanEval_25_factorize
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Return list of prime factors of given integer in the order\
  \ from smallest to largest.\n    // Each of the factors should be listed number\
  \ of times corresponding to how many times it appeares in factorization.\n    //\
  \ Input number should be equal to the product of all factors\n    // >>> factorize(8)\n\
  \    // [2, 2, 2]\n    // >>> factorize(25)\n    // [5, 5]\n    // >>> factorize(70)\n\
  \    // [2, 5, 7]\n    public static ArrayList<Long> factorize(long n) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(factorize((2l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)2l)))));\n    assert(factorize((4l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)2l)))));\n    assert(factorize((8l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)2l)))));\n    assert(factorize((57l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)3l, (long)19l)))));\n    assert(factorize((3249l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)3l, (long)3l, (long)19l, (long)19l)))));\n\
  \    assert(factorize((185193l)).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
  \ (long)3l, (long)3l, (long)19l, (long)19l, (long)19l)))));\n    assert(factorize((20577l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)3l, (long)19l, (long)19l, (long)19l)))));\n\
  \    assert(factorize((18l)).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)3l, (long)3l)))));\n    }\n\n}\n"
completions: ["        ArrayList<Long> factors = new ArrayList<>();\n        for (long\
    \ i = 2; i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2;\
    \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.add(n);\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                factors.add(i);\n             \
    \   n /= i;\n            }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long i = 2;\n        while (n > 1) {\n\
    \            while (n % i == 0) {\n                factors.add(i);\n         \
    \       n /= i;\n            }\n            i++;\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2;\
    \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        long i = 2;\n   \
    \     while (n > 1) {\n            if (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            } else {\n                i++;\n       \
    \     }\n        }\n        return factors;\n", "        ArrayList<Long> factors\
    \ = new ArrayList<>();\n        for (long i = 2; i * i <= n; i++) {\n        \
    \    while (n % i == 0) {\n                factors.add(i);\n                n\
    \ /= i;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n\
    \        }\n        return factors;\n", "        ArrayList<Long> factors = new\
    \ ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n            while (n\
    \ % i == 0) {\n                factors.add(i);\n                n /= i;\n    \
    \        }\n        }\n        return factors;\n", "        ArrayList<Long> factors\
    \ = new ArrayList<>();\n        for (long i = 2; i * i <= n; i++) {\n        \
    \    while (n % i == 0) {\n                factors.add(i);\n                n\
    \ /= i;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n\
    \        }\n        return factors;\n", "        ArrayList<Long> factors = new\
    \ ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n            while (n\
    \ % i == 0) {\n                factors.add(i);\n                n /= i;\n    \
    \        }\n        }\n        return factors;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (long i = 2; i * i <= n; i++) {\n        \
    \    while (n % i == 0) {\n                result.add(i);\n                n /=\
    \ i;\n            }\n        }\n        if (n > 1) {\n            result.add(n);\n\
    \        }\n        return result;\n", "        ArrayList<Long> factors = new\
    \ ArrayList<>();\n        long i = 2;\n        while (n > 1) {\n            while\
    \ (n % i == 0) {\n                factors.add(i);\n                n /= i;\n \
    \           }\n            i++;\n        }\n        return factors;\n", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        for (long i = 2; i <=\
    \ n; i++) {\n            while (n % i == 0) {\n                result.add(i);\n\
    \                n /= i;\n            }\n        }\n        return result;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2;\
    \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2;\
    \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        long i = 2;\n   \
    \     while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n            i++;\n        }\n       \
    \ return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.add(n);\n        }\n      \
    \  return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long i = 2;\n        while (n > 1) {\n            while (n % i == 0)\
    \ {\n                factors.add(i);\n                n /= i;\n            }\n\
    \            i++;\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                factors.add(i);\n             \
    \   n /= i;\n            }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i * i <= n; i++) {\n\
    \            while (n % i == 0) {\n                factors.add(i);\n         \
    \       n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n\
    \        }\n        return factors;\n", "        ArrayList<Long> factors = new\
    \ ArrayList<>();\n        for (long i = 2; i * i <= n; i++) {\n            while\
    \ (n % i == 0) {\n                factors.add(i);\n                n /= i;\n \
    \           }\n        }\n        if (n > 1) {\n            factors.add(n);\n\
    \        }\n        return factors;\n", "        ArrayList<Long> factors = new\
    \ ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n            while (n\
    \ % i == 0) {\n                factors.add(i);\n                n /= i;\n    \
    \        }\n        }\n        return factors;\n", "        ArrayList<Long> res\
    \ = new ArrayList<>();\n        for (long i = 2; i * i <= n; i++) {\n        \
    \    while (n % i == 0) {\n                res.add(i);\n                n /= i;\n\
    \            }\n        }\n        if (n > 1) {\n            res.add(n);\n   \
    \     }\n        return res;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long divisor = 2;\n        while (n > 1) {\n            while (n % divisor\
    \ == 0) {\n                factors.add(divisor);\n                n /= divisor;\n\
    \            }\n            divisor++;\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2;\
    \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2;\
    \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2;\
    \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        long i = 2;\n   \
    \     while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n            i++;\n        }\n       \
    \ return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.add(n);\n        }\n      \
    \  return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.add(n);\n        }\n      \
    \  return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.add(n);\n        }\n      \
    \  return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long divisor = 2;\n        while (n > 1) {\n            while (n % divisor\
    \ == 0) {\n                factors.add(divisor);\n                n /= divisor;\n\
    \            }\n            divisor++;\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2;\
    \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.add(n);\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                factors.add(i);\n             \
    \   n /= i;\n            }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i * i <= n; i++) {\n\
    \            while (n % i == 0) {\n                factors.add(i);\n         \
    \       n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n\
    \        }\n        return factors;\n", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                res.add(i);\n                n /= i;\n            }\n       \
    \ }\n        if (n > 1) {\n            res.add(n);\n        }\n        return\
    \ res;\n", "        ArrayList<Long> factors = new ArrayList<>();\n        for\
    \ (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n            \
    \    factors.add(i);\n                n /= i;\n            }\n        }\n    \
    \    return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.add(n);\n        }\n      \
    \  return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.add(n);\n        }\n      \
    \  return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long i = 2;\n        while (n > 1) {\n            while (n % i == 0)\
    \ {\n                factors.add(i);\n                n /= i;\n            }\n\
    \            i++;\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                factors.add(i);\n             \
    \   n /= i;\n            }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (long i = 2; i * i <= n; i++) {\n \
    \           while (n % i == 0) {\n                result.add(i);\n           \
    \     n /= i;\n            }\n        }\n        if (n > 1) {\n            result.add(n);\n\
    \        }\n        return result;\n", "        ArrayList<Long> factors = new\
    \ ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n            while (n\
    \ % i == 0) {\n                factors.add(i);\n                n /= i;\n    \
    \        }\n        }\n        return factors;\n", "        ArrayList<Long> factors\
    \ = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n            while\
    \ (n % i == 0) {\n                factors.add(i);\n                n /= i;\n \
    \           }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                factors.add(i);\n             \
    \   n /= i;\n            }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                factors.add(i);\n             \
    \   n /= i;\n            }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                factors.add(i);\n             \
    \   n /= i;\n            }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                factors.add(i);\n             \
    \   n /= i;\n            }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i * i <= n; i++) {\n\
    \            while (n % i == 0) {\n                factors.add(i);\n         \
    \       n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n\
    \        }\n        return factors;\n", "        ArrayList<Long> factors = new\
    \ ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n            while (n\
    \ % i == 0) {\n                factors.add(i);\n                n /= i;\n    \
    \        }\n        }\n        return factors;\n", "        ArrayList<Long> factors\
    \ = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n            while\
    \ (n % i == 0) {\n                factors.add(i);\n                n /= i;\n \
    \           }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long i = 2;\n        while (n > 1) {\n\
    \            while (n % i == 0) {\n                factors.add(i);\n         \
    \       n /= i;\n            }\n            i++;\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2;\
    \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        long i = 2;\n   \
    \     while (n > 1) {\n            if (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            } else {\n                i++;\n       \
    \     }\n        }\n        return factors;\n", "        ArrayList<Long> factors\
    \ = new ArrayList<>();\n        long i = 2;\n        while (n > 1) {\n       \
    \     if (n % i == 0) {\n                factors.add(i);\n                n /=\
    \ i;\n            } else {\n                i++;\n            }\n        }\n \
    \       return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long i = 2;\n        while (n > 1) {\n            while (n % i == 0)\
    \ {\n                factors.add(i);\n                n /= i;\n            }\n\
    \            i++;\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                factors.add(i);\n             \
    \   n /= i;\n            }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                factors.add(i);\n             \
    \   n /= i;\n            }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long i = 2;\n        while (n > 1) {\n\
    \            if (n % i == 0) {\n                factors.add(i);\n            \
    \    n /= i;\n            } else {\n                i++;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.add(n);\n        }\n      \
    \  return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long i = 2;\n        while (n > 1) {\n            while (n % i == 0)\
    \ {\n                factors.add(i);\n                n /= i;\n            }\n\
    \            i++;\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                factors.add(i);\n             \
    \   n /= i;\n            }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i * i <= n; i++) {\n\
    \            while (n % i == 0) {\n                factors.add(i);\n         \
    \       n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n\
    \        }\n        return factors;\n", "        ArrayList<Long> factors = new\
    \ ArrayList<>();\n        for (long i = 2; i * i <= n; i++) {\n            while\
    \ (n % i == 0) {\n                factors.add(i);\n                n /= i;\n \
    \           }\n        }\n        if (n > 1) {\n            factors.add(n);\n\
    \        }\n        return factors;\n", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        for (long i = 2; i * i <= n; i++) {\n            while\
    \ (n % i == 0) {\n                result.add(i);\n                n /= i;\n  \
    \          }\n        }\n        if (n > 1) {\n            result.add(n);\n  \
    \      }\n        return result;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long i = 2;\n        while (n > 1) {\n            while (n % i == 0)\
    \ {\n                factors.add(i);\n                n /= i;\n            }\n\
    \            i++;\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        for (long i = 2; i * i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                res.add(i);\n                n\
    \ /= i;\n            }\n        }\n        if (n > 1) {\n            res.add(n);\n\
    \        }\n        return res;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                res.add(i);\n                n /= i;\n            }\n       \
    \ }\n        if (n > 1) {\n            res.add(n);\n        }\n        return\
    \ res;\n", "        ArrayList<Long> factors = new ArrayList<>();\n        for\
    \ (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n        \
    \        factors.add(i);\n                n /= i;\n            }\n        }\n\
    \        if (n > 1) {\n            factors.add(n);\n        }\n        return\
    \ factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n       \
    \ for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n        \
    \        factors.add(i);\n                n /= i;\n            }\n        }\n\
    \        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long i = 2;\n        while (n > 1) {\n            while (n % i == 0)\
    \ {\n                factors.add(i);\n                n /= i;\n            }\n\
    \            i++;\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                factors.add(i);\n             \
    \   n /= i;\n            }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                factors.add(i);\n             \
    \   n /= i;\n            }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                factors.add(i);\n             \
    \   n /= i;\n            }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                factors.add(i);\n             \
    \   n /= i;\n            }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long i = 2;\n        while (n > 1) {\n\
    \            while (n % i == 0) {\n                factors.add(i);\n         \
    \       n /= i;\n            }\n            i++;\n        }\n        return factors;\n",
  "        ArrayList<Long> res = new ArrayList<>();\n        for (long i = 2; i *\
    \ i <= n; i++) {\n            while (n % i == 0) {\n                res.add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         res.add(n);\n        }\n        return res;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i * i <= n; i++) {\n\
    \            while (n % i == 0) {\n                factors.add(i);\n         \
    \       n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n\
    \        }\n        return factors;\n", "        ArrayList<Long> factors = new\
    \ ArrayList<>();\n        long i = 2;\n        while (n > 1) {\n            while\
    \ (n % i == 0) {\n                factors.add(i);\n                n /= i;\n \
    \           }\n            i++;\n        }\n        return factors;\n", "    \
    \    ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2; i\
    \ <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2;\
    \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2;\
    \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2;\
    \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2;\
    \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2;\
    \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.add(n);\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                factors.add(i);\n             \
    \   n /= i;\n            }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                factors.add(i);\n             \
    \   n /= i;\n            }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                factors.add(i);\n             \
    \   n /= i;\n            }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                factors.add(i);\n             \
    \   n /= i;\n            }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                factors.add(i);\n             \
    \   n /= i;\n            }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long i = 2;\n        while (n > 1) {\n\
    \            while (n % i == 0) {\n                factors.add(i);\n         \
    \       n /= i;\n            }\n            i++;\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2;\
    \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2;\
    \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2;\
    \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.add(n);\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                factors.add(i);\n             \
    \   n /= i;\n            }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        for (long i = 2; i * i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                res.add(i);\n                n\
    \ /= i;\n            }\n        }\n        if (n > 1) {\n            res.add(n);\n\
    \        }\n        return res;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long i = 2;\n        while (n > 1) {\n            while (n % i == 0)\
    \ {\n                factors.add(i);\n                n /= i;\n            }\n\
    \            i++;\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                factors.add(i);\n             \
    \   n /= i;\n            }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long i = 2;\n        while (n > 1) {\n\
    \            while (n % i == 0) {\n                factors.add(i);\n         \
    \       n /= i;\n            }\n            i++;\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2;\
    \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2;\
    \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.add(n);\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                factors.add(i);\n             \
    \   n /= i;\n            }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i * i <= n; i++) {\n\
    \            while (n % i == 0) {\n                factors.add(i);\n         \
    \       n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n\
    \        }\n        return factors;\n", "        ArrayList<Long> factors = new\
    \ ArrayList<>();\n        long i = 2;\n        while (n > 1) {\n            while\
    \ (n % i == 0) {\n                factors.add(i);\n                n /= i;\n \
    \           }\n            i++;\n        }\n        return factors;\n", "    \
    \    ArrayList<Long> res = new ArrayList<>();\n        for (long i = 2; i * i\
    \ <= n; i++) {\n            while (n % i == 0) {\n                res.add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         res.add(n);\n        }\n        return res;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i * i <= n; i++) {\n\
    \            while (n % i == 0) {\n                factors.add(i);\n         \
    \       n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n\
    \        }\n        return factors;\n", "        ArrayList<Long> factors = new\
    \ ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n            while (n\
    \ % i == 0) {\n                factors.add(i);\n                n /= i;\n    \
    \        }\n        }\n        return factors;\n", "        ArrayList<Long> factors\
    \ = new ArrayList<>();\n        for (long i = 2; i * i <= n; i++) {\n        \
    \    while (n % i == 0) {\n                factors.add(i);\n                n\
    \ /= i;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n\
    \        }\n        return factors;\n", "        ArrayList<Long> factors = new\
    \ ArrayList<>();\n        long i = 2;\n        while (n > 1) {\n            while\
    \ (n % i == 0) {\n                factors.add(i);\n                n /= i;\n \
    \           }\n            i++;\n        }\n        return factors;\n", "    \
    \    ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2; i\
    \ <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        long i = 2;\n   \
    \     while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n            i++;\n        }\n       \
    \ return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                res.add(i);\n                n /= i;\n            }\n       \
    \ }\n        if (n > 1) {\n            res.add(n);\n        }\n        return\
    \ res;\n", "        ArrayList<Long> factors = new ArrayList<>();\n        for\
    \ (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n            \
    \    factors.add(i);\n                n /= i;\n            }\n        }\n    \
    \    return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                res.add(i);\n                n /= i;\n            }\n       \
    \ }\n        if (n > 1) {\n            res.add(n);\n        }\n        return\
    \ res;\n", "        ArrayList<Long> factors = new ArrayList<>();\n        for\
    \ (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n            \
    \    factors.add(i);\n                n /= i;\n            }\n        }\n    \
    \    return factors;\n", "        ArrayList<Long> res = new ArrayList<>();\n \
    \       for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                res.add(i);\n                n /= i;\n            }\n       \
    \ }\n        if (n > 1) {\n            res.add(n);\n        }\n        return\
    \ res;\n", "        ArrayList<Long> factors = new ArrayList<>();\n        long\
    \ i = 2;\n        while (n > 1) {\n            while (n % i == 0) {\n        \
    \        factors.add(i);\n                n /= i;\n            }\n           \
    \ i++;\n        }\n        return factors;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (long i = 2; i * i <= n; i++) {\n        \
    \    while (n % i == 0) {\n                result.add(i);\n                n /=\
    \ i;\n            }\n        }\n        if (n > 1) {\n            result.add(n);\n\
    \        }\n        return result;\n", "        ArrayList<Long> factors = new\
    \ ArrayList<>();\n        long i = 2;\n        while (n > 1) {\n            while\
    \ (n % i == 0) {\n                factors.add(i);\n                n /= i;\n \
    \           }\n            i++;\n        }\n        return factors;\n", "    \
    \    ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2; i\
    \ <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2;\
    \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        long i = 2;\n   \
    \     while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n            i++;\n        }\n       \
    \ return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long i = 2;\n        while (n > 1) {\n            if (n % i == 0) {\n\
    \                factors.add(i);\n                n /= i;\n            } else\
    \ {\n                i++;\n            }\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2;\
    \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        long i = 2;\n   \
    \     while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n            i++;\n        }\n       \
    \ return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long i = 2;\n        while (n > 1) {\n            while (n % i == 0)\
    \ {\n                factors.add(i);\n                n /= i;\n            }\n\
    \            i++;\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long i = 2;\n        while (n > 1) {\n\
    \            if (n % i == 0) {\n                factors.add(i);\n            \
    \    n /= i;\n            } else {\n                i++;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long i = 2;\n        while (n > 1) {\n            while (n % i == 0)\
    \ {\n                factors.add(i);\n                n /= i;\n            }\n\
    \            i++;\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i * i <= n; i++) {\n\
    \            while (n % i == 0) {\n                factors.add(i);\n         \
    \       n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n\
    \        }\n        return factors;\n", "        ArrayList<Long> factors = new\
    \ ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n            while (n\
    \ % i == 0) {\n                factors.add(i);\n                n /= i;\n    \
    \        }\n        }\n        return factors;\n", "        ArrayList<Long> factors\
    \ = new ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n            while\
    \ (n % i == 0) {\n                factors.add(i);\n                n /= i;\n \
    \           }\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long i = 2;\n        while (n > 1) {\n\
    \            while (n % i == 0) {\n                factors.add(i);\n         \
    \       n /= i;\n            }\n            i++;\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n \
    \           factors.add(1L);\n            return factors;\n        }\n       \
    \ long i = 2;\n        while (i <= n) {\n            if (n % i == 0) {\n     \
    \           factors.add(i);\n                n /= i;\n            } else {\n \
    \               i++;\n            }\n        }\n        return factors;\n", " \
    \       ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2;\
    \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.add(n);\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (long i = 2; i * i <= n; i++) {\n \
    \           while (n % i == 0) {\n                result.add(i);\n           \
    \     n /= i;\n            }\n        }\n        if (n > 1) {\n            result.add(n);\n\
    \        }\n        return result;\n", "        ArrayList<Long> factors = new\
    \ ArrayList<>();\n        for (long i = 2; i <= n; i++) {\n            while (n\
    \ % i == 0) {\n                factors.add(i);\n                n /= i;\n    \
    \        }\n        }\n        return factors;\n", "        ArrayList<Long> factors\
    \ = new ArrayList<>();\n        long nn = n;\n        for (long i = 2; i <= nn;\
    \ i++) {\n            if (nn % i == 0) {\n                factors.add(i);\n  \
    \              nn /= i;\n                i--;\n            }\n        }\n    \
    \    return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.add(n);\n        }\n      \
    \  return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.add(n);\n        }\n      \
    \  return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long i = 2;\n        while (n > 1) {\n            while (n % i == 0)\
    \ {\n                factors.add(i);\n                n /= i;\n            }\n\
    \            i++;\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        for (long i = 2; i * i <= n; i++) {\n\
    \            while (n % i == 0) {\n                factors.add(i);\n         \
    \       n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n\
    \        }\n        return factors;\n", "        ArrayList<Long> factors = new\
    \ ArrayList<>();\n        long factor = 2;\n        while (n > 1) {\n        \
    \    while (n % factor == 0) {\n                factors.add(factor);\n       \
    \         n /= factor;\n            }\n            factor++;\n        }\n    \
    \    return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long i = 2;\n        while (n > 1) {\n            while (n % i == 0)\
    \ {\n                factors.add(i);\n                n /= i;\n            }\n\
    \            i++;\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long i = 2;\n        while (n > 1) {\n\
    \            while (n % i == 0) {\n                factors.add(i);\n         \
    \       n /= i;\n            }\n            i++;\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2;\
    \ i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        long i = 2;\n   \
    \     while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n            i++;\n        }\n       \
    \ return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.add(n);\n        }\n      \
    \  return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.add(n);\n        }\n      \
    \  return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.add(n);\n        }\n      \
    \  return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.add(n);\n        }\n      \
    \  return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        if (n == 1) {\n            factors.add(1L);\n            return factors;\n\
    \        }\n        while (n % 2 == 0) {\n            factors.add(2L);\n     \
    \       n /= 2;\n        }\n        for (long i = 3; i <= Math.sqrt(n); i += 2)\
    \ {\n            while (n % i == 0) {\n                factors.add(i);\n     \
    \           n /= i;\n            }\n        }\n        if (n > 2) {\n        \
    \    factors.add(n);\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long i = 2;\n        while (n > 1) {\n\
    \            while (n % i == 0) {\n                factors.add(i);\n         \
    \       n /= i;\n            }\n            i++;\n        }\n        return factors;\n",
  "        ArrayList<Long> factors = new ArrayList<>();\n        for (long i = 2;\
    \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.add(n);\n        }\n        return factors;\n", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        for (long i = 2; i * i <= n; i++) {\n    \
    \        while (n % i == 0) {\n                res.add(i);\n                n\
    \ /= i;\n            }\n        }\n        if (n > 1) {\n            res.add(n);\n\
    \        }\n        return res;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.add(i);\n                n /= i;\n            }\n    \
    \    }\n        return factors;\n"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "    }\n\n"

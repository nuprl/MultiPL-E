name: HumanEval_13_greatest_common_divisor
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        // Write your code here\n        // To print results to the standard\
    \ output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        if (a == 0) {\n            return b;\n        }\n  \
    \      if (b == 0) {\n            return a;\n        }\n        if (a == b) {\n\
    \            return a;\n        }\n        if (a > b) {\n            return greatestCommonDivisor(a\
    \ - b, b);\n        }\n        return greatestCommonDivisor(a, b - a);\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            return greatestCommonDivisor(b, a);\n \
    \       }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ greatestCommonDivisor(b, a % b);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            return greatestCommonDivisor(b, a);\n \
    \       }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ greatestCommonDivisor(b, a % b);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc6qpkijf.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            return greatestCommonDivisor(b, a);\n \
    \       }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ greatestCommonDivisor(b, a % b);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppqxmg0ag.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a == b) {\n            return\
    \ a;\n        }\n        if (a > b) {\n            return greatestCommonDivisor(a\
    \ - b, b);\n        }\n        return greatestCommonDivisor(a, b - a);\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n   \
    \         b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n\n    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        return greatestCommonDivisor(b,\
    \ a % b);\n\n    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            return greatestCommonDivisor(b, a);\n \
    \       }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ greatestCommonDivisor(b, a % b);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n   \
    \         b = tmp;\n        }\n        if (b == 0) {\n            return a;\n\
    \        }\n        return greatestCommonDivisor(b, a % b);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        // TODO: Implement me\n        return 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l)) ==\
    \ (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu4z0755a.java:20)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        // TODO: Implement this function\n        return 0;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_qxo7q7.java:20)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx1xz4pgm.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n   \
    \         b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n\n    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        // TODO: Implement this function\n        return 0;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv2hyywnv.java:20)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpykqpar01.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkyxt5euw.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) return b;\n        if (b == 0) return a;\n        if\
    \ (a > b) return greatestCommonDivisor(a % b, b);\n        else return greatestCommonDivisor(a,\
    \ b % a);\n\n    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) return b;\n        if (b == 0) return a;\n        if\
    \ (a == b) return a;\n        if (a > b) return greatestCommonDivisor(a - b, b);\n\
    \        return greatestCommonDivisor(a, b - a);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxdpnxu8y.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbocaouj7.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a == b) {\n            return\
    \ a;\n        }\n        if (a > b) {\n            return greatestCommonDivisor(a\
    \ - b, b);\n        }\n        return greatestCommonDivisor(a, b - a);\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n\
    \            a = t;\n        }\n        return a;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l)) ==\
    \ (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwxqve5l2.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            return greatestCommonDivisor(b, a);\n \
    \       }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ greatestCommonDivisor(b, a % b);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            return greatestCommonDivisor(b, a);\n \
    \       }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ greatestCommonDivisor(b, a % b);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) return b;\n        if (b == 0) return a;\n        if\
    \ (a == b) return a;\n        if (a > b) return greatestCommonDivisor(a - b, b);\n\
    \        return greatestCommonDivisor(a, b - a);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n\
    \            a = t;\n        }\n        return a;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l)) ==\
    \ (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp94r9z7dv.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd0_0x51x.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        return greatestCommonDivisor(b\
    \ % a, a);\n\n    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n   \
    \         b = tmp;\n        }\n        if (b == 0) {\n            return a;\n\
    \        }\n        return greatestCommonDivisor(b, a % b);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0dlbm8w9.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            return greatestCommonDivisor(b, a);\n \
    \       }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ greatestCommonDivisor(b, a % b);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n   \
    \         b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n\n    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplb_yqqzr.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2wcunolu.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        // TODO: Implement me\n        return 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l)) ==\
    \ (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmeyd403z.java:20)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaatiabt8.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n   \
    \         b = tmp;\n        }\n        if (b == 0) {\n            return a;\n\
    \        }\n        return greatestCommonDivisor(b, a % b);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        // TODO: Write your code here\n        return 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiljxp08z.java:20)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr8ynpg42.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeix38rze.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjcuvo2db.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw2xrzll0.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8c_4x84a.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) return b;\n        if (b == 0) return a;\n        if\
    \ (a > b) return greatestCommonDivisor(a % b, b);\n        else return greatestCommonDivisor(a,\
    \ b % a);\n\n    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n   \
    \         b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n\n    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            return greatestCommonDivisor(b, a);\n \
    \       }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ greatestCommonDivisor(b, a % b);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n   \
    \         b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n\n    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n   \
    \         b = tmp;\n        }\n        if (b == 0) {\n            return a;\n\
    \        }\n        return greatestCommonDivisor(b, a % b);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp79x8n84x.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) return b;\n        if (b == 0) return a;\n        if\
    \ (a == b) return a;\n        if (a > b) return greatestCommonDivisor(a - b, b);\n\
    \        return greatestCommonDivisor(a, b - a);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a == b) {\n            return\
    \ a;\n        }\n        if (a > b) {\n            return greatestCommonDivisor(a\
    \ - b, b);\n        }\n        return greatestCommonDivisor(a, b - a);\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) return b;\n        if (b == 0) return a;\n        if\
    \ (a > b) return greatestCommonDivisor(a % b, b);\n        return greatestCommonDivisor(a,\
    \ b % a);\n\n    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzbbdc6xq.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        // TODO: implement this function\n        return 0;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzcr23ugl.java:20)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd7ld8nc1.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a == b) {\n            return\
    \ a;\n        }\n        if (a > b) {\n            return greatestCommonDivisor(a\
    \ - b, b);\n        }\n        return greatestCommonDivisor(a, b - a);\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        // TODO: implement this function\n        return 0;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkrdkkk_3.java:20)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp98xyaet4.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd0kxvz4h.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        // >>> greatest_common_divisor(3, 5)\n        // 1\n        // >>>\
    \ greatest_common_divisor(25, 15)\n        // 5\n        if (a == 0) {\n     \
    \       return b;\n        }\n        if (b == 0) {\n            return a;\n \
    \       }\n        if (a > b) {\n            return greatestCommonDivisor(a %\
    \ b, b);\n        } else {\n            return greatestCommonDivisor(a, b % a);\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7f_6a56f.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        // TODO: implement this function\n        return 0;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmporfougvm.java:20)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkiist7pc.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return a;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbuu0h4jn.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n   \
    \         b = tmp;\n        }\n        long r = a % b;\n        while (r != 0)\
    \ {\n            a = b;\n            b = r;\n            r = a % b;\n        }\n\
    \        return b;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        long gcd = 1;\n        long min = Math.min(a, b);\n        for (long\
    \ i = 2; i <= min; i++) {\n            if (a % i == 0 && b % i == 0) {\n     \
    \           gcd = i;\n            }\n        }\n        return gcd;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n   \
    \         b = tmp;\n        }\n        if (b == 0) {\n            return a;\n\
    \        }\n        return greatestCommonDivisor(b, a % b);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwj4hspa7.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        // TODO: implement this function\n        return 0;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqyexkwyk.java:20)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        long gcd = 1;\n        long min = Math.min(a, b);\n        for (long\
    \ i = 2; i <= min; i++) {\n            if (a % i == 0 && b % i == 0) {\n     \
    \           gcd = i;\n            }\n        }\n        return gcd;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        // TODO: Implement this method\n        return 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuwy9roln.java:20)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx94l0f54.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return b == 0 ? a : greatestCommonDivisor(b, a % b);\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpahap7kc4.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpawilzhr4.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjhrw1g4o.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n   \
    \         b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n\n    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiotvb2q5.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            return greatestCommonDivisor(b, a);\n \
    \       }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ greatestCommonDivisor(b, a % b);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) return b;\n        if (b == 0) return a;\n        if\
    \ (a == b) return a;\n        if (a > b) return greatestCommonDivisor(a - b, b);\n\
    \        return greatestCommonDivisor(a, b - a);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        return greatestCommonDivisor(b\
    \ % a, a);\n\n    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        // >>> YOUR CODE HERE <<<\n        return 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ebhms3y.java:20)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n   \
    \         b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n\n    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return b == 0 ? a : greatestCommonDivisor(b, a % b);\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        return greatestCommonDivisor(b,\
    \ a % b);\n\n    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        // TODO: implement this function\n        return 0;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkixcfvnt.java:20)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            return greatestCommonDivisor(b, a);\n \
    \       }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ greatestCommonDivisor(b, a % b);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj25waq41.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfg7hwhpb.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35h408_p.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyfwctxa3.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n   \
    \         b = tmp;\n        }\n        if (b == 0) {\n            return a;\n\
    \        }\n        return greatestCommonDivisor(b, a % b);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            return greatestCommonDivisor(b, a);\n \
    \       }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ greatestCommonDivisor(b, a % b);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzb94azdt.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp32d0qhok.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        long c = a % b;\n        while (c != 0) {\n            a = b;\n \
    \           b = c;\n            c = a % b;\n        }\n        return b;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n   \
    \         b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n\n    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n   \
    \         b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n\n    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n\
    \            a = t;\n        }\n        return a;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l)) ==\
    \ (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a >= b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            return greatestCommonDivisor(b, a);\n \
    \       }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ greatestCommonDivisor(b, a % b);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        // TODO: Implement me!\n        return 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l)) ==\
    \ (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9to6b4si.java:20)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp2h7hofh.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0hm1x12t.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            return greatestCommonDivisor(b, a);\n \
    \       }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ greatestCommonDivisor(b, a % b);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return b == 0 ? a : greatestCommonDivisor(b, a % b);\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        long gcd = 1;\n        for (long i = 1; i <= a && i <= b; i++) {\n\
    \            if (a % i == 0 && b % i == 0) {\n                gcd = i;\n     \
    \       }\n        }\n        return gcd;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0 || b == 0) {\n            return a + b;\n        }\n \
    \       return greatestCommonDivisor(b, a % b);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a == b) {\n            return\
    \ a;\n        }\n        if (a > b) {\n            return greatestCommonDivisor(a\
    \ - b, b);\n        }\n        return greatestCommonDivisor(a, b - a);\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return b == 0 ? a : greatestCommonDivisor(b, a % b);\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcl1pv8sl.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        long gcd = 1;\n        long min = Math.min(a, b);\n        for (long\
    \ i = 2; i <= min; i++) {\n            if (a % i == 0 && b % i == 0) {\n     \
    \           gcd = i;\n            }\n        }\n        return gcd;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4mbiixyj.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        // Write your code here\n        // To print results to the standard\
    \ output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        if (a == 0)\n            return b;\n        return greatestCommonDivisor(b\
    \ % a, a);\n\n    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        // TODO: implement this method\n        return 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpepr366s4.java:20)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        // TODO: Implement this method\n        return 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7fy7_4n9.java:20)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        long gcd = 1;\n        long min = Math.min(a, b);\n        for (long\
    \ i = 2; i <= min; i++) {\n            if (a % i == 0 && b % i == 0) {\n     \
    \           gcd = i;\n            }\n        }\n        return gcd;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n   \
    \         b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n\n    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n\
    \            a = t;\n        }\n        return a;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l)) ==\
    \ (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        return greatestCommonDivisor(b\
    \ % a, a);\n\n    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd6vefbks.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a == b) {\n            return\
    \ a;\n        }\n        if (a > b) {\n            return greatestCommonDivisor(a\
    \ - b, b);\n        }\n        return greatestCommonDivisor(a, b - a);\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7nle4bt_.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        return 0;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8j8z2lww.java:19)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        return greatestCommonDivisor(b\
    \ % a, a);\n\n    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        // TODO: Implement this method\n        return 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ekyamq_.java:20)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static long greatestCommonDivisor(long a, long b)\
    \ {\n        if (a == 0) {\n            return b;\n        }\n        if (b ==\
    \ 0) {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

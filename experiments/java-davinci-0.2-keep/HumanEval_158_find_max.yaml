name: HumanEval_158_find_max
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Write a function that accepts a list of strings.\n    //\
  \ The list contains different words. Return the word with maximum number\n    //\
  \ of unique characters. If multiple strings have maximum number of unique\n    //\
  \ characters, return the one which comes first in lexicographical order.\n    //\
  \ find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\"\
  , \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"\
  ]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String> words) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(findMax((new\
  \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"string\"\
  )))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
  name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
  \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
  cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
  abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
  play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
  )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
  we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
  )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\", (String)\"\
  are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"nation\"\
  )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"this\",\
  \ (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n   \
  \ assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
  b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
  , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
completions: ["        return \"\";\n", "        // Write your code here\n       \
    \ return \"\";\n", "        // Your code here\n        return null;\n", "    \
    \    // TODO: Implement this function\n        return \"\";\n", "        int max\
    \ = 0;\n        String result = \"\";\n        for (String word : words) {\n \
    \           int count = 0;\n            for (int i = 0; i < word.length(); i++)\
    \ {\n                if (word.indexOf(word.charAt(i)) == i) {\n              \
    \      count++;\n                }\n            }\n            if (count > max)\
    \ {\n                max = count;\n                result = word;\n          \
    \  }\n        }\n        return result;\n", "        // TODO: Write your code\
    \ here\n        return \"\";\n", "        return \"\";\n", "        // Write your\
    \ code here.\n        return \"\";\n", "        // TODO: write your code here\n\
    \        return \"\";\n", "        // Write your code here\n        return \"\"\
    ;\n", "        int max = 0;\n        String maxWord = \"\";\n        for (String\
    \ word : words) {\n            int count = 0;\n            for (int i = 0; i <\
    \ word.length(); i++) {\n                if (word.indexOf(word.charAt(i)) == i)\
    \ {\n                    count++;\n                }\n            }\n        \
    \    if (count > max) {\n                max = count;\n                maxWord\
    \ = word;\n            }\n        }\n        return maxWord;\n", "        String\
    \ max = \"\";\n        int maxUnique = 0;\n        for (String word : words) {\n\
    \            int unique = 0;\n            for (int i = 0; i < word.length(); i++)\
    \ {\n                if (word.lastIndexOf(word.charAt(i)) == i) {\n          \
    \          unique++;\n                }\n            }\n            if (unique\
    \ > maxUnique) {\n                max = word;\n                maxUnique = unique;\n\
    \            }\n        }\n        return max;\n", "        return \"\";\n", " \
    \       // Write your code here\n        return \"\";\n", "        // Write your\
    \ code here\n        return \"\";\n", "        String max = \"\";\n        int\
    \ maxCount = 0;\n        for (String word : words) {\n            int count =\
    \ 0;\n            for (int i = 0; i < word.length(); i++) {\n                if\
    \ (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n      \
    \          }\n            }\n            if (count > maxCount) {\n           \
    \     maxCount = count;\n                max = word;\n            }\n        }\n\
    \        return max;\n", "        String max = \"\";\n        int max_count =\
    \ 0;\n        for (String word : words) {\n            int count = 0;\n      \
    \      for (int i = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n", " \
    \       // Write your code here\n        return \"\";\n", "        // TODO: Write\
    \ your code here\n        return \"\";\n", "        String max = \"\";\n     \
    \   int max_unique = 0;\n        for (String word : words) {\n            int\
    \ unique = 0;\n            for (int i = 0; i < word.length(); i++) {\n       \
    \         if (word.indexOf(word.charAt(i)) == i) {\n                    unique++;\n\
    \                }\n            }\n            if (unique > max_unique) {\n  \
    \              max = word;\n                max_unique = unique;\n           \
    \ }\n        }\n        return max;\n", "        // Write your code here\n   \
    \     return \"\";\n", "        // TODO: Implement this function\n        return\
    \ \"\";\n", "        // Write your code here.\n        return \"\";\n", "    \
    \    // TODO: Implement me\n        return \"\";\n", "        // TODO: Write your\
    \ code here\n        return \"\";\n", "        return \"\";\n", "        // TODO:\
    \ Implement this function.\n        return \"\";\n", "        return null;\n",
  "        // TODO: Implement this function\n        return \"\";\n", "        //\
    \ TODO: Implement this function\n        return \"\";\n", "        return words.stream()\n\
    \            .max(Comparator.comparing(Problem::countUniqueChars))\n         \
    \   .orElse(\"\");\n", "        // Your code here\n        return \"\";\n", " \
    \       return null;\n", "        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        // TODO: Write your code here\n        return\
    \ \"\";\n", "        // TODO: Implement this function\n        return \"\";\n",
  "        // TODO: Implement this function\n        return \"\";\n", "        String\
    \ max = \"\";\n        for (String word : words) {\n            if (word.length()\
    \ > max.length()) {\n                max = word;\n            }\n        }\n \
    \       return max;\n", "        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        // Write your code here\n        return \"\"\
    ;\n", "        String max = \"\";\n        int maxCount = 0;\n        for (String\
    \ word : words) {\n            int count = 0;\n            for (int i = 0; i <\
    \ word.length(); i++) {\n                if (word.indexOf(word.charAt(i)) == i)\
    \ {\n                    count++;\n                }\n            }\n        \
    \    if (count > maxCount) {\n                maxCount = count;\n            \
    \    max = word;\n            }\n        }\n        return max;\n", "        String\
    \ max = \"\";\n        int max_count = 0;\n        for (String word : words) {\n\
    \            int count = 0;\n            for (int i = 0; i < word.length(); i++)\
    \ {\n                if (word.indexOf(word.charAt(i)) == i) {\n              \
    \      count++;\n                }\n            }\n            if (count > max_count)\
    \ {\n                max = word;\n                max_count = count;\n       \
    \     }\n        }\n        return max;\n", "        // Write your code here.\n\
    \        return \"\";\n", "        String max = \"\";\n        int maxCount =\
    \ 0;\n        for (String word : words) {\n            int count = 0;\n      \
    \      for (int i = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > maxCount) {\n                maxCount = count;\n      \
    \          max = word;\n            }\n        }\n        return max;\n", "  \
    \      int max = 0;\n        String maxString = \"\";\n        for (String word\
    \ : words) {\n            int unique = 0;\n            for (int i = 0; i < word.length();\
    \ i++) {\n                if (word.indexOf(word.charAt(i)) == i) {\n         \
    \           unique++;\n                }\n            }\n            if (unique\
    \ > max) {\n                max = unique;\n                maxString = word;\n\
    \            }\n        }\n        return maxString;\n", "        // TODO: Implement\
    \ me\n        return \"\";\n", "        return \"\";\n", "        String max =\
    \ \"\";\n        int max_count = 0;\n        for (String word : words) {\n   \
    \         int count = 0;\n            for (int i = 0; i < word.length(); i++)\
    \ {\n                if (word.indexOf(word.charAt(i)) == i) {\n              \
    \      count++;\n                }\n            }\n            if (count > max_count)\
    \ {\n                max = word;\n                max_count = count;\n       \
    \     }\n        }\n        return max;\n", "        int max = 0;\n        String\
    \ result = \"\";\n        for (String word : words) {\n            if (word.length()\
    \ > max) {\n                max = word.length();\n                result = word;\n\
    \            }\n        }\n        return result;\n", "        // Your code here\n\
    \        return \"\";\n", "        String max = \"\";\n        int max_unique\
    \ = 0;\n        for (String word : words) {\n            int unique = 0;\n   \
    \         for (int i = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    unique++;\n                }\n            }\n \
    \           if (unique > max_unique) {\n                max = word;\n        \
    \        max_unique = unique;\n            }\n        }\n        return max;\n",
  "        return \"\";\n", "        // Write your code here\n        return \"\"\
    ;\n", "        // TODO: Implement this function\n        return \"\";\n", "  \
    \      String max = \"\";\n        int max_count = 0;\n        for (String word\
    \ : words) {\n            Set<Character> set = new HashSet<>();\n            for\
    \ (char c : word.toCharArray()) {\n                set.add(c);\n            }\n\
    \            if (set.size() > max_count) {\n                max = word;\n    \
    \            max_count = set.size();\n            }\n        }\n        return\
    \ max;\n", "        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            if (word.length() > max) {\n          \
    \      max = word.length();\n                maxWord = word;\n            }\n\
    \        }\n        return maxWord;\n", "        return words.stream()\n     \
    \       .max(Comparator.comparing(Problem::countUniqueChars)\n               \
    \ .thenComparing(String::compareTo))\n            .get();\n", "        // Write\
    \ your code here\n        return \"\";\n", "        int max = 0;\n        String\
    \ maxWord = \"\";\n        for (String word : words) {\n            int uniqueChars\
    \ = 0;\n            for (int i = 0; i < word.length(); i++) {\n              \
    \  if (word.indexOf(word.charAt(i)) == i) {\n                    uniqueChars++;\n\
    \                }\n            }\n            if (uniqueChars > max) {\n    \
    \            max = uniqueChars;\n                maxWord = word;\n           \
    \ }\n        }\n        return maxWord;\n", "        return words.stream()\n \
    \           .max(Comparator.comparing(s -> s.chars().distinct().count()))\n  \
    \          .get();\n", "        // your code here\n        return \"\";\n", " \
    \       // TODO: Write your code here\n        return null;\n", "        // TODO:\
    \ Implement this function\n        return \"\";\n", "        int max = 0;\n  \
    \      String result = \"\";\n        for (String word : words) {\n          \
    \  int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n   \
    \             if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > max) {\n          \
    \      max = count;\n                result = word;\n            }\n        }\n\
    \        return result;\n", "        // Write your code here\n        return \"\
    \";\n", "        int max = 0;\n        String maxWord = \"\";\n        for (String\
    \ word : words) {\n            int count = 0;\n            for (int i = 0; i <\
    \ word.length(); i++) {\n                if (word.indexOf(word.charAt(i)) == i)\
    \ {\n                    count++;\n                }\n            }\n        \
    \    if (count > max) {\n                max = count;\n                maxWord\
    \ = word;\n            }\n        }\n        return maxWord;\n", "        // TODO:\
    \ Write - Your - Code\n        return \"\";\n", "        String max = \"\";\n\
    \        for (String word : words) {\n            if (word.length() > max.length())\
    \ {\n                max = word;\n            }\n        }\n        return max;\n",
  "        // TODO: implement this function\n        return \"\";\n", "        //\
    \ your code here\n        return \"\";\n", "        String max = \"\";\n     \
    \   for (String word : words) {\n            if (word.length() > max.length())\
    \ {\n                max = word;\n            }\n        }\n        return max;\n",
  "        String max = \"\";\n        int max_count = 0;\n        for (String word\
    \ : words) {\n            int count = 0;\n            for (int i = 0; i < word.length();\
    \ i++) {\n                if (word.indexOf(word.charAt(i)) == i) {\n         \
    \           count++;\n                }\n            }\n            if (count\
    \ > max_count) {\n                max = word;\n                max_count = count;\n\
    \            }\n        }\n        return max;\n", "        return null;\n", " \
    \       // Write your code here\n        return \"\";\n", "        // Write your\
    \ code here\n        String max = \"\";\n        int max_count = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n", " \
    \       String max = \"\";\n        int max_unique = 0;\n        for (String word\
    \ : words) {\n            int unique = 0;\n            for (int i = 0; i < word.length();\
    \ i++) {\n                if (word.indexOf(word.charAt(i)) == i) {\n         \
    \           unique++;\n                }\n            }\n            if (unique\
    \ > max_unique) {\n                max = word;\n                max_unique = unique;\n\
    \            }\n        }\n        return max;\n", "        String max = \"\"\
    ;\n        int max_count = 0;\n        for (String word : words) {\n         \
    \   int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n  \
    \              char c = word.charAt(i);\n                if (word.indexOf(c) ==\
    \ i) {\n                    count++;\n                }\n            }\n     \
    \       if (count > max_count) {\n                max = word;\n              \
    \  max_count = count;\n            }\n        }\n        return max;\n", "   \
    \     int max = 0;\n        String max_word = \"\";\n        for (String word\
    \ : words) {\n            int count = 0;\n            for (int i = 0; i < word.length();\
    \ i++) {\n                if (word.indexOf(word.charAt(i)) == i) {\n         \
    \           count++;\n                }\n            }\n            if (count\
    \ > max) {\n                max = count;\n                max_word = word;\n \
    \           }\n        }\n        return max_word;\n", "        int max = 0;\n\
    \        String result = \"\";\n        for (String word : words) {\n        \
    \    int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n \
    \               if (word.indexOf(word.charAt(i)) == i) {\n                   \
    \ count++;\n                }\n            }\n            if (count > max) {\n\
    \                max = count;\n                result = word;\n            }\n\
    \        }\n        return result;\n", "        // Write your code here\n    \
    \    return \"\";\n", "        // Write your code here\n        return \"\";\n",
  "        // Write your code here\n        return \"\";\n", "        // TODO: Implement\
    \ me\n        return \"\";\n", "        // TODO: Implement this function.\n  \
    \      return \"\";\n", "        // Your code here\n        return \"\";\n", " \
    \       // Write your code here\n        return \"\";\n", "        return null;\n",
  "        String max = \"\";\n        int max_unique = 0;\n        for (String word\
    \ : words) {\n            int unique = 0;\n            for (int i = 0; i < word.length();\
    \ i++) {\n                if (word.indexOf(word.charAt(i)) == i) {\n         \
    \           unique++;\n                }\n            }\n            if (unique\
    \ > max_unique) {\n                max = word;\n                max_unique = unique;\n\
    \            }\n        }\n        return max;\n", "        int max = 0;\n   \
    \     String result = \"\";\n        for (String word : words) {\n           \
    \ int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n    \
    \            if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > max) {\n          \
    \      max = count;\n                result = word;\n            }\n        }\n\
    \        return result;\n", "        // Write your code here\n        return \"\
    \";\n", "        return \"\";\n", "        // Write your code here\n        return\
    \ \"\";\n", "        // Your code here\n        return \"\";\n", "        String\
    \ max = \"\";\n        int max_count = 0;\n        for (String word : words) {\n\
    \            int count = 0;\n            for (int i = 0; i < word.length(); i++)\
    \ {\n                if (word.indexOf(word.charAt(i)) == i) {\n              \
    \      count++;\n                }\n            }\n            if (count > max_count)\
    \ {\n                max = word;\n                max_count = count;\n       \
    \     }\n        }\n        return max;\n", "        return \"\";\n", "      \
    \  // Write your code here\n        return \"\";\n", "        String max = \"\"\
    ;\n        int max_unique = 0;\n        for (String word : words) {\n        \
    \    int unique = 0;\n            for (int i = 0; i < word.length(); i++) {\n\
    \                if (word.indexOf(word.charAt(i)) == i) {\n                  \
    \  unique++;\n                }\n            }\n            if (unique > max_unique)\
    \ {\n                max = word;\n                max_unique = unique;\n     \
    \       }\n        }\n        return max;\n", "        String max = \"\";\n  \
    \      int max_count = 0;\n        for (String word : words) {\n            int\
    \ count = 0;\n            for (int i = 0; i < word.length(); i++) {\n        \
    \        char c = word.charAt(i);\n                if (word.indexOf(c) == i) {\n\
    \                    count++;\n                }\n            }\n            if\
    \ (count > max_count) {\n                max = word;\n                max_count\
    \ = count;\n            }\n        }\n        return max;\n", "        // Write\
    \ your code here\n        int max = 0;\n        String maxWord = \"\";\n     \
    \   for (String word : words) {\n            int unique = 0;\n            for\
    \ (int i = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    unique++;\n                }\n            }\n \
    \           if (unique > max) {\n                max = unique;\n             \
    \   maxWord = word;\n            }\n        }\n        return maxWord;\n", " \
    \       String max = \"\";\n        int max_count = 0;\n        for (String word\
    \ : words) {\n            int count = 0;\n            for (int i = 0; i < word.length();\
    \ i++) {\n                if (word.indexOf(word.charAt(i)) == i) {\n         \
    \           count++;\n                }\n            }\n            if (count\
    \ > max_count) {\n                max = word;\n                max_count = count;\n\
    \            }\n        }\n        return max;\n", "        // TODO: Implement\
    \ this function\n        return \"\";\n", "        // TODO: implement the function\n\
    \        return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        return \"\";\n", "        return null;\n", " \
    \       // Write your code here\n        return \"\";\n", "        return \"\"\
    ;\n", "        // Write your code here\n        return \"\";\n", "        // TODO:\
    \ Implement me\n        return \"\";\n", "        String max = \"\";\n       \
    \ int max_count = 0;\n        for (String word : words) {\n            int count\
    \ = 0;\n            for (int i = 0; i < word.length(); i++) {\n              \
    \  if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n  \
    \              }\n            }\n            if (count > max_count) {\n      \
    \          max = word;\n                max_count = count;\n            }\n  \
    \      }\n        return max;\n", "        // TODO: Implement this function\n\
    \        return \"\";\n", "        return \"\";\n", "        int max = 0;\n  \
    \      String maxWord = \"\";\n        for (String word : words) {\n         \
    \   int count = 0;\n            for (char c : word.toCharArray()) {\n        \
    \        if (word.indexOf(c) == word.lastIndexOf(c)) {\n                    count++;\n\
    \                }\n            }\n            if (count > max) {\n          \
    \      max = count;\n                maxWord = word;\n            }\n        }\n\
    \        return maxWord;\n", "        // TODO: Write your code here\n        return\
    \ \"\";\n", "        String max = \"\";\n        for (String word : words) {\n\
    \            if (word.length() > max.length()) {\n                max = word;\n\
    \            }\n        }\n        return max;\n", "        // Write your code\
    \ here\n        return \"\";\n", "        String max = \"\";\n        int maxCount\
    \ = 0;\n        for (String word : words) {\n            Set<Character> set =\
    \ new HashSet<>();\n            for (int i = 0; i < word.length(); i++) {\n  \
    \              set.add(word.charAt(i));\n            }\n            if (set.size()\
    \ > maxCount) {\n                maxCount = set.size();\n                max =\
    \ word;\n            }\n        }\n        return max;\n", "        int max =\
    \ 0;\n        String maxString = \"\";\n        for (String word : words) {\n\
    \            int count = 0;\n            for (int i = 0; i < word.length(); i++)\
    \ {\n                if (word.indexOf(word.charAt(i)) == i) {\n              \
    \      count++;\n                }\n            }\n            if (count > max)\
    \ {\n                max = count;\n                maxString = word;\n       \
    \     }\n        }\n        return maxString;\n", "        // TODO: Implement\
    \ this function\n        return \"\";\n", "        // Your code here\n       \
    \ return \"\";\n", "        int max = 0;\n        String maxWord = \"\";\n   \
    \     for (String word : words) {\n            int unique = 0;\n            for\
    \ (int i = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    unique++;\n                }\n            }\n \
    \           if (unique > max) {\n                max = unique;\n             \
    \   maxWord = word;\n            }\n        }\n        return maxWord;\n", " \
    \       // Your code here\n        return \"\";\n", "        return null;\n",
  "        String max = \"\";\n        int max_count = 0;\n        for (String word\
    \ : words) {\n            int count = 0;\n            for (int i = 0; i < word.length();\
    \ i++) {\n                if (word.indexOf(word.charAt(i)) == i) {\n         \
    \           count++;\n                }\n            }\n            if (count\
    \ > max_count) {\n                max = word;\n                max_count = count;\n\
    \            }\n        }\n        return max;\n", "        return words.stream()\n\
    \            .max(Comparator.comparingInt(Problem::countUniqueChars))\n      \
    \      .orElse(\"\");\n", "        int max = 0;\n        String maxWord = \"\"\
    ;\n        for (String word : words) {\n            int unique = 0;\n        \
    \    for (int i = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    unique++;\n                }\n            }\n \
    \           if (unique > max) {\n                max = unique;\n             \
    \   maxWord = word;\n            }\n        }\n        return maxWord;\n", " \
    \       return null;\n", "        // Write your code here.\n        String max\
    \ = \"\";\n        int max_count = 0;\n        for (String word : words) {\n \
    \           int count = 0;\n            for (int i = 0; i < word.length(); i++)\
    \ {\n                if (word.indexOf(word.charAt(i)) == i) {\n              \
    \      count++;\n                }\n            }\n            if (count > max_count)\
    \ {\n                max = word;\n                max_count = count;\n       \
    \     }\n        }\n        return max;\n", "        // TODO: Implement your solution\
    \ here\n        return \"\";\n", "        int max = 0;\n        String maxWord\
    \ = \"\";\n        for (String word : words) {\n            int count = 0;\n \
    \           for (int i = 0; i < word.length(); i++) {\n                char c\
    \ = word.charAt(i);\n                if (word.indexOf(c) == i) {\n           \
    \         count++;\n                }\n            }\n            if (count >\
    \ max) {\n                max = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;\n", "        // Write your code\
    \ here\n        return \"\";\n", "        int max = 0;\n        String maxWord\
    \ = \"\";\n        for (String word : words) {\n            int count = 0;\n \
    \           for (int i = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max) {\n                max = count;\n                maxWord\
    \ = word;\n            }\n        }\n        return maxWord;\n", "        // TODO:\
    \ implement this function\n        return \"\";\n", "        // Write your code\
    \ here.\n        return \"\";\n", "        // Write your code here\n        return\
    \ \"\";\n", "        return \"\";\n", "        int max = 0;\n        String maxWord\
    \ = \"\";\n        for (String word : words) {\n            if (word.length()\
    \ > max) {\n                max = word.length();\n                maxWord = word;\n\
    \            }\n        }\n        return maxWord;\n", "        // Write your\
    \ code here\n        return \"\";\n", "        // YOUR CODE HERE\n        return\
    \ \"\";\n", "        String max = \"\";\n        int max_count = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n", " \
    \       return null;\n", "        String max = \"\";\n        int max_count =\
    \ 0;\n        for (String word : words) {\n            int count = 0;\n      \
    \      for (int i = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n", " \
    \       // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        return \"\";\n", "        // Write your code here\n\
    \        return \"\";\n", "        String max = \"\";\n        int maxCount =\
    \ 0;\n        for (String word : words) {\n            int count = 0;\n      \
    \      for (int i = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > maxCount) {\n                maxCount = count;\n      \
    \          max = word;\n            }\n        }\n        return max;\n", "  \
    \      String max = \"\";\n        int max_count = 0;\n        for (String word\
    \ : words) {\n            int count = 0;\n            for (int i = 0; i < word.length();\
    \ i++) {\n                if (word.indexOf(word.charAt(i)) == i) {\n         \
    \           count++;\n                }\n            }\n            if (count\
    \ > max_count) {\n                max = word;\n                max_count = count;\n\
    \            }\n        }\n        return max;\n", "        // Write your code\
    \ here\n        return \"\";\n", "        // TODO: Implement this function\n \
    \       return \"\";\n", "        String max = \"\";\n        int max_count =\
    \ 0;\n        for (String word : words) {\n            int count = 0;\n      \
    \      for (int i = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n", " \
    \       return \"\";\n", "        // TODO: Write your code here\n        return\
    \ null;\n", "        // Write your code here\n        return \"\";\n", "     \
    \   // TODO: Implement me\n        return \"\";\n", "        int max = 0;\n  \
    \      String maxWord = \"\";\n        for (String word : words) {\n         \
    \   int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n  \
    \              if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > max) {\n          \
    \      max = count;\n                maxWord = word;\n            }\n        }\n\
    \        return maxWord;\n", "        // TODO: Write your code here\n        return\
    \ \"\";\n", "        // TODO: Implement this function.\n        return \"\";\n",
  "        // Write your code here\n        return \"\";\n", "        int max = 0;\n\
    \        String maxWord = \"\";\n        for (String word : words) {\n       \
    \     int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n\
    \                if (word.indexOf(word.charAt(i)) == i) {\n                  \
    \  count++;\n                }\n            }\n            if (count > max) {\n\
    \                max = count;\n                maxWord = word;\n            }\n\
    \        }\n        return maxWord;\n", "        // TODO: Implement this function\n\
    \        return \"\";\n", "        return \"\";\n", "        int max = 0;\n  \
    \      String maxWord = \"\";\n        for (String word : words) {\n         \
    \   int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n  \
    \              if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > max) {\n          \
    \      max = count;\n                maxWord = word;\n            }\n        }\n\
    \        return maxWord;\n", "        String max = \"\";\n        int max_count\
    \ = 0;\n        for (String word : words) {\n            int count = 0;\n    \
    \        for (int i = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n", " \
    \       return words.stream()\n            .max(Comparator.comparing(s -> s.chars().distinct().count()))\n\
    \            .get();\n", "        return \"\";\n", "        // TODO: Write your\
    \ code here\n        return \"\";\n", "        return null;\n", "        // Write\
    \ your code here\n        return \"\";\n", "        return words.stream()\n  \
    \          .max(Comparator.comparing(Problem::countUniqueChars)\n            \
    \               .thenComparing(String::compareTo))\n            .get();\n", " \
    \       return words.stream()\n            .max(Comparator.comparing(Problem::countUniqueChars))\n\
    \            .orElse(\"\");\n", "        // Write your code here\n        return\
    \ \"\";\n", "        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max) {\n                max = count;\n                maxWord\
    \ = word;\n            }\n        }\n        return maxWord;\n", "        return\
    \ \"\";\n", "        // Write your code here\n        return \"\";\n", "     \
    \   // Write your code here\n        return \"\";\n", "        // Write your code\
    \ here\n        return \"\";\n", "        // Write your code here\n        return\
    \ \"\";\n", "        // TODO: Write your code here\n        return \"\";\n", " \
    \       String max = \"\";\n        int max_len = 0;\n        for (String word\
    \ : words) {\n            if (word.length() > max_len) {\n                max\
    \ = word;\n                max_len = word.length();\n            }\n        }\n\
    \        return max;\n", "        // TODO: Implement this function\n        return\
    \ \"\";\n", "        // Your code here\n        return null;\n", "        String\
    \ max = \"\";\n        int max_count = 0;\n        for (String word : words) {\n\
    \            int count = 0;\n            for (int i = 0; i < word.length(); i++)\
    \ {\n                if (word.indexOf(word.charAt(i)) == i) {\n              \
    \      count++;\n                }\n            }\n            if (count > max_count)\
    \ {\n                max = word;\n                max_count = count;\n       \
    \     }\n        }\n        return max;\n", "        // Write your code here\n\
    \        return \"\";\n", "        // Write your code here.\n        return \"\
    \";\n", "        // Your code here\n        return \"\";\n", "        String max\
    \ = \"\";\n        int max_unique = 0;\n        for (String word : words) {\n\
    \            int unique = 0;\n            for (int i = 0; i < word.length(); i++)\
    \ {\n                if (word.indexOf(word.charAt(i)) == i) {\n              \
    \      unique++;\n                }\n            }\n            if (unique > max_unique)\
    \ {\n                max = word;\n                max_unique = unique;\n     \
    \       }\n        }\n        return max;\n", "        // TODO: Write your code\
    \ here\n        return \"\";\n", "        String max = \"\";\n        for (String\
    \ word : words) {\n            if (word.length() > max.length()) {\n         \
    \       max = word;\n            }\n        }\n        return max;\n", "     \
    \   // Write your code here\n        return \"\";\n", "        int max = 0;\n\
    \        String maxWord = \"\";\n        for (String word : words) {\n       \
    \     int unique = 0;\n            for (int i = 0; i < word.length(); i++) {\n\
    \                if (word.indexOf(word.charAt(i)) == i) {\n                  \
    \  unique++;\n                }\n            }\n            if (unique > max)\
    \ {\n                max = unique;\n                maxWord = word;\n        \
    \    }\n        }\n        return maxWord;\n", "        // TODO: Implement this\
    \ function\n        return \"\";\n", "        String max = \"\";\n        for\
    \ (String word : words) {\n            if (word.length() > max.length()) {\n \
    \               max = word;\n            }\n        }\n        return max;\n",
  "        // TODO: Implement me\n        return \"\";\n", "        // Write your\
    \ code here\n        return \"\";\n", "        return null;\n", "        return\
    \ \"\";\n", "        String max = \"\";\n        int max_count = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n", " \
    \       String max = \"\";\n        int max_unique = 0;\n        for (String word\
    \ : words) {\n            int unique = 0;\n            for (int i = 0; i < word.length();\
    \ i++) {\n                if (word.indexOf(word.charAt(i)) == i) {\n         \
    \           unique++;\n                }\n            }\n            if (unique\
    \ > max_unique) {\n                max = word;\n                max_unique = unique;\n\
    \            }\n        }\n        return max;\n", "        // Write your code\
    \ here\n        return \"\";\n"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "    }\n\n"

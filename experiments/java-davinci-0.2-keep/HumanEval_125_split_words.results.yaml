name: HumanEval_125_split_words
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(x\
    \ -> x % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2bxa21f2.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp2bxa21f2.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp2bxa21f2.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp2bxa21f2.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(x -> x\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp2bxa21f2.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp2bxa21f2.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp2bxa21f2.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp2bxa21f2.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.matches(\".*[a-zA-Z]+.*\")) {\n  \
    \          if (txt.matches(\".*[a-zA-Z]+.*\")) {\n                if (txt.matches(\"\
    .*[a-zA-Z]+.*\")) {\n                    if (txt.matches(\".*[a-zA-Z]+.*\")) {\n\
    \                        if (txt.matches(\".*[a-zA-Z]+.*\")) {\n             \
    \               if (txt.matches(\".*[a-zA-Z]+.*\")) {\n                      \
    \          if (txt.matches(\".*[a-zA-Z]+.*\")) {\n                           \
    \         if (txt.matches(\".*[a-zA-Z]+.*\")) {\n                            \
    \            if (txt.matches(\".*[a-zA-Z]+.*\")) {\n                         \
    \                   if (txt.matches(\".*[a-zA-Z]+.*\")) {\n                  \
    \                              if (txt.matches(\".*[a-zA-Z]+.*\")) {\n       \
    \                                             if (txt.matches(\".*[a-zA-Z]+.*\"\
    )) {\n                                                        if (txt.matches(\"\
    .*[a-zA-Z]+.*\")) {\n                                                        \
    \    if (txt.matches(\".*[a-zA-Z]+.*\")) {\n                                 \
    \                               if (txt.matches(\".*[a-zA-Z]+.*\")) {\n      \
    \                                                              if (txt.matches(\"\
    .*[a-zA-Z]+.*\")) {\n                                                        \
    \                if (txt.matches(\".*[a-zA-Z]+.*\")) {\n                     \
    \                                                       if (txt.matches(\".*[a-zA-Z]+.*\"\
    )) {\n                                                                       \
    \         if (txt.matches(\".*[a-zA-Z]+.*\")) {\n                            \
    \                                                        if (txt.matches(\".*[a-zA-Z]+.*\"\
    )) {\n                                                                       \
    \                 if (txt.matches(\".*[a-zA-Z]+.*\")) {\n                    \
    \                                                                        if (txt\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp2i7kbmh.java:38: error: ')' expected\n                       \
    \                                                                     if (txt\n\
    \                                                                            \
    \                       ^\n/tmp/tmpp2i7kbmh.java:39: error: illegal start of statement\n\
    \    }\n    ^\n/tmp/tmpp2i7kbmh.java:40: error: illegal start of expression\n\
    \    public static void main(String[] args) {\n    ^\n3 errors\nprinting javac\
    \ parameters to: /multipleval/src/javac.20220801_210509.args\n"
  exit_code: 4
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpui61clof.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpui61clof.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpui61clof.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpui61clof.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpui61clof.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpui61clof.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpui61clof.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpui61clof.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjrsytrhl.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpjrsytrhl.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpjrsytrhl.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpjrsytrhl.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpjrsytrhl.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjrsytrhl.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjrsytrhl.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjrsytrhl.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            int count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6yfxyp71.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp6yfxyp71.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp6yfxyp71.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp6yfxyp71.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp6yfxyp71.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp6yfxyp71.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp6yfxyp71.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp6yfxyp71.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            int count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps6vzwi8c.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmps6vzwi8c.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmps6vzwi8c.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmps6vzwi8c.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps6vzwi8c.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps6vzwi8c.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps6vzwi8c.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps6vzwi8c.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgu22ljau.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpgu22ljau.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpgu22ljau.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpgu22ljau.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpgu22ljau.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpgu22ljau.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpgu22ljau.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpgu22ljau.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw31dunbi.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpw31dunbi.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpw31dunbi.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpw31dunbi.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpw31dunbi.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpw31dunbi.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpw31dunbi.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpw31dunbi.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8ty_wym5.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp8ty_wym5.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp8ty_wym5.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp8ty_wym5.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp8ty_wym5.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp8ty_wym5.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp8ty_wym5.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp8ty_wym5.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(x\
    \ -> x % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuiu1cxfr.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpuiu1cxfr.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpuiu1cxfr.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpuiu1cxfr.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(x -> x\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpuiu1cxfr.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpuiu1cxfr.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpuiu1cxfr.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpuiu1cxfr.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_k7uun4y.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp_k7uun4y.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp_k7uun4y.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp_k7uun4y.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_k7uun4y.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_k7uun4y.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_k7uun4y.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_k7uun4y.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5u126ud_.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp5u126ud_.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp5u126ud_.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp5u126ud_.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmp5u126ud_.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5u126ud_.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5u126ud_.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5u126ud_.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp66q2h206.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp66q2h206.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp66q2h206.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp66q2h206.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp66q2h206.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp66q2h206.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp66q2h206.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp66q2h206.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpursrlk07.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpursrlk07.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpursrlk07.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpursrlk07.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpursrlk07.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpursrlk07.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpursrlk07.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpursrlk07.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(x\
    \ -> x % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpynmlgsm2.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpynmlgsm2.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpynmlgsm2.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpynmlgsm2.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(x -> x\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpynmlgsm2.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpynmlgsm2.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpynmlgsm2.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpynmlgsm2.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            String[]\
    \ words = txt.split(\" \");\n            return new Union_ArrayList_String__long(new\
    \ ArrayList<String>(Arrays.asList(words)));\n        } else if (txt.contains(\"\
    ,\")) {\n            String[] words = txt.split(\",\");\n            return new\
    \ Union_ArrayList_String__long(new ArrayList<String>(Arrays.asList(words)));\n\
    \        } else {\n            int count = 0;\n            for (int i = 0; i <\
    \ txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 == 1) {\n\
    \                    count++;\n                }\n            }\n            return\
    \ new Union_ArrayList_String__long(count);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa6gjyoyg.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpa6gjyoyg.java:19:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(new\
    \ ArrayList<String>(Arrays.asList(words)));\n                       ^\n  symbol:\
    \   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpa6gjyoyg.java:22:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(new\
    \ ArrayList<String>(Arrays.asList(words)));\n                       ^\n  symbol:\
    \   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpa6gjyoyg.java:30:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(count);\n\
    \                       ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpa6gjyoyg.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpa6gjyoyg.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpa6gjyoyg.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpa6gjyoyg.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c - 'a' < 26 && c - 'a' >= 0).filter(c -> (c - 'a') % 2 == 1).count());\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp59jn10im.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp59jn10im.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp59jn10im.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp59jn10im.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ - 'a' < 26 && c - 'a' >= 0).filter(c -> (c - 'a') % 2 == 1).count());\n    \
    \                   ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmp59jn10im.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp59jn10im.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp59jn10im.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp59jn10im.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_Arr"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(x\
    \ -> x % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpinecpz8p.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpinecpz8p.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpinecpz8p.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpinecpz8p.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(x -> x\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpinecpz8p.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpinecpz8p.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpinecpz8p.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpinecpz8p.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(x\
    \ -> x % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv304l7gj.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpv304l7gj.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpv304l7gj.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpv304l7gj.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(x -> x\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpv304l7gj.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpv304l7gj.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpv304l7gj.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpv304l7gj.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            int count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsp1gyi35.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpsp1gyi35.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpsp1gyi35.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpsp1gyi35.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsp1gyi35.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsp1gyi35.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsp1gyi35.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsp1gyi35.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n        }\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0_t12ub0.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp0_t12ub0.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp0_t12ub0.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp0_t12ub0.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n              \
    \         ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0_t12ub0.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0_t12ub0.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0_t12ub0.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0_t12ub0.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp82vre7vg.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp82vre7vg.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp82vre7vg.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp82vre7vg.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp82vre7vg.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp82vre7vg.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp82vre7vg.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp82vre7vg.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmeen6fp9.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpmeen6fp9.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpmeen6fp9.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpmeen6fp9.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpmeen6fp9.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpmeen6fp9.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpmeen6fp9.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpmeen6fp9.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjyqs37nh.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpjyqs37nh.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpjyqs37nh.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpjyqs37nh.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjyqs37nh.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjyqs37nh.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjyqs37nh.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjyqs37nh.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n        }\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpehdgr1w1.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpehdgr1w1.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpehdgr1w1.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpehdgr1w1.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n              \
    \         ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpehdgr1w1.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpehdgr1w1.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpehdgr1w1.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpehdgr1w1.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeby38xe2.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpeby38xe2.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpeby38xe2.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpeby38xe2.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpeby38xe2.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpeby38xe2.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpeby38xe2.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpeby38xe2.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp10nsu5ad.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp10nsu5ad.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp10nsu5ad.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp10nsu5ad.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp10nsu5ad.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp10nsu5ad.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp10nsu5ad.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp10nsu5ad.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp27ioniq8.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp27ioniq8.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp27ioniq8.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp27ioniq8.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp27ioniq8.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp27ioniq8.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp27ioniq8.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp27ioniq8.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c - 'a' < 26 && c - 'a' >= 0).filter(c -> (c - 'a') % 2 == 1).count());\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkktk0z4m.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpkktk0z4m.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpkktk0z4m.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpkktk0z4m.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ - 'a' < 26 && c - 'a' >= 0).filter(c -> (c - 'a') % 2 == 1).count());\n    \
    \                   ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpkktk0z4m.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpkktk0z4m.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpkktk0z4m.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpkktk0z4m.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_Arr"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> (c - 'a') % 2 == 1).count());\n       \
    \ }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyrybzict.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpyrybzict.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpyrybzict.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpyrybzict.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> (c - 'a') % 2 == 1).count());\n            \
    \           ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpyrybzict.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpyrybzict.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpyrybzict.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpyrybzict.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_S"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            int count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl35w98jn.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpl35w98jn.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpl35w98jn.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpl35w98jn.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpl35w98jn.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpl35w98jn.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpl35w98jn.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpl35w98jn.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (i % 2 == 0 && txt.charAt(i)\
    \ >= 'a' && txt.charAt(i) <= 'z') {\n                    count++;\n          \
    \      }\n            }\n            return new Union_ArrayList_String__long(count);\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc__31b4z.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpc__31b4z.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpc__31b4z.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpc__31b4z.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpc__31b4z.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpc__31b4z.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpc__31b4z.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpc__31b4z.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe9pwhj0h.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpe9pwhj0h.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpe9pwhj0h.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpe9pwhj0h.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpe9pwhj0h.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpe9pwhj0h.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpe9pwhj0h.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpe9pwhj0h.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzu4mx9fr.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpzu4mx9fr.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpzu4mx9fr.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpzu4mx9fr.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzu4mx9fr.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzu4mx9fr.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzu4mx9fr.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzu4mx9fr.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        String[] words = txt.split(\"\\\\s+\");\n\
    \        if (words.length > 1) {\n            return new Union_ArrayList_String__long(Arrays.asList(words));\n\
    \        }\n        String[] words2 = txt.split(\",\");\n        if (words2.length\
    \ > 1) {\n            return new Union_ArrayList_String__long(Arrays.asList(words2));\n\
    \        }\n        long count = 0;\n        for (int i = 0; i < txt.length();\
    \ i++) {\n            if (txt.charAt(i) >= 'a' && txt.charAt(i) <= 'z' && i %\
    \ 2 == 0) {\n                count++;\n            }\n        }\n        return\
    \ new Union_ArrayList_String__long(count);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph9v7is24.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmph9v7is24.java:19:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(words));\n\
    \                       ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmph9v7is24.java:23: error: cannot find symbol\n       \
    \     return new Union_ArrayList_String__long(Arrays.asList(words2));\n      \
    \                 ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmph9v7is24.java:31: error: cannot find symbol\n       \
    \ return new Union_ArrayList_String__long(count);\n                   ^\n  symbol:\
    \   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmph9v7is24.java:35:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n                                                    ^\n  symbol:   class\
    \ Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmph9v7is24.java:36:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n                                                    ^\n  symbol:   class\
    \ Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmph9v7is24.java:37:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n                                                     ^\n  symbol:   class\
    \ Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmph9v7is24.java:38:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\", (String)\"\
    !\")))));\n                                "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpif86sams.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpif86sams.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpif86sams.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpif86sams.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpif86sams.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpif86sams.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpif86sams.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpif86sams.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (i % 2 == 0 && txt.charAt(i)\
    \ >= 'a' && txt.charAt(i) <= 'z') {\n                    count++;\n          \
    \      }\n            }\n            return new Union_ArrayList_String__long(count);\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnoxkcaqv.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpnoxkcaqv.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpnoxkcaqv.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpnoxkcaqv.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpnoxkcaqv.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpnoxkcaqv.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpnoxkcaqv.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpnoxkcaqv.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.indexOf(' ') != -1) {\n          \
    \  return new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n\
    \        } else if (txt.indexOf(',') != -1) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if ((txt.charAt(i) - 'a') % 2\
    \ == 1) {\n                    count++;\n                }\n            }\n  \
    \          return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp79hdqsry.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp79hdqsry.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp79hdqsry.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp79hdqsry.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp79hdqsry.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp79hdqsry.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp79hdqsry.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp79hdqsry.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> (c - 'a') % 2 == 1).count());\n       \
    \ }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgqnezd9c.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpgqnezd9c.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpgqnezd9c.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpgqnezd9c.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> (c - 'a') % 2 == 1).count());\n            \
    \           ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpgqnezd9c.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpgqnezd9c.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpgqnezd9c.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpgqnezd9c.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_S"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbcis_l5s.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpbcis_l5s.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpbcis_l5s.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpbcis_l5s.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpbcis_l5s.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpbcis_l5s.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpbcis_l5s.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpbcis_l5s.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9oksleca.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp9oksleca.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp9oksleca.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp9oksleca.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp9oksleca.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp9oksleca.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp9oksleca.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp9oksleca.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(x\
    \ -> x % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1pdjhzes.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp1pdjhzes.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp1pdjhzes.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp1pdjhzes.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(x -> x\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp1pdjhzes.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp1pdjhzes.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp1pdjhzes.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp1pdjhzes.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg8ukcavr.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpg8ukcavr.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpg8ukcavr.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpg8ukcavr.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpg8ukcavr.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpg8ukcavr.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpg8ukcavr.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpg8ukcavr.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvo3zlfhi.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpvo3zlfhi.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpvo3zlfhi.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpvo3zlfhi.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpvo3zlfhi.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpvo3zlfhi.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpvo3zlfhi.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpvo3zlfhi.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> (c - 'a') % 2 == 1).count());\n       \
    \ }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0etw3vbh.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp0etw3vbh.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp0etw3vbh.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp0etw3vbh.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> (c - 'a') % 2 == 1).count());\n            \
    \           ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0etw3vbh.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0etw3vbh.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0etw3vbh.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0etw3vbh.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_S"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        if (txt.contains(\" \")) {\n      \
    \      result.set_ArrayList_String(new ArrayList<String>(Arrays.asList(txt.split(\"\
    \ \"))));\n        } else if (txt.contains(\",\")) {\n            result.set_ArrayList_String(new\
    \ ArrayList<String>(Arrays.asList(txt.split(\",\"))));\n        } else {\n   \
    \         long count = 0;\n            for (int i = 0; i < txt.length(); i++)\
    \ {\n                if (txt.charAt(i) - 'a' % 2 == 1) {\n                   \
    \ count++;\n                }\n            }\n            result.set_long(count);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5l8zssbv.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp5l8zssbv.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp5l8zssbv.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp5l8zssbv.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5l8zssbv.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5l8zssbv.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5l8zssbv.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp5l8zssbv.java:39: error: cannot find symbol\n\
    \    assert(splitWords(("
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        // TODO: Implement this\n        return null;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpptkjuslv.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpptkjuslv.java:22:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n                                                    ^\n  symbol:   class\
    \ Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpptkjuslv.java:23:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n                                                    ^\n  symbol:   class\
    \ Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpptkjuslv.java:24:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n                                                     ^\n  symbol:   class\
    \ Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpptkjuslv.java:25:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\", (String)\"\
    !\")))));\n                                                           ^\n  symbol:\
    \   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpptkjuslv.java:26:\
    \ error: cannot find symbol\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpptkjuslv.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpptkjuslv.java:28: error: cannot fin"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfd_arnv4.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpfd_arnv4.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpfd_arnv4.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpfd_arnv4.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpfd_arnv4.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpfd_arnv4.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpfd_arnv4.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpfd_arnv4.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0fwvwpya.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp0fwvwpya.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp0fwvwpya.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp0fwvwpya.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmp0fwvwpya.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0fwvwpya.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0fwvwpya.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0fwvwpya.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> (c - 'a') % 2 == 0).count());\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptn_cmx67.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmptn_cmx67.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmptn_cmx67.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmptn_cmx67.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> (c\
    \ - 'a') % 2 == 0).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmptn_cmx67.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmptn_cmx67.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmptn_cmx67.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmptn_cmx67.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo8emppsa.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpo8emppsa.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpo8emppsa.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpo8emppsa.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpo8emppsa.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpo8emppsa.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpo8emppsa.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpo8emppsa.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n        }\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe1ygmleh.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpe1ygmleh.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpe1ygmleh.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpe1ygmleh.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n              \
    \         ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpe1ygmleh.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpe1ygmleh.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpe1ygmleh.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpe1ygmleh.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> (c - 'a') % 2 == 1).count());\n       \
    \ }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy1vsct9j.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpy1vsct9j.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpy1vsct9j.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpy1vsct9j.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> (c - 'a') % 2 == 1).count());\n            \
    \           ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpy1vsct9j.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpy1vsct9j.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpy1vsct9j.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpy1vsct9j.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_S"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        return null;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqx9yvjzk.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpqx9yvjzk.java:21:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n                                                    ^\n  symbol:   class\
    \ Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpqx9yvjzk.java:22:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n                                                    ^\n  symbol:   class\
    \ Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpqx9yvjzk.java:23:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n                                                     ^\n  symbol:   class\
    \ Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpqx9yvjzk.java:24:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\", (String)\"\
    !\")))));\n                                                           ^\n  symbol:\
    \   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpqx9yvjzk.java:25:\
    \ error: cannot find symbol\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpqx9yvjzk.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpqx9yvjzk.java:27: error: cannot fin"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps7fhdrna.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmps7fhdrna.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmps7fhdrna.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmps7fhdrna.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmps7fhdrna.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps7fhdrna.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps7fhdrna.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps7fhdrna.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            String[]\
    \ words = txt.split(\" \");\n            return new Union_ArrayList_String__long(Arrays.asList(words));\n\
    \        } else if (txt.contains(\",\")) {\n            String[] words = txt.split(\"\
    ,\");\n            return new Union_ArrayList_String__long(Arrays.asList(words));\n\
    \        } else {\n            long count = 0;\n            for (int i = 0; i\
    \ < txt.length(); i++) {\n                if ((txt.charAt(i) - 'a') % 2 == 1)\
    \ {\n                    count++;\n                }\n            }\n        \
    \    return new Union_ArrayList_String__long(count);\n        }\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(splitWords((\"Hello world!\"\
    )).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"\
    world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd5ep9ulg.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpd5ep9ulg.java:19:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(words));\n\
    \                       ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpd5ep9ulg.java:22: error: cannot find symbol\n       \
    \     return new Union_ArrayList_String__long(Arrays.asList(words));\n       \
    \                ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpd5ep9ulg.java:30: error: cannot find symbol\n       \
    \     return new Union_ArrayList_String__long(count);\n                      \
    \ ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpd5ep9ulg.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpd5ep9ulg.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpd5ep9ulg.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpd5ep9ulg.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                         "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5qba84us.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp5qba84us.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp5qba84us.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp5qba84us.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp5qba84us.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5qba84us.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5qba84us.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5qba84us.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.indexOf(\" \") != -1) {\n        \
    \    return new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n\
    \        } else if (txt.indexOf(\",\") != -1) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (i % 2 == 0 && txt.charAt(i)\
    \ >= 'a' && txt.charAt(i) <= 'z') {\n                    count++;\n          \
    \      }\n            }\n            return new Union_ArrayList_String__long(count);\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc5l9eaxh.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpc5l9eaxh.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpc5l9eaxh.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpc5l9eaxh.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpc5l9eaxh.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpc5l9eaxh.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpc5l9eaxh.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpc5l9eaxh.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwc39hhgy.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpwc39hhgy.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpwc39hhgy.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpwc39hhgy.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpwc39hhgy.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpwc39hhgy.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpwc39hhgy.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpwc39hhgy.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd5nf_zvl.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpd5nf_zvl.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpd5nf_zvl.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpd5nf_zvl.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpd5nf_zvl.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpd5nf_zvl.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpd5nf_zvl.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpd5nf_zvl.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long cnt = 0;\n            for (int i =\
    \ 0; i < txt.length(); i++) {\n                if ((txt.charAt(i) - 'a') % 2 ==\
    \ 1) {\n                    cnt++;\n                }\n            }\n       \
    \     return new Union_ArrayList_String__long(cnt);\n        }\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw5g5i0zp.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpw5g5i0zp.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpw5g5i0zp.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpw5g5i0zp.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(cnt);\n                 \
    \      ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpw5g5i0zp.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpw5g5i0zp.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpw5g5i0zp.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpw5g5i0zp.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n         "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5mfiq0v7.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp5mfiq0v7.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp5mfiq0v7.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp5mfiq0v7.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmp5mfiq0v7.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5mfiq0v7.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5mfiq0v7.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5mfiq0v7.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> (c - 'a') % 2 == 1).count());\n       \
    \ }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp23z8r523.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp23z8r523.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp23z8r523.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp23z8r523.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> (c - 'a') % 2 == 1).count());\n            \
    \           ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp23z8r523.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp23z8r523.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp23z8r523.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp23z8r523.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_S"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6e5ja_i3.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp6e5ja_i3.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp6e5ja_i3.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp6e5ja_i3.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmp6e5ja_i3.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp6e5ja_i3.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp6e5ja_i3.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp6e5ja_i3.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9jy_uata.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp9jy_uata.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp9jy_uata.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp9jy_uata.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp9jy_uata.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp9jy_uata.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp9jy_uata.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp9jy_uata.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            int count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_87a1mbg.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp_87a1mbg.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp_87a1mbg.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp_87a1mbg.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_87a1mbg.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_87a1mbg.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_87a1mbg.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_87a1mbg.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(new ArrayList<String>(Arrays.asList(txt.split(\"\
    \ \"))));\n        } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(new\
    \ ArrayList<String>(Arrays.asList(txt.split(\",\"))));\n        } else {\n   \
    \         long count = 0;\n            for (int i = 0; i < txt.length(); i++)\
    \ {\n                if (txt.charAt(i) - 'a' % 2 == 1) {\n                   \
    \ count++;\n                }\n            }\n            return new Union_ArrayList_String__long(count);\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqv1yxl82.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpqv1yxl82.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(new\
    \ ArrayList<String>(Arrays.asList(txt.split(\" \"))));\n                     \
    \  ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpqv1yxl82.java:20: error: cannot find symbol\n            return new Union_ArrayList_String__long(new\
    \ ArrayList<String>(Arrays.asList(txt.split(\",\"))));\n                     \
    \  ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpqv1yxl82.java:28: error: cannot find symbol\n            return new Union_ArrayList_String__long(count);\n\
    \                       ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpqv1yxl82.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpqv1yxl82.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpqv1yxl82.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpqv1yxl82.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_w6pw8ls.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp_w6pw8ls.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp_w6pw8ls.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp_w6pw8ls.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_w6pw8ls.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_w6pw8ls.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_w6pw8ls.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_w6pw8ls.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (i % 2 == 0 && txt.charAt(i)\
    \ >= 'a' && txt.charAt(i) <= 'z') {\n                    count++;\n          \
    \      }\n            }\n            return new Union_ArrayList_String__long(count);\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsgwetukz.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpsgwetukz.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpsgwetukz.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpsgwetukz.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsgwetukz.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsgwetukz.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsgwetukz.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsgwetukz.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjn95qchm.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpjn95qchm.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpjn95qchm.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpjn95qchm.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpjn95qchm.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjn95qchm.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjn95qchm.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjn95qchm.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c - 'a' % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprkr32iy_.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmprkr32iy_.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmprkr32iy_.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmprkr32iy_.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ - 'a' % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmprkr32iy_.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmprkr32iy_.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmprkr32iy_.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmprkr32iy_.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyt0wqmj9.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpyt0wqmj9.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpyt0wqmj9.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpyt0wqmj9.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpyt0wqmj9.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpyt0wqmj9.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpyt0wqmj9.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpyt0wqmj9.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n        }\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr_0hi3zu.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpr_0hi3zu.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpr_0hi3zu.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpr_0hi3zu.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n              \
    \         ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpr_0hi3zu.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpr_0hi3zu.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpr_0hi3zu.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpr_0hi3zu.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprpne5o6x.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmprpne5o6x.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmprpne5o6x.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmprpne5o6x.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmprpne5o6x.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmprpne5o6x.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmprpne5o6x.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmprpne5o6x.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(x\
    \ -> x % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2g47pta9.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp2g47pta9.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp2g47pta9.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp2g47pta9.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(x -> x\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp2g47pta9.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp2g47pta9.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp2g47pta9.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp2g47pta9.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpslxtff8g.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpslxtff8g.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpslxtff8g.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpslxtff8g.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpslxtff8g.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpslxtff8g.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpslxtff8g.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpslxtff8g.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8t9tru8g.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp8t9tru8g.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp8t9tru8g.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp8t9tru8g.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp8t9tru8g.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp8t9tru8g.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp8t9tru8g.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp8t9tru8g.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpprtbhybb.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpprtbhybb.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpprtbhybb.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpprtbhybb.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpprtbhybb.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpprtbhybb.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpprtbhybb.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpprtbhybb.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptu_x_gjp.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmptu_x_gjp.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmptu_x_gjp.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmptu_x_gjp.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmptu_x_gjp.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmptu_x_gjp.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmptu_x_gjp.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmptu_x_gjp.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (i % 2 == 0 && txt.charAt(i)\
    \ >= 'a' && txt.charAt(i) <= 'z') {\n                    count++;\n          \
    \      }\n            }\n            return new Union_ArrayList_String__long(count);\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps_gvaeuy.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmps_gvaeuy.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmps_gvaeuy.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmps_gvaeuy.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps_gvaeuy.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps_gvaeuy.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps_gvaeuy.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps_gvaeuy.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpal_3a855.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpal_3a855.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpal_3a855.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpal_3a855.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpal_3a855.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpal_3a855.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpal_3a855.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpal_3a855.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (i % 2 == 0 && txt.charAt(i)\
    \ >= 'a' && txt.charAt(i) <= 'z') {\n                    count++;\n          \
    \      }\n            }\n            return new Union_ArrayList_String__long(count);\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzisc9p4p.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpzisc9p4p.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpzisc9p4p.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpzisc9p4p.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzisc9p4p.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzisc9p4p.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzisc9p4p.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzisc9p4p.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n        }\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkpzpjhb7.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpkpzpjhb7.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpkpzpjhb7.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpkpzpjhb7.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n              \
    \         ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpkpzpjhb7.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpkpzpjhb7.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpkpzpjhb7.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpkpzpjhb7.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbcgjt_j7.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpbcgjt_j7.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpbcgjt_j7.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpbcgjt_j7.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpbcgjt_j7.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpbcgjt_j7.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpbcgjt_j7.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpbcgjt_j7.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(x\
    \ -> x % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfjpbunji.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpfjpbunji.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpfjpbunji.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpfjpbunji.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(x -> x\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpfjpbunji.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpfjpbunji.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpfjpbunji.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpfjpbunji.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpksasyvgu.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpksasyvgu.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpksasyvgu.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpksasyvgu.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpksasyvgu.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpksasyvgu.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpksasyvgu.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpksasyvgu.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkwgua8or.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpkwgua8or.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpkwgua8or.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpkwgua8or.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpkwgua8or.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpkwgua8or.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpkwgua8or.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpkwgua8or.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp26xb3y4x.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp26xb3y4x.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp26xb3y4x.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp26xb3y4x.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp26xb3y4x.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp26xb3y4x.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp26xb3y4x.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp26xb3y4x.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv2ldezsb.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpv2ldezsb.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpv2ldezsb.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpv2ldezsb.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpv2ldezsb.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpv2ldezsb.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpv2ldezsb.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpv2ldezsb.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp414s29ii.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp414s29ii.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp414s29ii.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp414s29ii.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp414s29ii.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp414s29ii.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp414s29ii.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp414s29ii.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n        }\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy8aqlqy3.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpy8aqlqy3.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpy8aqlqy3.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpy8aqlqy3.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n              \
    \         ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpy8aqlqy3.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpy8aqlqy3.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpy8aqlqy3.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpy8aqlqy3.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        // Write your code here\n        return null;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3j_2zmeh.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp3j_2zmeh.java:22:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n                                                    ^\n  symbol:   class\
    \ Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp3j_2zmeh.java:23:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n                                                    ^\n  symbol:   class\
    \ Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp3j_2zmeh.java:24:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n                                                     ^\n  symbol:   class\
    \ Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp3j_2zmeh.java:25:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\", (String)\"\
    !\")))));\n                                                           ^\n  symbol:\
    \   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp3j_2zmeh.java:26:\
    \ error: cannot find symbol\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp3j_2zmeh.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp3j_2zmeh.java:28: error: cannot fin"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(x\
    \ -> x % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsj5udda1.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpsj5udda1.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpsj5udda1.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpsj5udda1.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(x -> x\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpsj5udda1.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsj5udda1.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsj5udda1.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsj5udda1.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(x\
    \ -> x % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzr0mayx8.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpzr0mayx8.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpzr0mayx8.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpzr0mayx8.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(x -> x\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpzr0mayx8.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzr0mayx8.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzr0mayx8.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzr0mayx8.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmparhrkbj5.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmparhrkbj5.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmparhrkbj5.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmparhrkbj5.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmparhrkbj5.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmparhrkbj5.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmparhrkbj5.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmparhrkbj5.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu7lqgfaj.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpu7lqgfaj.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpu7lqgfaj.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpu7lqgfaj.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpu7lqgfaj.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpu7lqgfaj.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpu7lqgfaj.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpu7lqgfaj.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc02z2r_l.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpc02z2r_l.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpc02z2r_l.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpc02z2r_l.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpc02z2r_l.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpc02z2r_l.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpc02z2r_l.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpc02z2r_l.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n        }\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5hcwuf2m.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp5hcwuf2m.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp5hcwuf2m.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp5hcwuf2m.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n              \
    \         ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5hcwuf2m.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5hcwuf2m.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5hcwuf2m.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5hcwuf2m.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n        }\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmple28ufx9.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmple28ufx9.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmple28ufx9.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmple28ufx9.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n              \
    \         ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmple28ufx9.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmple28ufx9.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmple28ufx9.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmple28ufx9.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnxrgg0t0.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpnxrgg0t0.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpnxrgg0t0.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpnxrgg0t0.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpnxrgg0t0.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpnxrgg0t0.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpnxrgg0t0.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpnxrgg0t0.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkx55x_51.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpkx55x_51.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpkx55x_51.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpkx55x_51.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpkx55x_51.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpkx55x_51.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpkx55x_51.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpkx55x_51.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuzku1nn7.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpuzku1nn7.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpuzku1nn7.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpuzku1nn7.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpuzku1nn7.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpuzku1nn7.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpuzku1nn7.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpuzku1nn7.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        return null;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbabc_lba.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpbabc_lba.java:21:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n                                                    ^\n  symbol:   class\
    \ Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpbabc_lba.java:22:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n                                                    ^\n  symbol:   class\
    \ Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpbabc_lba.java:23:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n                                                     ^\n  symbol:   class\
    \ Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpbabc_lba.java:24:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\", (String)\"\
    !\")))));\n                                                           ^\n  symbol:\
    \   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpbabc_lba.java:25:\
    \ error: cannot find symbol\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpbabc_lba.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpbabc_lba.java:27: error: cannot fin"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(x\
    \ -> x % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxwkmhcrk.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpxwkmhcrk.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpxwkmhcrk.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpxwkmhcrk.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(x -> x\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpxwkmhcrk.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpxwkmhcrk.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpxwkmhcrk.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpxwkmhcrk.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (i % 2 == 0 && txt.charAt(i)\
    \ >= 'a' && txt.charAt(i) <= 'z') {\n                    count++;\n          \
    \      }\n            }\n            return new Union_ArrayList_String__long(count);\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3skc0htz.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp3skc0htz.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp3skc0htz.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp3skc0htz.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3skc0htz.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3skc0htz.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3skc0htz.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3skc0htz.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpovudh6_c.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpovudh6_c.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpovudh6_c.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpovudh6_c.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpovudh6_c.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpovudh6_c.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpovudh6_c.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpovudh6_c.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            String[]\
    \ words = txt.split(\" \");\n            return new Union_ArrayList_String__long(Arrays.asList(words));\n\
    \        } else if (txt.contains(\",\")) {\n            String[] words = txt.split(\"\
    ,\");\n            return new Union_ArrayList_String__long(Arrays.asList(words));\n\
    \        } else {\n            long count = 0;\n            for (int i = 0; i\
    \ < txt.length(); i++) {\n                if ((txt.charAt(i) - 'a') % 2 == 1)\
    \ {\n                    count++;\n                }\n            }\n        \
    \    return new Union_ArrayList_String__long(count);\n        }\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(splitWords((\"Hello world!\"\
    )).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"\
    world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1cp9vj6r.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp1cp9vj6r.java:19:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(words));\n\
    \                       ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmp1cp9vj6r.java:22: error: cannot find symbol\n       \
    \     return new Union_ArrayList_String__long(Arrays.asList(words));\n       \
    \                ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmp1cp9vj6r.java:30: error: cannot find symbol\n       \
    \     return new Union_ArrayList_String__long(count);\n                      \
    \ ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmp1cp9vj6r.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp1cp9vj6r.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp1cp9vj6r.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp1cp9vj6r.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                         "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (i % 2 == 0 && txt.charAt(i)\
    \ >= 'a' && txt.charAt(i) <= 'z') {\n                    count++;\n          \
    \      }\n            }\n            return new Union_ArrayList_String__long(count);\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzgl9p_bh.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpzgl9p_bh.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpzgl9p_bh.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpzgl9p_bh.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzgl9p_bh.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzgl9p_bh.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzgl9p_bh.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzgl9p_bh.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.indexOf(\" \") != -1) {\n        \
    \    return new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n\
    \        } else if (txt.indexOf(\",\") != -1) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppe9vyeo8.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmppe9vyeo8.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmppe9vyeo8.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmppe9vyeo8.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmppe9vyeo8.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmppe9vyeo8.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmppe9vyeo8.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmppe9vyeo8.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c - 'a' >= 0 && c - 'a' < 26).filter(c -> (c - 'a') % 2 == 1).count());\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6am281nx.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp6am281nx.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp6am281nx.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp6am281nx.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ - 'a' >= 0 && c - 'a' < 26).filter(c -> (c - 'a') % 2 == 1).count());\n    \
    \                   ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmp6am281nx.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp6am281nx.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp6am281nx.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp6am281nx.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_Arr"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpprjetq5c.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpprjetq5c.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpprjetq5c.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpprjetq5c.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpprjetq5c.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpprjetq5c.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpprjetq5c.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpprjetq5c.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpniuki33u.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpniuki33u.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpniuki33u.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpniuki33u.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpniuki33u.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpniuki33u.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpniuki33u.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpniuki33u.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        // Write code here\n        return null;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjkpxv3ah.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpjkpxv3ah.java:22:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n                                                    ^\n  symbol:   class\
    \ Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpjkpxv3ah.java:23:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n                                                    ^\n  symbol:   class\
    \ Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpjkpxv3ah.java:24:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n                                                     ^\n  symbol:   class\
    \ Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpjkpxv3ah.java:25:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\", (String)\"\
    !\")))));\n                                                           ^\n  symbol:\
    \   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpjkpxv3ah.java:26:\
    \ error: cannot find symbol\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpjkpxv3ah.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpjkpxv3ah.java:28: error: cannot fin"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpse2fyqml.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpse2fyqml.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpse2fyqml.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpse2fyqml.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpse2fyqml.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpse2fyqml.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpse2fyqml.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpse2fyqml.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (i % 2 == 0 && txt.charAt(i)\
    \ >= 'a' && txt.charAt(i) <= 'z') {\n                    count++;\n          \
    \      }\n            }\n            return new Union_ArrayList_String__long(count);\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph9uz5ql3.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmph9uz5ql3.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmph9uz5ql3.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmph9uz5ql3.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmph9uz5ql3.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmph9uz5ql3.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmph9uz5ql3.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmph9uz5ql3.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7c25phew.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp7c25phew.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp7c25phew.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp7c25phew.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp7c25phew.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp7c25phew.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp7c25phew.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp7c25phew.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnb4np1bs.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpnb4np1bs.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpnb4np1bs.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpnb4np1bs.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpnb4np1bs.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpnb4np1bs.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpnb4np1bs.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpnb4np1bs.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyqheat0u.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpyqheat0u.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpyqheat0u.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpyqheat0u.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpyqheat0u.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpyqheat0u.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpyqheat0u.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpyqheat0u.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        // Write your code here\n        // Return\
    \ an ArrayList<String> or long\n        return null;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1eqywa8v.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp1eqywa8v.java:23:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n                                                    ^\n  symbol:   class\
    \ Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp1eqywa8v.java:24:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n                                                    ^\n  symbol:   class\
    \ Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp1eqywa8v.java:25:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n                                                     ^\n  symbol:   class\
    \ Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp1eqywa8v.java:26:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\", (String)\"\
    !\")))));\n                                                           ^\n  symbol:\
    \   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp1eqywa8v.java:27:\
    \ error: cannot find symbol\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp1eqywa8v.java:28: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp1eqywa8v.java:29: error: cannot fin"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3uqk_3sf.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp3uqk_3sf.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp3uqk_3sf.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp3uqk_3sf.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3uqk_3sf.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3uqk_3sf.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3uqk_3sf.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3uqk_3sf.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(x\
    \ -> x % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp879formq.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp879formq.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp879formq.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp879formq.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(x -> x\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp879formq.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp879formq.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp879formq.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp879formq.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n        }\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpstu7pqej.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpstu7pqej.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpstu7pqej.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpstu7pqej.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n              \
    \         ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpstu7pqej.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpstu7pqej.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpstu7pqej.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpstu7pqej.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4ymf26rg.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp4ymf26rg.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp4ymf26rg.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp4ymf26rg.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp4ymf26rg.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp4ymf26rg.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp4ymf26rg.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp4ymf26rg.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> (c - 'a') % 2 == 1).count());\n       \
    \ }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsxyot3pb.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpsxyot3pb.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpsxyot3pb.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpsxyot3pb.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> (c - 'a') % 2 == 1).count());\n            \
    \           ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsxyot3pb.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsxyot3pb.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsxyot3pb.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsxyot3pb.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_S"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(x\
    \ -> x % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgxvugkwu.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpgxvugkwu.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpgxvugkwu.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpgxvugkwu.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(x -> x\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpgxvugkwu.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpgxvugkwu.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpgxvugkwu.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpgxvugkwu.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj627m3wz.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpj627m3wz.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpj627m3wz.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpj627m3wz.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpj627m3wz.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpj627m3wz.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpj627m3wz.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpj627m3wz.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfrk6eber.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpfrk6eber.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpfrk6eber.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpfrk6eber.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpfrk6eber.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpfrk6eber.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpfrk6eber.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpfrk6eber.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkp89gf79.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpkp89gf79.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpkp89gf79.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpkp89gf79.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpkp89gf79.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpkp89gf79.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpkp89gf79.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpkp89gf79.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        // TODO: Implement this function\n       \
    \ return null;\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbt8xybir.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpbt8xybir.java:22:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n                                                    ^\n  symbol:   class\
    \ Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpbt8xybir.java:23:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n                                                    ^\n  symbol:   class\
    \ Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpbt8xybir.java:24:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n                                                     ^\n  symbol:   class\
    \ Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpbt8xybir.java:25:\
    \ error: cannot find symbol\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\", (String)\"\
    !\")))));\n                                                           ^\n  symbol:\
    \   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpbt8xybir.java:26:\
    \ error: cannot find symbol\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpbt8xybir.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpbt8xybir.java:28: error: cannot fin"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2cjpkac3.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp2cjpkac3.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp2cjpkac3.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp2cjpkac3.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp2cjpkac3.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp2cjpkac3.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp2cjpkac3.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp2cjpkac3.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprau8cb52.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmprau8cb52.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmprau8cb52.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmprau8cb52.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmprau8cb52.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmprau8cb52.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmprau8cb52.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmprau8cb52.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnz7fal9p.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpnz7fal9p.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpnz7fal9p.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpnz7fal9p.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpnz7fal9p.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpnz7fal9p.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpnz7fal9p.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpnz7fal9p.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsldeu9lm.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpsldeu9lm.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpsldeu9lm.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpsldeu9lm.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpsldeu9lm.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsldeu9lm.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsldeu9lm.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsldeu9lm.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(x\
    \ -> x % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptngi3b6f.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmptngi3b6f.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmptngi3b6f.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmptngi3b6f.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(x -> x\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmptngi3b6f.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmptngi3b6f.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmptngi3b6f.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmptngi3b6f.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn3fsl9om.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpn3fsl9om.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpn3fsl9om.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpn3fsl9om.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpn3fsl9om.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpn3fsl9om.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpn3fsl9om.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpn3fsl9om.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n        }\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7l66cuny.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp7l66cuny.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp7l66cuny.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp7l66cuny.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n              \
    \         ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp7l66cuny.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp7l66cuny.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp7l66cuny.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp7l66cuny.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(x\
    \ -> x % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeij158zy.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpeij158zy.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpeij158zy.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpeij158zy.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(x -> x\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpeij158zy.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpeij158zy.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpeij158zy.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpeij158zy.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7nxjqx_2.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp7nxjqx_2.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp7nxjqx_2.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp7nxjqx_2.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp7nxjqx_2.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp7nxjqx_2.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp7nxjqx_2.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp7nxjqx_2.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6qchyfmj.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp6qchyfmj.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp6qchyfmj.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp6qchyfmj.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp6qchyfmj.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp6qchyfmj.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp6qchyfmj.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp6qchyfmj.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpejttqnt6.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpejttqnt6.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpejttqnt6.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpejttqnt6.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpejttqnt6.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpejttqnt6.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpejttqnt6.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpejttqnt6.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnw02envq.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpnw02envq.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpnw02envq.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpnw02envq.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpnw02envq.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpnw02envq.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpnw02envq.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpnw02envq.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (i % 2 == 0 && txt.charAt(i)\
    \ >= 'a' && txt.charAt(i) <= 'z') {\n                    count++;\n          \
    \      }\n            }\n            return new Union_ArrayList_String__long(count);\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_jrnvgtx.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp_jrnvgtx.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp_jrnvgtx.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp_jrnvgtx.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_jrnvgtx.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_jrnvgtx.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_jrnvgtx.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_jrnvgtx.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (i % 2 == 0 && txt.charAt(i)\
    \ >= 'a' && txt.charAt(i) <= 'z') {\n                    count++;\n          \
    \      }\n            }\n            return new Union_ArrayList_String__long(count);\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4vc6nshi.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp4vc6nshi.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp4vc6nshi.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp4vc6nshi.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp4vc6nshi.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp4vc6nshi.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp4vc6nshi.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp4vc6nshi.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z' && (c - 'a') % 2 == 0).count());\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuy0j8x1f.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpuy0j8x1f.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpuy0j8x1f.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpuy0j8x1f.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z' && (c - 'a') % 2 == 0).count());\n                      \
    \ ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpuy0j8x1f.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpuy0j8x1f.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpuy0j8x1f.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpuy0j8x1f.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (i % 2 == 0 && txt.charAt(i)\
    \ >= 'a' && txt.charAt(i) <= 'z') {\n                    count++;\n          \
    \      }\n            }\n            return new Union_ArrayList_String__long(count);\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8qif10k2.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp8qif10k2.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp8qif10k2.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp8qif10k2.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp8qif10k2.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp8qif10k2.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp8qif10k2.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp8qif10k2.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpksphuksl.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpksphuksl.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpksphuksl.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpksphuksl.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpksphuksl.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpksphuksl.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpksphuksl.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpksphuksl.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx4jwxw7d.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpx4jwxw7d.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpx4jwxw7d.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpx4jwxw7d.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpx4jwxw7d.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpx4jwxw7d.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpx4jwxw7d.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpx4jwxw7d.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (i % 2 == 0 && txt.charAt(i)\
    \ >= 'a' && txt.charAt(i) <= 'z') {\n                    count++;\n          \
    \      }\n            }\n            return new Union_ArrayList_String__long(count);\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpaue85gtl.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpaue85gtl.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpaue85gtl.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpaue85gtl.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpaue85gtl.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpaue85gtl.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpaue85gtl.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpaue85gtl.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx2zr3y6u.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpx2zr3y6u.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpx2zr3y6u.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpx2zr3y6u.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpx2zr3y6u.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpx2zr3y6u.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpx2zr3y6u.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpx2zr3y6u.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        if (txt.contains(\" \")) {\n      \
    \      result.set_ArrayList_String(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            result.set_ArrayList_String(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       result.set_long(count);\n        }\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx_j36363.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpx_j36363.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpx_j36363.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpx_j36363.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpx_j36363.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpx_j36363.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpx_j36363.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpx_j36363.java:39: error: cannot find symbol\n\
    \    assert(splitWords(("
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> (c - 'a') % 2 == 1).count());\n       \
    \ }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsq79vjf_.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpsq79vjf_.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpsq79vjf_.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpsq79vjf_.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> (c - 'a') % 2 == 1).count());\n            \
    \           ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsq79vjf_.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsq79vjf_.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsq79vjf_.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsq79vjf_.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_S"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6655gtqi.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp6655gtqi.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp6655gtqi.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp6655gtqi.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp6655gtqi.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp6655gtqi.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp6655gtqi.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp6655gtqi.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwv2c2ofx.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpwv2c2ofx.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpwv2c2ofx.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpwv2c2ofx.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpwv2c2ofx.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpwv2c2ofx.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpwv2c2ofx.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpwv2c2ofx.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpknkerlwr.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpknkerlwr.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpknkerlwr.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpknkerlwr.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpknkerlwr.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpknkerlwr.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpknkerlwr.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpknkerlwr.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj0yl4_8u.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpj0yl4_8u.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpj0yl4_8u.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpj0yl4_8u.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpj0yl4_8u.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpj0yl4_8u.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpj0yl4_8u.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpj0yl4_8u.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.matches(\".*\\\\s.*\")) {\n      \
    \      return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\\\\\
    s\")));\n        } else if (txt.matches(\".*,.*\")) {\n            return new\
    \ Union_ArrayList_String__long(Arrays.asList(txt.split(\",\")));\n        } else\
    \ {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n        }\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptp3p8dsx.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmptp3p8dsx.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \\\\s\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmptp3p8dsx.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmptp3p8dsx.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n              \
    \         ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmptp3p8dsx.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmptp3p8dsx.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmptp3p8dsx.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmptp3p8dsx.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_S"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl2xrk46t.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpl2xrk46t.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpl2xrk46t.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpl2xrk46t.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpl2xrk46t.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpl2xrk46t.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpl2xrk46t.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpl2xrk46t.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvh1h093s.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpvh1h093s.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpvh1h093s.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpvh1h093s.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpvh1h093s.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpvh1h093s.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpvh1h093s.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpvh1h093s.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long odd = 0;\n            for (int i =\
    \ 0; i < txt.length(); i++) {\n                if ((txt.charAt(i) - 'a') % 2 ==\
    \ 1) {\n                    odd++;\n                }\n            }\n       \
    \     return new Union_ArrayList_String__long(odd);\n        }\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo_dcpggo.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpo_dcpggo.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpo_dcpggo.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpo_dcpggo.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(odd);\n                 \
    \      ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpo_dcpggo.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpo_dcpggo.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpo_dcpggo.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpo_dcpggo.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n         "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n        }\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpedjyh_b4.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpedjyh_b4.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpedjyh_b4.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpedjyh_b4.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n              \
    \         ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpedjyh_b4.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpedjyh_b4.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpedjyh_b4.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpedjyh_b4.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if ((txt.charAt(i) - 'a') % 2\
    \ == 1) {\n                    count++;\n                }\n            }\n  \
    \          return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgeut6p65.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpgeut6p65.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpgeut6p65.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpgeut6p65.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpgeut6p65.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpgeut6p65.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpgeut6p65.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpgeut6p65.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if ((txt.charAt(i) - 'a') % 2\
    \ == 1) {\n                    count++;\n                }\n            }\n  \
    \          return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjg5qrg8k.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpjg5qrg8k.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpjg5qrg8k.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpjg5qrg8k.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjg5qrg8k.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjg5qrg8k.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjg5qrg8k.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjg5qrg8k.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c - 'a' >= 0 && c - 'a' < 26 && (c - 'a') % 2 == 0).count());\n        }\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv2zwifdh.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpv2zwifdh.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpv2zwifdh.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpv2zwifdh.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ - 'a' >= 0 && c - 'a' < 26 && (c - 'a') % 2 == 0).count());\n              \
    \         ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpv2zwifdh.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpv2zwifdh.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpv2zwifdh.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpv2zwifdh.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppqhmgx9z.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmppqhmgx9z.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmppqhmgx9z.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmppqhmgx9z.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmppqhmgx9z.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmppqhmgx9z.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmppqhmgx9z.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmppqhmgx9z.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpej80lbqx.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpej80lbqx.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpej80lbqx.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpej80lbqx.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpej80lbqx.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpej80lbqx.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpej80lbqx.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpej80lbqx.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n        }\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr_4ttzqg.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpr_4ttzqg.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpr_4ttzqg.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpr_4ttzqg.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n              \
    \         ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpr_4ttzqg.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpr_4ttzqg.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpr_4ttzqg.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpr_4ttzqg.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfjxhcep8.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpfjxhcep8.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpfjxhcep8.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpfjxhcep8.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpfjxhcep8.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpfjxhcep8.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpfjxhcep8.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpfjxhcep8.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp354c_tr0.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp354c_tr0.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp354c_tr0.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp354c_tr0.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp354c_tr0.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp354c_tr0.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp354c_tr0.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp354c_tr0.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> (c - 'a') % 2 == 1).count());\n       \
    \ }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf_4y_agq.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpf_4y_agq.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpf_4y_agq.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpf_4y_agq.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> (c - 'a') % 2 == 1).count());\n            \
    \           ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpf_4y_agq.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpf_4y_agq.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpf_4y_agq.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpf_4y_agq.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_S"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1265ukww.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp1265ukww.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp1265ukww.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp1265ukww.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp1265ukww.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp1265ukww.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp1265ukww.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp1265ukww.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbcyattnc.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpbcyattnc.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpbcyattnc.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpbcyattnc.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpbcyattnc.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpbcyattnc.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpbcyattnc.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpbcyattnc.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n        }\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9hcq49so.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp9hcq49so.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp9hcq49so.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp9hcq49so.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n              \
    \         ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp9hcq49so.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp9hcq49so.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp9hcq49so.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp9hcq49so.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdk0ixhwd.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpdk0ixhwd.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpdk0ixhwd.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpdk0ixhwd.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpdk0ixhwd.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpdk0ixhwd.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpdk0ixhwd.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpdk0ixhwd.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpikd9ux5p.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpikd9ux5p.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpikd9ux5p.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpikd9ux5p.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpikd9ux5p.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpikd9ux5p.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpikd9ux5p.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpikd9ux5p.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> (c - 'a') % 2 == 1).count());\n       \
    \ }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3yisam3f.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp3yisam3f.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp3yisam3f.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp3yisam3f.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> (c - 'a') % 2 == 1).count());\n            \
    \           ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3yisam3f.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3yisam3f.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3yisam3f.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3yisam3f.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_S"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z' && (c - 'a') % 2 == 0).count());\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzksbhjz3.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpzksbhjz3.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpzksbhjz3.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpzksbhjz3.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z' && (c - 'a') % 2 == 0).count());\n                      \
    \ ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpzksbhjz3.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzksbhjz3.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzksbhjz3.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzksbhjz3.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (i % 2 == 0 && txt.charAt(i)\
    \ >= 'a' && txt.charAt(i) <= 'z') {\n                    count++;\n          \
    \      }\n            }\n            return new Union_ArrayList_String__long(count);\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp196dyjl0.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp196dyjl0.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp196dyjl0.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp196dyjl0.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp196dyjl0.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp196dyjl0.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp196dyjl0.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp196dyjl0.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv9ezo_t7.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpv9ezo_t7.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpv9ezo_t7.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpv9ezo_t7.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpv9ezo_t7.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpv9ezo_t7.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpv9ezo_t7.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpv9ezo_t7.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> (c - 'a') % 2 == 0).count());\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzrtwypkw.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpzrtwypkw.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpzrtwypkw.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpzrtwypkw.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> (c\
    \ - 'a') % 2 == 0).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpzrtwypkw.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzrtwypkw.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzrtwypkw.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzrtwypkw.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c - 'a' % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4g9yxg0i.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp4g9yxg0i.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp4g9yxg0i.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp4g9yxg0i.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ - 'a' % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp4g9yxg0i.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp4g9yxg0i.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp4g9yxg0i.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp4g9yxg0i.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnelkfddn.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpnelkfddn.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpnelkfddn.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpnelkfddn.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpnelkfddn.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpnelkfddn.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpnelkfddn.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpnelkfddn.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n        }\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbzulefwg.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpbzulefwg.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpbzulefwg.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpbzulefwg.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ >= 'a' && c <= 'z').filter(c -> c % 2 == 1).count());\n                    \
    \   ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpbzulefwg.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpbzulefwg.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpbzulefwg.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpbzulefwg.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp21x4sibp.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp21x4sibp.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp21x4sibp.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp21x4sibp.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp21x4sibp.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp21x4sibp.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp21x4sibp.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp21x4sibp.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkf9gt6d9.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpkf9gt6d9.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpkf9gt6d9.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpkf9gt6d9.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpkf9gt6d9.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpkf9gt6d9.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpkf9gt6d9.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpkf9gt6d9.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            int count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsuitldzc.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpsuitldzc.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpsuitldzc.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpsuitldzc.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsuitldzc.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsuitldzc.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsuitldzc.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsuitldzc.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            int count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzhi77n07.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpzhi77n07.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpzhi77n07.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpzhi77n07.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzhi77n07.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzhi77n07.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzhi77n07.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzhi77n07.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n        }\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplk5jli69.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmplk5jli69.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmplk5jli69.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmplk5jli69.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n              \
    \         ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmplk5jli69.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmplk5jli69.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmplk5jli69.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmplk5jli69.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c % 2 == 1).count());\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpik8bh1xo.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpik8bh1xo.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpik8bh1xo.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpik8bh1xo.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ % 2 == 1).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpik8bh1xo.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpik8bh1xo.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpik8bh1xo.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpik8bh1xo.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,H"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> c - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n        }\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsw65gchk.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpsw65gchk.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpsw65gchk.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpsw65gchk.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> c\
    \ - 'a' < 26 && c - 'a' >= 0 && (c - 'a') % 2 == 1).count());\n              \
    \         ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsw65gchk.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsw65gchk.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsw65gchk.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpsw65gchk.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (i % 2 == 0 && txt.charAt(i)\
    \ >= 'a' && txt.charAt(i) <= 'z') {\n                    count++;\n          \
    \      }\n            }\n            return new Union_ArrayList_String__long(count);\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprcj04s88.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmprcj04s88.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmprcj04s88.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmprcj04s88.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmprcj04s88.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmprcj04s88.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmprcj04s88.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmprcj04s88.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (i % 2 == 0 && txt.charAt(i)\
    \ >= 'a' && txt.charAt(i) <= 'z') {\n                    count++;\n          \
    \      }\n            }\n            return new Union_ArrayList_String__long(count);\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzde1jr79.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpzde1jr79.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpzde1jr79.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpzde1jr79.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzde1jr79.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzde1jr79.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzde1jr79.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzde1jr79.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            String[]\
    \ words = txt.split(\" \");\n            return new Union_ArrayList_String__long(Arrays.asList(words));\n\
    \        } else if (txt.contains(\",\")) {\n            String[] words = txt.split(\"\
    ,\");\n            return new Union_ArrayList_String__long(Arrays.asList(words));\n\
    \        } else {\n            long count = 0;\n            for (int i = 0; i\
    \ < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 == 1) {\n\
    \                    count++;\n                }\n            }\n            return\
    \ new Union_ArrayList_String__long(count);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr5nt1fox.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpr5nt1fox.java:19:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(words));\n\
    \                       ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpr5nt1fox.java:22: error: cannot find symbol\n       \
    \     return new Union_ArrayList_String__long(Arrays.asList(words));\n       \
    \                ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpr5nt1fox.java:30: error: cannot find symbol\n       \
    \     return new Union_ArrayList_String__long(count);\n                      \
    \ ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpr5nt1fox.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpr5nt1fox.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpr5nt1fox.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpr5nt1fox.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                         "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoqhfkk09.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpoqhfkk09.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpoqhfkk09.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpoqhfkk09.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpoqhfkk09.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpoqhfkk09.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpoqhfkk09.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpoqhfkk09.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            int count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp44dqlp2l.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp44dqlp2l.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp44dqlp2l.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp44dqlp2l.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp44dqlp2l.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp44dqlp2l.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp44dqlp2l.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp44dqlp2l.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(Stream.of(txt.toCharArray()).filter(x\
    \ -> x >= 'a' && x <= 'z').filter(x -> (x - 'a') % 2 == 0).count());\n       \
    \ }\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpza5r0dt6.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpza5r0dt6.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpza5r0dt6.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpza5r0dt6.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Stream.of(txt.toCharArray()).filter(x\
    \ -> x >= 'a' && x <= 'z').filter(x -> (x - 'a') % 2 == 0).count());\n       \
    \                ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpza5r0dt6.java:22: error: bad operand types for binary\
    \ operator '>='\n            return new Union_ArrayList_String__long(Stream.of(txt.toCharArray()).filter(x\
    \ -> x >= 'a' && x <= 'z').filter(x -> (x - 'a') % 2 == 0).count());\n       \
    \                                                                            \
    \            ^\n  first type:  char[]\n  second type: char\n/tmp/tmpza5r0dt6.java:22:\
    \ error: bad operand types for binary operator '<='\n            return new Union_ArrayList_String__long(Stream.of(txt.toCharArray()).filter(x\
    \ -> x >= 'a' && x <= 'z').filter(x -> (x - 'a') % 2 == 0).count());\n       \
    \                                                                            \
    \                        ^\n  first type:  char[]\n  second type: char\n/tmp/tmpza5r0dt6.java:22:\
    \ error: bad operand types for binary operator '-'\n            return new Union_ArrayList_String__long(Stream.of(txt.toCharArray()).filter(x\
    \ -> x >= 'a' && x <= 'z').filter(x -> (x - 'a') % 2 == 0).count());\n       \
    \                                                             "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            String[]\
    \ words = txt.split(\" \");\n            return new Union_ArrayList_String__long(Arrays.asList(words));\n\
    \        } else if (txt.contains(\",\")) {\n            String[] words = txt.split(\"\
    ,\");\n            return new Union_ArrayList_String__long(Arrays.asList(words));\n\
    \        } else {\n            long count = 0;\n            for (int i = 0; i\
    \ < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 == 1) {\n\
    \                    count++;\n                }\n            }\n            return\
    \ new Union_ArrayList_String__long(count);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe7v3d584.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpe7v3d584.java:19:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(words));\n\
    \                       ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpe7v3d584.java:22: error: cannot find symbol\n       \
    \     return new Union_ArrayList_String__long(Arrays.asList(words));\n       \
    \                ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpe7v3d584.java:30: error: cannot find symbol\n       \
    \     return new Union_ArrayList_String__long(count);\n                      \
    \ ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpe7v3d584.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpe7v3d584.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpe7v3d584.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpe7v3d584.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                         "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9nir1vb1.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp9nir1vb1.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp9nir1vb1.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp9nir1vb1.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp9nir1vb1.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp9nir1vb1.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp9nir1vb1.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp9nir1vb1.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps6ck2onq.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmps6ck2onq.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmps6ck2onq.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmps6ck2onq.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps6ck2onq.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps6ck2onq.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps6ck2onq.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps6ck2onq.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            return new Union_ArrayList_String__long(txt.chars().filter(c\
    \ -> (c - 'a') % 2 == 0).count());\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0vw8602u.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp0vw8602u.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp0vw8602u.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp0vw8602u.java:22: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(txt.chars().filter(c -> (c\
    \ - 'a') % 2 == 0).count());\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp0vw8602u.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0vw8602u.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0vw8602u.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0vw8602u.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        if (txt.contains(\" \")) {\n            return\
    \ new Union_ArrayList_String__long(Arrays.asList(txt.split(\" \")));\n       \
    \ } else if (txt.contains(\",\")) {\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n        } else {\n            long count = 0;\n            for (int i\
    \ = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) - 'a' % 2 ==\
    \ 1) {\n                    count++;\n                }\n            }\n     \
    \       return new Union_ArrayList_String__long(count);\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj6jn30dg.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpj6jn30dg.java:18:\
    \ error: cannot find symbol\n            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    \ \")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpj6jn30dg.java:20: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(Arrays.asList(txt.split(\"\
    ,\")));\n                       ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpj6jn30dg.java:28: error: cannot find symbol\n\
    \            return new Union_ArrayList_String__long(count);\n               \
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpj6jn30dg.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpj6jn30dg.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpj6jn30dg.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpj6jn30dg.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n       "
  exit_code: 1
  status: SyntaxError

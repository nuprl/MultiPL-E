name: HumanEval_141_file_name_check
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Create a function which takes a string representing a file's\
  \ name, and returns\n    // 'Yes' if the the file's name is valid, and returns 'No'\
  \ otherwise.\n    // A file's name is considered to be valid if and only if all\
  \ the following conditions \n    // are met:\n    // - There should not be more\
  \ than three digits ('0'-'9') in the file's name.\n    // - The file's name contains\
  \ exactly one dot '.'\n    // - The substring before the dot should not be empty,\
  \ and it starts with a letter from \n    // the latin alphapet ('a'-'z' and 'A'-'Z').\n\
  \    // - The substring after the dot should be one of these: ['txt', 'exe', 'dll']\n\
  \    // Examples:\n    // file_name_check(\"example.txt\") # => 'Yes'\n    // file_name_check(\"\
  1example.dll\") # => 'No' (the name should start with a latin alphapet letter)\n\
  \    public static String fileNameCheck(String file_name) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(fileNameCheck((\"\
  example.txt\")).equals((\"Yes\")));\n    assert(fileNameCheck((\"1example.dll\"\
  )).equals((\"No\")));\n    assert(fileNameCheck((\"s1sdf3.asd\")).equals((\"No\"\
  )));\n    assert(fileNameCheck((\"K.dll\")).equals((\"Yes\")));\n    assert(fileNameCheck((\"\
  MY16FILE3.exe\")).equals((\"Yes\")));\n    assert(fileNameCheck((\"His12FILE94.exe\"\
  )).equals((\"No\")));\n    assert(fileNameCheck((\"_Y.txt\")).equals((\"No\")));\n\
  \    assert(fileNameCheck((\"?aREYA.exe\")).equals((\"No\")));\n    assert(fileNameCheck((\"\
  /this_is_valid.dll\")).equals((\"No\")));\n    assert(fileNameCheck((\"this_is_valid.wow\"\
  )).equals((\"No\")));\n    assert(fileNameCheck((\"this_is_valid.txt\")).equals((\"\
  Yes\")));\n    assert(fileNameCheck((\"this_is_valid.txtexe\")).equals((\"No\")));\n\
  \    assert(fileNameCheck((\"#this2_i4s_5valid.ten\")).equals((\"No\")));\n    assert(fileNameCheck((\"\
  @this1_is6_valid.exe\")).equals((\"No\")));\n    assert(fileNameCheck((\"this_is_12valid.6exe4.txt\"\
  )).equals((\"No\")));\n    assert(fileNameCheck((\"all.exe.txt\")).equals((\"No\"\
  )));\n    assert(fileNameCheck((\"I563_No.exe\")).equals((\"Yes\")));\n    assert(fileNameCheck((\"\
  Is3youfault.txt\")).equals((\"Yes\")));\n    assert(fileNameCheck((\"no_one#knows.dll\"\
  )).equals((\"Yes\")));\n    assert(fileNameCheck((\"1I563_Yes3.exe\")).equals((\"\
  No\")));\n    assert(fileNameCheck((\"I563_Yes3.txtt\")).equals((\"No\")));\n  \
  \  assert(fileNameCheck((\"final..txt\")).equals((\"No\")));\n    assert(fileNameCheck((\"\
  final132\")).equals((\"No\")));\n    assert(fileNameCheck((\"_f4indsartal132.\"\
  )).equals((\"No\")));\n    assert(fileNameCheck((\".txt\")).equals((\"No\")));\n\
  \    assert(fileNameCheck((\"s.\")).equals((\"No\")));\n    }\n\n}\n"
completions: ["        // Write your code here\n        // To print results to the\
    \ standard output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        String[] parts = file_name.split(\"\\\\.\");\n     \
    \   if (parts.length != 2) {\n            return \"No\";\n        }\n        String\
    \ first = parts[0];\n        String second = parts[1];\n        if (first.length()\
    \ == 0) {\n            return \"No\";\n        }\n        if (!Character.isLetter(first.charAt(0)))\
    \ {\n            return \"No\";\n        }\n        if (second.length() == 0)\
    \ {\n            return \"No\";\n        }\n        if (!second.equals(\"txt\"\
    ) && !second.equals(\"exe\") && !second.equals(\"dll\")) {\n            return\
    \ \"No\";\n        }\n        int count = 0;\n        for (int i = 0; i < first.length();\
    \ i++) {\n            if (Character.isDigit(first.charAt(i))) {\n            \
    \    count++;\n            }\n        }\n        if (count > 3) {\n          \
    \  return \"No\";\n        }\n        return \"Yes\";\n", "        String[] parts\
    \ = file_name.split(\"\\\\.\");\n        if (parts.length != 2) {\n          \
    \  return \"No\";\n        }\n        String name = parts[0];\n        String\
    \ extension = parts[1];\n        if (name.length() == 0) {\n            return\
    \ \"No\";\n        }\n        if (!Character.isLetter(name.charAt(0))) {\n   \
    \         return \"No\";\n        }\n        if (name.chars().filter(c -> Character.isDigit(c)).count()\
    \ > 3) {\n            return \"No\";\n        }\n        if (!extension.equals(\"\
    txt\") && !extension.equals(\"exe\") && !extension.equals(\"dll\")) {\n      \
    \      return \"No\";\n        }\n        return \"Yes\";\n", "        // Your\
    \ code here\n        return \"\";\n", "        // Your code here\n        return\
    \ \"\";\n", "        // Write your code here\n        // To print results to the\
    \ standard output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        return \"\";\n", "        // Write your code here\n\
    \        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        return \"\"\
    ;\n", "        // Your code here\n        return \"\";\n", "        if (file_name.length()\
    \ < 5) {\n            return \"No\";\n        }\n        int count = 0;\n    \
    \    for (int i = 0; i < file_name.length(); i++) {\n            if (file_name.charAt(i)\
    \ >= '0' && file_name.charAt(i) <= '9') {\n                count++;\n        \
    \    }\n        }\n        if (count > 3) {\n            return \"No\";\n    \
    \    }\n        int dot_index = file_name.indexOf('.');\n        if (dot_index\
    \ == -1) {\n            return \"No\";\n        }\n        String before_dot =\
    \ file_name.substring(0, dot_index);\n        if (before_dot.length() == 0) {\n\
    \            return \"No\";\n        }\n        if (!((before_dot.charAt(0) >=\
    \ 'a' && before_dot.charAt(0) <= 'z') || (before_dot.charAt(0) >= 'A' && before_dot.charAt(0)\
    \ <= 'Z'))) {\n            return \"No\";\n        }\n        String after_dot\
    \ = file_name.substring(dot_index + 1);\n        if (!(after_dot.equals(\"txt\"\
    ) || after_dot.equals(\"exe\") || after_dot.equals(\"dll\"))) {\n            return\
    \ \"No\";\n        }\n        return \"Yes\";\n", "        String[] parts = file_name.split(\"\
    \\\\.\");\n        if (parts.length != 2) {\n            return \"No\";\n    \
    \    }\n        String name = parts[0];\n        String ext = parts[1];\n    \
    \    if (name.length() == 0) {\n            return \"No\";\n        }\n      \
    \  if (!Character.isLetter(name.charAt(0))) {\n            return \"No\";\n  \
    \      }\n        if (name.replaceAll(\"[^0-9]\", \"\").length() > 3) {\n    \
    \        return \"No\";\n        }\n        if (!ext.equals(\"txt\") && !ext.equals(\"\
    exe\") && !ext.equals(\"dll\")) {\n            return \"No\";\n        }\n   \
    \     return \"Yes\";\n", "        // Write your code here\n        // To print\
    \ results to the standard output you can use System.out.println()\n        //\
    \ Example: System.out.println(\"Hello world!\");\n        String[] parts = file_name.split(\"\
    \\\\.\");\n        if (parts.length != 2) {\n            return \"No\";\n    \
    \    }\n        String[] parts2 = parts[0].split(\"\\\\d\");\n        if (parts2.length\
    \ > 2) {\n            return \"No\";\n        }\n        if (parts2[0].length()\
    \ == 0) {\n            return \"No\";\n        }\n        if (!parts2[0].matches(\"\
    [a-zA-Z]+\")) {\n            return \"No\";\n        }\n        if (!parts[1].matches(\"\
    txt|exe|dll\")) {\n            return \"No\";\n        }\n        return \"Yes\"\
    ;\n", "        // Write your code here\n        // To print results to the standard\
    \ output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        return \"\";\n", "        String[] parts = file_name.split(\"\
    \\\\.\");\n        if (parts.length != 2) return \"No\";\n        if (parts[0].length()\
    \ == 0) return \"No\";\n        if (parts[0].matches(\".*\\\\d.*\")) return \"\
    No\";\n        if (parts[0].matches(\".*[^a-zA-Z].*\")) return \"No\";\n     \
    \   if (!parts[1].equals(\"txt\") && !parts[1].equals(\"exe\") && !parts[1].equals(\"\
    dll\")) return \"No\";\n        return \"Yes\";\n", "        // Your code here\n\
    \        return \"\";\n", "        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        String[] parts = file_name.split(\"\\\\.\"\
    );\n        if (parts.length != 2) return \"No\";\n        if (parts[0].length()\
    \ == 0) return \"No\";\n        if (parts[0].matches(\".*\\\\d.*\")) return \"\
    No\";\n        if (parts[0].matches(\".*[^a-zA-Z].*\")) return \"No\";\n     \
    \   if (!parts[1].equals(\"txt\") && !parts[1].equals(\"exe\") && !parts[1].equals(\"\
    dll\")) return \"No\";\n        return \"Yes\";\n", "        String[] parts =\
    \ file_name.split(\"\\\\.\");\n        if (parts.length != 2) {\n            return\
    \ \"No\";\n        }\n        String name = parts[0];\n        String ext = parts[1];\n\
    \        if (name.length() == 0) {\n            return \"No\";\n        }\n  \
    \      if (!Character.isLetter(name.charAt(0))) {\n            return \"No\";\n\
    \        }\n        if (name.replaceAll(\"[^0-9]\", \"\").length() > 3) {\n  \
    \          return \"No\";\n        }\n        if (!ext.equals(\"txt\") && !ext.equals(\"\
    exe\") && !ext.equals(\"dll\")) {\n            return \"No\";\n        }\n   \
    \     return \"Yes\";\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        // Write your code here\n        // To print\
    \ results to the standard output you can use System.out.println()\n        //\
    \ Example: System.out.println(\"Hello world!\");\n        String[] parts = file_name.split(\"\
    \\\\.\");\n        if (parts.length != 2) {\n            return \"No\";\n    \
    \    }\n        if (parts[0].length() == 0) {\n            return \"No\";\n  \
    \      }\n        if (!Character.isLetter(parts[0].charAt(0))) {\n           \
    \ return \"No\";\n        }\n        if (parts[1].equals(\"txt\") || parts[1].equals(\"\
    exe\") || parts[1].equals(\"dll\")) {\n            return \"Yes\";\n        }\n\
    \        return \"No\";\n", "        // Write your code here\n        // To print\
    \ results to the standard output you can use System.out.println()\n        //\
    \ Example: System.out.println(\"Hello world!\");\n        return \"\";\n", " \
    \       // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        String[] parts = file_name.split(\"\\\\.\");\n     \
    \   if (parts.length != 2) {\n            return \"No\";\n        }\n        if\
    \ (parts[0].length() == 0) {\n            return \"No\";\n        }\n        if\
    \ (!Character.isLetter(parts[0].charAt(0))) {\n            return \"No\";\n  \
    \      }\n        if (parts[0].chars().filter(Character::isDigit).count() > 3)\
    \ {\n            return \"No\";\n        }\n        if (!Arrays.asList(\"txt\"\
    , \"exe\", \"dll\").contains(parts[1])) {\n            return \"No\";\n      \
    \  }\n        return \"Yes\";\n", "        String[] parts = file_name.split(\"\
    \\\\.\");\n        if (parts.length != 2) {\n            return \"No\";\n    \
    \    }\n        String name = parts[0];\n        String ext = parts[1];\n    \
    \    if (name.length() == 0) {\n            return \"No\";\n        }\n      \
    \  if (!Character.isLetter(name.charAt(0))) {\n            return \"No\";\n  \
    \      }\n        if (name.chars().filter(c -> Character.isDigit(c)).count() >\
    \ 3) {\n            return \"No\";\n        }\n        if (!ext.equals(\"txt\"\
    ) && !ext.equals(\"exe\") && !ext.equals(\"dll\")) {\n            return \"No\"\
    ;\n        }\n        return \"Yes\";\n", "        // Your code here\n       \
    \ String[] parts = file_name.split(\"\\\\.\");\n        if (parts.length != 2)\
    \ {\n            return \"No\";\n        }\n        String name = parts[0];\n\
    \        String ext = parts[1];\n        if (name.length() == 0) {\n         \
    \   return \"No\";\n        }\n        if (!Character.isLetter(name.charAt(0)))\
    \ {\n            return \"No\";\n        }\n        if (ext.length() == 0) {\n\
    \            return \"No\";\n        }\n        if (!ext.equals(\"txt\") && !ext.equals(\"\
    exe\") && !ext.equals(\"dll\")) {\n            return \"No\";\n        }\n   \
    \     int count = 0;\n        for (int i = 0; i < name.length(); i++) {\n    \
    \        if (Character.isDigit(name.charAt(i))) {\n                count++;\n\
    \            }\n        }\n        if (count > 3) {\n            return \"No\"\
    ;\n        }\n        return \"Yes\";\n", "        // TODO: Write your code here\n\
    \        return \"\";\n", "        // Write your code here\n        // To print\
    \ results to the standard output you can use System.out.println()\n        //\
    \ Example: System.out.println(\"Hello world!\");\n        String[] parts = file_name.split(\"\
    \\\\.\");\n        if (parts.length != 2) {\n            return \"No\";\n    \
    \    }\n        String firstPart = parts[0];\n        String secondPart = parts[1];\n\
    \        if (firstPart.length() == 0) {\n            return \"No\";\n        }\n\
    \        if (!Character.isLetter(firstPart.charAt(0))) {\n            return \"\
    No\";\n        }\n        if (secondPart.length() == 0) {\n            return\
    \ \"No\";\n        }\n        if (!(secondPart.equals(\"txt\") || secondPart.equals(\"\
    exe\") || secondPart.equals(\"dll\"))) {\n            return \"No\";\n       \
    \ }\n        int count = 0;\n        for (int i = 0; i < firstPart.length(); i++)\
    \ {\n            if (Character.isDigit(firstPart.charAt(i))) {\n             \
    \   count++;\n            }\n        }\n        if (count > 3) {\n           \
    \ return \"No\";\n        }\n        return \"Yes\";\n", "        // Your code\
    \ here\n        return \"\";\n", "        // Write your code here\n        return\
    \ null;\n", "        return \"\";\n", "        // Your code here\n        return\
    \ null;\n", "        // Your code here\n        return \"\";\n", "        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        return \"\";\n", "        // Write your code here\n        return\
    \ \"\";\n", "        // Your code here\n        return \"\";\n", "        String[]\
    \ parts = file_name.split(\"\\\\.\");\n        if (parts.length != 2) {\n    \
    \        return \"No\";\n        }\n        String first = parts[0];\n       \
    \ String second = parts[1];\n        if (first.length() == 0) {\n            return\
    \ \"No\";\n        }\n        if (first.matches(\"[a-zA-Z]+[0-9]*\")) {\n    \
    \        if (second.equals(\"txt\") || second.equals(\"exe\") || second.equals(\"\
    dll\")) {\n                return \"Yes\";\n            }\n        }\n       \
    \ return \"No\";\n", "        // Your code goes here\n        return \"\";\n",
  "        // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        return \"\";\n", "        // Your code here\n      \
    \  return \"\";\n", "        // Write your code here\n        // To print results\
    \ to the standard output you can use System.out.println()\n        // Example:\
    \ System.out.println(\"Hello world!\");\n        String[] parts = file_name.split(\"\
    \\\\.\");\n        if (parts.length != 2) {\n            return \"No\";\n    \
    \    }\n        if (parts[0].length() == 0) {\n            return \"No\";\n  \
    \      }\n        if (!Character.isLetter(parts[0].charAt(0))) {\n           \
    \ return \"No\";\n        }\n        if (parts[0].replaceAll(\"[^0-9]\", \"\"\
    ).length() > 3) {\n            return \"No\";\n        }\n        if (!Arrays.asList(\"\
    txt\", \"exe\", \"dll\").contains(parts[1])) {\n            return \"No\";\n \
    \       }\n        return \"Yes\";\n", "        // Your code here\n        return\
    \ \"\";\n", "        // Write your code here\n        return \"\";\n", "     \
    \   String[] parts = file_name.split(\"\\\\.\");\n        if (parts.length !=\
    \ 2) return \"No\";\n        if (parts[0].length() == 0) return \"No\";\n    \
    \    if (parts[0].matches(\".*\\\\d.*\")) return \"No\";\n        if (parts[0].matches(\"\
    .*[^a-zA-Z].*\")) return \"No\";\n        if (!parts[1].equals(\"txt\") && !parts[1].equals(\"\
    exe\") && !parts[1].equals(\"dll\")) return \"No\";\n        return \"Yes\";\n",
  "        // Your code here\n        return \"\";\n", "        // Write your code\
    \ here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        return \"\"\
    ;\n", "        String[] parts = file_name.split(\"\\\\.\");\n        if (parts.length\
    \ != 2) {\n            return \"No\";\n        }\n        String name = parts[0];\n\
    \        String extension = parts[1];\n        if (name.length() == 0) {\n   \
    \         return \"No\";\n        }\n        if (name.matches(\"[0-9]+\")) {\n\
    \            return \"No\";\n        }\n        if (name.matches(\"[0-9]{4,}\"\
    )) {\n            return \"No\";\n        }\n        if (!name.matches(\"[a-zA-Z]+\"\
    )) {\n            return \"No\";\n        }\n        if (!extension.matches(\"\
    txt|exe|dll\")) {\n            return \"No\";\n        }\n        return \"Yes\"\
    ;\n", "        // Your code here\n        return \"\";\n", "        // Write your\
    \ code here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        return \"\"\
    ;\n", "        // Write your code here\n        // To print results to the standard\
    \ output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        String[] parts = file_name.split(\"\\\\.\");\n     \
    \   if (parts.length != 2) {\n            return \"No\";\n        }\n        if\
    \ (parts[0].length() == 0) {\n            return \"No\";\n        }\n        if\
    \ (!Character.isLetter(parts[0].charAt(0))) {\n            return \"No\";\n  \
    \      }\n        if (parts[0].replaceAll(\"[^0-9]\", \"\").length() > 3) {\n\
    \            return \"No\";\n        }\n        if (!parts[1].equals(\"txt\")\
    \ && !parts[1].equals(\"exe\") && !parts[1].equals(\"dll\")) {\n            return\
    \ \"No\";\n        }\n        return \"Yes\";\n", "        // Write your code\
    \ here\n        return \"\";\n", "        return \"\";\n", "        // Your code\
    \ here\n        return null;\n", "        // Write your code here\n        //\
    \ To print results to the standard output you can use System.out.println()\n \
    \       // Example: System.out.println(\"Hello world!\");\n        String[] parts\
    \ = file_name.split(\"\\\\.\");\n        if (parts.length != 2) {\n          \
    \  return \"No\";\n        }\n        String name = parts[0];\n        String\
    \ ext = parts[1];\n        if (name.length() == 0) {\n            return \"No\"\
    ;\n        }\n        if (!Character.isLetter(name.charAt(0))) {\n           \
    \ return \"No\";\n        }\n        int count = 0;\n        for (int i = 0; i\
    \ < name.length(); i++) {\n            if (Character.isDigit(name.charAt(i)))\
    \ {\n                count++;\n            }\n        }\n        if (count > 3)\
    \ {\n            return \"No\";\n        }\n        if (!ext.equals(\"txt\") &&\
    \ !ext.equals(\"exe\") && !ext.equals(\"dll\")) {\n            return \"No\";\n\
    \        }\n        return \"Yes\";\n", "        // Write your code here\n   \
    \     // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        String[] parts\
    \ = file_name.split(\"\\\\.\");\n        if (parts.length != 2) {\n          \
    \  return \"No\";\n        }\n        String name = parts[0];\n        String\
    \ ext = parts[1];\n        if (name.length() == 0) {\n            return \"No\"\
    ;\n        }\n        if (!Character.isLetter(name.charAt(0))) {\n           \
    \ return \"No\";\n        }\n        if (name.chars().filter(c -> Character.isDigit(c)).count()\
    \ > 3) {\n            return \"No\";\n        }\n        if (!Arrays.asList(\"\
    txt\", \"exe\", \"dll\").contains(ext)) {\n            return \"No\";\n      \
    \  }\n        return \"Yes\";\n", "        String[] parts = file_name.split(\"\
    \\\\.\");\n        if (parts.length != 2) return \"No\";\n        if (parts[0].length()\
    \ == 0) return \"No\";\n        if (parts[0].matches(\".*\\\\d{4,}.*\")) return\
    \ \"No\";\n        if (!parts[0].matches(\"[a-zA-Z].*\")) return \"No\";\n   \
    \     if (!parts[1].matches(\"txt|exe|dll\")) return \"No\";\n        return \"\
    Yes\";\n", "        // Your code here\n        return \"\";\n", "        String[]\
    \ parts = file_name.split(\"\\\\.\");\n        if (parts.length != 2) {\n    \
    \        return \"No\";\n        }\n        String extension = parts[1];\n   \
    \     if (!extension.equals(\"txt\") && !extension.equals(\"exe\") && !extension.equals(\"\
    dll\")) {\n            return \"No\";\n        }\n        String name = parts[0];\n\
    \        if (name.length() == 0) {\n            return \"No\";\n        }\n  \
    \      int count = 0;\n        for (int i = 0; i < name.length(); i++) {\n   \
    \         char c = name.charAt(i);\n            if (c >= '0' && c <= '9') {\n\
    \                count++;\n            }\n        }\n        if (count > 3) {\n\
    \            return \"No\";\n        }\n        char first = name.charAt(0);\n\
    \        if (first < 'a' || first > 'z') {\n            if (first < 'A' || first\
    \ > 'Z') {\n                return \"No\";\n            }\n        }\n       \
    \ return \"Yes\";\n", "        String[] parts = file_name.split(\"\\\\.\");\n\
    \        if (parts.length != 2) {\n            return \"No\";\n        }\n   \
    \     String name = parts[0];\n        String ext = parts[1];\n        if (name.length()\
    \ == 0) {\n            return \"No\";\n        }\n        if (!Character.isLetter(name.charAt(0)))\
    \ {\n            return \"No\";\n        }\n        if (name.chars().filter(Character::isDigit).count()\
    \ > 3) {\n            return \"No\";\n        }\n        if (!ext.equals(\"txt\"\
    ) && !ext.equals(\"exe\") && !ext.equals(\"dll\")) {\n            return \"No\"\
    ;\n        }\n        return \"Yes\";\n", "        // Write your code here\n \
    \       return \"\";\n", "        String[] parts = file_name.split(\"\\\\.\");\n\
    \        if (parts.length != 2) {\n            return \"No\";\n        }\n   \
    \     String first = parts[0];\n        String second = parts[1];\n        if\
    \ (first.length() == 0) {\n            return \"No\";\n        }\n        if (first.matches(\"\
    [0-9]+\")) {\n            return \"No\";\n        }\n        if (first.matches(\"\
    [0-9]{4,}\")) {\n            return \"No\";\n        }\n        if (!second.equals(\"\
    txt\") && !second.equals(\"exe\") && !second.equals(\"dll\")) {\n            return\
    \ \"No\";\n        }\n        return \"Yes\";\n", "        // Your code here\n\
    \        return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        return \"\";\n", "        String[] parts = file_name.split(\"\
    \\\\.\");\n        if (parts.length != 2) {\n            return \"No\";\n    \
    \    }\n        String part1 = parts[0];\n        String part2 = parts[1];\n \
    \       if (part1.length() == 0) {\n            return \"No\";\n        }\n  \
    \      if (!Character.isLetter(part1.charAt(0))) {\n            return \"No\"\
    ;\n        }\n        if (part1.chars().filter(Character::isDigit).count() > 3)\
    \ {\n            return \"No\";\n        }\n        if (!part2.equals(\"txt\"\
    ) && !part2.equals(\"exe\") && !part2.equals(\"dll\")) {\n            return \"\
    No\";\n        }\n        return \"Yes\";\n", "        // Your code here\n   \
    \     return \"\";\n", "        // Your code here\n        return \"\";\n", " \
    \       // Write your code here\n        return \"\";\n", "        // Write your\
    \ code here\n        return \"\";\n", "        // Your code here\n        return\
    \ \"\";\n", "        String[] parts = file_name.split(\"\\\\.\");\n        if\
    \ (parts.length != 2) return \"No\";\n        String first = parts[0];\n     \
    \   String second = parts[1];\n        if (first.length() == 0) return \"No\"\
    ;\n        if (first.matches(\".*\\\\d.*\")) return \"No\";\n        if (first.matches(\"\
    .*\\\\d{4}.*\")) return \"No\";\n        if (!second.equals(\"txt\") && !second.equals(\"\
    exe\") && !second.equals(\"dll\")) return \"No\";\n        return \"Yes\";\n",
  "        // Your code here\n        return \"\";\n", "        // Write your code\
    \ here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        String[] parts\
    \ = file_name.split(\"\\\\.\");\n        if (parts.length != 2) {\n          \
    \  return \"No\";\n        }\n        String name = parts[0];\n        String\
    \ ext = parts[1];\n        if (name.length() == 0) {\n            return \"No\"\
    ;\n        }\n        if (name.matches(\"[0-9]+\")) {\n            return \"No\"\
    ;\n        }\n        if (name.matches(\"[0-9]+.*\")) {\n            return \"\
    No\";\n        }\n        if (name.matches(\".*[0-9]+.*[0-9]+.*[0-9]+.*\")) {\n\
    \            return \"No\";\n        }\n        if (!ext.equals(\"txt\") && !ext.equals(\"\
    exe\") && !ext.equals(\"dll\")) {\n            return \"No\";\n        }\n   \
    \     return \"Yes\";\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        return \"\";\n", "        // Write your code\
    \ here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        String[] parts\
    \ = file_name.split(\"\\\\.\");\n        if (parts.length != 2) {\n          \
    \  return \"No\";\n        }\n        if (parts[0].length() == 0) {\n        \
    \    return \"No\";\n        }\n        if (!Character.isLetter(parts[0].charAt(0)))\
    \ {\n            return \"No\";\n        }\n        if (parts[0].replaceAll(\"\
    [^0-9]\", \"\").length() > 3) {\n            return \"No\";\n        }\n     \
    \   if (!Arrays.asList(\"txt\", \"exe\", \"dll\").contains(parts[1])) {\n    \
    \        return \"No\";\n        }\n        return \"Yes\";\n", "        // Your\
    \ code here\n        return \"\";\n", "        // Your code here\n        return\
    \ \"\";\n", "        // Write your code here\n        // To print results to the\
    \ standard output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        String[] parts = file_name.split(\"\\\\.\");\n     \
    \   if (parts.length != 2) {\n            return \"No\";\n        }\n        if\
    \ (parts[0].length() == 0) {\n            return \"No\";\n        }\n        if\
    \ (!Character.isLetter(parts[0].charAt(0))) {\n            return \"No\";\n  \
    \      }\n        if (parts[0].replaceAll(\"[^0-9]\", \"\").length() > 3) {\n\
    \            return \"No\";\n        }\n        if (!Arrays.asList(\"txt\", \"\
    exe\", \"dll\").contains(parts[1])) {\n            return \"No\";\n        }\n\
    \        return \"Yes\";\n", "        // Write your code here\n        // To print\
    \ results to the standard output you can use System.out.println()\n        //\
    \ Example: System.out.println(\"Hello world!\");\n        return \"\";\n", " \
    \       // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        return \"\";\n", "        // Your code here\n      \
    \  String[] parts = file_name.split(\"\\\\.\");\n        if (parts.length != 2)\
    \ {\n            return \"No\";\n        }\n        if (!parts[0].matches(\"[a-zA-Z]+[a-zA-Z0-9]*\"\
    )) {\n            return \"No\";\n        }\n        if (!parts[1].matches(\"\
    txt|exe|dll\")) {\n            return \"No\";\n        }\n        if (parts[0].matches(\"\
    .*\\\\d{4,}.*\")) {\n            return \"No\";\n        }\n        return \"\
    Yes\";\n", "        // Your code here\n        return \"\";\n", "        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        String[] parts = file_name.split(\"\\\\.\");\n        if (parts.length\
    \ != 2) {\n            return \"No\";\n        }\n        if (parts[0].length()\
    \ == 0) {\n            return \"No\";\n        }\n        if (!Character.isLetter(parts[0].charAt(0)))\
    \ {\n            return \"No\";\n        }\n        if (parts[1].length() == 0)\
    \ {\n            return \"No\";\n        }\n        if (!(parts[1].equals(\"txt\"\
    ) || parts[1].equals(\"exe\") || parts[1].equals(\"dll\"))) {\n            return\
    \ \"No\";\n        }\n        int count = 0;\n        for (int i = 0; i < parts[0].length();\
    \ i++) {\n            if (Character.isDigit(parts[0].charAt(i))) {\n         \
    \       count++;\n            }\n        }\n        if (count > 3) {\n       \
    \     return \"No\";\n        }\n        return \"Yes\";\n", "        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        String[] parts = file_name.split(\"\\\\.\");\n        if (parts.length\
    \ != 2) {\n            return \"No\";\n        }\n        String name = parts[0];\n\
    \        String ext = parts[1];\n        if (name.length() == 0) {\n         \
    \   return \"No\";\n        }\n        if (!Character.isLetter(name.charAt(0)))\
    \ {\n            return \"No\";\n        }\n        if (name.chars().filter(Character::isDigit).count()\
    \ > 3) {\n            return \"No\";\n        }\n        if (!ext.equals(\"txt\"\
    ) && !ext.equals(\"exe\") && !ext.equals(\"dll\")) {\n            return \"No\"\
    ;\n        }\n        return \"Yes\";\n", "        // Your code here\n       \
    \ return \"\";\n", "        String[] parts = file_name.split(\"\\\\.\");\n   \
    \     if (parts.length != 2) {\n            return \"No\";\n        }\n      \
    \  String name = parts[0];\n        String extension = parts[1];\n        if (name.length()\
    \ == 0) {\n            return \"No\";\n        }\n        if (!Character.isLetter(name.charAt(0)))\
    \ {\n            return \"No\";\n        }\n        if (name.chars().filter(Character::isDigit).count()\
    \ > 3) {\n            return \"No\";\n        }\n        if (!Arrays.asList(\"\
    txt\", \"exe\", \"dll\").contains(extension)) {\n            return \"No\";\n\
    \        }\n        return \"Yes\";\n", "        // Write your code here\n   \
    \     // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        String[] parts\
    \ = file_name.split(\"\\\\.\");\n        if (parts.length != 2) {\n          \
    \  return \"No\";\n        }\n        String first = parts[0];\n        String\
    \ second = parts[1];\n        if (first.length() == 0) {\n            return \"\
    No\";\n        }\n        if (!Character.isLetter(first.charAt(0))) {\n      \
    \      return \"No\";\n        }\n        if (second.length() == 0) {\n      \
    \      return \"No\";\n        }\n        if (!second.equals(\"txt\") && !second.equals(\"\
    exe\") && !second.equals(\"dll\")) {\n            return \"No\";\n        }\n\
    \        int count = 0;\n        for (int i = 0; i < first.length(); i++) {\n\
    \            if (Character.isDigit(first.charAt(i))) {\n                count++;\n\
    \            }\n        }\n        if (count > 3) {\n            return \"No\"\
    ;\n        }\n        return \"Yes\";\n", "        // Your code here\n       \
    \ return \"\";\n", "        // Your code here\n        return \"\";\n", "    \
    \    // Your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        // Write your code here\n        // To print\
    \ results to the standard output you can use System.out.println()\n        //\
    \ Example: System.out.println(\"Hello world!\");\n        String[] parts = file_name.split(\"\
    \\\\.\");\n        if (parts.length != 2) return \"No\";\n        if (parts[0].length()\
    \ == 0) return \"No\";\n        if (!Character.isLetter(parts[0].charAt(0))) return\
    \ \"No\";\n        if (parts[0].replaceAll(\"[^0-9]\", \"\").length() > 3) return\
    \ \"No\";\n        if (!Arrays.asList(\"txt\", \"exe\", \"dll\").contains(parts[1]))\
    \ return \"No\";\n        return \"Yes\";\n", "        // Your code here\n   \
    \     return \"\";\n", "        // Your code here\n        return \"\";\n", " \
    \       // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        return \"\";\n", "        // Write your code here\n\
    \        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        String[] parts\
    \ = file_name.split(\"\\\\.\");\n        if (parts.length != 2) {\n          \
    \  return \"No\";\n        }\n        String name = parts[0];\n        String\
    \ ext = parts[1];\n        if (name.length() == 0) {\n            return \"No\"\
    ;\n        }\n        if (!Character.isLetter(name.charAt(0))) {\n           \
    \ return \"No\";\n        }\n        if (name.chars().filter(Character::isDigit).count()\
    \ > 3) {\n            return \"No\";\n        }\n        if (!ext.equals(\"txt\"\
    ) && !ext.equals(\"exe\") && !ext.equals(\"dll\")) {\n            return \"No\"\
    ;\n        }\n        return \"Yes\";\n", "        // Your code here\n       \
    \ return \"\";\n", "        // Your code here\n        return \"\";\n", "    \
    \    // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        String[] parts = file_name.split(\"\\\\.\");\n     \
    \   if (parts.length != 2) {\n            return \"No\";\n        }\n        if\
    \ (parts[0].length() == 0) {\n            return \"No\";\n        }\n        if\
    \ (!Character.isLetter(parts[0].charAt(0))) {\n            return \"No\";\n  \
    \      }\n        if (parts[1].length() == 0) {\n            return \"No\";\n\
    \        }\n        if (!parts[1].equals(\"txt\") && !parts[1].equals(\"exe\"\
    ) && !parts[1].equals(\"dll\")) {\n            return \"No\";\n        }\n   \
    \     int count = 0;\n        for (int i = 0; i < parts[0].length(); i++) {\n\
    \            if (Character.isDigit(parts[0].charAt(i))) {\n                count++;\n\
    \            }\n        }\n        if (count > 3) {\n            return \"No\"\
    ;\n        }\n        return \"Yes\";\n", "        // Write your code here\n \
    \       // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        String[] parts\
    \ = file_name.split(\"\\\\.\");\n        if (parts.length != 2) {\n          \
    \  return \"No\";\n        }\n        if (parts[0].length() == 0) {\n        \
    \    return \"No\";\n        }\n        if (!Character.isLetter(parts[0].charAt(0)))\
    \ {\n            return \"No\";\n        }\n        if (parts[1].length() == 0)\
    \ {\n            return \"No\";\n        }\n        if (!parts[1].equals(\"txt\"\
    ) && !parts[1].equals(\"exe\") && !parts[1].equals(\"dll\")) {\n            return\
    \ \"No\";\n        }\n        int count = 0;\n        for (int i = 0; i < parts[0].length();\
    \ i++) {\n            if (Character.isDigit(parts[0].charAt(i))) {\n         \
    \       count++;\n            }\n        }\n        if (count > 3) {\n       \
    \     return \"No\";\n        }\n        return \"Yes\";\n", "        // Your\
    \ code here\n        return \"\";\n", "        // Write your code here\n     \
    \   // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        return \"\"\
    ;\n", "        // Your code here\n        return \"\";\n", "        // Write your\
    \ code here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        return \"\"\
    ;\n", "        // Write your code here\n        // To print results to the standard\
    \ output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        String[] parts = file_name.split(\"\\\\.\");\n     \
    \   if (parts.length != 2) {\n            return \"No\";\n        }\n        String\
    \ name = parts[0];\n        String ext = parts[1];\n        if (name.length()\
    \ == 0) {\n            return \"No\";\n        }\n        if (name.matches(\"\
    [0-9]+\")) {\n            return \"No\";\n        }\n        if (name.matches(\"\
    [a-zA-Z]+[0-9]{3,}\")) {\n            return \"No\";\n        }\n        if (!ext.equals(\"\
    txt\") && !ext.equals(\"exe\") && !ext.equals(\"dll\")) {\n            return\
    \ \"No\";\n        }\n        return \"Yes\";\n", "        String[] parts = file_name.split(\"\
    \\\\.\");\n        if (parts.length != 2) return \"No\";\n        if (parts[0].length()\
    \ == 0) return \"No\";\n        if (parts[0].matches(\".*\\\\d.*\")) return \"\
    No\";\n        if (parts[0].matches(\".*[^a-zA-Z].*\")) return \"No\";\n     \
    \   if (!parts[1].equals(\"txt\") && !parts[1].equals(\"exe\") && !parts[1].equals(\"\
    dll\")) return \"No\";\n        return \"Yes\";\n", "        return null;\n",
  "        // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        return \"\";\n", "        // your code here\n      \
    \  return \"\";\n", "        // Your code here\n        return \"\";\n", "   \
    \     // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        String[] parts = file_name.split(\"\\\\.\");\n     \
    \   if (parts.length != 2) {\n            return \"No\";\n        }\n        String\
    \ name = parts[0];\n        String ext = parts[1];\n        if (name.length()\
    \ == 0) {\n            return \"No\";\n        }\n        if (!Character.isLetter(name.charAt(0)))\
    \ {\n            return \"No\";\n        }\n        if (name.chars().filter(Character::isDigit).count()\
    \ > 3) {\n            return \"No\";\n        }\n        if (!ext.equals(\"txt\"\
    ) && !ext.equals(\"exe\") && !ext.equals(\"dll\")) {\n            return \"No\"\
    ;\n        }\n        return \"Yes\";\n", "        String[] parts = file_name.split(\"\
    \\\\.\");\n        if (parts.length != 2) {\n            return \"No\";\n    \
    \    }\n        String name = parts[0];\n        String ext = parts[1];\n    \
    \    if (name.length() == 0) {\n            return \"No\";\n        }\n      \
    \  if (!Character.isLetter(name.charAt(0))) {\n            return \"No\";\n  \
    \      }\n        if (name.replaceAll(\"[^0-9]\", \"\").length() > 3) {\n    \
    \        return \"No\";\n        }\n        if (!ext.equals(\"txt\") && !ext.equals(\"\
    exe\") && !ext.equals(\"dll\")) {\n            return \"No\";\n        }\n   \
    \     return \"Yes\";\n", "        // Write your code here\n        return \"\"\
    ;\n", "        // Write your code here\n        // To print results to the standard\
    \ output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        String[] parts = file_name.split(\"\\\\.\");\n     \
    \   if (parts.length != 2) {\n            return \"No\";\n        }\n        if\
    \ (parts[0].length() == 0) {\n            return \"No\";\n        }\n        if\
    \ (!Character.isLetter(parts[0].charAt(0))) {\n            return \"No\";\n  \
    \      }\n        if (parts[1].length() == 0) {\n            return \"No\";\n\
    \        }\n        if (!(parts[1].equals(\"txt\") || parts[1].equals(\"exe\"\
    ) || parts[1].equals(\"dll\"))) {\n            return \"No\";\n        }\n   \
    \     int count = 0;\n        for (int i = 0; i < parts[0].length(); i++) {\n\
    \            if (Character.isDigit(parts[0].charAt(i))) {\n                count++;\n\
    \            }\n        }\n        if (count > 3) {\n            return \"No\"\
    ;\n        }\n        return \"Yes\";\n", "        // Write your code here\n \
    \       // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        return \"\"\
    ;\n", "        // Your code here\n        return \"\";\n", "        // Your code\
    \ here\n        return \"\";\n", "        // Write your code here\n        //\
    \ To print results to the standard output you can use System.out.println()\n \
    \       // Example: System.out.println(\"Hello world!\");\n        return \"\"\
    ;\n", "        // Write your code here\n        return \"\";\n", "        // Your\
    \ code here\n        return \"\";\n", "        // Write your code here\n     \
    \   // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        String[] parts\
    \ = file_name.split(\"\\\\.\");\n        if (parts.length != 2) {\n          \
    \  return \"No\";\n        }\n        String first = parts[0];\n        String\
    \ second = parts[1];\n        if (first.length() == 0) {\n            return \"\
    No\";\n        }\n        if (!Character.isLetter(first.charAt(0))) {\n      \
    \      return \"No\";\n        }\n        if (second.length() == 0) {\n      \
    \      return \"No\";\n        }\n        if (!second.equals(\"txt\") && !second.equals(\"\
    exe\") && !second.equals(\"dll\")) {\n            return \"No\";\n        }\n\
    \        int count = 0;\n        for (int i = 0; i < first.length(); i++) {\n\
    \            if (Character.isDigit(first.charAt(i))) {\n                count++;\n\
    \            }\n        }\n        if (count > 3) {\n            return \"No\"\
    ;\n        }\n        return \"Yes\";\n", "        // your code here\n       \
    \ return \"\";\n", "        // Write your code here\n        // To print results\
    \ to the standard output you can use System.out.println()\n        // Example:\
    \ System.out.println(\"Hello world!\");\n        return \"\";\n", "        //\
    \ Your code here\n        return \"\";\n", "        // Your code here\n      \
    \  return \"\";\n", "        String[] parts = file_name.split(\"\\\\.\");\n  \
    \      if (parts.length != 2) return \"No\";\n        if (parts[0].length() ==\
    \ 0) return \"No\";\n        if (parts[0].matches(\".*\\\\d.*\")) return \"No\"\
    ;\n        if (parts[0].matches(\".*[^a-zA-Z].*\")) return \"No\";\n        if\
    \ (!parts[1].equals(\"txt\") && !parts[1].equals(\"exe\") && !parts[1].equals(\"\
    dll\")) return \"No\";\n        return \"Yes\";\n", "        String[] parts =\
    \ file_name.split(\"\\\\.\");\n        if (parts.length != 2) return \"No\";\n\
    \        if (parts[0].length() == 0) return \"No\";\n        if (parts[0].matches(\"\
    .*\\\\d.*\")) return \"No\";\n        if (parts[0].matches(\".*[^a-zA-Z].*\"))\
    \ return \"No\";\n        if (!parts[1].equals(\"txt\") && !parts[1].equals(\"\
    exe\") && !parts[1].equals(\"dll\")) return \"No\";\n        return \"Yes\";\n",
  "        // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        return \"\";\n", "        // Your code here\n      \
    \  return null;\n", "        // Write your code here\n        return \"\";\n",
  "        // TODO: Write your code here\n        return \"\";\n", "        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        return \"\";\n", "        // your code here\n\
    \        return \"\";\n", "        // Your code here\n        return null;\n",
  "        // Your code here\n        return \"\";\n", "        // your code here\n\
    \        return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        String[] parts = file_name.split(\"\\\\.\"\
    );\n        if (parts.length != 2) {\n            return \"No\";\n        }\n\
    \        String name = parts[0];\n        String ext = parts[1];\n        if (name.length()\
    \ == 0) {\n            return \"No\";\n        }\n        if (!Character.isLetter(name.charAt(0)))\
    \ {\n            return \"No\";\n        }\n        if (name.replaceAll(\"[^0-9]\"\
    , \"\").length() > 3) {\n            return \"No\";\n        }\n        if (!ext.equals(\"\
    txt\") && !ext.equals(\"exe\") && !ext.equals(\"dll\")) {\n            return\
    \ \"No\";\n        }\n        return \"Yes\";\n", "        // Your code here\n\
    \        return \"\";\n", "        // Write your code here\n        // To print\
    \ results to the standard output you can use System.out.println()\n        //\
    \ Example: System.out.println(\"Hello world!\");\n        return \"\";\n", " \
    \       // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        return \"\";\n", "        String[] parts = file_name.split(\"\
    \\\\.\");\n        if (parts.length != 2) {\n            return \"No\";\n    \
    \    }\n        if (parts[0].length() == 0) {\n            return \"No\";\n  \
    \      }\n        if (!Character.isLetter(parts[0].charAt(0))) {\n           \
    \ return \"No\";\n        }\n        if (parts[0].replaceAll(\"[^0-9]\", \"\"\
    ).length() > 3) {\n            return \"No\";\n        }\n        if (!parts[1].equals(\"\
    txt\") && !parts[1].equals(\"exe\") && !parts[1].equals(\"dll\")) {\n        \
    \    return \"No\";\n        }\n        return \"Yes\";\n", "        // Your code\
    \ here\n        return null;\n", "        // Your code here\n        return \"\
    \";\n", "        // Write your code here\n        // To print results to the standard\
    \ output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        return \"\";\n", "        // Your code here\n      \
    \  return \"\";\n", "        // Write your code here\n        // To print results\
    \ to the standard output you can use System.out.println()\n        // Example:\
    \ System.out.println(\"Hello world!\");\n        int count = 0;\n        int dot\
    \ = 0;\n        int dotIndex = 0;\n        for(int i = 0; i < file_name.length();\
    \ i++){\n            if(file_name.charAt(i) >= '0' && file_name.charAt(i) <= '9'){\n\
    \                count++;\n            }\n            if(file_name.charAt(i) ==\
    \ '.'){\n                dot++;\n                dotIndex = i;\n            }\n\
    \        }\n        if(count > 3 || dot != 1){\n            return \"No\";\n \
    \       }\n        String beforeDot = file_name.substring(0, dotIndex);\n    \
    \    String afterDot = file_name.substring(dotIndex + 1);\n        if(beforeDot.length()\
    \ == 0 || (beforeDot.charAt(0) < 'a' || beforeDot.charAt(0) > 'z') && (beforeDot.charAt(0)\
    \ < 'A' || beforeDot.charAt(0) > 'Z')){\n            return \"No\";\n        }\n\
    \        if(!afterDot.equals(\"txt\") && !afterDot.equals(\"exe\") && !afterDot.equals(\"\
    dll\")){\n            return \"No\";\n        }\n        return \"Yes\";\n", " \
    \       // Your code here\n        return \"\";\n", "        // Write your code\
    \ here\n        return \"\";\n", "        // Write your code here\n        //\
    \ To print results to the standard output you can use System.out.println()\n \
    \       // Example: System.out.println(\"Hello world!\");\n        String[] parts\
    \ = file_name.split(\"\\\\.\");\n        if (parts.length != 2) {\n          \
    \  return \"No\";\n        }\n        if (!parts[0].matches(\"[a-zA-Z]+[a-zA-Z0-9]*\"\
    )) {\n            return \"No\";\n        }\n        if (!parts[1].matches(\"\
    txt|exe|dll\")) {\n            return \"No\";\n        }\n        return \"Yes\"\
    ;\n", "        // Your code here\n", "        // Write your code here\n      \
    \  return \"\";\n", "        // Write your code here\n        // To print results\
    \ to the standard output you can use System.out.println()\n        // Example:\
    \ System.out.println(\"Hello world!\");\n        int count = 0;\n        int dot_count\
    \ = 0;\n        int i = 0;\n        while (i < file_name.length()) {\n       \
    \     if (file_name.charAt(i) == '.') {\n                dot_count++;\n      \
    \      }\n            if (file_name.charAt(i) >= '0' && file_name.charAt(i) <=\
    \ '9') {\n                count++;\n            }\n            i++;\n        }\n\
    \        if (count > 3 || dot_count != 1) {\n            return \"No\";\n    \
    \    }\n        String[] parts = file_name.split(\"\\\\.\");\n        if (parts[0].length()\
    \ == 0 || !((parts[0].charAt(0) >= 'a' && parts[0].charAt(0) <= 'z') || (parts[0].charAt(0)\
    \ >= 'A' && parts[0].charAt(0) <= 'Z'))) {\n            return \"No\";\n     \
    \   }\n        if (!(parts[1].equals(\"txt\") || parts[1].equals(\"exe\") || parts[1].equals(\"\
    dll\"))) {\n            return \"No\";\n        }\n        return \"Yes\";\n",
  "        // Your code here\n        return \"\";\n", "        // your code here\n\
    \        return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        String[] parts = file_name.split(\"\\\\.\");\n        if (parts.length\
    \ != 2) {\n            return \"No\";\n        }\n        String name = parts[0];\n\
    \        String ext = parts[1];\n        if (name.length() == 0) {\n         \
    \   return \"No\";\n        }\n        if (!Character.isLetter(name.charAt(0)))\
    \ {\n            return \"No\";\n        }\n        if (name.length() - name.replaceAll(\"\
    [0-9]\", \"\").length() > 3) {\n            return \"No\";\n        }\n      \
    \  if (!ext.equals(\"txt\") && !ext.equals(\"exe\") && !ext.equals(\"dll\")) {\n\
    \            return \"No\";\n        }\n        return \"Yes\";\n", "        String[]\
    \ parts = file_name.split(\"\\\\.\");\n        if (parts.length != 2) {\n    \
    \        return \"No\";\n        }\n        String name = parts[0];\n        String\
    \ ext = parts[1];\n        if (name.length() == 0) {\n            return \"No\"\
    ;\n        }\n        if (!Character.isLetter(name.charAt(0))) {\n           \
    \ return \"No\";\n        }\n        if (name.chars().filter(c -> Character.isDigit(c)).count()\
    \ > 3) {\n            return \"No\";\n        }\n        if (!ext.equals(\"txt\"\
    ) && !ext.equals(\"exe\") && !ext.equals(\"dll\")) {\n            return \"No\"\
    ;\n        }\n        return \"Yes\";\n", "        // Write your code here\n \
    \       return \"\";\n", "        // TODO: Write your code here\n        return\
    \ \"\";\n", "        String[] parts = file_name.split(\"\\\\.\");\n        if\
    \ (parts.length != 2) return \"No\";\n        if (parts[0].length() == 0) return\
    \ \"No\";\n        if (parts[0].matches(\".*\\\\d.*\")) return \"No\";\n     \
    \   if (parts[0].matches(\".*[^a-zA-Z].*\")) return \"No\";\n        if (!parts[1].equals(\"\
    txt\") && !parts[1].equals(\"exe\") && !parts[1].equals(\"dll\")) return \"No\"\
    ;\n        return \"Yes\";\n", "        // Your code here\n        return \"\"\
    ;\n", "        // Write your code here\n        // To print results to the standard\
    \ output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        String[] parts = file_name.split(\"\\\\.\");\n     \
    \   if (parts.length != 2) {\n            return \"No\";\n        }\n        String[]\
    \ parts2 = parts[0].split(\"\\\\d\");\n        if (parts2.length != 2) {\n   \
    \         return \"No\";\n        }\n        if (parts2[0].length() == 0) {\n\
    \            return \"No\";\n        }\n        if (parts2[0].charAt(0) < 'a'\
    \ || parts2[0].charAt(0) > 'z') {\n            return \"No\";\n        }\n   \
    \     if (parts[1].equals(\"txt\") || parts[1].equals(\"exe\") || parts[1].equals(\"\
    dll\")) {\n            return \"Yes\";\n        }\n        return \"No\";\n",
  "        // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        String[] parts = file_name.split(\"\\\\.\");\n     \
    \   if (parts.length != 2) {\n            return \"No\";\n        }\n        String\
    \ first = parts[0];\n        String second = parts[1];\n        if (first.length()\
    \ == 0) {\n            return \"No\";\n        }\n        if (!Character.isLetter(first.charAt(0)))\
    \ {\n            return \"No\";\n        }\n        if (second.length() == 0)\
    \ {\n            return \"No\";\n        }\n        if (!second.equals(\"txt\"\
    ) && !second.equals(\"exe\") && !second.equals(\"dll\")) {\n            return\
    \ \"No\";\n        }\n        int count = 0;\n        for (int i = 0; i < first.length();\
    \ i++) {\n            if (Character.isDigit(first.charAt(i))) {\n            \
    \    count++;\n            }\n        }\n        if (count > 3) {\n          \
    \  return \"No\";\n        }\n        return \"Yes\";\n", "        // Write your\
    \ code here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        int count\
    \ = 0;\n        int dot = 0;\n        int len = file_name.length();\n        for(int\
    \ i = 0; i < len; i++) {\n            if(file_name.charAt(i) >= '0' && file_name.charAt(i)\
    \ <= '9') {\n                count++;\n            }\n            if(file_name.charAt(i)\
    \ == '.') {\n                dot++;\n            }\n        }\n        if(count\
    \ > 3 || dot != 1) {\n            return \"No\";\n        }\n        String[]\
    \ str = file_name.split(\"\\\\.\");\n        if(str[0].length() == 0 || (str[0].charAt(0)\
    \ < 'a' || str[0].charAt(0) > 'z') && (str[0].charAt(0) < 'A' || str[0].charAt(0)\
    \ > 'Z')) {\n            return \"No\";\n        }\n        if(!str[1].equals(\"\
    txt\") && !str[1].equals(\"exe\") && !str[1].equals(\"dll\")) {\n            return\
    \ \"No\";\n        }\n        return \"Yes\";\n", "        if (file_name.matches(\"\
    [a-zA-Z]+\\\\d{0,3}\\\\.(txt|exe|dll)\")) {\n            return \"Yes\";\n   \
    \     }\n        return \"No\";\n", "        String[] parts = file_name.split(\"\
    \\\\.\");\n        if (parts.length != 2) {\n            return \"No\";\n    \
    \    }\n        String name = parts[0];\n        String ext = parts[1];\n    \
    \    if (name.length() == 0) {\n            return \"No\";\n        }\n      \
    \  if (!Character.isLetter(name.charAt(0))) {\n            return \"No\";\n  \
    \      }\n        if (name.chars().filter(c -> c >= '0' && c <= '9').count() >\
    \ 3) {\n            return \"No\";\n        }\n        if (!ext.equals(\"txt\"\
    ) && !ext.equals(\"exe\") && !ext.equals(\"dll\")) {\n            return \"No\"\
    ;\n        }\n        return \"Yes\";\n", "        // Write your code here\n \
    \       // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        return \"\"\
    ;\n", "        // Write your code here\n        // To print results to the standard\
    \ output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        return \"\";\n", "        // Your code here\n      \
    \  return \"\";\n", "        // Your code here\n        return \"\";\n", "   \
    \     // your code here\n        return \"\";\n", "        // Write your code\
    \ here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        return \"\"\
    ;\n", "        // Your code here\n        return \"\";\n", "        // Write your\
    \ code here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        return \"\"\
    ;\n", "        // Write your code here\n        // To print results to the standard\
    \ output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        String[] parts = file_name.split(\"\\\\.\");\n     \
    \   if (parts.length != 2) {\n            return \"No\";\n        }\n        String\
    \ name = parts[0];\n        String ext = parts[1];\n        if (name.length()\
    \ == 0) {\n            return \"No\";\n        }\n        if (!Character.isLetter(name.charAt(0)))\
    \ {\n            return \"No\";\n        }\n        if (name.chars().filter(Character::isDigit).count()\
    \ > 3) {\n            return \"No\";\n        }\n        if (!ext.equals(\"txt\"\
    ) && !ext.equals(\"exe\") && !ext.equals(\"dll\")) {\n            return \"No\"\
    ;\n        }\n        return \"Yes\";\n", "        // Your code here\n       \
    \ return \"\";\n", "        // Write your code here\n        // To print results\
    \ to the standard output you can use System.out.println()\n        // Example:\
    \ System.out.println(\"Hello world!\");\n        String[] parts = file_name.split(\"\
    \\\\.\");\n        if (parts.length != 2) {\n            return \"No\";\n    \
    \    }\n        String[] digits = parts[0].split(\"\\\\d\");\n        if (digits.length\
    \ > 3) {\n            return \"No\";\n        }\n        if (parts[1].equals(\"\
    txt\") || parts[1].equals(\"exe\") || parts[1].equals(\"dll\")) {\n          \
    \  return \"Yes\";\n        }\n        return \"No\";\n", "        // Your code\
    \ here\n        return \"\";\n", "        // Write your code here\n        //\
    \ To print results to the standard output you can use System.out.println()\n \
    \       // Example: System.out.println(\"Hello world!\");\n        return \"\"\
    ;\n", "        // Your code goes here\n        return \"\";\n", "        // Your\
    \ code here\n        String[] parts = file_name.split(\"\\\\.\");\n        if\
    \ (parts.length != 2) {\n            return \"No\";\n        }\n        String\
    \ first = parts[0];\n        String second = parts[1];\n        if (first.length()\
    \ == 0) {\n            return \"No\";\n        }\n        if (first.matches(\"\
    [0-9]+\")) {\n            return \"No\";\n        }\n        if (first.matches(\"\
    [0-9]{4,}\")) {\n            return \"No\";\n        }\n        if (!second.matches(\"\
    txt|exe|dll\")) {\n            return \"No\";\n        }\n        return \"Yes\"\
    ;\n", "        // Write your code here\n        return \"\";\n", "        String[]\
    \ parts = file_name.split(\"\\\\.\");\n        if (parts.length != 2) {\n    \
    \        return \"No\";\n        }\n        String name = parts[0];\n        String\
    \ extension = parts[1];\n        if (name.length() == 0) {\n            return\
    \ \"No\";\n        }\n        if (!Character.isLetter(name.charAt(0))) {\n   \
    \         return \"No\";\n        }\n        if (extension.length() != 3) {\n\
    \            return \"No\";\n        }\n        if (!extension.equals(\"txt\"\
    ) && !extension.equals(\"exe\") && !extension.equals(\"dll\")) {\n           \
    \ return \"No\";\n        }\n        int count = 0;\n        for (int i = 0; i\
    \ < name.length(); i++) {\n            if (Character.isDigit(name.charAt(i)))\
    \ {\n                count++;\n            }\n        }\n        if (count > 3)\
    \ {\n            return \"No\";\n        }\n        return \"Yes\";\n", "    \
    \    // Your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        String[] parts = file_name.split(\"\\\\.\"\
    );\n        if (parts.length != 2) return \"No\";\n        if (parts[0].length()\
    \ == 0) return \"No\";\n        if (parts[0].matches(\".*\\\\d.*\")) return \"\
    No\";\n        if (parts[0].matches(\".*[^a-zA-Z].*\")) return \"No\";\n     \
    \   if (!parts[1].equals(\"txt\") && !parts[1].equals(\"exe\") && !parts[1].equals(\"\
    dll\")) return \"No\";\n        return \"Yes\";\n", "        // Write your code\
    \ here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        String[] parts\
    \ = file_name.split(\"\\\\.\");\n        if (parts.length != 2) return \"No\"\
    ;\n        if (parts[0].length() == 0) return \"No\";\n        if (!Character.isLetter(parts[0].charAt(0)))\
    \ return \"No\";\n        if (parts[0].matches(\".*\\\\d.*\")) return \"No\";\n\
    \        if (parts[0].matches(\".*\\\\d{4}.*\")) return \"No\";\n        if (!parts[1].equals(\"\
    txt\") && !parts[1].equals(\"exe\") && !parts[1].equals(\"dll\")) return \"No\"\
    ;\n        return \"Yes\";\n", "        // Your code here\n        return \"\"\
    ;\n", "        // Write your code here\n        return \"\";\n", "        // Your\
    \ code here\n        return \"\";\n", "        // Write your code here\n     \
    \   // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        return \"\"\
    ;\n", "        // Write your code here\n        // To print results to the standard\
    \ output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        return \"\";\n"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "    }\n\n"

name: HumanEval_57_monotonic
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Return True is list elements are monotonically increasing\
  \ or decreasing.\n    // >>> monotonic([1, 2, 4, 20])\n    // True\n    // >>> monotonic([1,\
  \ 20, 4, 10])\n    // False\n    // >>> monotonic([4, 1, 0, -10])\n    // True\n\
  \    public static boolean monotonic(ArrayList<Long> l) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(monotonic((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)10l)))) == (true));\n\
  \    assert(monotonic((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l,\
  \ (long)20l)))) == (true));\n    assert(monotonic((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)20l, (long)4l, (long)10l)))) == (false));\n    assert(monotonic((new ArrayList<Long>(Arrays.asList((long)4l,\
  \ (long)1l, (long)0l, (long)-10l)))) == (true));\n    assert(monotonic((new ArrayList<Long>(Arrays.asList((long)4l,\
  \ (long)1l, (long)1l, (long)0l)))) == (true));\n    assert(monotonic((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)2l, (long)5l, (long)60l)))) == (false));\n    assert(monotonic((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
  \ (long)60l)))) == (true));\n    assert(monotonic((new ArrayList<Long>(Arrays.asList((long)9l,\
  \ (long)9l, (long)9l, (long)9l)))) == (true));\n    }\n\n}\n"
completions: ["        if (l.size() <= 1) {\n            return true;\n        }\n\
    \        boolean increasing = l.get(0) < l.get(1);\n        for (int i = 1; i\
    \ < l.size() - 1; i++) {\n            if (increasing) {\n                if (l.get(i)\
    \ > l.get(i + 1)) {\n                    return false;\n                }\n  \
    \          } else {\n                if (l.get(i) < l.get(i + 1)) {\n        \
    \            return false;\n                }\n            }\n        }\n    \
    \    return true;\n", "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 1; i < l.size(); i++) {\n            if (l.get(i)\
    \ < l.get(i - 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) > l.get(i - 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;\n", "    \
    \    if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 1; i < l.size(); i++) {\n            if (l.get(i) > l.get(i - 1)) {\n      \
    \          decreasing = false;\n            }\n            if (l.get(i) < l.get(i\
    \ - 1)) {\n                increasing = false;\n            }\n        }\n   \
    \     return increasing || decreasing;\n", "        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) < l.get(i - 1)) {\n                increasing =\
    \ false;\n            }\n            if (l.get(i) > l.get(i - 1)) {\n        \
    \        decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        if (l.size() < 2) {\n            return true;\n\
    \        }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing && l.get(i) > l.get(i\
    \ + 1)) {\n                return false;\n            }\n            if (!increasing\
    \ && l.get(i) < l.get(i + 1)) {\n                return false;\n            }\n\
    \        }\n        return true;\n", "        boolean increasing = true;\n   \
    \     boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++) {\n\
    \            if (l.get(i) < l.get(i - 1)) {\n                increasing = false;\n\
    \            }\n            if (l.get(i) > l.get(i - 1)) {\n                decreasing\
    \ = false;\n            }\n        }\n        return increasing || decreasing;\n",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i -\
    \ 1)) {\n                increasing = false;\n            }\n            if (l.get(i)\
    \ > l.get(i - 1)) {\n                decreasing = false;\n            }\n    \
    \    }\n        return increasing || decreasing;\n", "        return l.stream().reduce(Long::compareTo).get()\
    \ <= 0;\n", "        boolean increasing = true;\n        boolean decreasing =\
    \ true;\n        for (int i = 1; i < l.size(); i++) {\n            if (l.get(i)\
    \ < l.get(i - 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) > l.get(i - 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;\n", "    \
    \    boolean increasing = true;\n        boolean decreasing = true;\n        for\
    \ (int i = 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i - 1)) {\n\
    \                increasing = false;\n            }\n            if (l.get(i)\
    \ > l.get(i - 1)) {\n                decreasing = false;\n            }\n    \
    \    }\n        return increasing || decreasing;\n", "        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 1; i < l.size();\
    \ i++) {\n            if (l.get(i) < l.get(i - 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) > l.get(i - 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        if (l.size() < 2) {\n            return true;\n\
    \        }\n        long prev = l.get(0);\n        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            long curr = l.get(i);\n            if (curr > prev) {\n     \
    \           decreasing = false;\n            } else if (curr < prev) {\n     \
    \           increasing = false;\n            }\n            prev = curr;\n   \
    \     }\n        return increasing || decreasing;\n", "        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 1; i < l.size();\
    \ i++) {\n            if (l.get(i - 1) > l.get(i)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i - 1) < l.get(i)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        if (l.size() <= 1) {\n            return true;\n\
    \        }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing) {\n           \
    \     if (l.get(i) > l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            } else {\n                if (l.get(i) < l.get(i +\
    \ 1)) {\n                    return false;\n                }\n            }\n\
    \        }\n        return true;\n", "        int n = l.size();\n        if (n\
    \ == 1) {\n            return true;\n        }\n        long prev = l.get(0);\n\
    \        boolean increasing = true;\n        boolean decreasing = true;\n    \
    \    for (int i = 1; i < n; i++) {\n            long curr = l.get(i);\n      \
    \      if (curr > prev) {\n                decreasing = false;\n            }\n\
    \            if (curr < prev) {\n                increasing = false;\n       \
    \     }\n            prev = curr;\n        }\n        return increasing || decreasing;\n",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i -\
    \ 1)) {\n                increasing = false;\n            }\n            if (l.get(i)\
    \ > l.get(i - 1)) {\n                decreasing = false;\n            }\n    \
    \    }\n        return increasing || decreasing;\n", "        if (l.size() <=\
    \ 1) {\n            return true;\n        }\n        boolean increasing = l.get(0)\
    \ < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n            if\
    \ (increasing && l.get(i) > l.get(i + 1)) {\n                return false;\n \
    \           }\n            if (!increasing && l.get(i) < l.get(i + 1)) {\n   \
    \             return false;\n            }\n        }\n        return true;\n",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i -\
    \ 1)) {\n                increasing = false;\n            }\n            if (l.get(i)\
    \ > l.get(i - 1)) {\n                decreasing = false;\n            }\n    \
    \    }\n        return increasing || decreasing;\n", "        return l.stream().allMatch(x\
    \ -> x >= l.get(0)) || l.stream().allMatch(x -> x <= l.get(0));\n", "        //\
    \ Write your code here\n        // To print results to the standard output you\
    \ can use System.out.println()\n        // Example: System.out.println(\"Hello\
    \ world!\");\n        return false;\n", "        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) > l.get(i - 1)) {\n                decreasing =\
    \ false;\n            }\n            if (l.get(i) < l.get(i - 1)) {\n        \
    \        increasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        if (l.size() == 0) {\n            return true;\n\
    \        }\n        long prev = l.get(0);\n        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            long curr = l.get(i);\n            if (curr > prev) {\n     \
    \           decreasing = false;\n            }\n            if (curr < prev) {\n\
    \                increasing = false;\n            }\n            prev = curr;\n\
    \        }\n        return increasing || decreasing;\n", "        if (l.size()\
    \ <= 1) {\n            return true;\n        }\n        boolean increasing = l.get(0)\
    \ < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n            if\
    \ (increasing && l.get(i) > l.get(i + 1)) {\n                return false;\n \
    \           }\n            if (!increasing && l.get(i) < l.get(i + 1)) {\n   \
    \             return false;\n            }\n        }\n        return true;\n",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i -\
    \ 1)) {\n                increasing = false;\n            }\n            if (l.get(i)\
    \ > l.get(i - 1)) {\n                decreasing = false;\n            }\n    \
    \    }\n        return increasing || decreasing;\n", "        if (l.size() <=\
    \ 1) {\n            return true;\n        }\n        long prev = l.get(0);\n \
    \       boolean increasing = true;\n        boolean decreasing = true;\n     \
    \   for (int i = 1; i < l.size(); i++) {\n            long curr = l.get(i);\n\
    \            if (curr > prev) {\n                decreasing = false;\n       \
    \     } else if (curr < prev) {\n                increasing = false;\n       \
    \     }\n            prev = curr;\n        }\n        return increasing || decreasing;\n",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i -\
    \ 1)) {\n                increasing = false;\n            }\n            if (l.get(i)\
    \ > l.get(i - 1)) {\n                decreasing = false;\n            }\n    \
    \    }\n        return increasing || decreasing;\n", "        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 1; i < l.size();\
    \ i++) {\n            if (l.get(i) < l.get(i - 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) > l.get(i - 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        if (l.size() < 2) {\n            return true;\n\
    \        }\n        long prev = l.get(0);\n        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            long curr = l.get(i);\n            if (curr < prev) {\n     \
    \           increasing = false;\n            }\n            if (curr > prev) {\n\
    \                decreasing = false;\n            }\n            prev = curr;\n\
    \        }\n        return increasing || decreasing;\n", "        if (l.size()\
    \ <= 1) {\n            return true;\n        }\n        long prev = l.get(0);\n\
    \        boolean increasing = true;\n        boolean decreasing = true;\n    \
    \    for (int i = 1; i < l.size(); i++) {\n            long curr = l.get(i);\n\
    \            if (curr > prev) {\n                decreasing = false;\n       \
    \     } else if (curr < prev) {\n                increasing = false;\n       \
    \     }\n            prev = curr;\n        }\n        return increasing || decreasing;\n",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i -\
    \ 1)) {\n                increasing = false;\n            }\n            if (l.get(i)\
    \ > l.get(i - 1)) {\n                decreasing = false;\n            }\n    \
    \    }\n        return increasing || decreasing;\n", "        if (l.size() <=\
    \ 1) {\n            return true;\n        }\n        long prev = l.get(0);\n \
    \       boolean increasing = true;\n        boolean decreasing = true;\n     \
    \   for (int i = 1; i < l.size(); i++) {\n            long curr = l.get(i);\n\
    \            if (curr > prev) {\n                decreasing = false;\n       \
    \     } else if (curr < prev) {\n                increasing = false;\n       \
    \     }\n            prev = curr;\n        }\n        return increasing || decreasing;\n",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i -\
    \ 1)) {\n                increasing = false;\n            }\n            if (l.get(i)\
    \ > l.get(i - 1)) {\n                decreasing = false;\n            }\n    \
    \    }\n        return increasing || decreasing;\n", "        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 0; i < l.size()\
    \ - 1; i++) {\n            if (l.get(i) < l.get(i + 1)) {\n                decreasing\
    \ = false;\n            }\n            if (l.get(i) > l.get(i + 1)) {\n      \
    \          increasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;\n", "    \
    \    if (l.size() < 2) {\n            return true;\n        }\n        long prev\
    \ = l.get(0);\n        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 1; i < l.size(); i++) {\n            long curr\
    \ = l.get(i);\n            if (curr < prev) {\n                increasing = false;\n\
    \            }\n            if (curr > prev) {\n                decreasing = false;\n\
    \            }\n            prev = curr;\n        }\n        return increasing\
    \ || decreasing;\n", "        if (l.size() <= 1) {\n            return true;\n\
    \        }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing) {\n           \
    \     if (l.get(i) > l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            } else {\n                if (l.get(i) < l.get(i +\
    \ 1)) {\n                    return false;\n                }\n            }\n\
    \        }\n        return true;\n", "        if (l.size() <= 1) {\n         \
    \   return true;\n        }\n        long diff = l.get(1) - l.get(0);\n      \
    \  for (int i = 1; i < l.size(); i++) {\n            long newDiff = l.get(i) -\
    \ l.get(i - 1);\n            if (newDiff * diff < 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n", "        if (l.size()\
    \ == 0) {\n            return true;\n        }\n        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) < l.get(i - 1)) {\n                increasing =\
    \ false;\n            }\n            if (l.get(i) > l.get(i - 1)) {\n        \
    \        decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        if (l.size() < 2) {\n            return true;\n\
    \        }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing) {\n           \
    \     if (l.get(i) > l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            } else {\n                if (l.get(i) < l.get(i +\
    \ 1)) {\n                    return false;\n                }\n            }\n\
    \        }\n        return true;\n", "        boolean increasing = true;\n   \
    \     boolean decreasing = true;\n        for (int i = 0; i < l.size() - 1; i++)\
    \ {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing =\
    \ false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n        \
    \        decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        // Write your code here\n        // To print results\
    \ to the standard output you can use System.out.println()\n        // Example:\
    \ System.out.println(\"Hello world!\");\n        if (l.size() == 1) {\n      \
    \      return true;\n        }\n        boolean increasing = true;\n        boolean\
    \ decreasing = true;\n        for (int i = 1; i < l.size(); i++) {\n         \
    \   if (l.get(i) < l.get(i - 1)) {\n                increasing = false;\n    \
    \        }\n            if (l.get(i) > l.get(i - 1)) {\n                decreasing\
    \ = false;\n            }\n        }\n        return increasing || decreasing;\n",
  "        if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1;\
    \ i++) {\n            if (increasing && l.get(i) > l.get(i + 1)) {\n         \
    \       return false;\n            }\n            if (!increasing && l.get(i)\
    \ < l.get(i + 1)) {\n                return false;\n            }\n        }\n\
    \        return true;\n", "        if (l.size() <= 1) {\n            return true;\n\
    \        }\n        boolean increasing = true;\n        boolean decreasing = true;\n\
    \        for (int i = 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i\
    \ - 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) > l.get(i - 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;\n", "        if (l.size()\
    \ <= 1) {\n            return true;\n        }\n        boolean increasing = l.get(0)\
    \ < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n            if\
    \ (increasing) {\n                if (l.get(i) > l.get(i + 1)) {\n           \
    \         return false;\n                }\n            } else {\n           \
    \     if (l.get(i) < l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            }\n        }\n        return true;\n", "        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i) < l.get(i + 1)) {\n  \
    \              decreasing = false;\n            }\n            if (l.get(i) >\
    \ l.get(i + 1)) {\n                increasing = false;\n            }\n      \
    \  }\n        return increasing || decreasing;\n", "        if (l.size() <= 1)\
    \ {\n            return true;\n        }\n        boolean increasing = l.get(0)\
    \ < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n            if\
    \ (increasing) {\n                if (l.get(i) > l.get(i + 1)) {\n           \
    \         return false;\n                }\n            } else {\n           \
    \     if (l.get(i) < l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            }\n        }\n        return true;\n", "        if\
    \ (l.size() <= 1) {\n            return true;\n        }\n        long diff =\
    \ l.get(1) - l.get(0);\n        for (int i = 2; i < l.size(); i++) {\n       \
    \     long newDiff = l.get(i) - l.get(i - 1);\n            if (diff * newDiff\
    \ < 0) {\n                return false;\n            }\n        }\n        return\
    \ true;\n", "        boolean increasing = true;\n        boolean decreasing =\
    \ true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;\n", "    \
    \    if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1;\
    \ i++) {\n            if (increasing) {\n                if (l.get(i) > l.get(i\
    \ + 1)) {\n                    return false;\n                }\n            }\
    \ else {\n                if (l.get(i) < l.get(i + 1)) {\n                   \
    \ return false;\n                }\n            }\n        }\n        return true;\n",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i\
    \ + 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;\n", "        if (l.size()\
    \ <= 1) {\n            return true;\n        }\n        long prev = l.get(0);\n\
    \        boolean increasing = true;\n        boolean decreasing = true;\n    \
    \    for (int i = 1; i < l.size(); i++) {\n            long curr = l.get(i);\n\
    \            if (curr > prev) {\n                decreasing = false;\n       \
    \     } else if (curr < prev) {\n                increasing = false;\n       \
    \     }\n            prev = curr;\n        }\n        return increasing || decreasing;\n",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) < l.get(i\
    \ + 1)) {\n                decreasing = false;\n            }\n            if\
    \ (l.get(i) > l.get(i + 1)) {\n                increasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;\n", "        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n  \
    \              increasing = false;\n            }\n            if (l.get(i) <\
    \ l.get(i + 1)) {\n                decreasing = false;\n            }\n      \
    \  }\n        return increasing || decreasing;\n", "        if (l.size() <= 1)\
    \ {\n            return true;\n        }\n        boolean increasing = l.get(0)\
    \ < l.get(1);\n        boolean decreasing = l.get(0) > l.get(1);\n        for\
    \ (int i = 1; i < l.size() - 1; i++) {\n            if (increasing && l.get(i)\
    \ > l.get(i + 1)) {\n                return false;\n            }\n          \
    \  if (decreasing && l.get(i) < l.get(i + 1)) {\n                return false;\n\
    \            }\n        }\n        return true;\n", "        if (l.size() < 2)\
    \ {\n            return true;\n        }\n        long prev = l.get(0);\n    \
    \    boolean increasing = true;\n        boolean decreasing = true;\n        for\
    \ (int i = 1; i < l.size(); i++) {\n            long curr = l.get(i);\n      \
    \      if (curr < prev) {\n                increasing = false;\n            }\n\
    \            if (curr > prev) {\n                decreasing = false;\n       \
    \     }\n            prev = curr;\n        }\n        return increasing || decreasing;\n",
  "        if (l.size() == 0) {\n            return true;\n        }\n        if (l.size()\
    \ == 1) {\n            return true;\n        }\n        boolean increasing = l.get(0)\
    \ < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n            if\
    \ (increasing) {\n                if (l.get(i) > l.get(i + 1)) {\n           \
    \         return false;\n                }\n            } else {\n           \
    \     if (l.get(i) < l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            }\n        }\n        return true;\n", "        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i) < l.get(i + 1)) {\n  \
    \              decreasing = false;\n            }\n            if (l.get(i) >\
    \ l.get(i + 1)) {\n                increasing = false;\n            }\n      \
    \  }\n        return increasing || decreasing;\n", "        if (l.size() == 0)\
    \ {\n            return true;\n        }\n        long prev = l.get(0);\n    \
    \    boolean increasing = true;\n        boolean decreasing = true;\n        for\
    \ (int i = 1; i < l.size(); i++) {\n            long curr = l.get(i);\n      \
    \      if (curr > prev) {\n                decreasing = false;\n            }\n\
    \            if (curr < prev) {\n                increasing = false;\n       \
    \     }\n            prev = curr;\n        }\n        return increasing || decreasing;\n",
  "        if (l.size() <= 1) {\n            return true;\n        }\n        long\
    \ prev = l.get(0);\n        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 1; i < l.size(); i++) {\n            long curr\
    \ = l.get(i);\n            if (curr > prev) {\n                decreasing = false;\n\
    \            } else if (curr < prev) {\n                increasing = false;\n\
    \            }\n            prev = curr;\n        }\n        return increasing\
    \ || decreasing;\n", "        if (l.size() <= 1) {\n            return true;\n\
    \        }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing) {\n           \
    \     if (l.get(i) > l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            } else {\n                if (l.get(i) < l.get(i +\
    \ 1)) {\n                    return false;\n                }\n            }\n\
    \        }\n        return true;\n", "        if (l.size() == 0) {\n         \
    \   return true;\n        }\n        long prev = l.get(0);\n        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 1; i < l.size();\
    \ i++) {\n            long curr = l.get(i);\n            if (curr < prev) {\n\
    \                increasing = false;\n            }\n            if (curr > prev)\
    \ {\n                decreasing = false;\n            }\n            prev = curr;\n\
    \        }\n        return increasing || decreasing;\n", "        if (l.size()\
    \ < 2) {\n            return true;\n        }\n        boolean increasing = l.get(0)\
    \ < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n            if\
    \ (increasing) {\n                if (l.get(i) > l.get(i + 1)) {\n           \
    \         return false;\n                }\n            } else {\n           \
    \     if (l.get(i) < l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            }\n        }\n        return true;\n", "        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n  \
    \              increasing = false;\n            }\n            if (l.get(i) <\
    \ l.get(i + 1)) {\n                decreasing = false;\n            }\n      \
    \  }\n        return increasing || decreasing;\n", "        return l.stream().sorted().equals(l)\
    \ || l.stream().sorted(Collections.reverseOrder()).equals(l);\n", "        if\
    \ (l.size() < 2) {\n            return true;\n        }\n        boolean increasing\
    \ = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n \
    \           if (increasing && l.get(i) > l.get(i + 1)) {\n                return\
    \ false;\n            }\n            if (!increasing && l.get(i) < l.get(i + 1))\
    \ {\n                return false;\n            }\n        }\n        return true;\n",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i\
    \ + 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;\n", "        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n  \
    \              increasing = false;\n            }\n            if (l.get(i) <\
    \ l.get(i + 1)) {\n                decreasing = false;\n            }\n      \
    \  }\n        return increasing || decreasing;\n", "        return l.stream().allMatch(x\
    \ -> x >= l.get(0)) || l.stream().allMatch(x -> x <= l.get(0));\n", "        if\
    \ (l.size() < 2) {\n            return true;\n        }\n        boolean increasing\
    \ = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n \
    \           if (increasing && l.get(i) > l.get(i + 1)) {\n                return\
    \ false;\n            }\n            if (!increasing && l.get(i) < l.get(i + 1))\
    \ {\n                return false;\n            }\n        }\n        return true;\n",
  "        if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i - 1)) {\n      \
    \          increasing = false;\n            }\n            if (l.get(i) > l.get(i\
    \ - 1)) {\n                decreasing = false;\n            }\n        }\n   \
    \     return increasing || decreasing;\n", "        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 0; i < l.size() - 1;\
    \ i++) {\n            if (l.get(i) < l.get(i + 1)) {\n                decreasing\
    \ = false;\n            }\n            if (l.get(i) > l.get(i + 1)) {\n      \
    \          increasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;\n", "    \
    \    boolean increasing = true;\n        boolean decreasing = true;\n        for\
    \ (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1))\
    \ {\n                increasing = false;\n            }\n            if (l.get(i)\
    \ < l.get(i + 1)) {\n                decreasing = false;\n            }\n    \
    \    }\n        return increasing || decreasing;\n", "        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 0; i < l.size()\
    \ - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;\n", "    \
    \    boolean increasing = true;\n        boolean decreasing = true;\n        for\
    \ (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1))\
    \ {\n                increasing = false;\n            }\n            if (l.get(i)\
    \ < l.get(i + 1)) {\n                decreasing = false;\n            }\n    \
    \    }\n        return increasing || decreasing;\n", "        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 0; i < l.size()\
    \ - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        if (l.size() <= 1) {\n            return true;\n\
    \        }\n        boolean increasing = true;\n        boolean decreasing = true;\n\
    \        for (int i = 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i\
    \ - 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) > l.get(i - 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;\n", "        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n  \
    \              increasing = false;\n            }\n            if (l.get(i) <\
    \ l.get(i + 1)) {\n                decreasing = false;\n            }\n      \
    \  }\n        return increasing || decreasing;\n", "        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 0; i < l.size()\
    \ - 1; i++) {\n            if (l.get(i) < l.get(i + 1)) {\n                decreasing\
    \ = false;\n            }\n            if (l.get(i) > l.get(i + 1)) {\n      \
    \          increasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        if (l.size() <= 1) {\n            return true;\n\
    \        }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing && l.get(i) > l.get(i\
    \ + 1)) {\n                return false;\n            }\n            if (!increasing\
    \ && l.get(i) < l.get(i + 1)) {\n                return false;\n            }\n\
    \        }\n        return true;\n", "        if (l.size() <= 1) {\n         \
    \   return true;\n        }\n        boolean increasing = l.get(0) < l.get(1);\n\
    \        for (int i = 1; i < l.size() - 1; i++) {\n            if (increasing\
    \ && l.get(i) > l.get(i + 1)) {\n                return false;\n            }\n\
    \            if (!increasing && l.get(i) < l.get(i + 1)) {\n                return\
    \ false;\n            }\n        }\n        return true;\n", "        if (l.size()\
    \ < 2) {\n            return true;\n        }\n        boolean increasing = l.get(0)\
    \ < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n            if\
    \ (increasing && l.get(i) > l.get(i + 1)) {\n                return false;\n \
    \           }\n            if (!increasing && l.get(i) < l.get(i + 1)) {\n   \
    \             return false;\n            }\n        }\n        return true;\n",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i\
    \ + 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;\n", "        if (l.size()\
    \ == 0) {\n            return true;\n        }\n        long prev = l.get(0);\n\
    \        boolean increasing = true;\n        boolean decreasing = true;\n    \
    \    for (int i = 1; i < l.size(); i++) {\n            long curr = l.get(i);\n\
    \            if (curr > prev) {\n                decreasing = false;\n       \
    \     }\n            if (curr < prev) {\n                increasing = false;\n\
    \            }\n            prev = curr;\n        }\n        return increasing\
    \ || decreasing;\n", "        // TODO: Implement me\n        return false;\n",
  "        if (l.size() < 2) {\n            return true;\n        }\n        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i - 1)) {\n      \
    \          increasing = false;\n            }\n            if (l.get(i) > l.get(i\
    \ - 1)) {\n                decreasing = false;\n            }\n        }\n   \
    \     return increasing || decreasing;\n", "        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 0; i < l.size() - 1;\
    \ i++) {\n            if (l.get(i) < l.get(i + 1)) {\n                decreasing\
    \ = false;\n            }\n            if (l.get(i) > l.get(i + 1)) {\n      \
    \          increasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        if (l.size() <= 1) {\n            return true;\n\
    \        }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing && l.get(i) > l.get(i\
    \ + 1)) {\n                return false;\n            }\n            if (!increasing\
    \ && l.get(i) < l.get(i + 1)) {\n                return false;\n            }\n\
    \        }\n        return true;\n", "        if (l.size() <= 1) {\n         \
    \   return true;\n        }\n        boolean increasing = true;\n        boolean\
    \ decreasing = true;\n        for (int i = 1; i < l.size(); i++) {\n         \
    \   if (l.get(i) < l.get(i - 1)) {\n                increasing = false;\n    \
    \        }\n            if (l.get(i) > l.get(i - 1)) {\n                decreasing\
    \ = false;\n            }\n        }\n        return increasing || decreasing;\n",
  "        if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1;\
    \ i++) {\n            if (increasing) {\n                if (l.get(i) > l.get(i\
    \ + 1)) {\n                    return false;\n                }\n            }\
    \ else {\n                if (l.get(i) < l.get(i + 1)) {\n                   \
    \ return false;\n                }\n            }\n        }\n        return true;\n",
  "        if (l.size() < 2) {\n            return true;\n        }\n        long\
    \ prev = l.get(0);\n        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 1; i < l.size(); i++) {\n            long curr\
    \ = l.get(i);\n            if (curr < prev) {\n                increasing = false;\n\
    \            }\n            if (curr > prev) {\n                decreasing = false;\n\
    \            }\n            prev = curr;\n        }\n        return increasing\
    \ || decreasing;\n", "        return l.stream().reduce(0L, (a, b) -> a == 0 ?\
    \ b : a * b) >= 0;\n", "        if (l.size() <= 1) {\n            return true;\n\
    \        }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing) {\n           \
    \     if (l.get(i) > l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            } else {\n                if (l.get(i) < l.get(i +\
    \ 1)) {\n                    return false;\n                }\n            }\n\
    \        }\n        return true;\n", "        boolean increasing = true;\n   \
    \     boolean decreasing = true;\n        for (int i = 0; i < l.size() - 1; i++)\
    \ {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing =\
    \ false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n        \
    \        decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        if (l.size() == 0) {\n            return true;\n\
    \        }\n        long last = l.get(0);\n        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) < last) {\n                increasing = false;\n\
    \            }\n            if (l.get(i) > last) {\n                decreasing\
    \ = false;\n            }\n            last = l.get(i);\n        }\n        return\
    \ increasing || decreasing;\n", "        if (l.size() <= 1) {\n            return\
    \ true;\n        }\n        boolean increasing = l.get(0) < l.get(1);\n      \
    \  for (int i = 1; i < l.size() - 1; i++) {\n            if (increasing && l.get(i)\
    \ > l.get(i + 1)) {\n                return false;\n            }\n          \
    \  if (!increasing && l.get(i) < l.get(i + 1)) {\n                return false;\n\
    \            }\n        }\n        return true;\n", "        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 0; i < l.size()\
    \ - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;\n", "    \
    \    return l.stream().allMatch(x -> x >= l.get(0)) || l.stream().allMatch(x ->\
    \ x <= l.get(0));\n", "        if (l.size() == 0) {\n            return true;\n\
    \        }\n        long prev = l.get(0);\n        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            long curr = l.get(i);\n            if (curr > prev) {\n     \
    \           decreasing = false;\n            }\n            if (curr < prev) {\n\
    \                increasing = false;\n            }\n            prev = curr;\n\
    \        }\n        return increasing || decreasing;\n", "        if (l.size()\
    \ <= 1) {\n            return true;\n        }\n        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) < l.get(i - 1)) {\n                increasing =\
    \ false;\n            }\n            if (l.get(i) > l.get(i - 1)) {\n        \
    \        decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        if (l.size() <= 1) {\n            return true;\n\
    \        }\n        long prev = l.get(0);\n        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            long curr = l.get(i);\n            if (curr < prev) {\n     \
    \           increasing = false;\n            }\n            if (curr > prev) {\n\
    \                decreasing = false;\n            }\n            prev = curr;\n\
    \        }\n        return increasing || decreasing;\n", "        if (l.size()\
    \ <= 1) {\n            return true;\n        }\n        boolean increasing = l.get(0)\
    \ < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n            if\
    \ (increasing) {\n                if (l.get(i) > l.get(i + 1)) {\n           \
    \         return false;\n                }\n            } else {\n           \
    \     if (l.get(i) < l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            }\n        }\n        return true;\n", "        if\
    \ (l.size() <= 1) {\n            return true;\n        }\n        boolean increasing\
    \ = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n \
    \           if (increasing) {\n                if (l.get(i) > l.get(i + 1)) {\n\
    \                    return false;\n                }\n            } else {\n\
    \                if (l.get(i) < l.get(i + 1)) {\n                    return false;\n\
    \                }\n            }\n        }\n        return true;\n", "     \
    \   boolean increasing = true;\n        boolean decreasing = true;\n        for\
    \ (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1))\
    \ {\n                increasing = false;\n            }\n            if (l.get(i)\
    \ < l.get(i + 1)) {\n                decreasing = false;\n            }\n    \
    \    }\n        return increasing || decreasing;\n", "        if (l.size() <=\
    \ 1) {\n            return true;\n        }\n        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) < l.get(i - 1)) {\n                increasing =\
    \ false;\n            }\n            if (l.get(i) > l.get(i - 1)) {\n        \
    \        decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        if (l.size() < 2) {\n            return true;\n\
    \        }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing && l.get(i) > l.get(i\
    \ + 1)) {\n                return false;\n            }\n            if (!increasing\
    \ && l.get(i) < l.get(i + 1)) {\n                return false;\n            }\n\
    \        }\n        return true;\n", "        if (l.size() <= 1) {\n         \
    \   return true;\n        }\n        boolean increasing = l.get(0) < l.get(1);\n\
    \        for (int i = 1; i < l.size() - 1; i++) {\n            if (increasing)\
    \ {\n                if (l.get(i) > l.get(i + 1)) {\n                    return\
    \ false;\n                }\n            } else {\n                if (l.get(i)\
    \ < l.get(i + 1)) {\n                    return false;\n                }\n  \
    \          }\n        }\n        return true;\n", "        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 0; i < l.size()\
    \ - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;\n", "    \
    \    boolean increasing = true;\n        boolean decreasing = true;\n        for\
    \ (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1))\
    \ {\n                increasing = false;\n            }\n            if (l.get(i)\
    \ < l.get(i + 1)) {\n                decreasing = false;\n            }\n    \
    \    }\n        return increasing || decreasing;\n", "        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 0; i < l.size()\
    \ - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        if (l.size() <= 1) {\n            return true;\n\
    \        }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing) {\n           \
    \     if (l.get(i) > l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            } else {\n                if (l.get(i) < l.get(i +\
    \ 1)) {\n                    return false;\n                }\n            }\n\
    \        }\n        return true;\n", "        if (l.size() <= 1) {\n         \
    \   return true;\n        }\n        boolean increasing = l.get(0) < l.get(1);\n\
    \        for (int i = 1; i < l.size() - 1; i++) {\n            if (increasing\
    \ && l.get(i) > l.get(i + 1)) {\n                return false;\n            }\n\
    \            if (!increasing && l.get(i) < l.get(i + 1)) {\n                return\
    \ false;\n            }\n        }\n        return true;\n", "        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n  \
    \              increasing = false;\n            }\n            if (l.get(i) <\
    \ l.get(i + 1)) {\n                decreasing = false;\n            }\n      \
    \  }\n        return increasing || decreasing;\n", "        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 0; i < l.size()\
    \ - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        if (l.size() <= 1) {\n            return true;\n\
    \        }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing && l.get(i) > l.get(i\
    \ + 1)) {\n                return false;\n            }\n            if (!increasing\
    \ && l.get(i) < l.get(i + 1)) {\n                return false;\n            }\n\
    \        }\n        return true;\n", "        boolean increasing = true;\n   \
    \     boolean decreasing = true;\n        for (int i = 0; i < l.size() - 1; i++)\
    \ {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing =\
    \ false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n        \
    \        decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        if (l.size() <= 1) {\n            return true;\n\
    \        }\n        boolean increasing = true;\n        boolean decreasing = true;\n\
    \        for (int i = 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i\
    \ - 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) > l.get(i - 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;\n", "        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n  \
    \              increasing = false;\n            }\n            if (l.get(i) <\
    \ l.get(i + 1)) {\n                decreasing = false;\n            }\n      \
    \  }\n        return increasing || decreasing;\n", "        if (l.size() == 0)\
    \ {\n            return true;\n        }\n        long prev = l.get(0);\n    \
    \    boolean increasing = true;\n        boolean decreasing = true;\n        for\
    \ (int i = 1; i < l.size(); i++) {\n            long curr = l.get(i);\n      \
    \      if (curr < prev) {\n                increasing = false;\n            }\n\
    \            if (curr > prev) {\n                decreasing = false;\n       \
    \     }\n            prev = curr;\n        }\n        return increasing || decreasing;\n",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i\
    \ + 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;\n", "        if (l.size()\
    \ <= 1) {\n            return true;\n        }\n        boolean increasing = l.get(0)\
    \ < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n            if\
    \ (increasing) {\n                if (l.get(i) > l.get(i + 1)) {\n           \
    \         return false;\n                }\n            } else {\n           \
    \     if (l.get(i) < l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            }\n        }\n        return true;\n", "        if\
    \ (l.size() == 0) {\n            return true;\n        }\n        long last =\
    \ l.get(0);\n        boolean increasing = true;\n        for (int i = 1; i < l.size();\
    \ i++) {\n            long current = l.get(i);\n            if (current > last)\
    \ {\n                if (!increasing) {\n                    return false;\n \
    \               }\n            } else if (current < last) {\n                if\
    \ (increasing) {\n                    increasing = false;\n                }\n\
    \            }\n            last = current;\n        }\n        return true;\n",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i\
    \ + 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;\n", "        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n  \
    \              increasing = false;\n            }\n            if (l.get(i) <\
    \ l.get(i + 1)) {\n                decreasing = false;\n            }\n      \
    \  }\n        return increasing || decreasing;\n", "        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 0; i < l.size()\
    \ - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        return l.stream().reduce(new Pair<Long, Long>(0L,\
    \ 0L), (p, x) -> {\n            if (p.getValue0() == 0) {\n                return\
    \ new Pair<Long, Long>(x, 0L);\n            } else {\n                if (p.getValue1()\
    \ == 0) {\n                    if (x > p.getValue0()) {\n                    \
    \    return new Pair<Long, Long>(x, 1L);\n                    } else if (x < p.getValue0())\
    \ {\n                        return new Pair<Long, Long>(x, -1L);\n          \
    \          } else {\n                        return new Pair<Long, Long>(x, 0L);\n\
    \                    }\n                } else {\n                    if (x >\
    \ p.getValue0() && p.getValue1() == 1) {\n                        return new Pair<Long,\
    \ Long>(x, 1L);\n                    } else if (x < p.getValue0() && p.getValue1()\
    \ == -1) {\n                        return new Pair<Long, Long>(x, -1L);\n   \
    \                 } else {\n                        return new Pair<Long, Long>(x,\
    \ 0L);\n                    }\n                }\n            }\n        }).getValue1()\
    \ != 0;\n", "        if (l.size() == 0) {\n            return true;\n        }\n\
    \        long prev = l.get(0);\n        boolean increasing = true;\n        boolean\
    \ decreasing = true;\n        for (int i = 1; i < l.size(); i++) {\n         \
    \   long curr = l.get(i);\n            if (curr > prev) {\n                decreasing\
    \ = false;\n            }\n            if (curr < prev) {\n                increasing\
    \ = false;\n            }\n            prev = curr;\n        }\n        return\
    \ increasing || decreasing;\n", "        boolean increasing = true;\n        boolean\
    \ decreasing = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n     \
    \       if (l.get(i) > l.get(i + 1)) {\n                increasing = false;\n\
    \            }\n            if (l.get(i) < l.get(i + 1)) {\n                decreasing\
    \ = false;\n            }\n        }\n        return increasing || decreasing;\n",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) < l.get(i\
    \ + 1)) {\n                decreasing = false;\n            }\n            if\
    \ (l.get(i) > l.get(i + 1)) {\n                increasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;\n", "        if (l.size()\
    \ <= 1) {\n            return true;\n        }\n        long prev = l.get(0);\n\
    \        boolean increasing = true;\n        boolean decreasing = true;\n    \
    \    for (int i = 1; i < l.size(); i++) {\n            if (l.get(i) < prev) {\n\
    \                increasing = false;\n            }\n            if (l.get(i)\
    \ > prev) {\n                decreasing = false;\n            }\n            prev\
    \ = l.get(i);\n        }\n        return increasing || decreasing;\n", "     \
    \   boolean increasing = true;\n        boolean decreasing = true;\n        for\
    \ (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1))\
    \ {\n                increasing = false;\n            }\n            if (l.get(i)\
    \ < l.get(i + 1)) {\n                decreasing = false;\n            }\n    \
    \    }\n        return increasing || decreasing;\n", "        if (l.size() <=\
    \ 1) {\n            return true;\n        }\n        boolean increasing = l.get(0)\
    \ < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n            if\
    \ (increasing && l.get(i) > l.get(i + 1)) {\n                return false;\n \
    \           }\n            if (!increasing && l.get(i) < l.get(i + 1)) {\n   \
    \             return false;\n            }\n        }\n        return true;\n",
  "        return l.stream().reduce(new Pair<Long, Long>(l.get(0), 0L), (x, y) ->\
    \ {\n            if (x.getValue1() == 0) {\n                return new Pair<Long,\
    \ Long>(y, y - x.getValue0());\n            } else {\n                return new\
    \ Pair<Long, Long>(y, y - x.getValue0());\n            }\n        }).getValue1()\
    \ >= 0;\n", "        if (l.size() == 0) {\n            return true;\n        }\n\
    \        boolean increasing = l.get(0) < l.get(l.size() - 1);\n        for (int\
    \ i = 1; i < l.size(); i++) {\n            if (increasing && l.get(i - 1) > l.get(i))\
    \ {\n                return false;\n            }\n            if (!increasing\
    \ && l.get(i - 1) < l.get(i)) {\n                return false;\n            }\n\
    \        }\n        return true;\n", "        if (l.size() <= 1) {\n         \
    \   return true;\n        }\n        boolean increasing = true;\n        boolean\
    \ decreasing = true;\n        for (int i = 1; i < l.size(); i++) {\n         \
    \   if (l.get(i) < l.get(i - 1)) {\n                increasing = false;\n    \
    \        }\n            if (l.get(i) > l.get(i - 1)) {\n                decreasing\
    \ = false;\n            }\n        }\n        return increasing || decreasing;\n",
  "        if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1;\
    \ i++) {\n            if (increasing && l.get(i) > l.get(i + 1)) {\n         \
    \       return false;\n            }\n            if (!increasing && l.get(i)\
    \ < l.get(i + 1)) {\n                return false;\n            }\n        }\n\
    \        return true;\n", "        if (l.size() == 0) {\n            return true;\n\
    \        }\n        long prev = l.get(0);\n        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            long curr = l.get(i);\n            if (curr > prev) {\n     \
    \           decreasing = false;\n            }\n            if (curr < prev) {\n\
    \                increasing = false;\n            }\n            prev = curr;\n\
    \        }\n        return increasing || decreasing;\n", "        if (l.size()\
    \ <= 1) {\n            return true;\n        }\n        boolean increasing = l.get(0)\
    \ < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n            if\
    \ (increasing && l.get(i) > l.get(i + 1)) {\n                return false;\n \
    \           }\n            if (!increasing && l.get(i) < l.get(i + 1)) {\n   \
    \             return false;\n            }\n        }\n        return true;\n",
  "        if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1;\
    \ i++) {\n            if (increasing && l.get(i) > l.get(i + 1)) {\n         \
    \       return false;\n            }\n            if (!increasing && l.get(i)\
    \ < l.get(i + 1)) {\n                return false;\n            }\n        }\n\
    \        return true;\n", "        boolean increasing = true;\n        boolean\
    \ decreasing = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n     \
    \       if (l.get(i) > l.get(i + 1)) {\n                increasing = false;\n\
    \            }\n            if (l.get(i) < l.get(i + 1)) {\n                decreasing\
    \ = false;\n            }\n        }\n        return increasing || decreasing;\n",
  "        if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i - 1)) {\n      \
    \          increasing = false;\n            }\n            if (l.get(i) > l.get(i\
    \ - 1)) {\n                decreasing = false;\n            }\n        }\n   \
    \     return increasing || decreasing;\n", "        if (l.size() <= 1) {\n   \
    \         return true;\n        }\n        boolean increasing = l.get(0) < l.get(1);\n\
    \        for (int i = 1; i < l.size() - 1; i++) {\n            if (increasing\
    \ && l.get(i) > l.get(i + 1)) {\n                return false;\n            }\n\
    \            if (!increasing && l.get(i) < l.get(i + 1)) {\n                return\
    \ false;\n            }\n        }\n        return true;\n", "        return l.stream().allMatch(x\
    \ -> x >= l.get(0)) || l.stream().allMatch(x -> x <= l.get(0));\n", "        if\
    \ (l.size() < 2) {\n            return true;\n        }\n        long diff = l.get(1)\
    \ - l.get(0);\n        for (int i = 1; i < l.size(); i++) {\n            long\
    \ newDiff = l.get(i) - l.get(i - 1);\n            if (newDiff * diff < 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n",
  "        if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i - 1)) {\n      \
    \          increasing = false;\n            }\n            if (l.get(i) > l.get(i\
    \ - 1)) {\n                decreasing = false;\n            }\n        }\n   \
    \     return increasing || decreasing;\n", "        if (l.size() <= 1) {\n   \
    \         return true;\n        }\n        boolean increasing = true;\n      \
    \  boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++) {\n\
    \            if (l.get(i) < l.get(i - 1)) {\n                increasing = false;\n\
    \            }\n            if (l.get(i) > l.get(i - 1)) {\n                decreasing\
    \ = false;\n            }\n        }\n        return increasing || decreasing;\n",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) < l.get(i\
    \ + 1)) {\n                decreasing = false;\n            }\n            if\
    \ (l.get(i) > l.get(i + 1)) {\n                increasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;\n", "        if (l.size()\
    \ == 0) {\n            return true;\n        }\n        long prev = l.get(0);\n\
    \        boolean increasing = true;\n        boolean decreasing = true;\n    \
    \    for (int i = 1; i < l.size(); i++) {\n            long curr = l.get(i);\n\
    \            if (curr < prev) {\n                increasing = false;\n       \
    \     }\n            if (curr > prev) {\n                decreasing = false;\n\
    \            }\n            prev = curr;\n        }\n        return increasing\
    \ || decreasing;\n", "        // Your code here.\n        return false;\n", " \
    \       return false;\n", "        if (l.size() < 2) {\n            return true;\n\
    \        }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing) {\n           \
    \     if (l.get(i) > l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            } else {\n                if (l.get(i) < l.get(i +\
    \ 1)) {\n                    return false;\n                }\n            }\n\
    \        }\n        return true;\n", "        if (l.size() <= 1) {\n         \
    \   return true;\n        }\n        boolean increasing = l.get(0) < l.get(1);\n\
    \        for (int i = 1; i < l.size() - 1; i++) {\n            if (increasing\
    \ && l.get(i) > l.get(i + 1)) {\n                return false;\n            }\n\
    \            if (!increasing && l.get(i) < l.get(i + 1)) {\n                return\
    \ false;\n            }\n        }\n        return true;\n", "        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i) < l.get(i + 1)) {\n  \
    \              decreasing = false;\n            }\n            if (l.get(i) >\
    \ l.get(i + 1)) {\n                increasing = false;\n            }\n      \
    \  }\n        return increasing || decreasing;\n", "        if (l.size() < 2)\
    \ {\n            return true;\n        }\n        boolean increasing = false;\n\
    \        boolean decreasing = false;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) > l.get(i - 1)) {\n                increasing =\
    \ true;\n            }\n            if (l.get(i) < l.get(i - 1)) {\n         \
    \       decreasing = true;\n            }\n        }\n        return !(increasing\
    \ && decreasing);\n", "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;\n", "    \
    \    if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i - 1)) {\n      \
    \          increasing = false;\n            }\n            if (l.get(i) > l.get(i\
    \ - 1)) {\n                decreasing = false;\n            }\n        }\n   \
    \     return increasing || decreasing;\n", "        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 0; i < l.size() - 1;\
    \ i++) {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;\n", "    \
    \    boolean increasing = true;\n        boolean decreasing = true;\n        for\
    \ (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1))\
    \ {\n                increasing = false;\n            }\n            if (l.get(i)\
    \ < l.get(i + 1)) {\n                decreasing = false;\n            }\n    \
    \    }\n        return increasing || decreasing;\n", "        if (l.size() <=\
    \ 1) {\n            return true;\n        }\n        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) < l.get(i - 1)) {\n                increasing =\
    \ false;\n            }\n            if (l.get(i) > l.get(i - 1)) {\n        \
    \        decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        if (l.size() < 2) {\n            return true;\n\
    \        }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing) {\n           \
    \     if (l.get(i) > l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            } else {\n                if (l.get(i) < l.get(i +\
    \ 1)) {\n                    return false;\n                }\n            }\n\
    \        }\n        return true;\n", "        boolean increasing = true;\n   \
    \     boolean decreasing = true;\n        for (int i = 0; i < l.size() - 1; i++)\
    \ {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing =\
    \ false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n        \
    \        decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        // Write your code here.\n        return false;\n",
  "        return l.stream().sorted().equals(l) || l.stream().sorted(Collections.reverseOrder()).equals(l);\n",
  "        if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1;\
    \ i++) {\n            if (increasing) {\n                if (l.get(i) > l.get(i\
    \ + 1)) {\n                    return false;\n                }\n            }\
    \ else {\n                if (l.get(i) < l.get(i + 1)) {\n                   \
    \ return false;\n                }\n            }\n        }\n        return true;\n",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i\
    \ + 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;\n", "        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n  \
    \              increasing = false;\n            }\n            if (l.get(i) <\
    \ l.get(i + 1)) {\n                decreasing = false;\n            }\n      \
    \  }\n        return increasing || decreasing;\n", "        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 0; i < l.size()\
    \ - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        return l.stream().reduce(0L, (a, b) -> a == 0 ?\
    \ b : b - a) >= 0;\n", "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;\n", "    \
    \    if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1;\
    \ i++) {\n            if (increasing) {\n                if (l.get(i) > l.get(i\
    \ + 1)) {\n                    return false;\n                }\n            }\
    \ else {\n                if (l.get(i) < l.get(i + 1)) {\n                   \
    \ return false;\n                }\n            }\n        }\n        return true;\n",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i\
    \ + 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;\n", "        if (l.size()\
    \ <= 1) {\n            return true;\n        }\n        boolean increasing = l.get(0)\
    \ < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n            if\
    \ (increasing && l.get(i) > l.get(i + 1)) {\n                return false;\n \
    \           }\n            if (!increasing && l.get(i) < l.get(i + 1)) {\n   \
    \             return false;\n            }\n        }\n        return true;\n",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i\
    \ + 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;\n", "        if (l.size()\
    \ < 2) {\n            return true;\n        }\n        long prev = l.get(0);\n\
    \        boolean increasing = true;\n        boolean decreasing = true;\n    \
    \    for (int i = 1; i < l.size(); i++) {\n            long curr = l.get(i);\n\
    \            if (curr > prev) {\n                decreasing = false;\n       \
    \     } else if (curr < prev) {\n                increasing = false;\n       \
    \     }\n            prev = curr;\n        }\n        return increasing || decreasing;\n",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i\
    \ + 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;\n", "        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n  \
    \              increasing = false;\n            }\n            if (l.get(i) <\
    \ l.get(i + 1)) {\n                decreasing = false;\n            }\n      \
    \  }\n        return increasing || decreasing;\n", "        if (l.size() == 0)\
    \ {\n            return true;\n        }\n        long prev = l.get(0);\n    \
    \    boolean increasing = true;\n        boolean decreasing = true;\n        for\
    \ (int i = 1; i < l.size(); i++) {\n            long curr = l.get(i);\n      \
    \      if (curr > prev) {\n                decreasing = false;\n            }\n\
    \            if (curr < prev) {\n                increasing = false;\n       \
    \     }\n            prev = curr;\n        }\n        return increasing || decreasing;\n",
  "        if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i - 1)) {\n      \
    \          increasing = false;\n            }\n            if (l.get(i) > l.get(i\
    \ - 1)) {\n                decreasing = false;\n            }\n        }\n   \
    \     return increasing || decreasing;\n", "        return l.stream().allMatch(x\
    \ -> x >= l.get(0)) || l.stream().allMatch(x -> x <= l.get(0));\n", "        if\
    \ (l.size() <= 1) {\n            return true;\n        }\n        boolean increasing\
    \ = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n \
    \           if (increasing && l.get(i) > l.get(i + 1)) {\n                return\
    \ false;\n            }\n            if (!increasing && l.get(i) < l.get(i + 1))\
    \ {\n                return false;\n            }\n        }\n        return true;\n",
  "        long prev = l.get(0);\n        boolean increasing = true;\n        boolean\
    \ decreasing = true;\n        for (int i = 1; i < l.size(); i++) {\n         \
    \   long curr = l.get(i);\n            if (curr > prev) {\n                decreasing\
    \ = false;\n            } else if (curr < prev) {\n                increasing\
    \ = false;\n            }\n            prev = curr;\n        }\n        return\
    \ increasing || decreasing;\n", "        boolean increasing = true;\n        boolean\
    \ decreasing = true;\n        for (int i = 1; i < l.size(); i++) {\n         \
    \   if (l.get(i) < l.get(i - 1)) {\n                increasing = false;\n    \
    \        }\n            if (l.get(i) > l.get(i - 1)) {\n                decreasing\
    \ = false;\n            }\n        }\n        return increasing || decreasing;\n",
  "        return l.stream().sorted().collect(Collectors.toList()).equals(l) || l.stream().sorted(Collections.reverseOrder()).collect(Collectors.toList()).equals(l);\n",
  "        if (l.size() == 0) {\n            return true;\n        }\n        long\
    \ prev = l.get(0);\n        int direction = 0;\n        for (int i = 1; i < l.size();\
    \ i++) {\n            long curr = l.get(i);\n            if (direction == 0) {\n\
    \                if (curr > prev) {\n                    direction = 1;\n    \
    \            } else if (curr < prev) {\n                    direction = -1;\n\
    \                }\n            } else if (direction == 1) {\n               \
    \ if (curr < prev) {\n                    return false;\n                }\n \
    \           } else if (direction == -1) {\n                if (curr > prev) {\n\
    \                    return false;\n                }\n            }\n       \
    \     prev = curr;\n        }\n        return true;\n", "        return l.stream().reduce(new\
    \ Pair<Long, Long>(l.get(0), l.get(0))\n                                , (p,\
    \ x) -> {\n                                    if (p.getValue0() < p.getValue1()\
    \ && x < p.getValue1()) {\n                                        return new\
    \ Pair<Long, Long>(p.getValue0(), x);\n                                    } else\
    \ if (p.getValue0() > p.getValue1() && x > p.getValue1()) {\n                \
    \                        return new Pair<Long, Long>(p.getValue0(), x);\n    \
    \                                } else {\n                                  \
    \      return new Pair<Long, Long>(p.getValue0(), p.getValue1());\n          \
    \                          }\n                                }).getValue0() ==\
    \ l.get(0);\n", "        if (l.size() <= 1) {\n            return true;\n    \
    \    }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int i\
    \ = 1; i < l.size() - 1; i++) {\n            if (increasing && l.get(i) > l.get(i\
    \ + 1)) {\n                return false;\n            }\n            if (!increasing\
    \ && l.get(i) < l.get(i + 1)) {\n                return false;\n            }\n\
    \        }\n        return true;\n", "        if (l.size() < 2) {\n          \
    \  return true;\n        }\n        long prev = l.get(0);\n        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 1; i < l.size();\
    \ i++) {\n            long curr = l.get(i);\n            if (curr < prev) {\n\
    \                increasing = false;\n            }\n            if (curr > prev)\
    \ {\n                decreasing = false;\n            }\n            prev = curr;\n\
    \        }\n        return increasing || decreasing;\n", "        if (l.size()\
    \ <= 1) {\n            return true;\n        }\n        boolean increasing = l.get(0)\
    \ < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n            if\
    \ (increasing && l.get(i) > l.get(i + 1)) {\n                return false;\n \
    \           }\n            if (!increasing && l.get(i) < l.get(i + 1)) {\n   \
    \             return false;\n            }\n        }\n        return true;\n",
  "        if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1;\
    \ i++) {\n            if (increasing) {\n                if (l.get(i) > l.get(i\
    \ + 1)) {\n                    return false;\n                }\n            }\
    \ else {\n                if (l.get(i) < l.get(i + 1)) {\n                   \
    \ return false;\n                }\n            }\n        }\n        return true;\n",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i\
    \ + 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;\n", "        if (l.size()\
    \ <= 1) {\n            return true;\n        }\n        boolean increasing = l.get(0)\
    \ < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n            if\
    \ (increasing && l.get(i) > l.get(i + 1)) {\n                return false;\n \
    \           }\n            if (!increasing && l.get(i) < l.get(i + 1)) {\n   \
    \             return false;\n            }\n        }\n        return true;\n",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i\
    \ + 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;\n", "        if (l.size()\
    \ <= 1) {\n            return true;\n        }\n        int sign = 0;\n      \
    \  for (int i = 1; i < l.size(); i++) {\n            int s = Long.signum(l.get(i)\
    \ - l.get(i - 1));\n            if (s == 0) {\n                continue;\n   \
    \         }\n            if (sign == 0) {\n                sign = s;\n       \
    \     } else if (sign != s) {\n                return false;\n            }\n\
    \        }\n        return true;\n", "        boolean increasing = true;\n   \
    \     boolean decreasing = true;\n        for (int i = 0; i < l.size() - 1; i++)\
    \ {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing =\
    \ false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n        \
    \        decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;\n", "        if (l.size() <= 1) {\n            return true;\n\
    \        }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing) {\n           \
    \     if (l.get(i) > l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            } else {\n                if (l.get(i) < l.get(i +\
    \ 1)) {\n                    return false;\n                }\n            }\n\
    \        }\n        return true;\n", "        boolean inc = true;\n        boolean\
    \ dec = true;\n        for (int i = 1; i < l.size(); i++) {\n            if (l.get(i)\
    \ < l.get(i - 1)) {\n                inc = false;\n            }\n           \
    \ if (l.get(i) > l.get(i - 1)) {\n                dec = false;\n            }\n\
    \        }\n        return inc || dec;\n"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "    }\n\n"

name: HumanEval_27_flip_case
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // For a given string, flip lowercase characters to uppercase\
  \ and uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n \
  \   public static String flipCase(String string) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(flipCase((\"\
  \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
  \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
  tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
completions: ["        return string.chars()\n            .mapToObj(c -> (char) c)\n\
    \            .map(c -> Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c))\n\
    \            .map(c -> c.toString())\n            .collect(Collectors.joining());\n",
  "        return string.chars()\n            .mapToObj(c -> (char) c)\n         \
    \   .map(c -> Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c))\n\
    \            .map(c -> c.toString())\n            .collect(Collectors.joining());\n",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        return string.chars()\n\
    \            .mapToObj(c -> {\n                if (Character.isUpperCase(c)) {\n\
    \                    return Character.toLowerCase(c);\n                } else\
    \ {\n                    return Character.toUpperCase(c);\n                }\n\
    \            })\n            .map(c -> c.toString())\n            .collect(Collectors.joining());\n",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        return string.chars()\n  \
    \          .mapToObj(c -> {\n                if (Character.isUpperCase(c)) {\n\
    \                    return Character.toLowerCase(c);\n                } else\
    \ {\n                    return Character.toUpperCase(c);\n                }\n\
    \            })\n            .map(c -> Character.toString((char) c))\n       \
    \     .collect(Collectors.joining());\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        return string.chars()\n\
    \            .mapToObj(c -> {\n                if (Character.isUpperCase(c)) {\n\
    \                    return Character.toLowerCase(c);\n                } else\
    \ {\n                    return Character.toUpperCase(c);\n                }\n\
    \            })\n            .map(c -> c.toString())\n            .collect(Collectors.joining());\n",
  "        StringBuilder sb = new StringBuilder();\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .map(c ->\
    \ c.toString())\n            .collect(Collectors.joining());\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        return string.chars()\n  \
    \          .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .map(String::valueOf)\n\
    \            .collect(Collectors.joining());\n", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .map(c ->\
    \ c.toString())\n            .collect(Collectors.joining());\n", "        return\
    \ string.chars()\n            .mapToObj(c -> (char) c)\n            .map(c ->\
    \ {\n                if (Character.isUpperCase(c)) {\n                    return\
    \ Character.toLowerCase(c);\n                } else {\n                    return\
    \ Character.toUpperCase(c);\n                }\n            })\n            .collect(Collectors.joining());\n",
  "        StringBuilder sb = new StringBuilder();\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        return string.chars()\n\
    \            .mapToObj(c -> Character.isUpperCase(c) ? Character.toLowerCase(c)\
    \ : Character.toUpperCase(c))\n            .map(c -> Character.toString((char)\
    \ c))\n            .collect(Collectors.joining());\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        return string.chars()\n  \
    \          .mapToObj(c -> {\n                if (Character.isLowerCase(c)) {\n\
    \                    return Character.toUpperCase(c);\n                } else\
    \ {\n                    return Character.toLowerCase(c);\n                }\n\
    \            })\n            .map(c -> Character.toString((char) c))\n       \
    \     .collect(Collectors.joining());\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(Character.toLowerCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        return string.chars()\n  \
    \          .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .map(c ->\
    \ c.toString())\n            .collect(Collectors.joining());\n", "        return\
    \ string.chars()\n            .mapToObj(c -> (char) c)\n            .map(c ->\
    \ Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c))\n\
    \            .map(String::valueOf)\n            .collect(Collectors.joining());\n",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(Character.toLowerCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        return string.chars()\n  \
    \          .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .map(String::valueOf)\n\
    \            .collect(Collectors.joining());\n", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (char c : string.toCharArray()) {\n          \
    \  if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        return string.chars()\n  \
    \          .mapToObj(c -> {\n                if (Character.isLowerCase(c)) {\n\
    \                    return Character.toUpperCase(c);\n                } else\
    \ {\n                    return Character.toLowerCase(c);\n                }\n\
    \            })\n            .map(c -> Character.toString((char) c))\n       \
    \     .collect(Collectors.joining());\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(Character.toLowerCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        return string.chars()\n  \
    \          .mapToObj(c -> {\n                if (Character.isLowerCase(c)) {\n\
    \                    return Character.toUpperCase(c);\n                } else\
    \ {\n                    return Character.toLowerCase(c);\n                }\n\
    \            })\n            .map(c -> Character.toString((char) c))\n       \
    \     .collect(Collectors.joining());\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isLowerCase(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(Character.toLowerCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(Character.toLowerCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        return string.chars()\n  \
    \          .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .map(c ->\
    \ c.toString())\n            .collect(Collectors.joining());\n", "        return\
    \ string.chars()\n            .mapToObj(c -> {\n                if (Character.isUpperCase(c))\
    \ {\n                    return Character.toLowerCase(c);\n                } else\
    \ {\n                    return Character.toUpperCase(c);\n                }\n\
    \            })\n            .map(c -> Character.toString((char) c))\n       \
    \     .collect(Collectors.joining());\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isLowerCase(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(Character.toLowerCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        return string.chars()\n  \
    \          .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .map(c ->\
    \ c.toString())\n            .collect(Collectors.joining());\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        return string.chars()\n  \
    \          .mapToObj(c -> {\n                if (Character.isLowerCase(c)) {\n\
    \                    return Character.toUpperCase(c);\n                } else\
    \ {\n                    return Character.toLowerCase(c);\n                }\n\
    \            })\n            .map(c -> Character.toString((char) c))\n       \
    \     .collect(Collectors.joining());\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .map(c ->\
    \ c.toString())\n            .collect(Collectors.joining());\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        return string.chars()\n  \
    \          .mapToObj(c -> {\n                if (Character.isLowerCase(c)) {\n\
    \                    return Character.toUpperCase(c);\n                } else\
    \ {\n                    return Character.toLowerCase(c);\n                }\n\
    \            })\n            .map(Object::toString)\n            .collect(Collectors.joining());\n",
  "        StringBuilder sb = new StringBuilder();\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        return string.chars()\n\
    \            .mapToObj(c -> {\n                if (Character.isUpperCase(c)) {\n\
    \                    return Character.toLowerCase(c);\n                } else\
    \ {\n                    return Character.toUpperCase(c);\n                }\n\
    \            })\n            .map(c -> Character.toString((char) c))\n       \
    \     .collect(Collectors.joining());\n", "        return string.chars()\n   \
    \         .mapToObj(c -> {\n                if (Character.isUpperCase(c)) {\n\
    \                    return Character.toLowerCase(c);\n                } else\
    \ {\n                    return Character.toUpperCase(c);\n                }\n\
    \            })\n            .map(c -> Character.toString((char) c))\n       \
    \     .collect(Collectors.joining());\n", "        return string.chars()\n   \
    \         .mapToObj(c -> {\n                if (Character.isUpperCase(c)) {\n\
    \                    return Character.toLowerCase(c);\n                } else\
    \ {\n                    return Character.toUpperCase(c);\n                }\n\
    \            })\n            .map(Object::toString)\n            .collect(Collectors.joining());\n",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isLowerCase(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(Character.toLowerCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        return string.chars()\n  \
    \          .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .map(c ->\
    \ c.toString())\n            .collect(Collectors.joining());\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        return string.chars()\n\
    \            .mapToObj(c -> {\n                if (Character.isUpperCase(c)) {\n\
    \                    return Character.toLowerCase(c);\n                } else\
    \ {\n                    return Character.toUpperCase(c);\n                }\n\
    \            })\n            .map(c -> c.toString())\n            .collect(Collectors.joining());\n",
  "        StringBuilder sb = new StringBuilder();\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        return string.chars()\n\
    \            .mapToObj(c -> {\n                if (Character.isUpperCase(c)) {\n\
    \                    return Character.toLowerCase(c);\n                } else\
    \ {\n                    return Character.toUpperCase(c);\n                }\n\
    \            })\n            .map(c -> Character.toString((char) c))\n       \
    \     .collect(Collectors.joining());\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        return string.chars()\n  \
    \          .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .map(c ->\
    \ c.toString())\n            .collect(Collectors.joining());\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();\n",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        return string.chars()\n  \
    \          .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .map(c ->\
    \ c.toString())\n            .collect(Collectors.joining());\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        return null;\n",
  "        StringBuilder sb = new StringBuilder();\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        return string.chars()\n\
    \            .mapToObj(c -> {\n                if (Character.isUpperCase(c)) {\n\
    \                    return Character.toLowerCase(c);\n                } else\
    \ {\n                    return Character.toUpperCase(c);\n                }\n\
    \            })\n            .map(c -> c.toString())\n            .collect(Collectors.joining());\n",
  "        StringBuilder sb = new StringBuilder();\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();\n",
  "        return string.chars()\n            .mapToObj(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .map(c ->\
    \ Character.toString((char) c))\n            .collect(Collectors.joining());\n",
  "        return string.chars()\n            .mapToObj(c -> (char) c)\n         \
    \   .map(c -> Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c))\n\
    \            .map(c -> c.toString())\n            .collect(Collectors.joining());\n",
  "        return string.chars()\n            .mapToObj(c -> {\n                if\
    \ (Character.isUpperCase(c)) {\n                    return Character.toLowerCase(c);\n\
    \                } else {\n                    return Character.toUpperCase(c);\n\
    \                }\n            })\n            .map(c -> String.valueOf((char)\
    \ c))\n            .collect(Collectors.joining());\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        return string.chars()\n\
    \            .mapToObj(c -> {\n                if (Character.isUpperCase(c)) {\n\
    \                    return Character.toLowerCase(c);\n                } else\
    \ {\n                    return Character.toUpperCase(c);\n                }\n\
    \            })\n            .map(c -> Character.toString((char) c))\n       \
    \     .collect(Collectors.joining());\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        return string.chars()\n\
    \            .mapToObj(c -> {\n                if (Character.isUpperCase(c)) {\n\
    \                    return Character.toLowerCase(c);\n                } else\
    \ {\n                    return Character.toUpperCase(c);\n                }\n\
    \            })\n            .map(c -> c.toString())\n            .collect(Collectors.joining());\n",
  "        // Your code here.\n        return null;\n", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isLowerCase(c)\
    \ ? Character.toUpperCase(c) : Character.toLowerCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();\n",
  "        // Your code here.\n        return null;\n", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .map(String::valueOf)\n\
    \            .collect(Collectors.joining());\n", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (char c : string.toCharArray()) {\n          \
    \  if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        return string.chars()\n  \
    \          .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .map(c ->\
    \ c.toString())\n            .collect(Collectors.joining());\n", "        return\
    \ string.chars()\n            .mapToObj(c -> {\n                if (Character.isLowerCase(c))\
    \ {\n                    return Character.toUpperCase(c);\n                } else\
    \ {\n                    return Character.toLowerCase(c);\n                }\n\
    \            })\n            .map(c -> Character.toString((char) c))\n       \
    \     .collect(Collectors.joining());\n", "        return string.chars()\n   \
    \         .mapToObj(c -> {\n                if (Character.isUpperCase(c)) {\n\
    \                    return Character.toLowerCase(c);\n                } else\
    \ {\n                    return Character.toUpperCase(c);\n                }\n\
    \            })\n            .map(c -> Character.toString((char) c))\n       \
    \     .collect(Collectors.joining());\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        return string.chars()\n  \
    \          .mapToObj(c -> (char) c)\n            .map(c -> Character.isLowerCase(c)\
    \ ? Character.toUpperCase(c) : Character.toLowerCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();\n",
  "        StringBuilder sb = new StringBuilder();\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .map(c ->\
    \ c.toString())\n            .collect(Collectors.joining());\n", "        return\
    \ string.chars()\n            .mapToObj(c -> {\n                if (Character.isLowerCase(c))\
    \ {\n                    return Character.toUpperCase(c);\n                } else\
    \ {\n                    return Character.toLowerCase(c);\n                }\n\
    \            })\n            .map(c -> Character.toString((char) c))\n       \
    \     .collect(Collectors.joining());\n", "        return string.chars()\n   \
    \         .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .map(c ->\
    \ c.toString())\n            .collect(Collectors.joining());\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        return string.chars()\n\
    \            .mapToObj(c -> {\n                if (Character.isUpperCase(c)) {\n\
    \                    return Character.toLowerCase(c);\n                } else\
    \ {\n                    return Character.toUpperCase(c);\n                }\n\
    \            })\n            .map(c -> Character.toString((char) c))\n       \
    \     .collect(Collectors.joining());\n", "        char[] chars = string.toCharArray();\n\
    \        for (int i = 0; i < chars.length; i++) {\n            if (Character.isUpperCase(chars[i]))\
    \ {\n                chars[i] = Character.toLowerCase(chars[i]);\n           \
    \ } else {\n                chars[i] = Character.toUpperCase(chars[i]);\n    \
    \        }\n        }\n        return new String(chars);\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        return string.chars()\n\
    \            .mapToObj(c -> Character.isUpperCase(c) ? Character.toLowerCase(c)\
    \ : Character.toUpperCase(c))\n            .map(c -> Character.toString((char)\
    \ c))\n            .collect(Collectors.joining());\n", "        return string.chars()\n\
    \            .mapToObj(c -> {\n                if (Character.isLowerCase(c)) {\n\
    \                    return Character.toUpperCase(c);\n                } else\
    \ {\n                    return Character.toLowerCase(c);\n                }\n\
    \            })\n            .map(c -> Character.toString((char) c))\n       \
    \     .collect(Collectors.joining());\n", "        return string.chars()\n   \
    \         .mapToObj(c -> Character.isUpperCase(c) ? Character.toLowerCase(c) :\
    \ Character.toUpperCase(c))\n            .map(c -> Character.toString((char) c))\n\
    \            .collect(Collectors.joining());\n", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (char c : string.toCharArray()) {\n          \
    \  if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .map(c ->\
    \ Character.toString(c))\n            .collect(Collectors.joining());\n", "  \
    \      StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        return string.chars()\n  \
    \          .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .map(c ->\
    \ Character.toString(c))\n            .collect(Collectors.joining());\n", "  \
    \      StringBuilder sb = new StringBuilder();\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isLowerCase(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(Character.toLowerCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        return string.chars()\n  \
    \          .mapToObj(c -> {\n                if (Character.isUpperCase(c)) {\n\
    \                    return Character.toLowerCase(c);\n                } else\
    \ {\n                    return Character.toUpperCase(c);\n                }\n\
    \            })\n            .map(c -> c.toString())\n            .collect(Collectors.joining());\n",
  "        return string.chars()\n            .mapToObj(c -> {\n                if\
    \ (Character.isUpperCase(c)) {\n                    return Character.toLowerCase(c);\n\
    \                } else {\n                    return Character.toUpperCase(c);\n\
    \                }\n            })\n            .map(c -> Character.toString((char)\
    \ c))\n            .collect(Collectors.joining());\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .map(c ->\
    \ c.toString())\n            .collect(Collectors.joining());\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        return string.chars()\n  \
    \          .mapToObj(c -> Character.isUpperCase(c) ? Character.toLowerCase(c)\
    \ : Character.toUpperCase(c))\n            .map(c -> Character.toString((char)\
    \ c))\n            .collect(Collectors.joining());\n", "        return string.chars()\n\
    \            .mapToObj(c -> {\n                if (Character.isUpperCase(c)) {\n\
    \                    return Character.toLowerCase(c);\n                } else\
    \ {\n                    return Character.toUpperCase(c);\n                }\n\
    \            })\n            .map(c -> Character.toString((char) c))\n       \
    \     .collect(Collectors.joining());\n", "        return string.chars()\n   \
    \         .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .map(c ->\
    \ c.toString())\n            .collect(Collectors.joining());\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();\n",
  "        return string.chars()\n                .mapToObj(c -> (char) c)\n     \
    \           .map(c -> Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c))\n\
    \                .map(String::valueOf)\n                .collect(Collectors.joining());\n",
  "        StringBuilder sb = new StringBuilder();\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();\n",
  "        return string.chars()\n            .mapToObj(c -> {\n                if\
    \ (Character.isUpperCase(c)) {\n                    return Character.toLowerCase(c);\n\
    \                } else {\n                    return Character.toUpperCase(c);\n\
    \                }\n            })\n            .map(Object::toString)\n     \
    \       .collect(Collectors.joining());\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(Character.toLowerCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        return string.chars()\n\
    \            .mapToObj(c -> {\n                if (Character.isUpperCase(c)) {\n\
    \                    return Character.toLowerCase(c);\n                } else\
    \ {\n                    return Character.toUpperCase(c);\n                }\n\
    \            })\n            .map(c -> c.toString())\n            .collect(Collectors.joining());\n",
  "        StringBuilder sb = new StringBuilder();\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isLowerCase(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(Character.toLowerCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isLowerCase(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(Character.toLowerCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "    }\n\n"

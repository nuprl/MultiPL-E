name: HumanEval_78_hex_key
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You have been tasked to write a function that receives \n\
  \    // a hexadecimal number as a string and counts the number of hexadecimal \n\
  \    // digits that are primes (prime number, or a prime, is a natural number \n\
  \    // greater than 1 that is not a product of two smaller natural numbers).\n\
  \    // Hexadecimal digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n\
  \    // Prime numbers are 2, 3, 5, 7, 11, 13, 17,...\n    // So you have to determine\
  \ a number of the following digits: 2, 3, 5, 7, \n    // B (=decimal 11), D (=decimal\
  \ 13).\n    // Note: you may assume the input is always correct or empty string,\
  \ \n    // and symbols A,B,C,D,E,F are always uppercase.\n    // Examples:\n   \
  \ // For num = \"AB\" the output should be 1.\n    // For num = \"1077E\" the output\
  \ should be 2.\n    // For num = \"ABED1A33\" the output should be 4.\n    // For\
  \ num = \"123456789ABCDEF0\" the output should be 6.\n    // For num = \"2020\"\
  \ the output should be 2.\n    public static long hexKey(String num) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(hexKey((\"\
  AB\")) == (1l));\n    assert(hexKey((\"1077E\")) == (2l));\n    assert(hexKey((\"\
  ABED1A33\")) == (4l));\n    assert(hexKey((\"2020\")) == (2l));\n    assert(hexKey((\"\
  123456789ABCDEF0\")) == (6l));\n    assert(hexKey((\"112233445566778899AABBCCDDEEFF00\"\
  )) == (12l));\n    }\n\n}\n"
completions: ["        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        return Arrays.stream(num.split(\"\
    \"))\n            .map(s -> Integer.parseInt(s, 16))\n            .filter(i ->\
    \ i == 2 || i == 3 || i == 5 || i == 7 || i == 11 || i == 13)\n            .count();\n",
  "        // Your code here\n        return 0;\n", "        // Your code here\n \
    \       return 0;\n", "        return num.chars().filter(c -> \"2357BD\".indexOf(c)\
    \ >= 0).count();\n", "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i)\
    \ == '2' || num.charAt(i) == '3' || num.charAt(i) == '5' || num.charAt(i) == '7'\
    \ || num.charAt(i) == 'B' || num.charAt(i) == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                count++;\n            }\n        }\n        return\
    \ count;\n", "        return num.chars().mapToObj(c -> (char)c).filter(c -> \"\
    2357BD\".contains(c.toString())).count();\n", "        // Your code here\n   \
    \     return 0;\n", "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        long result = 0;\n\
    \        // Your code here\n        return result;\n", "        long result =\
    \ 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                result++;\n            }\n        }\n        return\
    \ result;\n", "        long result = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                result++;\n\
    \            }\n        }\n        return result;\n", "        long count = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                count++;\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                count++;\n            }\n        }\n        return\
    \ count;\n", "        long result = 0;\n        if (num.length() == 0) {\n   \
    \         return result;\n        }\n        String[] hex = {\"0\", \"1\", \"\
    2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"\
    D\", \"E\", \"F\"};\n        List<String> hexList = Arrays.asList(hex);\n    \
    \    List<String> hexPrimeList = Arrays.asList(\"2\", \"3\", \"5\", \"7\", \"\
    B\", \"D\");\n        for (int i = 0; i < num.length(); i++) {\n            if\
    \ (hexPrimeList.contains(num.substring(i, i + 1))) {\n                result++;\n\
    \            }\n        }\n        return result;\n", "        long count = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                count++;\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        long result = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i)\
    \ == '2' || num.charAt(i) == '3' || num.charAt(i) == '5' || num.charAt(i) == '7'\
    \ || num.charAt(i) == 'B' || num.charAt(i) == 'D') {\n                result++;\n\
    \            }\n        }\n        return result;\n", "        long result = 0;\n\
    \        long[] primes = {2, 3, 5, 7, 11, 13};\n        long[] hex = {0, 1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15};\n        Map<Long, Long> map =\
    \ new HashMap<>();\n        for (int i = 0; i < hex.length; i++) {\n         \
    \   map.put(hex[i], hex[i]);\n        }\n        for (int i = 0; i < num.length();\
    \ i++) {\n            long key = map.get(num.charAt(i));\n            for (int\
    \ j = 0; j < primes.length; j++) {\n                if (key == primes[j]) {\n\
    \                    result++;\n                }\n            }\n        }\n\
    \        return result;\n", "        long result = 0;\n        // Your code here\n\
    \        return result;\n", "        // Your code here\n        return 0;\n",
  "        long result = 0;\n        if (num.length() == 0) return result;\n     \
    \   String hex = \"0123456789ABCDEF\";\n        String hexPrimes = \"2357BD\"\
    ;\n        for (int i = 0; i < num.length(); i++) {\n            if (hexPrimes.contains(num.substring(i,\
    \ i + 1))) result++;\n        }\n        return result;\n", "        long count\
    \ = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c =\
    \ num.charAt(i);\n            if (c == '2' || c == '3' || c == '5' || c == '7'\
    \ || c == 'B' || c == 'D') {\n                count++;\n            }\n      \
    \  }\n        return count;\n", "        long result = 0;\n        for (int i\
    \ = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n       \
    \     if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\
    \ {\n                result++;\n            }\n        }\n        return result;\n",
  "        long count = 0;\n        for (int i = 0; i < num.length(); i++) {\n   \
    \         char c = num.charAt(i);\n            if (c == '2' || c == '3' || c ==\
    \ '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n     \
    \       }\n        }\n        return count;\n", "        // Your code here.\n\
    \        return 0;\n", "        return num.chars().mapToObj(c -> (char)c).filter(c\
    \ -> \"2357BD\".contains(c.toString())).count();\n", "        if (num.length()\
    \ == 0) {\n            return 0;\n        }\n        long count = 0;\n       \
    \ for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                count++;\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                count++;\n            }\n        }\n        return\
    \ count;\n", "        // Your code here\n        return 0;\n", "        return\
    \ num.chars().filter(c -> \"2357BD\".indexOf(c) != -1).count();\n", "        long\
    \ result = 0;\n        long[] primes = {2, 3, 5, 7, 11, 13};\n        for (int\
    \ i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n     \
    \       int n = Character.getNumericValue(c);\n            if (n >= 10) {\n  \
    \              n -= 7;\n            }\n            if (Arrays.binarySearch(primes,\
    \ n) >= 0) {\n                result++;\n            }\n        }\n        return\
    \ result;\n", "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                count++;\n            }\n        }\n        return\
    \ count;\n", "        // Your code here\n        return 0;\n", "        long count\
    \ = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c =\
    \ num.charAt(i);\n            if (c == '2' || c == '3' || c == '5' || c == '7'\
    \ || c == 'B' || c == 'D') {\n                count++;\n            }\n      \
    \  }\n        return count;\n", "        // Your code here\n        return 0;\n",
  "        long result = 0;\n        String hex = \"0123456789ABCDEF\";\n        String\
    \ primes = \"2357BD\";\n        for (int i = 0; i < num.length(); i++) {\n   \
    \         if (primes.contains(num.substring(i, i + 1))) {\n                result++;\n\
    \            }\n        }\n        return result;\n", "        // Your code here\n\
    \        return 0;\n", "        long result = 0;\n        for (int i = 0; i <\
    \ num.length(); i++) {\n            char c = num.charAt(i);\n            int d\
    \ = Character.digit(c, 16);\n            if (d == 2 || d == 3 || d == 5 || d ==\
    \ 7 || d == 11 || d == 13) {\n                result++;\n            }\n     \
    \   }\n        return result;\n", "        // Your code here\n        return 0;\n",
  "        long count = 0;\n        for (int i = 0; i < num.length(); i++) {\n   \
    \         char c = num.charAt(i);\n            if (c == '2' || c == '3' || c ==\
    \ '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n     \
    \       }\n        }\n        return count;\n", "        long count = 0;\n   \
    \     for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                count++;\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        long result = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                result++;\n            }\n        }\n        return\
    \ result;\n", "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        long result = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            int value = Character.getNumericValue(c);\n            if (value\
    \ == 2 || value == 3 || value == 5 || value == 7 || value == 11 || value == 13)\
    \ {\n                result++;\n            }\n        }\n        return result;\n",
  "        long count = 0;\n        for (int i = 0; i < num.length(); i++) {\n   \
    \         if (num.charAt(i) == '2' || num.charAt(i) == '3' || num.charAt(i) ==\
    \ '5' || num.charAt(i) == '7' || num.charAt(i) == 'B' || num.charAt(i) == 'D')\
    \ {\n                count++;\n            }\n        }\n        return count;\n",
  "        long count = 0;\n        for (int i = 0; i < num.length(); i++) {\n   \
    \         char c = num.charAt(i);\n            if (c == '2' || c == '3' || c ==\
    \ '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n     \
    \       }\n        }\n        return count;\n", "        long result = 0;\n  \
    \      for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                result++;\n            }\n        }\n        return\
    \ result;\n", "        if (num.length() == 0) {\n            return 0;\n     \
    \   }\n        long result = 0;\n        for (int i = 0; i < num.length(); i++)\
    \ {\n            char c = num.charAt(i);\n            if (c == '2' || c == '3'\
    \ || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                result++;\n\
    \            }\n        }\n        return result;\n", "        long count = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                count++;\n            }\n        }\n        return\
    \ count;\n", "        return num.chars().mapToObj(c -> (char)c).filter(c -> \"\
    2357BD\".contains(c.toString())).count();\n", "        return num.chars().filter(c\
    \ -> \"2357BD\".indexOf(c) != -1).count();\n", "        long result = 0;\n   \
    \     String hex = \"0123456789ABCDEF\";\n        String primes = \"2357BDF\"\
    ;\n        for (int i = 0; i < num.length(); i++) {\n            if (primes.contains(num.substring(i,\
    \ i + 1))) {\n                result++;\n            }\n        }\n        return\
    \ result;\n", "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                count++;\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                count++;\n            }\n        }\n        return\
    \ count;\n", "        // Your code here\n        return 0;\n", "        return\
    \ num.chars().filter(c -> \"2357BD\".indexOf(c) != -1).count();\n", "        long\
    \ count = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char\
    \ c = num.charAt(i);\n            if (c == '2' || c == '3' || c == '5' || c ==\
    \ '7' || c == 'B' || c == 'D') {\n                count++;\n            }\n  \
    \      }\n        return count;\n", "        long count = 0;\n        for (int\
    \ i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n     \
    \       if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\
    \ {\n                count++;\n            }\n        }\n        return count;\n",
  "        String hex = \"0123456789ABCDEF\";\n        String primes = \"2357BDF\"\
    ;\n        long count = 0;\n        for (int i = 0; i < num.length(); i++) {\n\
    \            if (primes.contains(num.substring(i, i + 1))) {\n               \
    \ count++;\n            }\n        }\n        return count;\n", "        long\
    \ count = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if\
    \ (num.charAt(i) == '2' || num.charAt(i) == '3' || num.charAt(i) == '5' || num.charAt(i)\
    \ == '7' || num.charAt(i) == 'B' || num.charAt(i) == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                count++;\n            }\n        }\n        return\
    \ count;\n", "        return num.chars().mapToObj(c -> (char)c).filter(c -> \"\
    2357BD\".contains(c.toString())).count();\n", "        long result = 0;\n    \
    \    // Your code here\n        return result;\n", "        return num.chars().mapToObj(c\
    \ -> (char)c).filter(c -> \"2357BD\".contains(c.toString())).count();\n", "  \
    \      long result = 0;\n        String hex = \"0123456789ABCDEF\";\n        String\
    \ primes = \"2357BDF\";\n        for (int i = 0; i < num.length(); i++) {\n  \
    \          if (primes.contains(String.valueOf(num.charAt(i)))) {\n           \
    \     result++;\n            }\n        }\n        return result;\n", "      \
    \  long count = 0;\n        for (int i = 0; i < num.length(); i++) {\n       \
    \     char c = num.charAt(i);\n            if (c == '2' || c == '3' || c == '5'\
    \ || c == '7' || c == 'B' || c == 'D') {\n                count++;\n         \
    \   }\n        }\n        return count;\n", "        // Your code here\n     \
    \   return 0;\n", "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        return num.chars().filter(c\
    \ -> \"2357BD\".indexOf(c) > -1).count();\n", "        long count = 0;\n     \
    \   String hex = \"0123456789ABCDEF\";\n        String primes = \"2357BDF\";\n\
    \        for (int i = 0; i < num.length(); i++) {\n            if (primes.contains(num.substring(i,\
    \ i + 1))) {\n                count++;\n            }\n        }\n        return\
    \ count;\n", "        return num.chars().mapToObj(i -> (char)i).filter(c -> \"\
    2357BD\".contains(c+\"\")).count();\n", "        long count = 0;\n        for\
    \ (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                count++;\n            }\n        }\n        return\
    \ count;\n", "        long result = 0;\n        // Your code here\n        return\
    \ result;\n", "        // Your code here\n        return 0;\n", "        long\
    \ count = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char\
    \ c = num.charAt(i);\n            int d = Character.digit(c, 16);\n          \
    \  if (d == 2 || d == 3 || d == 5 || d == 7 || d == 11 || d == 13) {\n       \
    \         count++;\n            }\n        }\n        return count;\n", "    \
    \    return num.chars().mapToObj(i -> (char)i).filter(c -> \"2357BD\".contains(c.toString())).count();\n",
  "        long count = 0;\n        for (int i = 0; i < num.length(); i++) {\n   \
    \         char c = num.charAt(i);\n            if (c == '2' || c == '3' || c ==\
    \ '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n     \
    \       }\n        }\n        return count;\n", "        long count = 0;\n   \
    \     for (char c : num.toCharArray()) {\n            if (c == '2' || c == '3'\
    \ || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i)\
    \ == '2' || num.charAt(i) == '3' || num.charAt(i) == '5' || num.charAt(i) == '7'\
    \ || num.charAt(i) == 'B' || num.charAt(i) == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        String hex = \"0123456789ABCDEF\";\n        String prime = \"2357BDF\"\
    ;\n        for (int i = 0; i < num.length(); i++) {\n            if (prime.contains(num.substring(i,\
    \ i + 1))) {\n                count++;\n            }\n        }\n        return\
    \ count;\n", "        // Your code here\n        return 0;\n", "        long result\
    \ = 0;\n        long[] primes = {2, 3, 5, 7, 11, 13};\n        for (int i = 0;\
    \ i < num.length(); i++) {\n            char c = num.charAt(i);\n            int\
    \ n = 0;\n            if (c >= '0' && c <= '9') {\n                n = c - '0';\n\
    \            } else if (c >= 'A' && c <= 'F') {\n                n = c - 'A' +\
    \ 10;\n            }\n            for (int j = 0; j < primes.length; j++) {\n\
    \                if (n == primes[j]) {\n                    result++;\n      \
    \              break;\n                }\n            }\n        }\n        return\
    \ result;\n", "        // Your code here\n        return 0;\n", "        long\
    \ result = 0;\n        // Your code here\n        return result;\n", "       \
    \ long count = 0;\n        for (int i = 0; i < num.length(); i++) {\n        \
    \    char c = num.charAt(i);\n            if (c == '2' || c == '3' || c == '5'\
    \ || c == '7' || c == 'B' || c == 'D') {\n                count++;\n         \
    \   }\n        }\n        return count;\n", "        long count = 0;\n       \
    \ for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                count++;\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        String hex = \"0123456789ABCDEF\"\
    ;\n        String primes = \"2357BDF\";\n        for (int i = 0; i < num.length();\
    \ i++) {\n            if (primes.contains(num.substring(i, i + 1))) {\n      \
    \          count++;\n            }\n        }\n        return count;\n", "   \
    \     long count = 0;\n        for (int i = 0; i < num.length(); i++) {\n    \
    \        char c = num.charAt(i);\n            if (c == '2' || c == '3' || c ==\
    \ '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n     \
    \       }\n        }\n        return count;\n", "        // Your code here\n \
    \       return 0;\n", "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            if (num.charAt(i) == '2' || num.charAt(i) == '3' || num.charAt(i)\
    \ == '5' || num.charAt(i) == '7' || num.charAt(i) == 'B' || num.charAt(i) == 'D')\
    \ {\n                count++;\n            }\n        }\n        return count;\n",
  "        long result = 0;\n        // Write your code here\n        return result;\n",
  "        long result = 0;\n        for (int i = 0; i < num.length(); i++) {\n  \
    \          char c = num.charAt(i);\n            if (c == '2' || c == '3' || c\
    \ == '5' || c == '7' || c == 'B' || c == 'D') {\n                result++;\n \
    \           }\n        }\n        return result;\n", "        // Your code here\n\
    \        return 0;\n", "        // Your code here\n        return 0;\n", "   \
    \     long count = 0;\n        for (int i = 0; i < num.length(); i++) {\n    \
    \        char c = num.charAt(i);\n            if (c == '2' || c == '3' || c ==\
    \ '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n     \
    \       }\n        }\n        return count;\n", "        long result = 0;\n  \
    \      if (num.length() == 0) {\n            return result;\n        }\n     \
    \   String[] hexDigits = {\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"\
    7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"};\n        List<String>\
    \ hexPrimes = Arrays.asList(\"2\", \"3\", \"5\", \"7\", \"B\", \"D\");\n     \
    \   for (int i = 0; i < num.length(); i++) {\n            if (hexPrimes.contains(num.substring(i,\
    \ i + 1))) {\n                result++;\n            }\n        }\n        return\
    \ result;\n", "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                count++;\n            }\n        }\n        return\
    \ count;\n", "        long result = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                result++;\n\
    \            }\n        }\n        return result;\n", "        long result = 0;\n\
    \        // Your code here\n        return result;\n", "        long result =\
    \ 0;\n        String hex = \"0123456789ABCDEF\";\n        String primes = \"2357BDF\"\
    ;\n        for (int i = 0; i < num.length(); i++) {\n            if (primes.contains(num.substring(i,\
    \ i + 1))) {\n                result++;\n            }\n        }\n        return\
    \ result;\n", "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i)\
    \ == '2' || num.charAt(i) == '3' || num.charAt(i) == '5' || num.charAt(i) == '7'\
    \ || num.charAt(i) == 'B' || num.charAt(i) == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                count++;\n            }\n        }\n        return\
    \ count;\n", "        // Your code here\n        return 0;\n", "        // Your\
    \ code here\n        return 0;\n", "        return num.chars().mapToObj(c -> (char)c).filter(c\
    \ -> \"2357BD\".contains(c.toString())).count();\n", "        long result = 0;\n\
    \        String hex = \"0123456789ABCDEF\";\n        String primes = \"2357BDF\"\
    ;\n        for (int i = 0; i < num.length(); i++) {\n            if (primes.contains(num.substring(i,\
    \ i + 1))) {\n                result++;\n            }\n        }\n        return\
    \ result;\n", "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        // Your code here\n\
    \        return 0;\n", "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        char[] hex = {'0',\
    \ '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};\n\
    \        long[] primes = {2, 3, 5, 7, 11, 13};\n        long count = 0;\n    \
    \    for (int i = 0; i < num.length(); i++) {\n            for (int j = 0; j <\
    \ hex.length; j++) {\n                if (num.charAt(i) == hex[j]) {\n       \
    \             for (int k = 0; k < primes.length; k++) {\n                    \
    \    if (j == primes[k]) {\n                            count++;\n           \
    \             }\n                    }\n                }\n            }\n   \
    \     }\n        return count;\n", "        long result = 0;\n        for (int\
    \ i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n     \
    \       if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\
    \ {\n                result++;\n            }\n        }\n        return result;\n",
  "        long count = 0;\n        for (int i = 0; i < num.length(); i++) {\n   \
    \         char c = num.charAt(i);\n            if (c == '2' || c == '3' || c ==\
    \ '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n     \
    \       }\n        }\n        return count;\n", "        long result = 0;\n  \
    \      long[] hex = {2, 3, 5, 7, 11, 13};\n        for (int i = 0; i < num.length();\
    \ i++) {\n            for (int j = 0; j < hex.length; j++) {\n               \
    \ if (num.charAt(i) == hex[j] + '0' || num.charAt(i) == hex[j] + 'A' - 10) {\n\
    \                    result++;\n                }\n            }\n        }\n\
    \        return result;\n", "        return num.chars().filter(c -> \"2357BD\"\
    .indexOf(c) != -1).count();\n", "        long count = 0;\n        for (int i =\
    \ 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n         \
    \   if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\
    \ {\n                count++;\n            }\n        }\n        return count;\n",
  "        // Your code here\n        return 0;\n", "        // Your code here\n \
    \       return 0;\n", "        // Your code here\n        return 0;\n", "    \
    \    // Your code here\n        return 0;\n", "        // Your code here\n   \
    \     return 0;\n", "        long result = 0;\n        // Your code here\n   \
    \     return result;\n", "        long result = 0;\n        for (int i = 0; i\
    \ < num.length(); i++) {\n            char c = num.charAt(i);\n            if\
    \ (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n \
    \               result++;\n            }\n        }\n        return result;\n",
  "        long result = 0;\n        String[] hex = {\"0\", \"1\", \"2\", \"3\", \"\
    4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"\
    F\"};\n        List<String> hexList = Arrays.asList(hex);\n        List<String>\
    \ primes = Arrays.asList(\"2\", \"3\", \"5\", \"7\", \"B\", \"D\");\n        for\
    \ (int i = 0; i < num.length(); i++) {\n            if (primes.contains(num.substring(i,\
    \ i + 1))) {\n                result++;\n            }\n        }\n        return\
    \ result;\n", "        String hex = \"0123456789ABCDEF\";\n        String primes\
    \ = \"2357BDF\";\n        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            if (primes.contains(num.substring(i, i + 1))) {\n      \
    \          count++;\n            }\n        }\n        return count;\n", "   \
    \     long result = 0;\n        String hex = \"0123456789ABCDEF\";\n        String\
    \ primes = \"2357BDF\";\n        for (int i = 0; i < num.length(); i++) {\n  \
    \          if (primes.contains(num.substring(i, i + 1))) {\n                result++;\n\
    \            }\n        }\n        return result;\n", "        return num.chars().mapToObj(x\
    \ -> (char)x).filter(x -> \"2357BD\".contains(x.toString())).count();\n", "  \
    \      long result = 0;\n        if (num.length() == 0) {\n            return\
    \ result;\n        }\n        String[] hexDigits = {\"0\", \"1\", \"2\", \"3\"\
    , \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\"\
    , \"F\"};\n        List<String> hexDigitsList = Arrays.asList(hexDigits);\n  \
    \      List<String> primeHexDigits = Arrays.asList(\"2\", \"3\", \"5\", \"7\"\
    , \"B\", \"D\");\n        for (int i = 0; i < num.length(); i++) {\n         \
    \   if (primeHexDigits.contains(num.substring(i, i + 1))) {\n                result++;\n\
    \            }\n        }\n        return result;\n", "        long result = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                result++;\n            }\n        }\n        return\
    \ result;\n", "        long result = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                result++;\n\
    \            }\n        }\n        return result;\n", "        return num.chars().mapToObj(c\
    \ -> (char)c).filter(c -> \"2357BD\".contains(c.toString())).count();\n", "  \
    \      long count = 0;\n        String[] hex = {\"0\", \"1\", \"2\", \"3\", \"\
    4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"\
    F\"};\n        String[] prime = {\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"};\n\
    \        for (int i = 0; i < num.length(); i++) {\n            for (int j = 0;\
    \ j < prime.length; j++) {\n                if (num.substring(i, i + 1).equals(prime[j]))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        // Your code here\n        return 0;\n", " \
    \       long count = 0;\n        for (int i = 0; i < num.length(); i++) {\n  \
    \          char c = num.charAt(i);\n            if (c == '2' || c == '3' || c\
    \ == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n  \
    \          }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                count++;\n            }\n        }\n        return\
    \ count;\n", "        long result = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                result++;\n\
    \            }\n        }\n        return result;\n", "        long result = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                result++;\n            }\n        }\n        return\
    \ result;\n", "        long result = 0;\n        String hex = \"0123456789ABCDEF\"\
    ;\n        String primes = \"2357BDF\";\n        for (int i = 0; i < num.length();\
    \ i++) {\n            if (primes.contains(num.substring(i, i + 1))) {\n      \
    \          result++;\n            }\n        }\n        return result;\n", " \
    \       long count = 0;\n        for (int i = 0; i < num.length(); i++) {\n  \
    \          char c = num.charAt(i);\n            if (c == '2' || c == '3' || c\
    \ == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n  \
    \          }\n        }\n        return count;\n", "        long result = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                result++;\n            }\n        }\n        return\
    \ result;\n", "        long result = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                result++;\n\
    \            }\n        }\n        return result;\n", "        long count = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                count++;\n            }\n        }\n        return\
    \ count;\n", "        long result = 0;\n        // Your code here\n        return\
    \ result;\n", "        // Your code here\n        return 0;\n", "        // Your\
    \ code here\n        return 0;\n", "        long result = 0;\n        for (char\
    \ c : num.toCharArray()) {\n            if (c == '2' || c == '3' || c == '5' ||\
    \ c == '7' || c == 'B' || c == 'D') {\n                result++;\n           \
    \ }\n        }\n        return result;\n", "        return num.chars().mapToObj(i\
    \ -> (char)i).filter(c -> \"2357BD\".contains(c+\"\")).count();\n", "        long\
    \ result = 0;\n        char[] chars = num.toCharArray();\n        for (char c\
    \ : chars) {\n            switch (c) {\n                case '2':\n          \
    \      case '3':\n                case '5':\n                case '7':\n     \
    \           case 'B':\n                case 'D':\n                    result++;\n\
    \                    break;\n                default:\n                    break;\n\
    \            }\n        }\n        return result;\n", "        long result = 0;\n\
    \        String hex = \"0123456789ABCDEF\";\n        String prime = \"2357BDF\"\
    ;\n        for (int i = 0; i < num.length(); i++) {\n            if (prime.contains(num.substring(i,\
    \ i + 1))) {\n                result++;\n            }\n        }\n        return\
    \ result;\n", "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        // Your code here\n\
    \        return 0;\n", "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        // Your code here\n\
    \        return 0;\n", "        long result = 0;\n        for (int i = 0; i <\
    \ num.length(); i++) {\n            char c = num.charAt(i);\n            if (c\
    \ == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n    \
    \            result++;\n            }\n        }\n        return result;\n", " \
    \       long result = 0;\n        String hex = \"0123456789ABCDEF\";\n       \
    \ String primes = \"2357BDF\";\n        for (int i = 0; i < num.length(); i++)\
    \ {\n            if (primes.contains(num.substring(i, i + 1))) {\n           \
    \     result++;\n            }\n        }\n        return result;\n", "      \
    \  int[] hex = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 17, 19, 23, 29};\n     \
    \   long sum = 0;\n        for (int i = 0; i < num.length(); i++) {\n        \
    \    sum += hex[Character.getNumericValue(num.charAt(i))];\n        }\n      \
    \  return sum;\n", "        long result = 0;\n        String hex = \"0123456789ABCDEF\"\
    ;\n        String primes = \"2357BDF\";\n        for (int i = 0; i < num.length();\
    \ i++) {\n            if (primes.contains(num.substring(i, i + 1))) {\n      \
    \          result++;\n            }\n        }\n        return result;\n", " \
    \       long result = 0;\n        for (int i = 0; i < num.length(); i++) {\n \
    \           char c = num.charAt(i);\n            if (c == '2' || c == '3' || c\
    \ == '5' || c == '7' || c == 'B' || c == 'D') {\n                result++;\n \
    \           }\n        }\n        return result;\n", "        long count = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                count++;\n            }\n        }\n        return\
    \ count;\n", "        long result = 0;\n        return result;\n", "        long\
    \ count = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char\
    \ c = num.charAt(i);\n            int n = Character.getNumericValue(c);\n    \
    \        if (n == 2 || n == 3 || n == 5 || n == 7 || n == 11 || n == 13) {\n \
    \               count++;\n            }\n        }\n        return count;\n",
  "        return num.chars().mapToObj(i -> (char)i).filter(c -> \"2357BD\".contains(c.toString())).count();\n",
  "        // Your code here\n        return 0;\n", "        // Write your code here\n\
    \        return 0;\n", "        // Your code here\n        return 0;\n", "   \
    \     return num.chars().filter(c -> \"2357BD\".indexOf(c) >= 0).count();\n",
  "        long count = 0;\n        for (int i = 0; i < num.length(); i++) {\n   \
    \         char c = num.charAt(i);\n            if (c == '2' || c == '3' || c ==\
    \ '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n     \
    \       }\n        }\n        return count;\n", "        long count = 0;\n   \
    \     for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                count++;\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        return num.chars().filter(c\
    \ -> \"2357BDF\".indexOf(c) != -1).count();\n", "        long result = 0;\n  \
    \      String hex = \"0123456789ABCDEF\";\n        String primes = \"2357BDF\"\
    ;\n        for (int i = 0; i < num.length(); i++) {\n            if (primes.contains(String.valueOf(num.charAt(i))))\
    \ {\n                result++;\n            }\n        }\n        return result;\n",
  "        long count = 0;\n        for (char c : num.toCharArray()) {\n         \
    \   if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\
    \ {\n                count++;\n            }\n        }\n        return count;\n",
  "        long result = 0;\n        for (int i = 0; i < num.length(); i++) {\n  \
    \          char c = num.charAt(i);\n            if (c == '2' || c == '3' || c\
    \ == '5' || c == '7' || c == 'B' || c == 'D') {\n                result++;\n \
    \           }\n        }\n        return result;\n", "        long count = 0;\n\
    \        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                count++;\n            }\n        }\n        return\
    \ count;\n", "        return num.chars().filter(x -> \"2357BDF\".indexOf(x) !=\
    \ -1).count();\n", "        // Your code here\n        return 0;\n", "       \
    \ // Your code here\n        return 0;\n", "        long result = 0;\n       \
    \ String hex = \"0123456789ABCDEF\";\n        String primes = \"2357BD\";\n  \
    \      for (int i = 0; i < num.length(); i++) {\n            if (primes.contains(num.substring(i,\
    \ i + 1))) {\n                result++;\n            }\n        }\n        return\
    \ result;\n", "        long result = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                result++;\n\
    \            }\n        }\n        return result;\n", "        // Your code here\n\
    \        return 0;\n", "        long result = 0;\n        for (int i = 0; i <\
    \ num.length(); i++) {\n            char c = num.charAt(i);\n            if (c\
    \ == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n    \
    \            result++;\n            }\n        }\n        return result;\n", " \
    \       // Your code here\n        return 0;\n", "        long count = 0;\n  \
    \      for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                count++;\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        // Your code here\n\
    \        return 0;\n", "        return num.chars().filter(c -> \"2357BD\".indexOf(c)\
    \ != -1).count();\n", "        return Arrays.stream(num.split(\"\"))\n       \
    \     .map(s -> s.toUpperCase())\n            .map(s -> {\n                switch\
    \ (s) {\n                    case \"A\": return 10;\n                    case\
    \ \"B\": return 11;\n                    case \"C\": return 12;\n            \
    \        case \"D\": return 13;\n                    case \"E\": return 14;\n\
    \                    case \"F\": return 15;\n                    default: return\
    \ Integer.parseInt(s);\n                }\n            })\n            .filter(i\
    \ -> i == 2 || i == 3 || i == 5 || i == 7 || i == 11 || i == 13)\n           \
    \ .count();\n", "        return num.chars().filter(c -> \"2357BD\".indexOf(c)\
    \ > -1).count();\n", "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            if (num.charAt(i) == '2' || num.charAt(i) == '3' || num.charAt(i)\
    \ == '5' || num.charAt(i) == '7' || num.charAt(i) == 'B' || num.charAt(i) == 'D')\
    \ {\n                count++;\n            }\n        }\n        return count;\n",
  "        long result = 0;\n        String hex = \"0123456789ABCDEF\";\n        String\
    \ primes = \"2357BDF\";\n        for (int i = 0; i < num.length(); i++) {\n  \
    \          if (primes.contains(num.substring(i, i + 1))) {\n                result++;\n\
    \            }\n        }\n        return result;\n"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "    }\n\n"

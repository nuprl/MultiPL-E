name: HumanEval_108_count_nums
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp499gzf61.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmxd868yu.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        // Write\
    \ your code here\n        return 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq2aa63xg.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplmo70lku.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyv0ji_xy.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvy5v9y6m.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88e3lywo.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8tkud8hz.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x < 0 ? x.toString().chars().map(y -> y - '0').sum()\
    \ < 0 : x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk2n35qap.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        // Your\
    \ code here\n        return 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3m_w_t76.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).mapToLong(x -> x).sum();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1p1y_qq3.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 !=\
    \ -1).count();\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr3_y7ag_.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7up_fygx.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> sumDigits(x) > 0).count();\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxxbkssnt.java:17: error: cannot find symbol\n        return arr.stream().filter(x\
    \ -> x != 0).filter(x -> sumDigits(x) > 0).count();\n                        \
    \                                    ^\n  symbol:   method sumDigits(Long)\n \
    \ location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        // Your\
    \ code here\n        return 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplhi64f2q.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg3ouujv7.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp80j9c05q.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        // Your\
    \ code here\n        return 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgce6sxq9.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).mapToLong(x -> x).sum();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw2l0pp6c.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8b0sw_g7.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x != -1).filter(x -> x != 1).filter(x\
    \ -> x != -2).filter(x -> x != 2).filter(x -> x != -3).filter(x -> x != 3).filter(x\
    \ -> x != -4).filter(x -> x != 4).filter(x -> x != -5).filter(x -> x != 5).filter(x\
    \ -> x != -6).filter(x -> x != 6).filter(x -> x != -7).filter(x -> x != 7).filter(x\
    \ -> x != -8).filter(x -> x != 8).filter(x -> x != -9).filter(x -> x != 9).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl59o69tw.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).filter(x -> x.toString().chars().map(y -> y\
    \ - '0').sum() > 0).count();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi4ugk6p6.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 !=\
    \ -9).count();\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl6rdrf2m.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0 ? x % 9 != 0 : x % 9 != 0).count();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplrb8ovz7.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).mapToLong(x -> x).sum();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxvciepy9.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).filter(x -> x % 9 == 0).count();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiyny3q8.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).mapToLong(x -> x).sum();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq_usmna4.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzzp49f6a.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjji_b93f.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).filter(x -> x % 10 != 0).count();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1s6mva95.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).count();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi0hbew4m.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).count();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqlyt9kg7.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuchrzv5o.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoj9b_kz4.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxn_ssoi_.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        // Your\
    \ code here\n        return 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9b7w_vxk.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb_t3f367.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0 ? x % 9 > 0 : x % 9 < 0).count();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyulvo9rw.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 !=\
    \ -1).count();\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplz53aui4.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppaodu6ao.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppsw1iexw.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4g3apbge.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).filter(x -> x.toString().chars().map(y -> y\
    \ - '0').sum() > 0).count();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwx4tznxt.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).filter(x -> x % 10 != 0).count();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp84gqnoxa.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7a_ieb7n.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsw4rt5dy.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).count();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpih_jjyyr.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5hso15vi.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x < 0 ? x.toString().chars().map(y -> y - '0').sum()\
    \ < 0 : x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5dbsf2b6.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        // Your\
    \ code here.\n        return 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfguj0hgd.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).count();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnl_oldt0.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 !=\
    \ 0 || x / 10 != 0).count();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuf5vm9vm.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpshvuhjc6.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).count();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptst0f2yg.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 !=\
    \ -1).count();\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp16zo92qf.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        // Your\
    \ code here\n        return 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgcffcbm3.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr7ly40am.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj23qznmf.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdqnq1ppo.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        // Your\
    \ code here\n        return 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpabxhkku_.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        long\
    \ count = 0;\n        for (long i : arr) {\n            long sum = 0;\n      \
    \      long num = i;\n            if (num < 0) {\n                num = -num;\n\
    \                sum += -(num % 10);\n                num /= 10;\n           \
    \ }\n            while (num > 0) {\n                sum += num % 10;\n       \
    \         num /= 10;\n            }\n            if (sum > 0) {\n            \
    \    count++;\n            }\n        }\n        return count;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpezsi6g41.java:43)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ 0;\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkg89pe8g.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcv7x6vjq.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfqs5s86u.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).count();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpspqauv1w.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).count();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgvgq2n_8.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcjj_8_dw.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8z4ikhys.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(c -> c - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9mpbq4x7.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu0yj8j3d.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 !=\
    \ -x % 10).count();\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp703vy442.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x < 0 ? x.toString().chars().map(y -> y - '0').sum()\
    \ < 0 : x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2q7dusl5.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).filter(x -> x.toString().chars().map(y -> y\
    \ - '0').sum() > 0).count();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9qijpwtq.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> {\n            long sum = 0;\n\
    \            long n = x;\n            if (n < 0) {\n                n = -n;\n\
    \                sum += n % 10;\n                n /= 10;\n            }\n   \
    \         while (n > 0) {\n                sum += n % 10;\n                n /=\
    \ 10;\n            }\n            return sum > 0;\n        }).count();\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl9x823tb.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0 ? x % 9 != 0 : x % 9 != 0).count();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp96ajh8cv.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).count();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpao8er9ia.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo1egof73.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxqdgvxgz.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x < 0 ? x < -9 : x > 9).count();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6acmcqm3.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpux9edmxz.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 !=\
    \ -1).count();\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbgzhdeib.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3yklj2s1.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 !=\
    \ -1).count();\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9i9xe3d6.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        // Your\
    \ code here\n        return 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpig0l6zh4.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).filter(x -> x.toString().chars().map(y -> y\
    \ - '0').sum() > 0).count();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptlvuzp1b.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbc6jyqq0.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x < 0 ? x < -9 : x > 9).count();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvtwxnx7c.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ 0;\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptcxx9ckv.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).mapToLong(x -> x).sum();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpafa67oub.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0 ? x % 9 > 0 : x % 9 < 0).count();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqnvn9jjt.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        // Your\
    \ code here\n        return 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp2p_6j9m.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9yk7in_d.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x % 9 != 0).count();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1sn3m1in.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).filter(x -> x.toString().chars().map(y -> y\
    \ - '0').sum() > 0).count();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvc8i_iqs.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        long\
    \ count = 0;\n        for (long i : arr) {\n            if (i < 0) {\n       \
    \         i = -i;\n            }\n            long sum = 0;\n            while\
    \ (i > 0) {\n                sum += i % 10;\n                i /= 10;\n      \
    \      }\n            if (sum > 0) {\n                count++;\n            }\n\
    \        }\n        return count;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0y_i2n4z.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).filter(x -> x % 10 != 0).count();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpulkumxqk.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz771tm0u.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyo8___2.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        // Your\
    \ code here\n        return 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoyiezfq7.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        long\
    \ count = 0;\n        for (long num : arr) {\n            long sum = 0;\n    \
    \        long n = num;\n            if (n < 0) {\n                sum += n % 10;\n\
    \                n /= 10;\n            }\n            while (n > 0) {\n      \
    \          sum += n % 10;\n                n /= 10;\n            }\n         \
    \   if (sum > 0) {\n                count++;\n            }\n        }\n     \
    \   return count;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx4n8zcso.java:42)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6t5s836r.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0 ? x % 9 != 0 : x % 9 != -9).count();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvingxydv.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu1tva0qd.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 !=\
    \ -1).count();\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_zy3yqkl.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyh0thr76.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).filter(x -> x.toString().chars().map(y -> y\
    \ - '0').sum() > 0).count();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw8ew62ka.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0 ? x % 9 != 0 : x % 9 != -9).count();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8w2b8zud.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppzbdawkz.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 !=\
    \ -1).count();\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbjgafgpe.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x > 0 ? x % 9 != 0 : x % 9 != -9).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb3tuofnz.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4f6o4_vf.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x < 0 ? x.toString().chars().map(y -> y - '0').sum()\
    \ < 0 : x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp42atqn93.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwlrlx7p0.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8aj75fli.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ 0;\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj85kdcc9.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 !=\
    \ -1).count();\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzq203066.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).filter(x -> x.toString().chars().map(y -> y\
    \ - '0').sum() > 0).count();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdrtj5ydb.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 !=\
    \ -1).count();\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm8c81gkb.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).filter(x -> x.toString().chars().map(y -> y\
    \ - '0').sum() > 0).count();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm38ernm_.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).filter(x -> x.toString().chars().map(y -> y\
    \ - '0').sum() > 0).count();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpofjia4j2.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        long\
    \ count = 0;\n        for (long num : arr) {\n            if (num < 0) {\n   \
    \             num = -num;\n            }\n            long sum = 0;\n        \
    \    while (num > 0) {\n                sum += num % 10;\n                num\
    \ /= 10;\n            }\n            if (sum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvwuq5ec4.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0 ? sumDigits(x) > 0 : sumDigits(-x) > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6tl5rtup.java:17: error: cannot find symbol\n        return arr.stream().filter(x\
    \ -> x > 0 ? sumDigits(x) > 0 : sumDigits(-x) > 0).count();\n                \
    \                                ^\n  symbol:   method sumDigits(Long)\n  location:\
    \ class Problem\n/tmp/tmp6tl5rtup.java:17: error: cannot find symbol\n       \
    \ return arr.stream().filter(x -> x > 0 ? sumDigits(x) > 0 : sumDigits(-x) > 0).count();\n\
    \                                                                   ^\n  symbol:\
    \   method sumDigits(long)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa257ioq5.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 !=\
    \ -1).count();\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppiwdl15n.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_ykwzur.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).mapToLong(x -> x).sum();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb8u0_c86.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).count();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprma58rhs.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).filter(x -> x.toString().chars().map(y -> y\
    \ - '0').sum() > 0).count();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp97mh2vzk.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 !=\
    \ -1).count();\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmk99b30d.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 !=\
    \ -1).count();\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyfw41i76.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).filter(x -> x.toString().chars().map(y -> y\
    \ - '0').sum() > 0).count();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl7bntrv8.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 ==\
    \ 0).count();\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuulwtdfs.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x < 0 ? x == -x : x > 0).count();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp84w3t32k.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x < 0 ? x < -9 : x > 9).count();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiv4uoq__.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).mapToLong(x -> x).sum();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqp_u8abs.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_u_af03p.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_u5g0sjk.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        // Write\
    \ your code here\n        return 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k49wf21.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo8cmcxtj.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        // TODO:\
    \ implement this function\n        return 0;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6d_s5kfy.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgdewvro_.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(Character::getNumericValue).sum()\
    \ > 0).count();\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp8szorvh.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ 0;\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpreve2a9t.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x < 0 ? x < -9 : x > 9).count();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ewuqqu0.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 !=\
    \ -1).count();\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplrm3zu2u.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1sks6ne.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        // Your\
    \ code here\n        return 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpan10uda8.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).filter(x -> x.toString().chars().map(y -> y\
    \ - '0').sum() > 0).count();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6l29_9wq.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(Character::getNumericValue).sum()\
    \ > 0).count();\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp47dcitzu.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0 ? x % 9 != 0 : x % 9 != -9).count();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvpqfc8gz.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjgrvtxa2.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).filter(x -> x % 9 == 0).count();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjg95uuj6.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr3mjz6k_.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).mapToLong(x -> x).sum();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphm0bjmkw.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkjvnmnvq.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        // Write\
    \ your code here\n        return 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoeueojtt.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnnmyb_7g.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa9x3zrsq.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).count();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmperfh7k_m.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0 ? x % 9 != 0 : x % 9 != -9).count();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnpkzsnle.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9sy89viz.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).filter(x -> x % 9 != 0).count();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpycp80k1y.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(e -> e < 0 ? e.toString().chars().map(c -> c - '0').sum()\
    \ > 0 : e.toString().chars().map(c -> c - '0').sum() > 0).count();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwcp44c1k.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7txew0gw.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).filter(x -> x % 10 != 0).count();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjvtbqkm2.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).count();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8uyi8nol.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).count();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpor4v7o5p.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5hu2e7yo.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx05hz5of.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ 0;\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp12zhgjsm.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy4rmi0al.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0 ? x % 9 > 0 : x % 9 < 0).count();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj1tpbuwx.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1yeqa93i.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).mapToLong(x -> x).sum();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjz3twgpm.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjlullaix.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        // Your\
    \ code here\n        return 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsgcjrowf.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x < 0 ?\n                x.toString().chars().map(y\
    \ -> y - '0').sum() < 0 :\n                x.toString().chars().map(y -> y - '0').sum()\
    \ > 0).count();\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbycqkn0z.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x > 0 ? x % 9 != 0 : x % 9 != -9).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt9u7eqhp.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpszz_qxkv.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkjqj5xnq.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ 0;\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0flbwqz5.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        long\
    \ count = 0;\n        for (long num : arr) {\n            long sum = 0;\n    \
    \        if (num < 0) {\n                sum += Math.abs(num % 10);\n        \
    \        num /= 10;\n            }\n            while (num > 0) {\n          \
    \      sum += num % 10;\n                num /= 10;\n            }\n         \
    \   if (sum > 0) {\n                count++;\n            }\n        }\n     \
    \   return count;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpccxei3dk.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ 0;\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjfkfj9c_.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x < 0 ? x == -1 || x == -2 || x == -3 || x == -4 ||\
    \ x == -5 || x == -6 || x == -7 || x == -8 || x == -9 : x > 0).count();\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpavolnjsa.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 !=\
    \ -1).count();\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsa3vjwta.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).filter(x -> x.toString().chars().map(y -> y\
    \ - '0').sum() > 0).count();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnpd990za.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).mapToLong(x -> x).sum();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpij0e30b1.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(Character::getNumericValue).sum()\
    \ > 0).count();\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpww3znc5y.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x < 0 ? x < -9 : x > 9).count();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv48twewd.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpocpt40bm.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa84wr8h0.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprk91l7d2.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        // Your\
    \ code here\n        long count = 0;\n        for (long i : arr) {\n         \
    \   long sum = 0;\n            if (i < 0) {\n                sum += Math.abs(i)\
    \ % 10;\n                i = Math.abs(i) / 10;\n            }\n            while\
    \ (i > 0) {\n                sum += i % 10;\n                i /= 10;\n      \
    \      }\n            if (sum > 0) {\n                count++;\n            }\n\
    \        }\n        return count;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3nwzscvu.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptf26y_u0.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(i -> i.toString().chars().map(Character::getNumericValue).sum()\
    \ > 0).count();\n\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa2ksjken.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        // Your\
    \ code here\n        return 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqjgmw8c_.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0).count();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi27fb_n6.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpez6o4vg4.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        // YOUR\
    \ CODE HERE\n        return 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp98yru420.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static long countNums(ArrayList<Long> arr) {\n        return\
    \ arr.stream().filter(x -> x > 0 ? x.toString().chars().map(y -> y - '0').sum()\
    \ > 0 : x.toString().chars().map(y -> y - '0').sum() < 0).count();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5l_vraon.java:22)\n"
  exit_code: 1
  status: Exception

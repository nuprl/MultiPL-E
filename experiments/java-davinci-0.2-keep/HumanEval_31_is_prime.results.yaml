name: HumanEval_31_is_prime
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 2) {\n            return true;\n        }\n        if\
    \ (n < 2 || n % 2 == 0) {\n            return false;\n        }\n        for (int\
    \ i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n              \
    \  return false;\n            }\n        }\n        return true;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n \
    \       if (n % 2 == 0) return false;\n        for (long i = 3; i * i <= n; i\
    \ += 2)\n            if (n % i == 0) return false;\n        return true;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (int i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        for\
    \ (long i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n    \
    \            return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (int i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n \
    \       if (n % 2 == 0) return false;\n        for (long i = 3; i * i <= n; i\
    \ += 2)\n            if (n % i == 0) return false;\n        return true;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (int i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        for\
    \ (long i = 2; i * i <= n; i++) {\n            if (n % i == 0) {\n           \
    \     return false;\n            }\n        }\n        return true;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (int i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n \
    \       if (n % 2 == 0) return false;\n        for (long i = 3; i * i <= n; i\
    \ += 2)\n            if (n % i == 0) return false;\n        return true;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n \
    \       if (n % 2 == 0) return false;\n        for (long i = 3; i * i <= n; i\
    \ += 2)\n            if (n % i == 0) return false;\n        return true;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n\
    \        if (n % 2 == 0 || n % 3 == 0) return false;\n        for (int i = 5;\
    \ i * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) return\
    \ false;\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (int i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        for\
    \ (long i = 2; i * i <= n; i++) {\n            if (n % i == 0) {\n           \
    \     return false;\n            }\n        }\n        return true;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n\
    \        if (n % 2 == 0 || n % 3 == 0) return false;\n        for (int i = 5;\
    \ i * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) return\
    \ false;\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        long i = 5;\n   \
    \     while (i * i <= n) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n\
    \                return false;\n            }\n            i += 6;\n        }\n\
    \        return true;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        for\
    \ (long i = 2; i * i <= n; i++) {\n            if (n % i == 0) {\n           \
    \     return false;\n            }\n        }\n        return true;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (int i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        for\
    \ (long i = 2; i * i <= n; i++) {\n            if (n % i == 0) {\n           \
    \     return false;\n            }\n        }\n        return true;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 2) return true;\n        if (n < 2 || n % 2 == 0) return\
    \ false;\n        for (int i = 3; i * i <= n; i += 2)\n            if (n % i ==\
    \ 0) return false;\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (int i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n \
    \       if (n % 2 == 0) return false;\n        for (long i = 3; i * i <= n; i\
    \ += 2)\n            if (n % i == 0) return false;\n        return true;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        for\
    \ (long i = 2; i * i <= n; i++) {\n            if (n % i == 0) {\n           \
    \     return false;\n            }\n        }\n        return true;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n \
    \       if (n % 2 == 0) return false;\n        for (long i = 3; i * i <= n; i\
    \ += 2)\n            if (n % i == 0) return false;\n        return true;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (int i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n \
    \       if (n % 2 == 0) return false;\n        for (long i = 3; i * i <= n; i\
    \ += 2)\n            if (n % i == 0) return false;\n        return true;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        for\
    \ (long i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n    \
    \            return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) return false;\n        for (long i = 2; i * i <= n;\
    \ i++) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n \
    \       if (n % 2 == 0) return false;\n        for (long i = 3; i * i <= n; i\
    \ += 2)\n            if (n % i == 0) return false;\n        return true;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        for\
    \ (long i = 2; i * i <= n; i++) {\n            if (n % i == 0) {\n           \
    \     return false;\n            }\n        }\n        return true;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n \
    \       if (n % 2 == 0) return false;\n        for (long i = 3; i * i <= n; i\
    \ += 2)\n            if (n % i == 0) return false;\n        return true;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        for\
    \ (long i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n    \
    \            return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (int i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n \
    \       if (n % 2 == 0) return false;\n        for (long i = 3; i * i <= n; i\
    \ += 2)\n            if (n % i == 0) return false;\n        return true;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        for\
    \ (long i = 2; i * i <= n; i++) {\n            if (n % i == 0) {\n           \
    \     return false;\n            }\n        }\n        return true;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (int i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (int i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        for\
    \ (long i = 2; i * i <= n; i++) {\n            if (n % i == 0) {\n           \
    \     return false;\n            }\n        }\n        return true;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n\
    \        if (n % 2 == 0 || n % 3 == 0) return false;\n        for (int i = 5;\
    \ i * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) return\
    \ false;\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 2) {\n            return true;\n        }\n        if\
    \ (n % 2 == 0) {\n            return false;\n        }\n        for (long i =\
    \ 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n \
    \   assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnk57kxu0.java:46)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (int i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 2) {\n            return true;\n        }\n        if\
    \ (n < 2 || n % 2 == 0) {\n            return false;\n        }\n        for (int\
    \ i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n              \
    \  return false;\n            }\n        }\n        return true;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 2) return true;\n        if (n < 2 || n % 2 == 0) return\
    \ false;\n        for (int i = 3; i * i <= n; i += 2)\n            if (n % i ==\
    \ 0) return false;\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 2) {\n            return true;\n        }\n        if\
    \ (n % 2 == 0) {\n            return false;\n        }\n        for (long i =\
    \ 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n \
    \   assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyq9wlq2q.java:46)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        for\
    \ (long i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n    \
    \            return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        for\
    \ (long i = 2; i * i <= n; i++) {\n            if (n % i == 0) {\n           \
    \     return false;\n            }\n        }\n        return true;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        for\
    \ (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n \
    \   assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n \
    \       if (n % 2 == 0) return false;\n        for (long i = 3; i * i <= n; i\
    \ += 2)\n            if (n % i == 0) return false;\n        return true;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        for (long i = 2; i\
    \ < n; i++) {\n            if (n % i == 0) {\n                return false;\n\
    \            }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        for\
    \ (long i = 2; i * i <= n; i++) {\n            if (n % i == 0) {\n           \
    \     return false;\n            }\n        }\n        return true;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (int i = 3; i * i <= n; i\
    \ += 2)\n            if (n % i == 0) return false;\n        return true;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        for\
    \ (long i = 2; i * i <= n; i++) {\n            if (n % i == 0) {\n           \
    \     return false;\n            }\n        }\n        return true;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (int i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n \
    \       if (n % 2 == 0) return false;\n        for (long i = 3; i * i <= n; i\
    \ += 2)\n            if (n % i == 0) return false;\n        return true;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        for\
    \ (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n \
    \   assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (long i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n <= 1) {\n            return false;\n        }\n        if\
    \ (n <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n\
    \ % 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i\
    \ * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) ==\
    \ (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(long\
    \ n) {\n        if (n == 1) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

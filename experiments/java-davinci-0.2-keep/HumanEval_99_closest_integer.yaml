name: HumanEval_99_closest_integer
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Create a function that takes a value (string) representing\
  \ a number\n    // and returns the closest integer to it. If the number is equidistant\n\
  \    // from two integers, round it away from zero.\n    // Examples\n    // >>>\
  \ closest_integer(\"10\")\n    // 10\n    // >>> closest_integer(\"15.3\")\n   \
  \ // 15\n    // Note:\n    // Rounding away from zero means that if the given number\
  \ is equidistant\n    // from two integers, the one you should return is the one\
  \ that is the\n    // farthest from zero. For example closest_integer(\"14.5\")\
  \ should\n    // return 15 and closest_integer(\"-14.5\") should return -15.\n \
  \   public static long closestInteger(String value) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(closestInteger((\"\
  10\")) == (10l));\n    assert(closestInteger((\"14.5\")) == (15l));\n    assert(closestInteger((\"\
  -15.5\")) == (-16l));\n    assert(closestInteger((\"15.3\")) == (15l));\n    assert(closestInteger((\"\
  0\")) == (0l));\n    }\n\n}\n"
completions: []
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "    }\n\n"

name: HumanEval_162_string_to_md5
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnmjyww8w.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8jyvr4e2.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : hashInBytes) {\n                sb.append(String.format(\"%02x\", b));\n \
    \           }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            return Optional.empty();\n     \
    \   }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfhii9n97.java:15: error: cannot find symbol\n            byte[]\
    \ hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n          \
    \                                               ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwt1qqc3o.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe6ve9jzq.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvma4wc0t.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhesd5s5.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx4boldfj.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp82pa6a69.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm1dd9eqk.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5yznk6hb.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfeheusro.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvbpprfir.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfhgrewph.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq836po0h.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpawuep94i.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            StringBuffer sb = new StringBuffer();\n          \
    \  for (byte b : digest) {\n                sb.append(String.format(\"%02x\",\
    \ b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp075lyovz.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7yw3tgrr.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxt4gx0zr.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            StringBuffer sb = new StringBuffer();\n          \
    \  for (byte b : digest) {\n                sb.append(String.format(\"%02x\",\
    \ b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp99w5lj09.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcx_rezqq.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsuzoa7zu.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpryc6bhik.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : hashInBytes) {\n                sb.append(String.format(\"%02x\", b));\n \
    \           }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            return Optional.empty();\n     \
    \   }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkrn836tj.java:15: error: cannot find symbol\n            byte[]\
    \ hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n          \
    \                                               ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp81g6ryj9.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // TODO: Implement me\n        return Optional.empty();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgjnsc6jj.java:18)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.length() == 0) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypdclnbl.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfodoqp8f.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0otixday.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpymc4epb1.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqcvupj3x.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2n5tfsbd.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0nn5a0i0.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7q4wxkbh.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp48jaahpl.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsttdgba3.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj4a65hid.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // TODO: Implement this function.\n    \
    \    return Optional.empty();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2o5tpoyl.java:18)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            StringBuffer sb = new StringBuffer();\n          \
    \  for (byte b : digest) {\n                sb.append(String.format(\"%02x\",\
    \ b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpio_oerem.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0eyh0rw_.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdom_2_1p.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptmuklc_p.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcrtdr3_1.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb8simolo.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpssya1nly.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz_onco9t.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpur9lrm79.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprsqot11o.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdjjitu1.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp67zuok_m.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe_sgxyqq.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyjkoaosz.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23y70bzj.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0a_r6l1i.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            StringBuffer sb = new StringBuffer();\n          \
    \  for (byte b : digest) {\n                sb.append(String.format(\"%02x\",\
    \ b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8b6rtya.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpimlemftr.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6i44zhu3.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            StringBuffer sb = new StringBuffer();\n          \
    \  for (byte b : digest) {\n                sb.append(String.format(\"%02x\",\
    \ b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp33zpje1x.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // YOUR CODE HERE\n        return null;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.Optional.equals(Object)\" because the return value of \"Problem.stringToMd5(String)\"\
    \ is null\n\tat Problem.main(tmpg2c_k7bz.java:18)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            StringBuffer sb = new StringBuffer();\n          \
    \  for (byte b : digest) {\n                sb.append(String.format(\"%02x\",\
    \ b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwxtc3gl9.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb89g5253.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvum7kind.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            StringBuffer sb = new StringBuffer();\n          \
    \  for (byte b : digest) {\n                sb.append(String.format(\"%02x\",\
    \ b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuhve0sl_.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // YOUR CODE HERE\n        return null;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.Optional.equals(Object)\" because the return value of \"Problem.stringToMd5(String)\"\
    \ is null\n\tat Problem.main(tmpkhqlrr10.java:18)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt66mthp3.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0h9ngy8c.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwouxdljv.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // YOUR CODE HERE\n        return Optional.empty();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsfikki30.java:18)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptigi4mj7.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpapwt77ju.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo9ei2xa2.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk00kwp20.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7i_k3pce.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpchrb1qgb.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mhzmvt_.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwa88iupl.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            StringBuffer sb = new StringBuffer();\n          \
    \  for (byte b : digest) {\n                sb.append(String.format(\"%02x\",\
    \ b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnofp84mp.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph42c4yej.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaov0h32o.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ouoj682.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            StringBuffer sb = new StringBuffer();\n          \
    \  for (byte b : digest) {\n                sb.append(String.format(\"%02x\",\
    \ b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph7dtfn9p.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzxjvjm5c.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzc0swgrn.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq2ltk1mh.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmfjqjhmr.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpth1ry60o.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1leta4cz.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptzubrn_x.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphcagiclx.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwvxdx52.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt5lovqsu.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            StringBuffer sb = new StringBuffer();\n          \
    \  for (byte b : digest) {\n                sb.append(String.format(\"%02x\",\
    \ b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp57y2teyk.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            StringBuffer sb = new StringBuffer();\n          \
    \  for (byte b : digest) {\n                sb.append(String.format(\"%02x\",\
    \ b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq3dznbbw.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpug7nfyk3.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcgru5qu9.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplp5cphyg.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_6fn5ytu.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ocw5io0.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0mj_zpvt.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmporapaxxn.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphkbj2nhx.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph_pdg_qu.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2gbz3k5n.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] hash = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : hash) {\n                sb.append(String.format(\"%02x\", b));\n        \
    \    }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi2k53ti6.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9d5obidd.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv0voys25.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_uzeksaz.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkzesl0i2.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdrprecv0.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4vx7oury.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsxn_segn.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3z18zl_m.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.length() == 0) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : hashInBytes) {\n                sb.append(String.format(\"%02x\", b));\n \
    \           }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            return Optional.empty();\n     \
    \   }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkmsqnatl.java:15: error: cannot find symbol\n            byte[]\
    \ hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n          \
    \                                               ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnc93lme9.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjgf8q9n5.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp63zc_2im.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaxhvsds9.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            StringBuffer sb = new StringBuffer();\n          \
    \  for (byte b : digest) {\n                sb.append(String.format(\"%02x\",\
    \ b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph5u2zjkt.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwchtup1.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : hashInBytes) {\n                sb.append(String.format(\"%02x\", b));\n \
    \           }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            return Optional.empty();\n     \
    \   }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgkljivfr.java:15: error: cannot find symbol\n            byte[]\
    \ hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n          \
    \                                               ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6gq67423.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : hashInBytes) {\n                sb.append(String.format(\"%02x\", b));\n \
    \           }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            return Optional.empty();\n     \
    \   }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi5zhl6sh.java:15: error: cannot find symbol\n            byte[]\
    \ hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n          \
    \                                               ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpos1yeilq.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8he_94r1.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr81bdwj5.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            StringBuffer sb = new StringBuffer();\n          \
    \  for (byte b : digest) {\n                sb.append(String.format(\"%02x\",\
    \ b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmhrpa3oj.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplcqnqyus.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbriihogt.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1hs_73y_.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3j78pubm.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpicp4n3aq.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5p6xq7vr.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // TODO: Implement me!\n        try {\n\
    \            MessageDigest md = MessageDigest.getInstance(\"MD5\");\n        \
    \    byte[] messageDigest = md.digest(text.getBytes());\n            BigInteger\
    \ no = new BigInteger(1, messageDigest);\n            String hashtext = no.toString(16);\n\
    \            while (hashtext.length() < 32) {\n                hashtext = \"0\"\
    \ + hashtext;\n            }\n            return Optional.of(hashtext);\n    \
    \    } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplzkt0yps.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpspg0vjwl.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq08j3rf0.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3on09oo2.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            StringBuffer sb = new StringBuffer();\n          \
    \  for (byte b : digest) {\n                sb.append(String.format(\"%02x\",\
    \ b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf88bf02c.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpilpwh8hy.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbrtnfgf3.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // TODO: Implement me!\n        return Optional.empty();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp79g996lh.java:18)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppxkjbgb6.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn1v3_tj5.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuyca_idt.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps8t5c3d0.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6rwwbhm0.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiiq7lpdq.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8rt44cms.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4nmpvgwd.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // TODO: Implement me\n        return Optional.empty();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq7an4ekj.java:18)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphufbm52z.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            StringBuffer sb = new StringBuffer();\n          \
    \  for (byte b : digest) {\n                sb.append(String.format(\"%02x\",\
    \ b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph7mr2wxa.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4oxpbs5v.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            StringBuffer sb = new StringBuffer();\n          \
    \  for (byte b : digest) {\n                sb.append(String.format(\"%02x\",\
    \ b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcru0x_mw.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9287mrs0.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp08o99h1f.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp89cuaff6.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp56fsct0w.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_21qsl01.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps1lyghwb.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_dqywob.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // TODO: Implement me\n        return Optional.empty();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyk2yz3oj.java:18)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk2oyvvt8.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplpzx_s9v.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz_ubl597.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            StringBuffer sb = new StringBuffer();\n          \
    \  for (byte b : digest) {\n                sb.append(String.format(\"%02x\",\
    \ b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7p_7mjd.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp30tudqll.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwms9mgwz.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg2f43vb0.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            StringBuffer sb = new StringBuffer();\n          \
    \  for (byte b : digest) {\n                sb.append(String.format(\"%02x\",\
    \ b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz1di307x.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] digest = md.digest(text.getBytes());\n           \
    \ StringBuffer sb = new StringBuffer();\n            for (byte b : digest) {\n\
    \                sb.append(String.format(\"%02x\", b & 0xff));\n            }\n\
    \            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm39hw1p5.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : hashInBytes) {\n                sb.append(String.format(\"%02x\", b));\n \
    \           }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            return Optional.empty();\n     \
    \   }\n\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(Optional.of(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert(stringToMd5((\"\
    password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxtp8gwy4.java:15: error: cannot find symbol\n            byte[]\
    \ hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n          \
    \                                               ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkcfffscf.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpddo2vhtx.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphidb67_8.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpax9_vjc_.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(Optional.of(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(Optional.of(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(stringToMd5((\"password\")).equals(Optional.of(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn_8xxw6u.java:29)\n"
  exit_code: 1
  status: Exception

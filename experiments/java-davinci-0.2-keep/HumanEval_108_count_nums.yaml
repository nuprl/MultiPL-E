name: HumanEval_108_count_nums
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Write a function count_nums which takes an array of integers\
  \ and returns\n    // the number of elements which has a sum of digits > 0.\n  \
  \  // If a number is negative, then its first signed digit will be negative:\n \
  \   // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) == 0\n\
  \    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2]) ==\
  \ 3\n    public static long countNums(ArrayList<Long> arr) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(countNums((new\
  \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
  \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n  \
  \  assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
  \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
  \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
  \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
  \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
  \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
completions: ["        return arr.stream().filter(x -> x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n", "        return arr.stream().filter(x ->\
    \ x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        // Write\
    \ your code here\n        return 0;\n", "        return arr.stream().filter(x\
    \ -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n",
  "        return arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum()\
    \ > 0).count();\n", "        return arr.stream().filter(x -> x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n", "        return arr.stream().filter(x ->\
    \ x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x < 0 ? x.toString().chars().map(y -> y - '0').sum()\
    \ < 0 : x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "     \
    \   // Your code here\n        return 0;\n", "        return arr.stream().filter(x\
    \ -> x > 0).mapToLong(x -> x).sum();\n", "        return arr.stream().filter(x\
    \ -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 != -1).count();\n", "  \
    \      return arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum()\
    \ > 0).count();\n", "        return arr.stream().filter(x -> x != 0).filter(x\
    \ -> sumDigits(x) > 0).count();\n", "        // Your code here\n        return\
    \ 0;\n", "        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n", "        return arr.stream().filter(x -> x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n", "        // Your code here\n        return\
    \ 0;\n", "        return arr.stream().filter(x -> x > 0).mapToLong(x -> x).sum();\n",
  "        return arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum()\
    \ > 0).count();\n", "        return arr.stream().filter(x -> x != 0).filter(x\
    \ -> x != -1).filter(x -> x != 1).filter(x -> x != -2).filter(x -> x != 2).filter(x\
    \ -> x != -3).filter(x -> x != 3).filter(x -> x != -4).filter(x -> x != 4).filter(x\
    \ -> x != -5).filter(x -> x != 5).filter(x -> x != -6).filter(x -> x != 6).filter(x\
    \ -> x != -7).filter(x -> x != 7).filter(x -> x != -8).filter(x -> x != 8).filter(x\
    \ -> x != -9).filter(x -> x != 9).count();\n", "        return arr.stream().filter(x\
    \ -> x > 0).filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n",
  "        return arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0\
    \ : x % 10 != -9).count();\n", "        return arr.stream().filter(x -> x > 0\
    \ ? x % 9 != 0 : x % 9 != 0).count();\n", "        return arr.stream().filter(x\
    \ -> x > 0).mapToLong(x -> x).sum();\n", "        return arr.stream().filter(x\
    \ -> x > 0).filter(x -> x % 9 == 0).count();\n", "        return arr.stream().filter(x\
    \ -> x > 0).mapToLong(x -> x).sum();\n", "        return arr.stream().filter(x\
    \ -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n",
  "        return arr.stream().filter(x -> x > 0).filter(x -> x % 10 != 0).count();\n",
  "        return arr.stream().filter(x -> x > 0).count();\n", "        return arr.stream().filter(x\
    \ -> x > 0).count();\n", "        return arr.stream().filter(x -> x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n", "        return arr.stream().filter(x ->\
    \ x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n",
  "        // Your code here\n        return 0;\n", "        return arr.stream().filter(x\
    \ -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x > 0 ? x % 9 > 0 : x % 9 < 0).count();\n", "     \
    \   return arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0 :\
    \ x % 10 != -1).count();\n", "        return arr.stream().filter(x -> x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n", "        return arr.stream().filter(x ->\
    \ x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n",
  "        return arr.stream().filter(x -> x > 0).filter(x -> x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n", "        return arr.stream().filter(x ->\
    \ x > 0).filter(x -> x % 10 != 0).count();\n", "        return arr.stream().filter(x\
    \ -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n",
  "        return arr.stream().filter(x -> x > 0).count();\n", "        return arr.stream().filter(x\
    \ -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x < 0 ? x.toString().chars().map(y -> y - '0').sum()\
    \ < 0 : x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "     \
    \   // Your code here.\n        return 0;\n", "        return arr.stream().filter(x\
    \ -> x > 0).count();\n", "        return arr.stream().filter(x -> x != 0).filter(x\
    \ -> x < 0 ? x % 10 != 0 : x % 10 != 0 || x / 10 != 0).count();\n", "        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n",
  "        return arr.stream().filter(x -> x > 0).count();\n", "        return arr.stream().filter(x\
    \ -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 != -1).count();\n", "  \
    \      // Your code here\n        return 0;\n", "        return arr.stream().filter(x\
    \ -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n",
  "        return arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum()\
    \ > 0).count();\n", "        // Your code here\n        return 0;\n", "      \
    \  long count = 0;\n        for (long i : arr) {\n            long sum = 0;\n\
    \            long num = i;\n            if (num < 0) {\n                num =\
    \ -num;\n                sum += -(num % 10);\n                num /= 10;\n   \
    \         }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n", "  \
    \      return 0;\n", "        return arr.stream().filter(x -> x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n", "        return arr.stream().filter(x ->\
    \ x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x > 0).count();\n", "        return arr.stream().filter(x\
    \ -> x > 0).count();\n", "        return arr.stream().filter(x -> x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n", "        return arr.stream().filter(x ->\
    \ x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x.toString().chars().map(c -> c - '0').sum() > 0).count();\n",
  "        return arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum()\
    \ > 0).count();\n", "        return arr.stream().filter(x -> x != 0).filter(x\
    \ -> x < 0 ? x % 10 != 0 : x % 10 != -x % 10).count();\n", "        return arr.stream().filter(x\
    \ -> x < 0 ? x.toString().chars().map(y -> y - '0').sum() < 0 : x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n", "        return arr.stream().filter(x ->\
    \ x > 0).filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n",
  "        return arr.stream().filter(x -> x != 0).filter(x -> {\n            long\
    \ sum = 0;\n            long n = x;\n            if (n < 0) {\n              \
    \  n = -n;\n                sum += n % 10;\n                n /= 10;\n       \
    \     }\n            while (n > 0) {\n                sum += n % 10;\n       \
    \         n /= 10;\n            }\n            return sum > 0;\n        }).count();\n",
  "        return arr.stream().filter(x -> x > 0 ? x % 9 != 0 : x % 9 != 0).count();\n",
  "        return arr.stream().filter(x -> x > 0).count();\n", "        return arr.stream().filter(x\
    \ -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n",
  "        return arr.stream().filter(x -> x < 0 ? x < -9 : x > 9).count();\n", " \
    \       return arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum()\
    \ > 0).count();\n", "        return arr.stream().filter(x -> x != 0).filter(x\
    \ -> x < 0 ? x % 10 != 0 : x % 10 != -1).count();\n", "        return arr.stream().filter(x\
    \ -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 !=\
    \ -1).count();\n", "        // Your code here\n        return 0;\n", "       \
    \ return arr.stream().filter(x -> x > 0).filter(x -> x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n", "        return arr.stream().filter(x ->\
    \ x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x < 0 ? x < -9 : x > 9).count();\n", "        return\
    \ 0;\n", "        return arr.stream().filter(x -> x > 0).mapToLong(x -> x).sum();\n",
  "        return arr.stream().filter(x -> x > 0 ? x % 9 > 0 : x % 9 < 0).count();\n",
  "        // Your code here\n        return 0;\n", "        return arr.stream().filter(x\
    \ -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x % 9 != 0).count();\n", "    \
    \    return arr.stream().filter(x -> x > 0).filter(x -> x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n", "        long count = 0;\n        for (long\
    \ i : arr) {\n            if (i < 0) {\n                i = -i;\n            }\n\
    \            long sum = 0;\n            while (i > 0) {\n                sum +=\
    \ i % 10;\n                i /= 10;\n            }\n            if (sum > 0) {\n\
    \                count++;\n            }\n        }\n        return count;\n",
  "        return arr.stream().filter(x -> x > 0).filter(x -> x % 10 != 0).count();\n",
  "        return arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum()\
    \ > 0).count();\n", "        return arr.stream().filter(x -> x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n", "        // Your code here\n        return\
    \ 0;\n", "        long count = 0;\n        for (long num : arr) {\n          \
    \  long sum = 0;\n            long n = num;\n            if (n < 0) {\n      \
    \          sum += n % 10;\n                n /= 10;\n            }\n         \
    \   while (n > 0) {\n                sum += n % 10;\n                n /= 10;\n\
    \            }\n            if (sum > 0) {\n                count++;\n       \
    \     }\n        }\n        return count;\n", "        return arr.stream().filter(x\
    \ -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x > 0 ? x % 9 != 0 : x % 9 != -9).count();\n", "  \
    \      return arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum()\
    \ > 0).count();\n", "        return arr.stream().filter(x -> x != 0).filter(x\
    \ -> x < 0 ? x % 10 != 0 : x % 10 != -1).count();\n", "        return arr.stream().filter(x\
    \ -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x > 0).filter(x -> x.toString().chars().map(y -> y\
    \ - '0').sum() > 0).count();\n", "        return arr.stream().filter(x -> x >\
    \ 0 ? x % 9 != 0 : x % 9 != -9).count();\n", "        return arr.stream().filter(x\
    \ -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 !=\
    \ -1).count();\n", "        return arr.stream().filter(x -> x != 0).filter(x ->\
    \ x > 0 ? x % 9 != 0 : x % 9 != -9).count();\n", "        return arr.stream().filter(x\
    \ -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x < 0 ? x.toString().chars().map(y -> y - '0').sum()\
    \ < 0 : x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "     \
    \   return arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum()\
    \ > 0).count();\n", "        return arr.stream().filter(x -> x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n", "        return 0;\n", "        return arr.stream().filter(x\
    \ -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 != -1).count();\n", "  \
    \      return arr.stream().filter(x -> x > 0).filter(x -> x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n", "        return arr.stream().filter(x ->\
    \ x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 != -1).count();\n", "     \
    \   return arr.stream().filter(x -> x > 0).filter(x -> x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n", "        return arr.stream().filter(x ->\
    \ x > 0).filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n",
  "        long count = 0;\n        for (long num : arr) {\n            if (num <\
    \ 0) {\n                num = -num;\n            }\n            long sum = 0;\n\
    \            while (num > 0) {\n                sum += num % 10;\n           \
    \     num /= 10;\n            }\n            if (sum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        return arr.stream().filter(x\
    \ -> x > 0 ? sumDigits(x) > 0 : sumDigits(-x) > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n",
  "        return arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0\
    \ : x % 10 != -1).count();\n", "        return arr.stream().filter(x -> x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n", "        return arr.stream().filter(x ->\
    \ x > 0).mapToLong(x -> x).sum();\n", "        return arr.stream().filter(x ->\
    \ x > 0).count();\n", "        return arr.stream().filter(x -> x > 0).filter(x\
    \ -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 !=\
    \ -1).count();\n", "        return arr.stream().filter(x -> x != 0).filter(x ->\
    \ x < 0 ? x % 10 != 0 : x % 10 != -1).count();\n", "        return arr.stream().filter(x\
    \ -> x > 0).filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n",
  "        return arr.stream().filter(x -> x != 0).filter(x -> x < 0 ? x % 10 != 0\
    \ : x % 10 == 0).count();\n", "        return arr.stream().filter(x -> x < 0 ?\
    \ x == -x : x > 0).count();\n", "        return arr.stream().filter(x -> x < 0\
    \ ? x < -9 : x > 9).count();\n", "        return arr.stream().filter(x -> x >\
    \ 0).mapToLong(x -> x).sum();\n", "        return arr.stream().filter(x -> x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n", "        return arr.stream().filter(x ->\
    \ x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        // Write\
    \ your code here\n        return 0;\n", "        return arr.stream().filter(x\
    \ -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        //\
    \ TODO: implement this function\n        return 0;\n", "        return arr.stream().filter(x\
    \ -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x.toString().chars().map(Character::getNumericValue).sum()\
    \ > 0).count();\n", "        return 0;\n", "        return arr.stream().filter(x\
    \ -> x < 0 ? x < -9 : x > 9).count();\n", "        return arr.stream().filter(x\
    \ -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 != -1).count();\n", "  \
    \      return arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum()\
    \ > 0).count();\n", "        // Your code here\n        return 0;\n", "      \
    \  return arr.stream().filter(x -> x > 0).filter(x -> x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n", "        return arr.stream().filter(x ->\
    \ x.toString().chars().map(Character::getNumericValue).sum() > 0).count();\n",
  "        return arr.stream().filter(x -> x > 0 ? x % 9 != 0 : x % 9 != -9).count();\n",
  "        return arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum()\
    \ > 0).count();\n", "        return arr.stream().filter(x -> x > 0).filter(x ->\
    \ x % 9 == 0).count();\n", "        return arr.stream().filter(x -> x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n", "        return arr.stream().filter(x ->\
    \ x > 0).mapToLong(x -> x).sum();\n", "        return arr.stream().filter(x ->\
    \ x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        // Write\
    \ your code here\n        return 0;\n", "        return arr.stream().filter(x\
    \ -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n",
  "        return arr.stream().filter(x -> x > 0).count();\n", "        return arr.stream().filter(x\
    \ -> x > 0 ? x % 9 != 0 : x % 9 != -9).count();\n", "        return arr.stream().filter(x\
    \ -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x > 0).filter(x -> x % 9 != 0).count();\n", "     \
    \   return arr.stream().filter(e -> e < 0 ? e.toString().chars().map(c -> c -\
    \ '0').sum() > 0 : e.toString().chars().map(c -> c - '0').sum() > 0).count();\n",
  "        return arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum()\
    \ > 0).count();\n", "        return arr.stream().filter(x -> x > 0).filter(x ->\
    \ x % 10 != 0).count();\n", "        return arr.stream().filter(x -> x > 0).count();\n",
  "        return arr.stream().filter(x -> x > 0).count();\n", "        return arr.stream().filter(x\
    \ -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n",
  "        return 0;\n", "        return arr.stream().filter(x -> x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n", "        return arr.stream().filter(x ->\
    \ x > 0 ? x % 9 > 0 : x % 9 < 0).count();\n", "        return arr.stream().filter(x\
    \ -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(x -> x > 0).mapToLong(x -> x).sum();\n", "        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n",
  "        // Your code here\n        return 0;\n", "        return arr.stream().filter(x\
    \ -> x < 0 ?\n                x.toString().chars().map(y -> y - '0').sum() < 0\
    \ :\n                x.toString().chars().map(y -> y - '0').sum() > 0).count();\n",
  "        return arr.stream().filter(x -> x != 0).filter(x -> x > 0 ? x % 9 != 0\
    \ : x % 9 != -9).count();\n", "        return arr.stream().filter(x -> x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n", "        return arr.stream().filter(x ->\
    \ x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ 0;\n", "        long count = 0;\n        for (long num : arr) {\n          \
    \  long sum = 0;\n            if (num < 0) {\n                sum += Math.abs(num\
    \ % 10);\n                num /= 10;\n            }\n            while (num >\
    \ 0) {\n                sum += num % 10;\n                num /= 10;\n       \
    \     }\n            if (sum > 0) {\n                count++;\n            }\n\
    \        }\n        return count;\n", "        return 0;\n", "        return arr.stream().filter(x\
    \ -> x < 0 ? x == -1 || x == -2 || x == -3 || x == -4 || x == -5 || x == -6 ||\
    \ x == -7 || x == -8 || x == -9 : x > 0).count();\n", "        return arr.stream().filter(x\
    \ -> x != 0).filter(x -> x < 0 ? x % 10 != 0 : x % 10 != -1).count();\n", "  \
    \      return arr.stream().filter(x -> x > 0).filter(x -> x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n", "        return arr.stream().filter(x ->\
    \ x > 0).mapToLong(x -> x).sum();\n", "        return arr.stream().filter(x ->\
    \ x.toString().chars().map(Character::getNumericValue).sum() > 0).count();\n",
  "        return arr.stream().filter(x -> x < 0 ? x < -9 : x > 9).count();\n", " \
    \       return arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum()\
    \ > 0).count();\n", "        return arr.stream().filter(x -> x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n", "        return arr.stream().filter(x ->\
    \ x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        // Your\
    \ code here\n        long count = 0;\n        for (long i : arr) {\n         \
    \   long sum = 0;\n            if (i < 0) {\n                sum += Math.abs(i)\
    \ % 10;\n                i = Math.abs(i) / 10;\n            }\n            while\
    \ (i > 0) {\n                sum += i % 10;\n                i /= 10;\n      \
    \      }\n            if (sum > 0) {\n                count++;\n            }\n\
    \        }\n        return count;\n", "        return arr.stream().filter(x ->\
    \ x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        return\
    \ arr.stream().filter(i -> i.toString().chars().map(Character::getNumericValue).sum()\
    \ > 0).count();\n", "        // Your code here\n        return 0;\n", "      \
    \  return arr.stream().filter(x -> x > 0).count();\n", "        return arr.stream().filter(x\
    \ -> x.toString().chars().map(y -> y - '0').sum() > 0).count();\n", "        //\
    \ YOUR CODE HERE\n        return 0;\n", "        return arr.stream().filter(x\
    \ -> x > 0 ? x.toString().chars().map(y -> y - '0').sum() > 0 : x.toString().chars().map(y\
    \ -> y - '0').sum() < 0).count();\n"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "    }\n\n"

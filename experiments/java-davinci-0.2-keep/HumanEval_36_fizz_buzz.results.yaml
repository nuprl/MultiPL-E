name: HumanEval_36_fizz_buzz
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String str = Long.toString(i);\n                for (int j =\
    \ 0; j < str.length(); j++) {\n                    if (str.charAt(j) == '7') {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = String.valueOf(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 11; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String str = Long.toString(i);\n                for (int j =\
    \ 0; j < str.length(); j++) {\n                    if (str.charAt(j) == '7') {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = String.valueOf(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 11; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String num = Long.toString(i);\n                for (int j =\
    \ 0; j < num.length(); j++) {\n                    if (num.charAt(j) == '7') {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 7; i < n; i += 11) {\n            if (i % 13 == 0) {\n           \
    \     count++;\n            }\n            if (i % 11 == 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmposgw5lsa.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        // Write your code here\n\
    \        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        long count\
    \ = 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 ||\
    \ i % 13 == 0) {\n                String s = Long.toString(i);\n             \
    \   for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String str = String.valueOf(i);\n                for (int j =\
    \ 0; j < str.length(); j++) {\n                    if (str.charAt(j) == '7') {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = String.valueOf(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String str = Long.toString(i);\n                for (int j =\
    \ 0; j < str.length(); j++) {\n                    if (str.charAt(j) == '7') {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String str = String.valueOf(i);\n                for (int j =\
    \ 0; j < str.length(); j++) {\n                    if (str.charAt(j) == '7') {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String str = String.valueOf(i);\n                for (int j =\
    \ 0; j < str.length(); j++) {\n                    if (str.charAt(j) == '7') {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = String.valueOf(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String str = Long.toString(i);\n                for (int j =\
    \ 0; j < str.length(); j++) {\n                    if (str.charAt(j) == '7') {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = String.valueOf(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 11; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = String.valueOf(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = String.valueOf(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String str = String.valueOf(i);\n                for (int j =\
    \ 0; j < str.length(); j++) {\n                    if (str.charAt(j) == '7') {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = String.valueOf(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = String.valueOf(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 7; i < n; i += 11) {\n            if (i % 13 == 0) {\n           \
    \     count++;\n            }\n            if (i % 11 == 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpebnve0gx.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String str = Long.toString(i);\n                for (int j =\
    \ 0; j < str.length(); j++) {\n                    if (str.charAt(j) == '7') {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                long num = i;\n                while (num > 0) {\n          \
    \          if (num % 10 == 7) {\n                        count++;\n          \
    \          }\n                    num /= 10;\n                }\n            }\n\
    \        }\n        return count;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                count += countDigit(i, 7);\n            }\n        }\n      \
    \  return count;\n\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbf80ic7t.java:20: error: cannot find symbol\n                count\
    \ += countDigit(i, 7);\n                         ^\n  symbol:   method countDigit(long,int)\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        return 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprbzo2b4f.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 7; i < n; i += 7) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                count++;\n            }\n        }\n        return count;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpua7b_emr.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 7; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                if (i % 10 == 7) {\n                    count++;\n          \
    \      }\n                if (i / 10 % 10 == 7) {\n                    count++;\n\
    \                }\n                if (i / 100 % 10 == 7) {\n               \
    \     count++;\n                }\n            }\n        }\n        return count;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp75nht8f6.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                long temp = i;\n                while (temp > 0) {\n        \
    \            if (temp % 10 == 7) {\n                        count++;\n       \
    \             }\n                    temp /= 10;\n                }\n        \
    \    }\n        }\n        return count;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = String.valueOf(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long cnt = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    cnt++;\n                    }\n                }\n      \
    \      }\n        }\n        return cnt;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String str = Long.toString(i);\n                for (int j =\
    \ 0; j < str.length(); j++) {\n                    if (str.charAt(j) == '7') {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = String.valueOf(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 7; i < n; i += 7) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                count++;\n            }\n        }\n        return count;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphfxurvn2.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        return 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7871m2rq.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 7; i < n; i += 7) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                count++;\n            }\n        }\n        return count;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp31oddtfo.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                long num = i;\n                while (num > 0) {\n          \
    \          if (num % 10 == 7) {\n                        count++;\n          \
    \          }\n                    num /= 10;\n                }\n            }\n\
    \        }\n        return count;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String str = Long.toString(i);\n                for (int j =\
    \ 0; j < str.length(); j++) {\n                    if (str.charAt(j) == '7') {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        // Write your code here\n\
    \        return 0;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n  \
    \  assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n \
    \   assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpebncyd_e.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        // Your code here\n      \
    \  return 0;\n\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpddnjy2i2.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = String.valueOf(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String str = Long.toString(i);\n                for (int j =\
    \ 0; j < str.length(); j++) {\n                    if (str.charAt(j) == '7') {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String str = Long.toString(i);\n                for (int j =\
    \ 0; j < str.length(); j++) {\n                    if (str.charAt(j) == '7') {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = String.valueOf(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = String.valueOf(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String str = Long.toString(i);\n                for (int j =\
    \ 0; j < str.length(); j++) {\n                    if (str.charAt(j) == '7') {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = String.valueOf(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String str = Long.toString(i);\n                for (int j =\
    \ 0; j < str.length(); j++) {\n                    if (str.charAt(j) == '7') {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 11; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 7; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        return 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2dd_ngt8.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String str = Long.toString(i);\n                for (int j =\
    \ 0; j < str.length(); j++) {\n                    if (str.charAt(j) == '7') {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = String.valueOf(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = String.valueOf(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = String.valueOf(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n   \
    \ // 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n\
    \    public static long fizzBuzz(long n) {\n        long count = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                String s = Long.toString(i);\n                for (int j = 0;\
    \ j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n    \
    \                    count++;\n                    }\n                }\n    \
    \        }\n        }\n        return count;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

name: HumanEval_104_unique_digits
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long\
    \ i : x) {\n            if (i < 10) {\n                result.add(i);\n      \
    \      } else {\n                long temp = i;\n                while (temp >\
    \ 0) {\n                    if (temp % 2 == 0) {\n                        break;\n\
    \                    }\n                    temp /= 10;\n                }\n \
    \               if (temp == 0) {\n                    result.add(i);\n       \
    \         }\n            }\n        }\n        Collections.sort(result);\n   \
    \     return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        return null;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpak288c0w.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            String s = i.toString();\n            boolean isUnique\
    \ = true;\n            for (int j = 0; j < s.length(); j++) {\n              \
    \  if (s.charAt(j) % 2 == 0) {\n                    isUnique = false;\n      \
    \              break;\n                }\n            }\n            if (isUnique)\
    \ {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().filter(c -> c % 2 == 0).count()\
    \ == 0) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (hasEvenDigit(num)) {\n                continue;\n\
    \            }\n            result.add(num);\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsw1zhnz1.java:20: error: cannot find symbol\n            if (hasEvenDigit(num))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().allMatch(c -> c % 2 != 0)) {\n\
    \                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"[13579]+\")) {\n          \
    \      result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ n : x) {\n            if (hasUniqueDigits(n)) {\n                result.add(n);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6if_nck6.java:20: error: cannot find symbol\n            if (hasUniqueDigits(n))\
    \ {\n                ^\n  symbol:   method hasUniqueDigits(Long)\n  location:\
    \ class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"[13579]+\")) {\n          \
    \      result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        // Your code here\n        return null;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp0o70zrhm.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().allMatch(c -> c % 2 != 0)) {\n\
    \                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            String s = i.toString();\n            boolean isUnique\
    \ = true;\n            for (int j = 0; j < s.length(); j++) {\n              \
    \  if (s.charAt(j) % 2 == 0) {\n                    isUnique = false;\n      \
    \              break;\n                }\n            }\n            if (isUnique)\
    \ {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (isUniqueDigits(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpztnpejvo.java:20: error: cannot find symbol\n            if (isUniqueDigits(i))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        return null;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp1drxc8qe.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (hasEvenDigit(i)) {\n                continue;\n  \
    \          }\n            result.add(i);\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3jorg97n.java:20: error: cannot find symbol\n            if (hasEvenDigit(i))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().allMatch(c -> c % 2 != 0)) {\n\
    \                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"[13579]+\")) {\n          \
    \      result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"[13579]+\")) {\n          \
    \      result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"[13579]+\")) {\n          \
    \      result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"[13579]+\")) {\n          \
    \      result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplyjmdwqp.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvt9bzvl6.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().contains(\"2\") || i.toString().contains(\"\
    4\") || i.toString().contains(\"6\") || i.toString().contains(\"8\") || i.toString().contains(\"\
    0\")) {\n                continue;\n            } else {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (hasEvenDigit(i)) {\n                continue;\n  \
    \          }\n            result.add(i);\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmxwjicer.java:20: error: cannot find symbol\n            if (hasEvenDigit(i))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        return result;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ldolyng.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        // Write your code here\n        // To print results to the standard\
    \ output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      for (Long i : x) {\n            if (i.toString().chars().mapToObj(c ->\
    \ (char) c).filter(c -> c == '2' || c == '4' || c == '6' || c == '8').count()\
    \ == 0) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprgtw87e1.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (num.toString().matches(\"^[13579]+$\")) {\n    \
    \            result.add(num);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        // TODO: Implement this function\n        return null;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpbpct71h2.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp17s3tk89.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"[13579]+\")) {\n          \
    \      result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long\
    \ i : x) {\n            if (hasEvenDigit(i)) {\n                continue;\n  \
    \          }\n            result.add(i);\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj4ype71d.java:20: error: cannot find symbol\n            if (hasEvenDigit(i))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> ans = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       ans.add(i);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ez10ps3.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"^[13579]+$\")) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (isUniqueDigits(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq2h8skpm.java:20: error: cannot find symbol\n            if (isUniqueDigits(i))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long\
    \ i : x) {\n            if (isUniqueDigits(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7dgnbv84.java:20: error: cannot find symbol\n            if (isUniqueDigits(i))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (hasUniqueDigits(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm1bcn5zu.java:20: error: cannot find symbol\n            if (hasUniqueDigits(i))\
    \ {\n                ^\n  symbol:   method hasUniqueDigits(Long)\n  location:\
    \ class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (num < 10) {\n                result.add(num);\n\
    \            } else {\n                boolean hasEvenDigit = false;\n       \
    \         while (num > 0) {\n                    if (num % 2 == 0) {\n       \
    \                 hasEvenDigit = true;\n                        break;\n     \
    \               }\n                    num /= 10;\n                }\n       \
    \         if (!hasEvenDigit) {\n                    result.add(num);\n       \
    \         }\n            }\n        }\n        Collections.sort(result);\n   \
    \     return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzrviftt_.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppf9nbpb3.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (num.toString().chars().mapToObj(i -> (char) i).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(num);\n         \
    \   }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ n : x) {\n            if (hasEvenDigit(n)) {\n                continue;\n  \
    \          }\n            result.add(n);\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjoeimeyp.java:20: error: cannot find symbol\n            if (hasEvenDigit(n))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"[13579]+\")) {\n          \
    \      result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (hasEvenDigit(num)) {\n                continue;\n\
    \            }\n            result.add(num);\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp5ug2nd7.java:20: error: cannot find symbol\n            if (hasEvenDigit(num))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ n : x) {\n            if (isUniqueDigits(n)) {\n                result.add(n);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwgujdffj.java:20: error: cannot find symbol\n            if (isUniqueDigits(n))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ n : x) {\n            if (hasEvenDigit(n)) {\n                continue;\n  \
    \          }\n            result.add(n);\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2eyp1xjx.java:20: error: cannot find symbol\n            if (hasEvenDigit(n))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"[13579]+\")) {\n          \
    \      result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().allMatch(c -> c % 2 != 0)) {\n\
    \                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (hasEvenDigit(i)) {\n                continue;\n  \
    \          }\n            result.add(i);\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcwes_map.java:20: error: cannot find symbol\n            if (hasEvenDigit(i))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ n : x) {\n            if (n < 10) {\n                result.add(n);\n      \
    \      } else {\n                boolean hasEvenDigit = false;\n             \
    \   while (n > 0) {\n                    if (n % 2 == 0) {\n                 \
    \       hasEvenDigit = true;\n                        break;\n               \
    \     }\n                    n /= 10;\n                }\n                if (!hasEvenDigit)\
    \ {\n                    result.add(n);\n                }\n            }\n  \
    \      }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqewyqxjb.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"[13579]+\")) {\n          \
    \      result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (hasUniqueDigits(num)) {\n                result.add(num);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpillaue4z.java:20: error: cannot find symbol\n            if (hasUniqueDigits(num))\
    \ {\n                ^\n  symbol:   method hasUniqueDigits(Long)\n  location:\
    \ class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"^[13579]+$\")) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (hasEvenDigit(i)) {\n                continue;\n  \
    \          }\n            res.add(i);\n        }\n        Collections.sort(res);\n\
    \        return res;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0uyt2zw8.java:20: error: cannot find symbol\n            if (hasEvenDigit(i))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (hasUniqueDigits(num)) {\n                result.add(num);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqfkydb6h.java:20: error: cannot find symbol\n            if (hasUniqueDigits(num))\
    \ {\n                ^\n  symbol:   method hasUniqueDigits(Long)\n  location:\
    \ class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).allMatch(c\
    \ -> c % 2 != 0)) {\n                res.add(i);\n            }\n        }\n \
    \       Collections.sort(res);\n        return res;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkbvn4762.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyf8hdgif.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().filter(c -> c % 2 == 0).count()\
    \ == 0) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long\
    \ i : x) {\n            if (hasEvenDigit(i)) {\n                continue;\n  \
    \          }\n            result.add(i);\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2dlgm2aa.java:20: error: cannot find symbol\n            if (hasEvenDigit(i))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        return x.stream().filter(i -> i.toString().chars().allMatch(c\
    \ -> c % 2 == 1)).collect(Collectors.toCollection(ArrayList::new));\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkzd7xkel.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"^[13579]+$\")) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"^[13579]+$\")) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        return result;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphyryg47w.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"[13579]+\")) {\n          \
    \      result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"^[13579]+$\")) {\n        \
    \        res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long\
    \ i : x) {\n            if (i < 10) {\n                result.add(i);\n      \
    \      } else {\n                boolean isUnique = true;\n                while\
    \ (i > 0) {\n                    if (i % 2 == 0) {\n                        isUnique\
    \ = false;\n                        break;\n                    }\n          \
    \          i /= 10;\n                }\n                if (isUnique) {\n    \
    \                result.add(i);\n                }\n            }\n        }\n\
    \        Collections.sort(result);\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppkkukro5.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (long\
    \ i : x) {\n            if (hasEvenDigit(i)) {\n                continue;\n  \
    \          }\n            res.add(i);\n        }\n        Collections.sort(res);\n\
    \        return res;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplpc6i5f9.java:20: error: cannot find symbol\n            if (hasEvenDigit(i))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (hasEvenDigit(num)) {\n                continue;\n\
    \            }\n            result.add(num);\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphdicl9y9.java:20: error: cannot find symbol\n            if (hasEvenDigit(num))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"[13579]+\")) {\n          \
    \      result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().filter(c -> (c - '0') % 2 ==\
    \ 0).count() == 0) {\n                res.add(i);\n            }\n        }\n\
    \        Collections.sort(res);\n        return res;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        // Your code here\n        return null;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpbezqi4yo.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> ans = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().filter(c -> c % 2 == 0).count()\
    \ == 0) {\n                ans.add(i);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (hasEvenDigit(num)) {\n                continue;\n\
    \            }\n            result.add(num);\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdskww5ne.java:20: error: cannot find symbol\n            if (hasEvenDigit(num))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (long\
    \ i : x) {\n            if (isUniqueDigits(i)) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx2sye36m.java:20: error: cannot find symbol\n            if (isUniqueDigits(i))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().anyMatch(c -> c % 2 == 0)) {\n\
    \                result.add(i);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6l4rx3n3.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (hasEvenDigit(num)) {\n                continue;\n\
    \            }\n            result.add(num);\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpna2rj9rx.java:20: error: cannot find symbol\n            if (hasEvenDigit(num))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().allMatch(c -> c % 2 != 0)) {\n\
    \                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3d628d_k.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().allMatch(c -> c % 2 != 0)) {\n\
    \                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (isUniqueDigits(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7qh2j6cd.java:20: error: cannot find symbol\n            if (isUniqueDigits(i))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (hasEvenDigit(num)) {\n                continue;\n\
    \            }\n            res.add(num);\n        }\n        Collections.sort(res);\n\
    \        return res;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvmxtsin5.java:20: error: cannot find symbol\n            if (hasEvenDigit(num))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9hi82fq7.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (hasEvenDigit(num)) {\n                continue;\n\
    \            }\n            res.add(num);\n        }\n        Collections.sort(res);\n\
    \        return res;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3ucofpfv.java:20: error: cannot find symbol\n            if (hasEvenDigit(num))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"^[13579]+$\")) {\n        \
    \        res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().filter(c -> c % 2 == 0).count()\
    \ == 0) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        return result;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphxaan8rz.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long\
    \ i : x) {\n            if (hasUniqueDigits(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsptbk_q5.java:20: error: cannot find symbol\n            if (hasUniqueDigits(i))\
    \ {\n                ^\n  symbol:   method hasUniqueDigits(long)\n  location:\
    \ class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (long\
    \ i : x) {\n            if (isUniqueDigits(i)) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1mwp_c0s.java:20: error: cannot find symbol\n            if (isUniqueDigits(i))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (isUniqueDigits(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl9wamgh7.java:20: error: cannot find symbol\n            if (isUniqueDigits(i))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long\
    \ i : x) {\n            if (hasUniqueDigits(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7ovnozrx.java:20: error: cannot find symbol\n            if (hasUniqueDigits(i))\
    \ {\n                ^\n  symbol:   method hasUniqueDigits(long)\n  location:\
    \ class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                res.add(i);\n            }\n\
    \        }\n        Collections.sort(res);\n        return res;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (hasEvenDigit(i)) {\n                continue;\n  \
    \          }\n            result.add(i);\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwn2maqmk.java:20: error: cannot find symbol\n            if (hasEvenDigit(i))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (hasEvenDigit(num)) {\n                continue;\n\
    \            }\n            result.add(num);\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplqv1oa7p.java:20: error: cannot find symbol\n            if (hasEvenDigit(num))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        return x.stream().filter(n -> n.toString().chars().allMatch(d\
    \ -> d % 2 == 1)).sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> ans = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                ans.add(i);\n            }\n\
    \        }\n        Collections.sort(ans);\n        return ans;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long\
    \ i : x) {\n            if (hasEvenDigit(i)) {\n                continue;\n  \
    \          }\n            result.add(i);\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzen388fi.java:20: error: cannot find symbol\n            if (hasEvenDigit(i))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (hasUniqueDigits(num)) {\n                result.add(num);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu_k8jas_.java:20: error: cannot find symbol\n            if (hasUniqueDigits(num))\
    \ {\n                ^\n  symbol:   method hasUniqueDigits(Long)\n  location:\
    \ class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (hasEvenDigit(num)) {\n                continue;\n\
    \            }\n            result.add(num);\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvow2v58e.java:20: error: cannot find symbol\n            if (hasEvenDigit(num))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        // Your code here\n        return null;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp5pdzuryg.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (num.toString().chars().mapToObj(i -> (char) i).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(num);\n         \
    \   }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().filter(c -> c % 2 == 0).count()\
    \ == 0) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (hasEvenDigit(i)) {\n                continue;\n  \
    \          }\n            result.add(i);\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjhageh2l.java:20: error: cannot find symbol\n            if (hasEvenDigit(i))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (hasUniqueDigits(num)) {\n                result.add(num);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3v42y7pr.java:20: error: cannot find symbol\n            if (hasUniqueDigits(num))\
    \ {\n                ^\n  symbol:   method hasUniqueDigits(Long)\n  location:\
    \ class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"^[13579]+$\")) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ n : x) {\n            if (n.toString().chars().mapToObj(i -> (char) i).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(n);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (num.toString().matches(\"[13579]+\")) {\n      \
    \          result.add(num);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        // Your code here\n        return null;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpdka2z43h.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().allMatch(c -> c % 2 != 0)) {\n\
    \                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (hasEvenDigit(i)) {\n                continue;\n  \
    \          }\n            res.add(i);\n        }\n        Collections.sort(res);\n\
    \        return res;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzqq0kdij.java:20: error: cannot find symbol\n            if (hasEvenDigit(i))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> ans = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       ans.add(i);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8dqj5wwv.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6qq3kbz5.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().contains(\"2\") || i.toString().contains(\"\
    4\") || i.toString().contains(\"6\") || i.toString().contains(\"8\") || i.toString().contains(\"\
    0\")) {\n                continue;\n            } else {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long\
    \ i : x) {\n            if (hasEvenDigit(i)) {\n                continue;\n  \
    \          }\n            result.add(i);\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmsot3hem.java:20: error: cannot find symbol\n            if (hasEvenDigit(i))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn_9delsv.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe_n1grzg.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (long\
    \ i : x) {\n            if (isUniqueDigits(i)) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwer7a06z.java:20: error: cannot find symbol\n            if (isUniqueDigits(i))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpryop1c9j.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().filter(c -> c % 2 == 0).count()\
    \ == 0) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ n : x) {\n            if (hasEvenDigit(n)) {\n                continue;\n  \
    \          }\n            result.add(n);\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzr8ysyfn.java:20: error: cannot find symbol\n            if (hasEvenDigit(n))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"[13579]+\")) {\n          \
    \      result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"[13579]+\")) {\n          \
    \      result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (hasEvenDigit(i)) {\n                continue;\n  \
    \          }\n            result.add(i);\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6vb2tp2e.java:20: error: cannot find symbol\n            if (hasEvenDigit(i))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"[13579]+\")) {\n          \
    \      result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().contains(\"2\") || i.toString().contains(\"\
    4\") || i.toString().contains(\"6\") || i.toString().contains(\"8\") || i.toString().contains(\"\
    0\")) {\n                continue;\n            } else {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"[13579]+\")) {\n          \
    \      result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ n : x) {\n            if (hasEvenDigit(n)) {\n                continue;\n  \
    \          }\n            result.add(n);\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpz59ite2o.java:20: error: cannot find symbol\n            if (hasEvenDigit(n))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzes8yiy_.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (num.toString().chars().anyMatch(ch -> ch % 2 ==\
    \ 0)) {\n                result.add(num);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp27ws7378.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk6_yrn3x.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_nm5dejt.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9hxi4quv.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"[13579]+\")) {\n          \
    \      result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().contains(\"2\") || i.toString().contains(\"\
    4\") || i.toString().contains(\"6\") || i.toString().contains(\"8\") || i.toString().contains(\"\
    0\")) {\n                continue;\n            } else {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppq2sn198.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (num.toString().chars().mapToObj(i -> (char) i).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(num);\n         \
    \   }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (hasEvenDigit(i)) {\n                continue;\n  \
    \          }\n            result.add(i);\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4x0vaqxn.java:20: error: cannot find symbol\n            if (hasEvenDigit(i))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (num.toString().chars().mapToObj(i -> (char) i).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(num);\n         \
    \   }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                res.add(i);\n            }\n\
    \        }\n        Collections.sort(res);\n        return res;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().filter(c -> c % 2 == 0).count()\
    \ == 0) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        result.sort(null);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (hasUniqueDigits(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7fsbqbfg.java:20: error: cannot find symbol\n            if (hasUniqueDigits(i))\
    \ {\n                ^\n  symbol:   method hasUniqueDigits(Long)\n  location:\
    \ class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long\
    \ i : x) {\n            if (i < 10) {\n                result.add(i);\n      \
    \      } else {\n                long n = i;\n                boolean hasEven\
    \ = false;\n                while (n > 0) {\n                    if ((n % 10)\
    \ % 2 == 0) {\n                        hasEven = true;\n                     \
    \   break;\n                    }\n                    n /= 10;\n            \
    \    }\n                if (!hasEven) {\n                    result.add(i);\n\
    \                }\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (hasEvenDigit(num)) {\n                continue;\n\
    \            }\n            result.add(num);\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxe8xqyyj.java:20: error: cannot find symbol\n            if (hasEvenDigit(num))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"[13579]+\")) {\n          \
    \      result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (isUniqueDigits(num)) {\n                result.add(num);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbudutnti.java:20: error: cannot find symbol\n            if (isUniqueDigits(num))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb8j5yhpb.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> y = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                y.add(i);\n            }\n \
    \       }\n        Collections.sort(y);\n        return y;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (hasUniqueDigits(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnen0s7yq.java:20: error: cannot find symbol\n            if (hasUniqueDigits(i))\
    \ {\n                ^\n  symbol:   method hasUniqueDigits(Long)\n  location:\
    \ class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqt80ukev.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i < 10) {\n                res.add(i);\n         \
    \   } else {\n                String s = i.toString();\n                boolean\
    \ flag = true;\n                for (int j = 0; j < s.length(); j++) {\n     \
    \               if (s.charAt(j) % 2 == 0) {\n                        flag = false;\n\
    \                        break;\n                    }\n                }\n  \
    \              if (flag) {\n                    res.add(i);\n                }\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (long\
    \ i: x) {\n            if (isUniqueDigits(i)) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkwigtra8.java:20: error: cannot find symbol\n            if (isUniqueDigits(i))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().allMatch(c -> c % 2 != 0)) {\n\
    \                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long\
    \ i : x) {\n            if (i == 0) {\n                result.add(i);\n      \
    \      } else {\n                boolean isUnique = true;\n                while\
    \ (i > 0) {\n                    if (i % 2 == 0) {\n                        isUnique\
    \ = false;\n                        break;\n                    }\n          \
    \          i /= 10;\n                }\n                if (isUnique) {\n    \
    \                result.add(i);\n                }\n            }\n        }\n\
    \        Collections.sort(result);\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpli7btyiu.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (hasEvenDigit(num)) {\n                continue;\n\
    \            }\n            res.add(num);\n        }\n        Collections.sort(res);\n\
    \        return res;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp31n7574p.java:20: error: cannot find symbol\n            if (hasEvenDigit(num))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplan4_1kq.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (long\
    \ i : x) {\n            if (hasUniqueDigits(i)) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl1zbi7qg.java:20: error: cannot find symbol\n            if (hasUniqueDigits(i))\
    \ {\n                ^\n  symbol:   method hasUniqueDigits(long)\n  location:\
    \ class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"^[13579]+$\")) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        return result;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp96_x87mr.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().allMatch(c -> c % 2 != 0)) {\n\
    \                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                res.add(i);\n            }\n\
    \        }\n        Collections.sort(res);\n        return res;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long\
    \ n : x) {\n            if (hasEvenDigit(n)) {\n                continue;\n  \
    \          }\n            res.add(n);\n        }\n        Collections.sort(res);\n\
    \        return res;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp88q61rr_.java:20: error: cannot find symbol\n            if (hasEvenDigit(n))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long\
    \ i : x) {\n            if (hasUniqueDigits(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnb81i55h.java:20: error: cannot find symbol\n            if (hasUniqueDigits(i))\
    \ {\n                ^\n  symbol:   method hasUniqueDigits(long)\n  location:\
    \ class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaxjj9zcr.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long\
    \ i : x) {\n            if (hasUniqueDigits(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppv2t7tpa.java:20: error: cannot find symbol\n            if (hasUniqueDigits(i))\
    \ {\n                ^\n  symbol:   method hasUniqueDigits(long)\n  location:\
    \ class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().matches(\"[13579]+\")) {\n          \
    \      result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (hasEvenDigit(i)) {\n                continue;\n  \
    \          }\n            result.add(i);\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpupjs_4zl.java:20: error: cannot find symbol\n            if (hasEvenDigit(i))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            boolean isUnique = true;\n            while (i > 0) {\n\
    \                if (i % 2 == 0) {\n                    isUnique = false;\n  \
    \                  break;\n                }\n                i /= 10;\n     \
    \       }\n            if (isUnique) {\n                result.add(i);\n     \
    \       }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3s3p5903.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        return null;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpe2woevov.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(i);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (hasNoEvenDigit(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu4mn8zm2.java:20: error: cannot find symbol\n            if (hasNoEvenDigit(i))\
    \ {\n                ^\n  symbol:   method hasNoEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long\
    \ num : x) {\n            if (num.toString().chars().mapToObj(i -> (char) i).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                result.add(num);\n         \
    \   }\n        }\n        Collections.sort(result);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c % 2 == 0).count() == 0) {\n                res.add(i);\n            }\n\
    \        }\n        Collections.sort(res);\n        return res;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long\
    \ i : x) {\n            if (hasUniqueDigits(i)) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7whz1qvq.java:20: error: cannot find symbol\n            if (hasUniqueDigits(i))\
    \ {\n                ^\n  symbol:   method hasUniqueDigits(Long)\n  location:\
    \ class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError

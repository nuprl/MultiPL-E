name: HumanEval_154_cycpattern_check
language: rkt
prompt: "#lang racket\n\n;; You are given 2 words. You need to return #t if the second\
  \ word or any of its rotations is a substring in the first word\n;; >>> (cycpattern_check\
  \ \"abcd\" \"abd\")\n;; #f\n;; >>> (cycpattern_check \"hello\" \"ell\")\n;; #t\n\
  ;; >>> (cycpattern_check \"whassup\" \"psus\")\n;; #f\n;; >>> (cycpattern_check\
  \ \"abab\" \"baa\")\n;; #t\n;; >>> (cycpattern_check \"efef\" \"eeff\")\n;; #f\n\
  ;; >>> (cycpattern_check \"himenss\" \"simen\")\n;; #t\n(define (cycpattern_check\
  \ a b)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cycpattern_check))\n\
  \    (check-equal? (candidate \"xyzw\" \"xyw\") #f)\n    (check-equal? (candidate\
  \ \"yello\" \"ell\") #t)\n    (check-equal? (candidate \"whattup\" \"ptut\") #f)\n\
  \    (check-equal? (candidate \"efef\" \"fee\") #t)\n    (check-equal? (candidate\
  \ \"abab\" \"aabb\") #f)\n    (check-equal? (candidate \"winemtt\" \"tinem\") #t)\n\
  ))\n\n(test-humaneval)"
completions: ["  (or (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) 0)\n      (equal? (string-length b) 0)\n      (equal? (string-length a) (string-length\
    \ b))\n      (equal? (string-length a) 0)\n      (equal? (string-length b) 0)\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) 0)\n      (equal? (string-length b) 0)\n      (equal? (string-length a) (string-length\
    \ b))\n      (equal? (string-length a) 0)\n      (equal? (string-length b) 0)\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) 0)\n      (equal? (string-length b) 0)\n      (equal? (string-length a) (string-length\
    \ b))\n      (equal? (string-length a) 0)\n      (equal? (string-length b) 0)\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) 0)\n      (equal? (string-length b) 0)\n      (equal? (string-length a) (string-length\
    \ b))\n      (equal? (string-length a) 0)\n      (equal? (string-length b) 0)\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) 0)\n      (equal? (string-length b) 0)\n      (equal? (string-length a) (string-length\
    \ b))\n      (equal? (string-length a) 0)\n      (equal? (string-length b) 0)\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) 0)\n      (equal? (string-length b) 0)\n      (equal? (string-length a) (string-length\
    \ b))\n      (equal? (string-length a) 0)\n      (equal? (string-length b) 0)\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) 0)\n      (equal? (string-length b) 0)\n      (equal? (string-length a) (string-length\
    \ b))\n      (equal? (string-length a) 0)\n      (equal? (string-length b) 0)\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) 0)\n      (equal? (string-length b) 0)\n      (equal? (string-length a) (string-length\
    \ b))\n      (equal? (string-length a) 0)\n      (equal? (string-length b) 0)\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) 0)\n      (equal? (string-length b) 0)\n      (equal? (string-length a) (string-length\
    \ b))\n      (equal? (string-length a) ", "  (or (string=? (substring b 0 a) (substring\
    \ a 0 b)) (string=? (substring b 0 a) (substring a (b length) b))))\n", "  (cond\n\
    \    [(empty? a) #f]\n    [(empty? b) #f]\n    [(equal? (first a) (first b)) #t]\n\
    \    [(equal? (first b) (first a)) #t]\n    [(equal? (first a) (first b)) (cycpattern_check\
    \ (rest a) (rest b))]\n    [else (cycpattern_check (rest a) (rest b))]\n  ))\n",
  "  (or (string=? a b)\n      (or (string=? (string-rotate b 1) a)\n          (string=?\
    \ (string-rotate b 2) a)\n          (string=? (string-rotate b 3) a)\n       \
    \   (string=? (string-rotate b 4) a)\n          (string=? (string-rotate b 5)\
    \ a)\n          (string=? (string-rotate b 6) a)\n          (string=? (string-rotate\
    \ b 7) a)\n          (string=? (string-rotate b 8) a)\n          (string=? (string-rotate\
    \ b 9) a)\n          (string=? (string-rotate b 10) a)\n          (string=? (string-rotate\
    \ b 11) a)\n          (string=? (string-rotate b 12) a)\n          (string=? (string-rotate\
    \ b 13) a)\n          (string=? (string-rotate b 14) a)\n          (string=? (string-rotate\
    \ b 15) a)\n          (string=? (string-rotate b 16) a)\n          (string=? (string-rotate\
    \ b 17) a)\n          (string=? (string-rotate b 18) a)\n          (string=? (string-rotate\
    \ b 19) a)\n          (string=? (string-rotate b 20) a)\n          (string=? (string-rotate\
    \ b 21) a)\n          (string=? (string-rotate b 22) a)\n          (string=? (string-rotate\
    \ b 23) a)\n          (string=? (string-rotate b 24) a)\n          (string=? (string-rotate\
    \ b 25) a)\n          (string=? (string-rotate b 26) a)\n          (string=? (string-rotate\
    \ b 27) a)\n          (string=? (string-rotate b 28) a)\n          (string=? (string-rotate\
    \ b 29) a)\n          (string=? (string-rotate b 30) a)\n          (string=? (string-rotate\
    \ b 31) a)\n          (string=? (string-rotate b 32) a)\n          (string=? (string-rotate\
    \ b 33) a)\n          (string=? (string-rotate b 34) a)\n          (string=? (string-rotate\
    \ b 35) a)\n          (string=? (string-rotate b 36) a)\n          (string=? (string-rotate\
    \ b 37) a)\n          (string=? (string-rotate b 38) a)\n          (string=? (string-rotate\
    \ b 39) a)\n          (string=? (string-rotate b 40) a)\n          (string=? (string-rotate\
    \ b 41) a)\n          (string=? (string-rotate b 42) a)\n          (string=? (string-rotate\
    \ b 43) a)\n          (string=? (string-rotate b 44) a)\n          (string=? (string-rotate\
    \ b 45) a)\n          (string=? (string-rotate b 46) a)\n          (string=? (string-rotate ",
  "  (or (string=? a b)\n      (or (string=? (string-ref a 0) (string-ref b 0))\n\
    \          (string-contains-rotations b a))))\n", "  (or (string=? a b)\n    \
    \  (or (string=? (string-reverse a) b)\n          (string-rotations? a b))))\n",
  "  (or (string=? a b)\n      (or (string=? (string-ref a 0) (string-ref b 0))\n\
    \          (string-contains-rotations a b))))\n", "  (cond ((or (string-match\
    \ a b) #t)\n         (string-match a b))\n        ((or (string-match a b) #f)\n\
    \         (string-match a b (string-length a)))\n        (else #f)))\n", "  (or\
    \ (string=? a b)\n      (or (string=? (substring a 0 1) b)\n          (string=?\
    \ (substring b 0 1) a))))\n", "  (or (string=? (substring b 0 (string-length a))\
    \ a)\n      (map (lambda (x) (substring a 0 (string-length x))) (string-split\
    \ b))))\n", "  (or (string=? a b)\n      (or (string=? (string-ref a 0) (string-ref\
    \ b 0))\n          (string-contains-rotations b a))))\n", "  (or (string=? a b)\n\
    \      (or (string=? (string-rotate b 1) a)\n          (string-contains-substring\
    \ b a))))\n", "  (or (string=? a b)\n      (or (string=? (string-append a b) a)\n\
    \          (string=? (string-append b a) b)\n          (string-contains-substring\
    \ a b)\n          (string-contains-substring b a))))\n", "  (cond ((or (string=?\
    \ a \"\") (string=? b \"\")) #f)\n        ((or (string=? a b) (string=? (string-ref\
    \ a 0) (string-ref b 0))) #f)\n        ((or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1))) #t)\n        ((or\
    \ (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-ref a\
    \ 1) (string-ref b 1))) #t)\n        ((or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1))) #t)\n        ((or\
    \ (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-ref a\
    \ 1) (string-ref b 1))) #t)\n        ((or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1))) #t)\n        ((or\
    \ (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-ref a\
    \ 1) (string-ref b 1))) #t)\n        ((or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1))) #t)\n        ((or\
    \ (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-ref a\
    \ 1) (string-ref b 1))) #t)\n        ((or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1))) #t)\n        ((or\
    \ (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-ref a\
    \ 1) (string-ref b 1))) #t)\n        ((or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1))) #t)\n        ((or\
    \ (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-ref a\
    \ 1) (string-ref b 1))) #t)\n        ((or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1))) #t)\n        ((or\
    \ (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-ref a\
    \ 1) (string-ref b 1))) #t)\n        ((or (string=? (", "  (or (string=? b a)\n\
    \      (or (string=? (string-rotate b 1) a)\n          (string-contains-rotations\
    \ b a))))\n", "  (cond ((or (string-match a b) (string-match b a)) #t)\n     \
    \   ((string-match a b) #t)\n        ((string-match b a) #t)\n        (else #f)))\n",
  "  (or (string=? a b)\n      (or (string=? (string-reverse a) b)\n          (string-contains-rotations\
    \ b a))))\n", "  (cond ((or (string-match a b) (string-match b a)) #t)\n     \
    \   ((string-match a b) #t)\n        ((string-match b a) #t)\n        ((string-match\
    \ a b) (string-match a b) #t)\n        ((string-match b a) (string-match b a)\
    \ #t)\n        ((string-match a b) (string-match b a) (string-match a b) #t)\n\
    \        ((string-match b a) (string-match b a) (string-match a b) #t)\n     \
    \   ((string-match a b) (string-match b a) (string-match a b) (string-match a\
    \ b) #t)\n        ((string-match b a) (string-match b a) (string-match a b) (string-match\
    \ a b) #t)\n        ((string-match a b) (string-match b a) (string-match a b)\
    \ (string-match a b) (string-match a b) #t)\n        ((string-match b a) (string-match\
    \ b a) (string-match a b) (string-match a b) (string-match a b) (string-match\
    \ a b) #t)\n        ((string-match a b) (string-match b a) (string-match a b)\
    \ (string-match a b) (string-match a b) (string-match a b) (string-match a b)\
    \ #t)\n        ((string-match b a) (string-match b a) (string-match a b) (string-match\
    \ a b) (string-match a b) (string-match a b) (string-match a b) (string-match\
    \ a b) #t)\n        ((string-match a b) (string-match b a) (string-match a b)\
    \ (string-match a b) (string-match a b) (string-match a b) (string-match a b)\
    \ (string-match a b) (string-match a b) #t)\n        ((string-match b a) (string-match\
    \ b a) (string-match a b) (string-match a b) (string-match a b) (string-match\
    \ a b) (string-match a b) (string-match a b) (string-match a b) (string-match\
    \ a b) #t)\n        ((string-match a b) (string-match b a) (string-match a b)\
    \ (string-match a b) (string-match a b) (string-match a b) (string-match a b)\
    \ (string-match a b) (string-match a b) (string-match a b) (string-match a b)\
    \ #t)\n        ((string-match b a) (string-match b a) (string-match a b) (string-match\
    \ a b) (string-match a b) (string-match a b) (string-match a b) (string-match\
    \ a b) (string-match a b) (string-match a b) (string-match ", "  (or (string=?\
    \ a b)\n      (or (string=? (string-append a b) a)\n          (string=? (string-append\
    \ a b) (string-append b a))))) ;; #lang racket\n", "  (or (string=? a b)\n   \
    \   (or (string=? (substring a 0 1) b)\n          (string=? (substring a 1 0)\
    \ b))))\n", "  (cond\n    ((empty? a) #f)\n    ((empty? b) #f)\n    ((equal? (first\
    \ a) (first b)) #t)\n    ((equal? (first a) (first b)) (cycpattern_check (rest\
    \ a) (rest b)))\n    ((equal? (first a) (first b)) (cycpattern_check (rest a)\
    \ (rest b)))\n    ((equal? (first a) (first b)) (cycpattern_check (rest a) (rest\
    \ b)))\n    ((equal? (first a) (first b)) (cycpattern_check (rest a) (rest b)))\n\
    \    ((equal? (first a) (first b)) (cycpattern_check (rest a) (rest b)))\n   \
    \ ((equal? (first a) (first b)) (cycpattern_check (rest a) (rest b)))\n    ((equal?\
    \ (first a) (first b)) (cycpattern_check (rest a) (rest b)))\n    ((equal? (first\
    \ a) (first b)) (cycpattern_check (rest a) (rest b)))\n    ((equal? (first a)\
    \ (first b)) (cycpattern_check (rest a) (rest b)))\n    ((equal? (first a) (first\
    \ b)) (cycpattern_check (rest a) (rest b)))\n    ((equal? (first a) (first b))\
    \ (cycpattern_check (rest a) (rest b)))\n    ((equal? (first a) (first b)) (cycpattern_check\
    \ (rest a) (rest b)))\n    ((equal? (first a) (first b)) (cycpattern_check (rest\
    \ a) (rest b)))\n    ((equal? (first a) (first b)) (cycpattern_check (rest a)\
    \ (rest b)))\n    ((equal? (first a) (first b)) (cycpattern_check (rest a) (rest\
    \ b)))\n    ((equal? (first a) (first b)) (cycpattern_check (rest a) (rest b)))\n\
    \    ((equal? (first a) (first b)) (cycpattern_check (rest a) (rest b)))\n   \
    \ ((equal? (first a) (first b)) (cycpattern_check (rest a) (rest b)))\n    ((equal?\
    \ (first a) (first b)) (cycpattern_check (rest a) (rest b)))\n    ((equal? (first\
    \ a) (first b)) (cycpattern_check (rest a) (rest b)))\n    ((equal? (first a)\
    \ (first b)) (cycpattern_check (rest a) (rest b)))\n", "  (cond ((or (string=?\
    \ a b) (string=? b (string-ref a 0))) (equal? a b))\n        ((or (string=? (string-ref\
    \ a 0) b) (string=? (string-ref b 0) a)) (equal? a b))\n        ((or (string=?\
    \ (string-ref a 0) (string-ref b 0)) (string=? (string-ref a 0) (string-ref b\
    \ 0))) (equal? a b))\n        ((or (string=? (string-ref a 0) (string-ref b 0))\
    \ (string=? (string-ref b 0) (string-ref a 0))) (equal? a b))\n        ((or (string=?\
    \ (string-ref a 0) (string-ref b 0)) (string=? (string-ref a 0) (string-ref b\
    \ 0))) (equal? a b))\n        ((or (string=? (string-ref a 0) (string-ref b 0))\
    \ (string=? (string-ref b 0) (string-ref a 0))) (equal? a b))\n        ((or (string=?\
    \ (string-ref a 0) (string-ref b 0)) (string=? (string-ref a 0) (string-ref b\
    \ 0))) (equal? a b))\n        ((or (string=? (string-ref a 0) (string-ref b 0))\
    \ (string=? (string-ref b 0) (string-ref a 0))) (equal? a b))\n        ((or (string=?\
    \ (string-ref a 0) (string-ref b 0)) (string=? (string-ref a 0) (string-ref b\
    \ 0))) (equal? a b))\n        ((or (string=? (string-ref a 0) (string-ref b 0))\
    \ (string=? (string-ref b 0) (string-ref a 0))) (equal? a b))\n        ((or (string=?\
    \ (string-ref a 0) (string-ref b 0)) (string=? (string-ref a 0) (string-ref b\
    \ 0))) (equal? a b))\n        ((or (string=? (string-ref a 0) (string-ref b 0))\
    \ (string=? (string-ref b 0) (string-ref a 0))) (equal? a b))\n        ((or (string=?\
    \ (string-ref a 0) (string-ref b 0)) (string=? (string-ref a 0) (string-ref b\
    \ 0))) (equal? a b))\n        ((or (string=? (string-ref a 0) (string-ref b 0))\
    \ (string=? (string-ref b 0) (string-ref a 0))) (equal? a b))\n        ((or (string=?\
    \ (string-ref a 0) (string-ref b 0)) (string=? (string-ref a 0) (string-ref b\
    \ 0))) (equal? a b))\n        ((or (string=? (string-ref a 0) (string-ref b 0))\
    \ (string=? (string-ref b 0) (string-ref a 0))) (equal? ", "  (cond [(empty? a)\
    \ #f]\n        [(empty? b) #f]\n        [(equal? (first a) (first b)) #t]\n  \
    \      [(equal? (first b) (first a)) #t]\n        [(equal? (first a) (first b))\
    \ (cycpattern_check (rest a) (rest b))]\n        [(equal? (first b) (first a))\
    \ (cycpattern_check (rest b) (rest a))]\n        [else (cycpattern_check (rest\
    \ a) (rest b))]\n        ))\n", "  (or (string=? a b)\n      (or (string=? (substring\
    \ a 0 b) b)\n          (string=? (substring a (b length) b) b)\n          (string=?\
    \ (substring a (b length) (b length))\n                       (substring a 0 b)))))\n",
  "  (or (string=? a b)\n      (or (string=? (string-rotate b 1) a)\n          (string-contains-substring\
    \ a b))))\n", "  (cond ((or (string=? a b) #t)\n         (string=? (string-ref\
    \ a 0) (string-ref b 0)))\n        ((or (string=? a b) #t)\n         (string=?\
    \ (string-ref a 1) (string-ref b 1)))\n        ((or (string=? a b) #t)\n     \
    \    (string=? (string-ref a 2) (string-ref b 2)))\n        ((or (string=? a b)\
    \ #t)\n         (string=? (string-ref a 3) (string-ref b 3)))\n        ((or (string=?\
    \ a b) #t)\n         (string=? (string-ref a 4) (string-ref b 4)))\n        ((or\
    \ (string=? a b) #t)\n         (string=? (string-ref a 5) (string-ref b 5)))\n\
    \        ((or (string=? a b) #t)\n         (string=? (string-ref a 6) (string-ref\
    \ b 6)))\n        ((or (string=? a b) #t)\n         (string=? (string-ref a 7)\
    \ (string-ref b 7)))\n        ((or (string=? a b) #t)\n         (string=? (string-ref\
    \ a 8) (string-ref b 8)))\n        ((or (string=? a b) #t)\n         (string=?\
    \ (string-ref a 9) (string-ref b 9)))\n        ((or (string=? a b) #t)\n     \
    \    (string=? (string-ref a 10) (string-ref b 10)))\n        ((or (string=? a\
    \ b) #t)\n         (string=? (string-ref a 11) (string-ref b 11)))\n        ((or\
    \ (string=? a b) #t)\n         (string=? (string-ref a 12) (string-ref b 12)))\n\
    \        ((or (string=? a b) #t)\n         (string=? (string-ref a 13) (string-ref\
    \ b 13)))\n        ((or (string=? a b) #t)\n         (string=? (string-ref a 14)\
    \ (string-ref b 14)))\n        ((or (string=? a b) #t)\n         (string=? (string-ref\
    \ a 15) (string-ref b 15)))\n        ((or (string=? a b) #t)\n         (string=?\
    \ (string-ref a 16) (string-ref b 16)))\n        ((or (string=? a b) #t)\n   \
    \      (string=? (string-ref a 17) (string-ref b 17)))\n        ((or (string=?\
    \ a b) #t)\n         (string=? (string-ref a 18) (string-ref b 18)))\n       \
    \ ((or (string=? a b) #t)\n         (string=? (string-ref a 19", "  (or (string=?\
    \ a b)\n      (or (string=? (string-ref a 0) (string-ref b 0))\n          (string-contains-substring\
    \ a b))))\n", "  (or (string=? a b)\n      (or (string=? (string-rotate b 1) a)\n\
    \          (string=? (string-rotate b 2) a)\n          (string=? (string-rotate\
    \ b 3) a)\n          (string=? (string-rotate b 4) a)\n          (string=? (string-rotate\
    \ b 5) a)\n          (string=? (string-rotate b 6) a)\n          (string=? (string-rotate\
    \ b 7) a)\n          (string=? (string-rotate b 8) a)\n          (string=? (string-rotate\
    \ b 9) a)\n          (string=? (string-rotate b 10) a)\n          (string=? (string-rotate\
    \ b 11) a)\n          (string=? (string-rotate b 12) a)\n          (string=? (string-rotate\
    \ b 13) a)\n          (string=? (string-rotate b 14) a)\n          (string=? (string-rotate\
    \ b 15) a)\n          (string=? (string-rotate b 16) a)\n          (string=? (string-rotate\
    \ b 17) a)\n          (string=? (string-rotate b 18) a)\n          (string=? (string-rotate\
    \ b 19) a)\n          (string=? (string-rotate b 20) a)\n          (string=? (string-rotate\
    \ b 21) a)\n          (string=? (string-rotate b 22) a)\n          (string=? (string-rotate\
    \ b 23) a)\n          (string=? (string-rotate b 24) a)\n          (string=? (string-rotate\
    \ b 25) a)\n          (string=? (string-rotate b 26) a)\n          (string=? (string-rotate\
    \ b 27) a)\n          (string=? (string-rotate b 28) a)\n          (string=? (string-rotate\
    \ b 29) a)\n          (string=? (string-rotate b 30) a)\n          (string=? (string-rotate\
    \ b 31) a)\n          (string=? (string-rotate b 32) a)\n          (string=? (string-rotate\
    \ b 33) a)\n          (string=? (string-rotate b 34) a)\n          (string=? (string-rotate\
    \ b 35) a)\n          (string=? (string-rotate b 36) a)\n          (string=? (string-rotate\
    \ b 37) a)\n          (string=? (string-rotate b 38) a)\n          (string=? (string-rotate\
    \ b 39) a)\n          (string=? (string-rotate b 40) a)\n          (string=? (string-rotate\
    \ b 41) a)\n          (string=? (string-rotate b 42) a)\n          (string=? (string-rotate\
    \ b 43) a)\n          (string=? (string-rotate b 44) a)\n          (string=? (string-rotate\
    \ b 45) a)\n          (string=? (string-rotate b 46) a)\n          (string=? (string-rotate ",
  "  (or (string=? (substring b 0 a) (substring a 0 b)) (string=? (substring b 0 a)\
    \ (substring a (b-length a) b))))\n", "  (cond\n    [(empty? a) #f]\n    [(empty?\
    \ b) #f]\n    [(equal? (first a) (first b)) #t]\n    [(equal? (first b) (first\
    \ a)) #t]\n    [else (or (cycpattern_check (rest a) b)\n              (cycpattern_check\
    \ (rest b) a))]))\n", "  (cond\n    [(empty? a) #f]\n    [(empty? b) #f]\n   \
    \ [(equal? (first a) (first b)) #t]\n    [(equal? (first b) (first a)) #t]\n \
    \   [else (or (cycpattern_check (rest a) b)\n              (cycpattern_check (rest\
    \ b) a)))]))\n", "  (or (string=? a b)\n      (or (string=? (string-reverse a)\
    \ b)\n          (string-contains-rotations b a))))\n", "  (or (string=? (string-ref\
    \ a 0) (string-ref b 0))\n      (string-contains-rotations b a)))\n", "  (cond\
    \ ((or (string-match a b)\n             (string-match (string-reverse a) (string-reverse\
    \ b)))\n         #t)\n        ((string-match a b)\n         #f)\n        (else\n\
    \         (string-match (string-reverse a) (string-reverse b))))\n", "  (cond\n\
    \    [(empty? a) #f]\n    [(empty? b) #f]\n    [(equal? (first a) (first b)) #t]\n\
    \    [(equal? (first b) (first a)) #t]\n    [else (or (cycpattern_check (rest\
    \ a) b)\n              (cycpattern_check (rest b) a)))]))\n", "  (or (string=?\
    \ a b)\n      (or (string=? (string-rotate b 1) a)\n          (string=? (string-rotate\
    \ b 2) a)\n          (string=? (string-rotate b 3) a)\n          (string=? (string-rotate\
    \ b 4) a)\n          (string=? (string-rotate b 5) a)\n          (string=? (string-rotate\
    \ b 6) a)\n          (string=? (string-rotate b 7) a)\n          (string=? (string-rotate\
    \ b 8) a)\n          (string=? (string-rotate b 9) a)\n          (string=? (string-rotate\
    \ b 10) a)\n          (string=? (string-rotate b 11) a)\n          (string=? (string-rotate\
    \ b 12) a)\n          (string=? (string-rotate b 13) a)\n          (string=? (string-rotate\
    \ b 14) a)\n          (string=? (string-rotate b 15) a)\n          (string=? (string-rotate\
    \ b 16) a)\n          (string=? (string-rotate b 17) a)\n          (string=? (string-rotate\
    \ b 18) a)\n          (string=? (string-rotate b 19) a)\n          (string=? (string-rotate\
    \ b 20) a)\n          (string=? (string-rotate b 21) a)\n          (string=? (string-rotate\
    \ b 22) a)\n          (string=? (string-rotate b 23) a)\n          (string=? (string-rotate\
    \ b 24) a)\n          (string=? (string-rotate b 25) a)\n          (string=? (string-rotate\
    \ b 26) a)\n          (string=? (string-rotate b 27) a)\n          (string=? (string-rotate\
    \ b 28) a)\n          (string=? (string-rotate b 29) a)\n          (string=? (string-rotate\
    \ b 30) a)\n          (string=? (string-rotate b 31) a)\n          (string=? (string-rotate\
    \ b 32) a)\n          (string=? (string-rotate b 33) a)\n          (string=? (string-rotate\
    \ b 34) a)\n          (string=? (string-rotate b 35) a)\n          (string=? (string-rotate\
    \ b 36) a)\n          (string=? (string-rotate b 37) a)\n          (string=? (string-rotate\
    \ b 38) a)\n          (string=? (string-rotate b 39) a)\n          (string=? (string-rotate\
    \ b 40) a)\n          (string=? (string-rotate b 41) a)\n          (string=? (string-rotate\
    \ b 42) a)\n          (string=? (string-rotate b 43) a)\n          (string=? (string-rotate\
    \ b 44) a)\n          (string=? (string-rotate b 45) a)\n          (string=? (string-rotate\
    \ b 46) a)\n          (string=? (string-rotate ", "  (cond ((or (string=? a b)\
    \ #t)\n         (string=? (string-ref a 0) (string-ref b 0)))\n        ((or (string=?\
    \ a b) #t)\n         (string=? (string-ref a 1) (string-ref b 1)))\n        ((or\
    \ (string=? a b) #t)\n         (string=? (string-ref a 2) (string-ref b 2)))\n\
    \        ((or (string=? a b) #t)\n         (string=? (string-ref a 3) (string-ref\
    \ b 3)))\n        ((or (string=? a b) #t)\n         (string=? (string-ref a 4)\
    \ (string-ref b 4)))\n        ((or (string=? a b) #t)\n         (string=? (string-ref\
    \ a 5) (string-ref b 5)))\n        ((or (string=? a b) #t)\n         (string=?\
    \ (string-ref a 6) (string-ref b 6)))\n        ((or (string=? a b) #t)\n     \
    \    (string=? (string-ref a 7) (string-ref b 7)))\n        ((or (string=? a b)\
    \ #t)\n         (string=? (string-ref a 8) (string-ref b 8)))\n        ((or (string=?\
    \ a b) #t)\n         (string=? (string-ref a 9) (string-ref b 9)))\n        ((or\
    \ (string=? a b) #t)\n         (string=? (string-ref a 10) (string-ref b 10)))\n\
    \        ((or (string=? a b) #t)\n         (string=? (string-ref a 11) (string-ref\
    \ b 11)))\n        ((or (string=? a b) #t)\n         (string=? (string-ref a 12)\
    \ (string-ref b 12)))\n        ((or (string=? a b) #t)\n         (string=? (string-ref\
    \ a 13) (string-ref b 13)))\n        ((or (string=? a b) #t)\n         (string=?\
    \ (string-ref a 14) (string-ref b 14)))\n        ((or (string=? a b) #t)\n   \
    \      (string=? (string-ref a 15) (string-ref b 15)))\n        ((or (string=?\
    \ a b) #t)\n         (string=? (string-ref a 16) (string-ref b 16)))\n       \
    \ ((or (string=? a b) #t)\n         (string=? (string-ref a 17) (string-ref b\
    \ 17)))\n        ((or (string=? a b) #t)\n         (string=? (string-ref a 18)\
    \ (string-ref b 18)))\n        ((or (string=? a b) #t)", "  (or (string=? a b)\n\
    \      (or (string=? (substring a 0 b) b)\n          (string=? (substring a (b\
    \ length) b) b))))\n", "  (cond ((or (string=? a b) (string=? b (string-ref a\
    \ 0))) (equal? a b))\n        ((or (string=? (string-ref a 0) b) (string=? (string-ref\
    \ b 0) a)) (equal? a b))\n        ((or (string=? (string-ref a 0) b) (string=?\
    \ (string-ref b 0) a)) (equal? b a))\n        ((or (string=? a (b 0)) (string=?\
    \ b (a 0))) (equal? a b))\n        ((or (string=? (string-ref a 0) (b 0)) (string=?\
    \ (string-ref b 0) (a))) (equal? a b))\n        ((or (string=? a (b 0)) (string=?\
    \ b (a 0))) (equal? b a))\n        ((or (string=? (string-ref a 0) (b 0)) (string=?\
    \ (string-ref b 0) (a))) (equal? b a))\n        ((or (string=? a (b 0)) (string=?\
    \ b (a 0))) (equal? a b))\n        ((or (string=? (string-ref a 0) (b 0)) (string=?\
    \ (string-ref b 0) (a))) (equal? a b))\n        ((or (string=? a (b 0)) (string=?\
    \ b (a 0))) (equal? b a))\n        ((or (string=? (string-ref a 0) (b 0)) (string=?\
    \ (string-ref b 0) (a))) (equal? b a))\n        ((or (string=? a (b 0)) (string=?\
    \ b (a 0))) (equal? a b))\n        ((or (string=? (string-ref a 0) (b 0)) (string=?\
    \ (string-ref b 0) (a))) (equal? a b))\n        ((or (string=? a (b 0)) (string=?\
    \ b (a 0))) (equal? b a))\n        ((or (string=? (string-ref a 0) (b 0)) (string=?\
    \ (string-ref b 0) (a))) (equal? b a))\n        ((or (string=? a (b 0)) (string=?\
    \ b (a 0))) (equal? a b))\n        ((or (string=? (string-ref a 0) (b 0)) (string=?\
    \ (string-ref b 0) (a))) (equal? a b))\n        ((or (string=? a (b 0)) (string=?\
    \ b (a 0))) (equal? b a))\n        ((or (string=? (string-ref a 0) (b 0)) (string=?\
    \ (string-ref b 0) (a))) (equal? b a))\n        ((or (string=? a (b 0)) (string=?\
    \ b (a 0))) (equal? a b))\n        ", "  (or (string=? a b)\n      (or (string=?\
    \ (string-rotate b 1) a)\n          (string-contains-substring a b))))\n", " \
    \ (cond ((or (string=? a b) (string=? b (string-ref a 0))) (eq? a b))\n      \
    \  ((or (string=? a b) (string=? b (string-ref a 1))) (eq? a b))\n        ((or\
    \ (string=? a b) (string=? b (string-ref a 2))) (eq? a b))\n        ((or (string=?\
    \ a b) (string=? b (string-ref a 3))) (eq? a b))\n        ((or (string=? a b)\
    \ (string=? b (string-ref a 4))) (eq? a b))\n        ((or (string=? a b) (string=?\
    \ b (string-ref a 5))) (eq? a b))\n        ((or (string=? a b) (string=? b (string-ref\
    \ a 6))) (eq? a b))\n        ((or (string=? a b) (string=? b (string-ref a 7)))\
    \ (eq? a b))\n        ((or (string=? a b) (string=? b (string-ref a 8))) (eq?\
    \ a b))\n        ((or (string=? a b) (string=? b (string-ref a 9))) (eq? a b))\n\
    \        ((or (string=? a b) (string=? b (string-ref a 10))) (eq? a b))\n    \
    \    ((or (string=? a b) (string=? b (string-ref a 11))) (eq? a b))\n        ((or\
    \ (string=? a b) (string=? b (string-ref a 12))) (eq? a b))\n        ((or (string=?\
    \ a b) (string=? b (string-ref a 13))) (eq? a b))\n        ((or (string=? a b)\
    \ (string=? b (string-ref a 14))) (eq? a b))\n        ((or (string=? a b) (string=?\
    \ b (string-ref a 15))) (eq? a b))\n        ((or (string=? a b) (string=? b (string-ref\
    \ a 16))) (eq? a b))\n        ((or (string=? a b) (string=? b (string-ref a 17)))\
    \ (eq? a b))\n        ((or (string=? a b) (string=? b (string-ref a 18))) (eq?\
    \ a b))\n        ((or (string=? a b) (string=? b (string-ref a 19))) (eq? a b))\n\
    \        ((or (string=? a b) (string=? b (string-ref a 20))) (eq? ", "  (cond\n\
    \    [(empty? a) #f]\n    [(empty? b) #f]\n    [(equal? (first a) (first b)) #t]\n\
    \    [(equal? (first a) (first b)) #t]\n    [else (cond\n            [(equal?\
    \ (first a) (first b)) (cycpattern_check (rest a) (rest b))] \n            [else\
    \ (cond\n                    [(cycpattern_check (rest a) (rest b)) #t]\n     \
    \               [else (cycpattern_check (rest a) (rest b)) #f])])]))\n", "  (cond\n\
    \    [(empty? a) #f]\n    [(empty? b) #f]\n    [(equal? (first a) (first b)) #t]\n\
    \    [(equal? (first a) (first b)) (cycpattern_check (rest a) (rest b))]\n   \
    \ [else (cycpattern_check (rest a) (rest b))]\n  )\n)\n", "  (cond\n    [(empty?\
    \ a) #f]\n    [(empty? b) #f]\n    [(equal? (first a) (first b)) #t]\n    [(equal?\
    \ (first b) (first a)) #t]\n    [else (or (cycpattern_check (rest a) b)\n    \
    \          (cycpattern_check (rest b) a))]))\n", "  (or (string=? a b)\n     \
    \ (or (string=? (string-reverse a) b)\n          (string-rotations? a b))))\n",
  "  (cond\n    [(empty? a) #f]\n    [(empty? b) #f]\n    [(equal? (first a) (first\
    \ b)) #t]\n    [(equal? (first b) (first a)) #t]\n    [else (or (cycpattern_check\
    \ (rest a) b)\n              (cycpattern_check (rest b) a))]))\n", "  (or (string=?\
    \ a b)\n      (or (string=? (string-reverse a) b)\n          (string-contains-substring\
    \ a b))))\n", "  (or (string=? (substring b 0) a)\n      (or (string=? (substring\
    \ b 1) a)\n          (string=? (substring b 2) a)\n          (string=? (substring\
    \ b 3) a)\n          (string=? (substring b 4) a)\n          (string=? (substring\
    \ b 5) a)\n          (string=? (substring b 6) a)\n          (string=? (substring\
    \ b 7) a)\n          (string=? (substring b 8) a)\n          (string=? (substring\
    \ b 9) a)\n          (string=? (substring b 10) a)\n          (string=? (substring\
    \ b 11) a)\n          (string=? (substring b 12) a)\n          (string=? (substring\
    \ b 13) a)\n          (string=? (substring b 14) a)\n          (string=? (substring\
    \ b 15) a)\n          (string=? (substring b 16) a)\n          (string=? (substring\
    \ b 17) a)\n          (string=? (substring b 18) a)\n          (string=? (substring\
    \ b 19) a)\n          (string=? (substring b 20) a)\n          (string=? (substring\
    \ b 21) a)\n          (string=? (substring b 22) a)\n          (string=? (substring\
    \ b 23) a)\n          (string=? (substring b 24) a)\n          (string=? (substring\
    \ b 25) a)\n          (string=? (substring b 26) a)\n          (string=? (substring\
    \ b 27) a)\n          (string=? (substring b 28) a)\n          (string=? (substring\
    \ b 29) a)\n          (string=? (substring b 30) a)\n          (string=? (substring\
    \ b 31) a)\n          (string=? (substring b 32) a)\n          (string=? (substring\
    \ b 33) a)\n          (string=? (substring b 34) a)\n          (string=? (substring\
    \ b 35) a)\n          (string=? (substring b 36) a)\n          (string=? (substring\
    \ b 37) a)\n          (string=? (substring b 38) a)\n          (string=? (substring\
    \ b 39) a)\n          (string=? (substring b 40) a)\n          (string=? (substring\
    \ b 41) a)\n          (string=? (substring b 42) a)\n          (string=? (substring\
    \ b 43) a)\n          (string=? (substring b 44) a)\n          (string=? (substring\
    \ b 45) a)\n          (string=? (substring b 46) a)\n          (string=", "  (or\
    \ (string=? a b)\n      (or (string=? (string-append a (b c)) a)\n          (string=?\
    \ (string-append (b a c)) b)\n          (string=? (string-append (b b c)) c)\n\
    \          (string=? (string-append (b a c)) a)\n          (string=? (string-append\
    \ (b b a)) b)\n          (string=? (string-append (b b c)) b)\n          (string=?\
    \ (string-append (b a a)) b)\n          (string=? (string-append (b b a)) b)\n\
    \          (string=? (string-append (b a a)) b)\n          (string=? (string-append\
    \ (b b a)) b)\n          (string=? (string-append (b b a)) b)\n          (string=?\
    \ (string-append (b b a)) b)\n          (string=? (string-append (b b a)) b)\n\
    \          (string=? (string-append (b b a)) b)\n          (string=? (string-append\
    \ (b b a)) b)\n          (string=? (string-append (b b a)) b)\n          (string=?\
    \ (string-append (b b a)) b)\n          (string=? (string-append (b b a)) b)\n\
    \          (string=? (string-append (b b a)) b)\n          (string=? (string-append\
    \ (b b a)) b)\n          (string=? (string-append (b b a)) b)\n          (string=?\
    \ (string-append (b b a)) b)\n          (string=? (string-append (b b a)) b)\n\
    \          (string=? (string-append (b b a)) b)\n          (string=? (string-append\
    \ (b b a)) b)\n          (string=? (string-append (b b a)) b)\n          (string=?\
    \ (string-append (b b a)) b)\n          (string=? (string-append (b b a)) b)\n\
    \          (string=? (string-append (b b a)) b)\n          (string=? (string-append\
    \ (b b a)) b)\n          (string=? (string-append (b b a)) b)\n          (string=?\
    \ (string-append (b b a)) b)\n          (string=? (string-append (b b a)) b)\n\
    \          (string=? (string-append (b b a)) b)\n          (string=? (string-append\
    \ (b b a)) b)\n          (string=? (string-append (b b a)) b)\n          (string=?\
    \ (string-append (b b a)) b)\n          (string=? (string-append (b b a)) b)\n\
    \          (string=? (string-append (b b a)) b)\n", "  (cond ((or (string-match\
    \ a b)\n             (string-match (substring a 0 1) b))\n         #t)\n     \
    \   ((or (string-match (substring a 0 1) b)\n             (string-match a (b substring\
    \ 0 1)))\n         #t)\n        (else\n         #f)))\n", "  (or (string=? a b)\n\
    \      (or (string=? (string-rotate b 1) a)\n          (string-contains-rotations\
    \ b a))))\n", "  (cond [(or (string-match a b) (string-match b a)) #t]\n     \
    \   [else #f]))\n", "  (cond ((or (string-match a b) (string-match b a)) #t)\n\
    \        ((string-match a b) #t)\n        (else #f)))\n", "  (cond ((or (string-match\
    \ a b) (string-match b a)) #t)\n        ((string-match a b) #t)\n        (else\
    \ #f)))\n", "  (or (string=? a b)\n      (or (string=? (string-rotate b 1) a)\n\
    \          (string-contains-substring a b))))\n", "  (cond\n    [(empty? a) #f]\n\
    \    [(empty? b) #f]\n    [(equal? (first a) (first b)) #t]\n    [(equal? (first\
    \ b) (first a)) #t]\n    [else (or (cycpattern_check (rest a) b)\n           \
    \   (cycpattern_check (rest b) a))]))\n", "  (or (string=? (substring a 0 b) b)\n\
    \      (or (string=? (substring a b b) b)\n          (string=? (substring a (b\
    \ b) b) b))))\n", "  (or (string=? a b)\n      (or (string=? (string-append a\
    \ (b-rotate a b)) a)\n          (string=? (string-append (b-rotate b a) a) b))))\n",
  "  (cond ((or (string-match a b) (string-match b a)) #t)\n        ((string-match\
    \ a b) #t)\n        ((string-match b a) #t)\n        (else #f)))\n", "  (cond\
    \ [(empty? a) #f]\n        [(empty? b) #f]\n        [(equal? (first a) (first\
    \ b)) #t]\n        [(equal? (first a) (first b)) (cycpattern_check (rest a) (rest\
    \ b))]\n        [else (cycpattern_check (rest a) (rest b))]\n        ))\n", " \
    \ (or (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) 0)\n      (equal? (string-length b) 0)\n      (equal? (string-length a) (string-length\
    \ b))\n      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length ", "  (or (string=? a b)\n   \
    \   (or (string=? (string-reverse a) b)\n          (string-match (string-reverse\
    \ a) b))))\n", "  (cond ((or (string-match a b) (string-match b a)) #t)\n    \
    \    ((string-match a b) #f)\n        ((string-match b a) #f)\n        (else (cycpattern_check\
    \ (string-reverse a) b)\n              (cycpattern_check (string-reverse b) a))))\n",
  "  (or (string=? a b)\n      (or (string=? (string-append a b) a)\n          (string-contains-rotations\
    \ b a))))\n", "  (or (string=? a b)\n      (or (string=? (string-rotate b 1) a)\n\
    \          (string=? (string-rotate b 2) a)\n          (string=? (string-rotate\
    \ b 3) a)\n          (string=? (string-rotate b 4) a)\n          (string=? (string-rotate\
    \ b 5) a)\n          (string=? (string-rotate b 6) a)\n          (string=? (string-rotate\
    \ b 7) a)\n          (string=? (string-rotate b 8) a)\n          (string=? (string-rotate\
    \ b 9) a)\n          (string=? (string-rotate b 10) a)\n          (string=? (string-rotate\
    \ b 11) a)\n          (string=? (string-rotate b 12) a)\n          (string=? (string-rotate\
    \ b 13) a)\n          (string=? (string-rotate b 14) a)\n          (string=? (string-rotate\
    \ b 15) a)\n          (string=? (string-rotate b 16) a)\n          (string=? (string-rotate\
    \ b 17) a)\n          (string=? (string-rotate b 18) a)\n          (string=? (string-rotate\
    \ b 19) a)\n          (string=? (string-rotate b 20) a)\n          (string=? (string-rotate\
    \ b 21) a)\n          (string=? (string-rotate b 22) a)\n          (string=? (string-rotate\
    \ b 23) a)\n          (string=? (string-rotate b 24) a)\n          (string=? (string-rotate\
    \ b 25) a)\n          (string=? (string-rotate b 26) a)\n          (string=? (string-rotate\
    \ b 27) a)\n          (string=? (string-rotate b 28) a)\n          (string=? (string-rotate\
    \ b 29) a)\n          (string=? (string-rotate b 30) a)\n          (string=? (string-rotate\
    \ b 31) a)\n          (string=? (string-rotate b 32) a)\n          (string=? (string-rotate\
    \ b 33) a)\n          (string=? (string-rotate b 34) a)\n          (string=? (string-rotate\
    \ b 35) a)\n          (string=? (string-rotate b 36) a)\n          (string=? (string-rotate\
    \ b 37) a)\n          (string=? (string-rotate b 38) a)\n          (string=? (string-rotate\
    \ b 39) a)\n          (string=? (string-rotate b 40) a)\n          (string=? (string-rotate\
    \ b 41) a)\n          (string=? (string-rotate b 42) a)\n          (string=? (string-rotate\
    \ b 43) a)\n          (string=? (string-rotate b 44) a)\n          (string=? (string-rotate\
    \ b 45) a)\n          (string=? (string-rotate b 46) a)\n          (string=? (string-rotate ",
  "  (or (string=? a b)\n      (or (string=? (string-ref a 0) (string-ref b 0))\n\
    \          (string-contains-rotations b a))))\n", "  (or (string=? a b)\n    \
    \  (or (string=? (string-ref a 0) (string-ref b 0))\n          (string-match (string-ref\
    \ a 0) (string-ref b 0)))))\n", "  (or (string=? a b)\n      (or (string=? (string-rotate\
    \ b 1) a)\n          (string=? (string-rotate b 2) a)\n          (string=? (string-rotate\
    \ b 3) a)\n          (string=? (string-rotate b 4) a)\n          (string=? (string-rotate\
    \ b 5) a)\n          (string=? (string-rotate b 6) a)\n          (string=? (string-rotate\
    \ b 7) a)\n          (string=? (string-rotate b 8) a)\n          (string=? (string-rotate\
    \ b 9) a)\n          (string=? (string-rotate b 10) a)\n          (string=? (string-rotate\
    \ b 11) a)\n          (string=? (string-rotate b 12) a)\n          (string=? (string-rotate\
    \ b 13) a)\n          (string=? (string-rotate b 14) a)\n          (string=? (string-rotate\
    \ b 15) a)\n          (string=? (string-rotate b 16) a)\n          (string=? (string-rotate\
    \ b 17) a)\n          (string=? (string-rotate b 18) a)\n          (string=? (string-rotate\
    \ b 19) a)\n          (string=? (string-rotate b 20) a)\n          (string=? (string-rotate\
    \ b 21) a)\n          (string=? (string-rotate b 22) a)\n          (string=? (string-rotate\
    \ b 23) a)\n          (string=? (string-rotate b 24) a)\n          (string=? (string-rotate\
    \ b 25) a)\n          (string=? (string-rotate b 26) a)\n          (string=? (string-rotate\
    \ b 27) a)\n          (string=? (string-rotate b 28) a)\n          (string=? (string-rotate\
    \ b 29) a)\n          (string=? (string-rotate b 30) a)\n          (string=? (string-rotate\
    \ b 31) a)\n          (string=? (string-rotate b 32) a)\n          (string=? (string-rotate\
    \ b 33) a)\n          (string=? (string-rotate b 34) a)\n          (string=? (string-rotate\
    \ b 35) a)\n          (string=? (string-rotate b 36) a)\n          (string=? (string-rotate\
    \ b 37) a)\n          (string=? (string-rotate b 38) a)\n          (string=? (string-rotate\
    \ b 39) a)\n          (string=? (string-rotate b 40) a)\n          (string=? (string-rotate\
    \ b 41) a)\n          (string=? (string-rotate b 42) a)\n          (string=? (string-rotate\
    \ b 43) a)\n          (string=? (string-rotate b 44) a)\n          (string=? (string-rotate\
    \ b 45) a)\n          (string=? (string-rotate b 46) a)\n          (string=? (string-rotate ",
  "  (or (string=? a b)\n      (or (string=? (string-rotate b 1) a)\n          (string=?\
    \ (string-rotate b 2) a)\n          (string=? (string-rotate b 3) a)\n       \
    \   (string=? (string-rotate b 4) a)\n          (string=? (string-rotate b 5)\
    \ a)\n          (string=? (string-rotate b 6) a)\n          (string=? (string-rotate\
    \ b 7) a)\n          (string=? (string-rotate b 8) a)\n          (string=? (string-rotate\
    \ b 9) a)\n          (string=? (string-rotate b 10) a)\n          (string=? (string-rotate\
    \ b 11) a)\n          (string=? (string-rotate b 12) a)\n          (string=? (string-rotate\
    \ b 13) a)\n          (string=? (string-rotate b 14) a)\n          (string=? (string-rotate\
    \ b 15) a)\n          (string=? (string-rotate b 16) a)\n          (string=? (string-rotate\
    \ b 17) a)\n          (string=? (string-rotate b 18) a)\n          (string=? (string-rotate\
    \ b 19) a)\n          (string=? (string-rotate b 20) a)\n          (string=? (string-rotate\
    \ b 21) a)\n          (string=? (string-rotate b 22) a)\n          (string=? (string-rotate\
    \ b 23) a)\n          (string=? (string-rotate b 24) a)\n          (string=? (string-rotate\
    \ b 25) a)\n          (string=? (string-rotate b 26) a)\n          (string=? (string-rotate\
    \ b 27) a)\n          (string=? (string-rotate b 28) a)\n          (string=? (string-rotate\
    \ b 29) a)\n          (string=? (string-rotate b 30) a)\n          (string=? (string-rotate\
    \ b 31) a)\n          (string=? (string-rotate b 32) a)\n          (string=? (string-rotate\
    \ b 33) a)\n          (string=? (string-rotate b 34) a)\n          (string=? (string-rotate\
    \ b 35) a)\n          (string=? (string-rotate b 36) a)\n          (string=? (string-rotate\
    \ b 37) a)\n          (string=? (string-rotate b 38) a)\n          (string=? (string-rotate\
    \ b 39) a)\n          (string=? (string-rotate b 40) a)\n          (string=? (string-rotate\
    \ b 41) a)\n          (string=? (string-rotate b 42) a)\n          (string=? (string-rotate\
    \ b 43) a)\n          (string=? (string-rotate b 44) a)\n          (string=? (string-rotate\
    \ b 45) a)\n          (string=? (string-rotate b 46) a)\n          (string=? (string-rotate ",
  "  (or (string=? a b)\n      (or (string=? (string-ref a 0) (string-ref b 0))\n\
    \          (string-contains-substring a b))))\n", "  (or (string=? (substring\
    \ b 0 (string-length a)) a)\n      (map (lambda (x) (substring a 0 (string-length\
    \ x)) x))\n      (map (lambda (x) (substring x 0 (string-length a)) a))))\n",
  "  (or (string=? a b)\n      (or (string=? (string-ref a 0) (string-ref b 0))\n\
    \          (string-contains-rotations b a))))\n", "  (or (string=? a b)\n    \
    \  (or (string=? (string-reverse a) b)\n          (string-rotations? a b))))\n",
  "  (or (string=? a b)\n      (or (string=? (string-ref a 0) (string-ref b 0))\n\
    \          (string-contains-rotations b a))))\n", "  (cond ((null? a) #f)\n  \
    \      ((null? b) #f)\n        ((string-equal? (substring a 0 1) (substring b\
    \ 0 1)) #t)\n        (else (or (cycpattern_check (substring a 0 1) (substring\
    \ b 0 1))\n                  (cycpattern_check (substring a 1 ) (substring b 1\
    \ ))\n                  (cycpattern_check (substring a 2 ) (substring b 2 ))\n\
    \                  (cycpattern_check (substring a 3 ) (substring b 3 ))\n    \
    \              (cycpattern_check (substring a 4 ) (substring b 4 ))\n        \
    \          (cycpattern_check (substring a 5 ) (substring b 5 ))\n            \
    \      (cycpattern_check (substring a 6 ) (substring b 6 ))\n                \
    \  (cycpattern_check (substring a 7 ) (substring b 7 ))\n                  (cycpattern_check\
    \ (substring a 8 ) (substring b 8 ))\n                  (cycpattern_check (substring\
    \ a 9 ) (substring b 9 ))\n                  (cycpattern_check (substring a 10\
    \ ) (substring b 10 ))\n                  (cycpattern_check (substring a 11 )\
    \ (substring b 11 ))\n                  (cycpattern_check (substring a 12 ) (substring\
    \ b 12 ))\n                  (cycpattern_check (substring a 13 ) (substring b\
    \ 13 ))\n                  (cycpattern_check (substring a 14 ) (substring b 14\
    \ ))\n                  (cycpattern_check (substring a 15 ) (substring b 15 ))\n\
    \                  (cycpattern_check (substring a 16 ) (substring b 16 ))\n  \
    \                (cycpattern_check (substring a 17 ) (substring b 17 ))\n    \
    \              (cycpattern_check (substring a 18 ) (substring b 18 ))\n      \
    \            (cycpattern_check (substring a 19 ) (substring b 19 ))\n        \
    \          (cycpattern_check (substring a 20 ) (substring b 20 ))\n          \
    \        (cycpattern_check (substring a 21 ) (substring b 21 ))\n            \
    \      (cycpattern_check (substring a 22 ) (substring b 22 ))\n              \
    \    (cycpattern_check (substring a 23 ) (substring b 23 ))\n                \
    \  (cycpattern_check (substring a 24 ) (substring b 24 ))\n                  (cycpattern_check\
    \ (substring a 25 ) (substring b 25 ))\n                  (cycp", "  (or (string=?\
    \ a b)\n      (or (string=? (string-reverse a) b)\n          (string-contains-rotations\
    \ b a))))\n", "  (or (string=? a b)\n      (or (string=? (string-reverse a) (string-reverse\
    \ b))\n          (string-contains-rotations a b))))\n", "  (or (string=? a b)\n\
    \      (or (string=? (substring a 0 1) b)\n          (string=? (substring a 1\
    \ 0) b))))\n", "  (or (string=? a b)\n      (or (string=? (string-ref a 0) (string-ref\
    \ b 0))\n          (string-contains? a b))))\n", "  (cond ((or (string-match a\
    \ b)\n            (string-match b a))\n         #t)\n        ((string-match a\
    \ b)\n         #f)\n        (else\n         (string-match (string-reverse a) (string-reverse\
    \ b))\n         #t)))\n", "  (cond ((or (string=? a b) (string=? (string-ref a\
    \ 0) (string-ref b 0))) #f)\n        ((or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1)))\n        ((or (string=?\
    \ (string-ref a 1) (string-ref b 1)) (cycpattern_check (string-ref a 2) (string-ref\
    \ b 2)))\n        ((or (string=? (string-ref a 2) (string-ref b 2)) (cycpattern_check\
    \ (string-ref a 3) (string-ref b 3)))\n        ((or (string=? (string-ref a 3)\
    \ (string-ref b 3)) (cycpattern_check (string-ref a 4) (string-ref b 4)))\n  \
    \      ((or (string=? (string-ref a 4) (string-ref b 4)) (cycpattern_check (string-ref\
    \ a 5) (string-ref b 5)))\n        ((or (string=? (string-ref a 5) (string-ref\
    \ b 5)) (cycpattern_check (string-ref a 6) (string-ref b 6)))\n        ((or (string=?\
    \ (string-ref a 6) (string-ref b 6)) (cycpattern_check (string-ref a 7) (string-ref\
    \ b 7)))\n        ((or (string=? (string-ref a 7) (string-ref b 7)) (cycpattern_check\
    \ (string-ref a 8) (string-ref b 8)))\n        ((or (string=? (string-ref a 8)\
    \ (string-ref b 8)) (cycpattern_check (string-ref a 9) (string-ref b 9)))\n  \
    \      ((or (string=? (string-ref a 9) (string-ref b 9)) (cycpattern_check (string-ref\
    \ a 10) (string-ref b 10)))\n        ((or (string=? (string-ref a 10) (string-ref\
    \ b 10)) (cycpattern_check (string-ref a 11) (string-ref b 11)))\n        ((or\
    \ (string=? (string-ref a 11) (string-ref b 11)) (cycpattern_check (string-ref\
    \ a 12) (string-ref b 12)))\n        ((or (string=? (string-ref a 12) (string-ref\
    \ b 12)) (cycpattern_check (string-ref a 13) (string-ref b 13)))\n        ((or\
    \ (string=? (string-ref a 13) (string-ref b 13)) (cycpattern_check (string-ref\
    \ a 14) (string-ref b 14)))\n        ((or (string=? (string-ref a 14) (string-ref\
    \ b 14)) (cycp", "  (or (string=? a b)\n      (or (string=? (string-ref a 0) (string-ref\
    \ b 0))\n          (string-contains-rotations a b))))\n", "  (or (string=? a b)\n\
    \      (or (string=? (string-reverse a) b)\n          (string-match (string-reverse\
    \ a) b))))\n", "  (or (string=? b a)\n      (or (string=? (string-rotate b 1)\
    \ a)\n          (string-contains-substring b a))))\n", "  (or (string=? b a)\n\
    \      (or (string=? (string-ref a 0) (string-ref b 0))\n          (string-contains?\
    \ a b))))\n", "  (or (string=? (string-ref a 0) (string-ref b 0))\n      (or (string=?\
    \ (string-ref b 0) (string-ref a 0))\n          (string-contains-rotations b a))))\n",
  "  (or (string=? b a)\n      (substring a 0 (string-length a) b)\n      (substring\
    \ b (string-length a) 0 (string-length b))))\n", "  (cond\n    [(empty? a) #f]\n\
    \    [(empty? b) #f]\n    [(equal? (first a) (first b)) #t]\n    [(equal? (first\
    \ a) (first b)) (cycpattern_check (rest a) (rest b))]\n    [else (cycpattern_check\
    \ (rest a) (rest b))]\n  ))\n", "  (cond ((or (string=? a b) (string=? b a)) #t)\n\
    \        ((or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-ref\
    \ a 1) (string-ref b 1)))\n         (or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1)))\n        ((or (string=?\
    \ (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-ref a 1) (string-ref\
    \ b 1)))\n         (or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check\
    \ (string-ref a 1) (string-ref b 1)))\n        ((or (string=? (string-ref a 0)\
    \ (string-ref b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1)))\n  \
    \       (or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-ref\
    \ a 1) (string-ref b 1)))\n        ((or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1)))\n         (or (string=?\
    \ (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-ref a 1) (string-ref\
    \ b 1)))\n        ((or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check\
    \ (string-ref a 1) (string-ref b 1)))\n         (or (string=? (string-ref a 0)\
    \ (string-ref b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1)))\n  \
    \      ((or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-ref\
    \ a 1) (string-ref b 1)))\n         (or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1)))\n        ((or (string=?\
    \ (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-ref a 1) (string-ref\
    \ b 1)))\n         (or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check\
    \ (string-ref a 1) (string-ref b 1)))\n        ((or (string=? (string-ref a 0)\
    \ (string-ref b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1)))\n  \
    \       (or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-ref\
    \ a 1) (string-ref b 1)))\n        ((or (string", "  (cond [(empty? a) #f]\n \
    \       [(empty? b) #f]\n        [(equal? (first a) (first b)) #t]\n        [(equal?\
    \ (first b) (first a)) #t]\n        [(equal? (first a) (first b)) (cycpattern_check\
    \ (rest a) (rest b))]\n        [(equal? (first b) (first a)) (cycpattern_check\
    \ (rest b) (rest a))]\n        [else (cycpattern_check (rest a) (rest b))]))\n",
  "  (or (string=? a b)\n      (or (string=? (string-ref a 0) (string-ref b 0))\n\
    \          (string-contains-substring a b))))\n", "  (cond ((null? a) #f)\n  \
    \      ((null? b) #f)\n        ((string-match (substring a 0 1) b) #t)\n     \
    \   (else (or (cycpattern_check (substring a 0 1) (substring b 0 1)) (or (cycpattern_check\
    \ (substring a 0 1) (substring b 1 1)) (or (cycpattern_check (substring a 0 1)\
    \ (substring b 2 1))))))))\n", "  (or (string=? a b)\n      (or (string=? (string-reverse\
    \ a) b)\n          (string-rotations? a b))))\n", "  (or (string=? a b)\n    \
    \  (or (string=? (string-reverse a) b)\n          (string-contains-rotations a\
    \ b))))\n", "  (or (string=? a b)\n      (or (string=? (substring a 0 1) (substring\
    \ b 0 1))\n          (string=? (substring a 0 2) (substring b 0 2))\n        \
    \  (string=? (substring a 0 3) (substring b 0 3))\n          (string=? (substring\
    \ a 0 4) (substring b 0 4))\n          (string=? (substring a 0 5) (substring\
    \ b 0 5))\n          (string=? (substring a 0 6) (substring b 0 6))\n        \
    \  (string=? (substring a 0 7) (substring b 0 7))\n          (string=? (substring\
    \ a 0 8) (substring b 0 8))\n          (string=? (substring a 0 9) (substring\
    \ b 0 9))\n          (string=? (substring a 0 10) (substring b 0 10))\n      \
    \    (string=? (substring a 0 11) (substring b 0 11))\n          (string=? (substring\
    \ a 0 12) (substring b 0 12))\n          (string=? (substring a 0 13) (substring\
    \ b 0 13))\n          (string=? (substring a 0 14) (substring b 0 14))\n     \
    \     (string=? (substring a 0 15) (substring b 0 15))\n          (string=? (substring\
    \ a 0 16) (substring b 0 16))\n          (string=? (substring a 0 17) (substring\
    \ b 0 17))\n          (string=? (substring a 0 18) (substring b 0 18))\n     \
    \     (string=? (substring a 0 19) (substring b 0 19))\n          (string=? (substring\
    \ a 0 20) (substring b 0 20))\n          (string=? (substring a 0 21) (substring\
    \ b 0 21))\n          (string=? (substring a 0 22) (substring b 0 22))\n     \
    \     (string=? (substring a 0 23) (substring b 0 23))\n          (string=? (substring\
    \ a 0 24) (substring b 0 24))\n          (string=? (substring a 0 25) (substring\
    \ b 0 25))\n          (string=? (substring a 0 26) (substring b 0 26))\n     \
    \     (string=? (substring a 0 27) (substring b 0 27))\n          (string=? (substring\
    \ a 0 28) (substring b 0 28))\n          (string=? (substring a 0 29) (substring\
    \ b 0 29))\n          (string=? (substring a 0 30) (substring b 0 30))\n     \
    \     (string=", "  (cond ((or (string=? a \"\") (string=? b \"\"))\n        \
    \ #f)\n        ((or (string=? a b) (string-rot? a b))\n         #t)\n        (else\n\
    \         (string-rot? a b)\n         )))\n", '  (cond [(or (string-match a b)
    #t) (cond [(or (string-match a b) #t) (cond [(or (string-match a b) #t) (cond
    [(or (string-match a b) #t) (cond [(or (string-match a b) #t) (cond [(or (string-match
    a b) #t) (cond [(or (string-match a b) #t) (cond [(or (string-match a b) #t) (cond
    [(or (string-match a b) #t) (cond [(or (string-match a b) #t) (cond [(or (string-match
    a b) #t) (cond [(or (string-match a b) #t) (cond [(or (string-match a b) #t) (cond
    [(or (string-match a b) #t) (cond [(or (string-match a b) #t) (cond [(or (string-match
    a b) #t) (cond [(or (string-match a b) #t) (cond [(or (string-match a b) #t) (cond
    [(or (string-match a b) #t) (cond [(or (string-match a b) #t) (cond [(or (string-match
    a b) #t) (cond [(or (string-match a b) #t) (cond [(or (string-match a b) #t) (cond
    [(or (string-match a b) #t) (cond [(or (string-match a b) #t) (cond [(or (string-match
    a b) #t) (cond [(or (string-match a b) #t) (cond [(or (string-match a b) #t) (cond
    [(or (string-match a b) #t) (cond [(or (string-match a b) #t) (cond [(or (string-match
    a b) #t) (cond [(or (string-match a b) #t) (cond [(or (string-match a b) #t) (cond
    [(or (string-match a b) #t) (cond [(or (string-match a b) #t) (cond [(or (string-match
    a b) #t) (cond [(or (string-match a b) #t) (cond [(or (string-match a b) #t) (cond
    [(or (string-match a b) #t) (cond [(or (string-match a b) #t) (cond [(or (string-match
    a b) #t) (cond [(or (string-match a b) #t) (cond [(or (string-match a b) #t) (cond
    [(or (string-match a b) #t) (cond [(or (string-match a b) #t) (cond [(or (string-match
    a b) #t) (cond [(or (string-', "  (or (equal? (string-length a) (string-length\
    \ b))\n      (equal? (string-length a) 0)\n      (equal? (string-length b) 0)\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length ", "  (or (string=? a b)\n      (or (string=? (string-append\
    \ a (b-rotate a b)) a)\n          (string=? (string-append (b-rotate b a) a) b))))\n",
  "  (cond ((or (string=? a b) #t)\n         (string=? (string-reverse a) (string-reverse\
    \ b)))\n        ((or (string=? a b) #t)\n         (string=? (string-reverse b)\
    \ (string-reverse a)))\n        (else #f)))\n", "  (or (string=? a b)\n      (or\
    \ (string=? (string-ref a 0) (string-ref b 0))\n          (string-contains? a\
    \ b))))\n", "  (or (string=? a b)\n      (or (string=? (substring a 0 1) b)\n\
    \          (string=? (substring a 1 0) b))))\n", "  (cond\n    [(empty? a) #f]\n\
    \    [(empty? b) #f]\n    [(equal? (first a) (first b)) #t]\n    [(equal? (first\
    \ b) (first a)) #t]\n    [else (or (cycpattern_check (rest a) b)\n           \
    \   (cycpattern_check (rest b) a)))]))\n", "  (cond ((null? b) #f)\n        ((string-substring\
    \ a b)\n         (string-substring b a))\n        (else #f)))\n", "  (or (string=?\
    \ a b)\n      (or (string=? (string-rotate b 1) a)\n          (string=? (string-rotate\
    \ b 2) a)\n          (string=? (string-rotate b 3) a)\n          (string=? (string-rotate\
    \ b 4) a)\n          (string=? (string-rotate b 5) a)\n          (string=? (string-rotate\
    \ b 6) a)\n          (string=? (string-rotate b 7) a)\n          (string=? (string-rotate\
    \ b 8) a)\n          (string=? (string-rotate b 9) a)\n          (string=? (string-rotate\
    \ b 10) a)\n          (string=? (string-rotate b 11) a)\n          (string=? (string-rotate\
    \ b 12) a)\n          (string=? (string-rotate b 13) a)\n          (string=? (string-rotate\
    \ b 14) a)\n          (string=? (string-rotate b 15) a)\n          (string=? (string-rotate\
    \ b 16) a)\n          (string=? (string-rotate b 17) a)\n          (string=? (string-rotate\
    \ b 18) a)\n          (string=? (string-rotate b 19) a)\n          (string=? (string-rotate\
    \ b 20) a)\n          (string=? (string-rotate b 21) a)\n          (string=? (string-rotate\
    \ b 22) a)\n          (string=? (string-rotate b 23) a)\n          (string=? (string-rotate\
    \ b 24) a)\n          (string=? (string-rotate b 25) a)\n          (string=? (string-rotate\
    \ b 26) a)\n          (string=? (string-rotate b 27) a)\n          (string=? (string-rotate\
    \ b 28) a)\n          (string=? (string-rotate b 29) a)\n          (string=? (string-rotate\
    \ b 30) a)\n          (string=? (string-rotate b 31) a)\n          (string=? (string-rotate\
    \ b 32) a)\n          (string=? (string-rotate b 33) a)\n          (string=? (string-rotate\
    \ b 34) a)\n          (string=? (string-rotate b 35) a)\n          (string=? (string-rotate\
    \ b 36) a)\n          (string=? (string-rotate b 37) a)\n          (string=? (string-rotate\
    \ b 38) a)\n          (string=? (string-rotate b 39) a)\n          (string=? (string-rotate\
    \ b 40) a)\n          (string=? (string-rotate b 41) a)\n          (string=? (string-rotate\
    \ b 42) a)\n          (string=? (string-rotate b 43) a)\n          (string=? (string-rotate\
    \ b 44) a)\n          (string=? (string-rotate b 45) a)\n          (string=? (string-rotate\
    \ b 46) a)\n          (string=? (string-rotate ", "  (or (string=? a b)\n    \
    \  (or (string=? (string-ref a 0) (string-ref b 0))\n          (string-contains-rotations\
    \ a b))))\n", "  (cond ((or (string=? a b) (string=? b (string-ref a 0))) (not\
    \ (substring a b)))\n        ((string=? a b) (not (substring b (string-ref a 0))))\n\
    \        (else (substring a b))))\n", "  (cond ((or (string-match a b) #t)\n \
    \        (string-match a b))\n        ((string-match a b)\n         (string-match\
    \ a b))\n        ((string-match a b)\n         (string-match a b))\n        ((string-match\
    \ a b)\n         (string-match a b))\n        ((string-match a b)\n         (string-match\
    \ a b))\n        ((string-match a b)\n         (string-match a b))\n        ((string-match\
    \ a b)\n         (string-match a b))\n        ((string-match a b)\n         (string-match\
    \ a b))\n        ((string-match a b)\n         (string-match a b))\n        ((string-match\
    \ a b)\n         (string-match a b))\n        ((string-match a b)\n         (string-match\
    \ a b))\n        ((string-match a b)\n         (string-match a b))\n        ((string-match\
    \ a b)\n         (string-match a b))\n        ((string-match a b)\n         (string-match\
    \ a b))\n        ((string-match a b)\n         (string-match a b))\n        ((string-match\
    \ a b)\n         (string-match a b))\n        ((string-match a b)\n         (string-match\
    \ a b))\n        ((string-match a b)\n         (string-match a b))\n        ((string-match\
    \ a b)\n         (string-match a b))\n        ((string-match a b)\n         (string-match\
    \ a b))\n        ((string-match a b)\n         (string-match a b))\n        ((string-match\
    \ a b)\n         (string-match a b))\n        ((string-match a b)\n         (string-match\
    \ a b))\n        ((string-match a b)\n         (string-match a b))\n        ((string-match\
    \ a b)\n         (string-match a b))\n        ((string-match a b)\n         (string-match\
    \ a b))\n        ((string-match a b)\n         (string-match a b))\n        ((string-match\
    \ a b)\n         (string-match a b))\n        ((string-match a b)\n         (string-match\
    \ a b))\n        ((string-match a b)\n         (string-match a b))\n        ((string-match\
    \ a b)\n         (string-match a b))\n        ((string-match a b)\n         (string-match\
    \ a b))\n        ((string-match a b)\n         (string-match a b))\n        ((string-match\
    \ a b)\n         (string-match a b))\n        ((string-match a b)\n         (string-match\
    \ a b))\n        ((string-match a b)\n         (string-match a b))\n        ((string-match\
    \ a b)\n         (string-match a b))\n        ((string-match a b)\n         (string-match\
    \ a b))\n        ((string-match a b)\n         (string-match a b))\n", "  (or\
    \ (string=? a b)\n      (or (string=? (substring a 0 1) b)\n          (string=?\
    \ (substring b 0 1) a))))\n", "  (or (string=? a b)\n      (or (string=? (string-ref\
    \ a 0) (string-ref b 0))\n          (string-contains-rotations b a))))\n", " \
    \ (or (string=? (substring b 0 a) (substring a 0 b))\n      (or (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 ", "  (cond ((or\
    \ (string=? a b) (string=? b a)) #t)\n        ((or (string=? a (cycpattern_rotate\
    \ b a)) (string=? (cycpattern_rotate b a) a)) #t)\n        ((or (string=? (cycpattern_rotate\
    \ b a) a) (string=? a (cycpattern_rotate b a))) #t)\n        (else #f)))\n", " \
    \ (cond ((or (null? a) (null? b)) #f)\n        ((or (string=? (substring a 0 1)\
    \ b) (string=? (substring b 0 1) a)) #t)\n        ((or (string=? (substring a\
    \ 0 1) b) (string=? (substring b 0 1) a)) (cycpattern_check (substring a 1 ) (substring\
    \ b 1 )))\n        (else (cycpattern_check (substring a 1 ) (substring b 1 )))))\n",
  "  (cond [(empty? a) #f]\n        [(empty? b) #f]\n        [(equal? (first a) (first\
    \ b)) #t]\n        [(equal? (first b) (first a)) #t]\n        [else (or (cycpattern_check\
    \ (rest a) b)\n                   (cycpattern_check (rest b) a)))]))\n", "  (cond\
    \ [(or (string-match a b)\n            (string-match (substring a 0 1) b))\n \
    \        #f]\n        [(or (string-match (substring a 0 1) b)\n            (string-match\
    \ a b))\n         #t]\n        [else #f]))\n", "  (or (string=? a b)\n      (or\
    \ (string=? (string-ref a 0) (string-ref b 0))\n          (string-contains-substring\
    \ a b))))\n", "  (or (string=? a b)\n      (or (string=? (string-ref a 0) (string-ref\
    \ b 0))\n          (string-contains-rotations b a))))\n", "  (or (string=? a b)\n\
    \      (or (string=? (substring a 0 1) b)\n          (string=? (substring a 1\
    \ 0) b))))\n", "  (or (string=? a b)\n      (or (string=? (string-ref a 0) (string-ref\
    \ b 0))\n          (string-contains-rotations b a))))\n", "  (or (string=? a b)\n\
    \      (or (string=? (string-ref a 0) (string-ref b 0))\n          (string-contains-rotations\
    \ b a))))\n", "  (cond ((or (string=? a b) (string=? b a)) #t)\n        ((or (string=?\
    \ (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-ref a 1) (string-ref\
    \ b 1))) #t)\n        ((or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check\
    \ (string-ref b 1) (string-ref a 1))) #t)\n        ((or (string=? (string-ref\
    \ a 0) (string-ref b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1)))\
    \ #t)\n        ((or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check\
    \ (string-ref b 1) (string-ref a 1))) #t)\n        ((or (string=? (string-ref\
    \ a 0) (string-ref b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1)))\
    \ #t)\n        ((or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check\
    \ (string-ref b 1) (string-ref a 1))) #t)\n        ((or (string=? (string-ref\
    \ a 0) (string-ref b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1)))\
    \ #t)\n        ((or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check\
    \ (string-ref b 1) (string-ref a 1))) #t)\n        ((or (string=? (string-ref\
    \ a 0) (string-ref b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1)))\
    \ #t)\n        ((or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check\
    \ (string-ref b 1) (string-ref a 1))) #t)\n        ((or (string=? (string-ref\
    \ a 0) (string-ref b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1)))\
    \ #t)\n        ((or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check\
    \ (string-ref b 1) (string-ref a 1))) #t)\n        ((or (string=? (string-ref\
    \ a 0) (string-ref b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1)))\
    \ #t)\n        ((or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check\
    \ (string-ref b 1) (string-ref a 1))) #t)\n        ((or (string=? (string-ref\
    \ a 0) (string-ref b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1))",
  "  (or (string=? a b)\n      (or (string=? (string-reverse a) b)\n          (string-rotations?\
    \ a b))))\n", "  (cond\n    [(empty? a) #f]\n    [(empty? b) #f]\n    [(equal?\
    \ (first a) (first b)) #t]\n    [(equal? (first b) (first a)) #t]\n    [(equal?\
    \ (first a) (first b)) (cycpattern_check (rest a) (rest b))]\n    [(equal? (first\
    \ b) (first a)) (cycpattern_check (rest b) (rest a))]\n    [else (cycpattern_check\
    \ (rest a) (rest b))]\n  )\n)\n", "  (or (string=? (substring b 0 (string-length\
    \ a)) a)\n      (or (string=? (substring a 0 (string-length b)) b)\n         \
    \ (string-contains-rotations b a))))\n", "  (cond ((or (string-match a b) (string-match\
    \ b a)) #t)\n        ((string-match a b) #t)\n        ((string-match b a) #t)\n\
    \        ((string-match a b) (string-match a b) #t)\n        ((string-match b\
    \ a) (string-match b a) #t)\n        ((string-match a b) (string-match b a) (string-match\
    \ a b) #t)\n        ((string-match b a) (string-match b a) (string-match a b)\
    \ #t)\n        ((string-match a b) (string-match b a) (string-match a b) (string-match\
    \ a b) #t)\n        ((string-match b a) (string-match b a) (string-match a b)\
    \ (string-match a b) #t)\n        ((string-match a b) (string-match b a) (string-match\
    \ a b) (string-match a b) (string-match a b) #t)\n        ((string-match b a)\
    \ (string-match b a) (string-match a b) (string-match a b) (string-match a b)\
    \ (string-match a b) #t)\n        ((string-match a b) (string-match b a) (string-match\
    \ a b) (string-match a b) (string-match a b) (string-match a b) (string-match\
    \ a b) #t)\n        ((string-match b a) (string-match b a) (string-match a b)\
    \ (string-match a b) (string-match a b) (string-match a b) (string-match a b)\
    \ (string-match a b) #t)\n        ((string-match a b) (string-match b a) (string-match\
    \ a b) (string-match a b) (string-match a b) (string-match a b) (string-match\
    \ a b) (string-match a b) (string-match a b) #t)\n        ((string-match b a)\
    \ (string-match b a) (string-match a b) (string-match a b) (string-match a b)\
    \ (string-match a b) (string-match a b) (string-match a b) (string-match a b)\
    \ (string-match a b) #t)\n        ((string-match a b) (string-match b a) (string-match\
    \ a b) (string-match a b) (string-match a b) (string-match a b) (string-match\
    \ a b) (string-match a b) (string-match a b) (string-match a b) (string-match\
    \ a b) #t)\n        ((string-match b a) (string-match b a) (string-match a b)\
    \ (string-match a b) (string-match a b) (string-match a b) (string-match a b)\
    \ (string-match a b) (string-match a b) (string-match a b) (string-match ", " \
    \ (cond ((or (string=? a b) (string=? (string-ref a 0) (string-ref b 0))) #f)\n\
    \        ((or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-tail\
    \ a 0) (string-tail b 0))) #t)\n        ((or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (cycpattern_check (string-tail a 1) (string-tail b 0))) #t)\n        ((or\
    \ (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-tail\
    \ a 1) (string-tail b 1))) #t)\n        ((or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (cycpattern_check (string-tail a 2) (string-tail b 0))) #t)\n        ((or\
    \ (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-tail\
    \ a 2) (string-tail b 1))) #t)\n        ((or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (cycpattern_check (string-tail a 3) (string-tail b 0))) #t)\n        ((or\
    \ (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-tail\
    \ a 3) (string-tail b 1))) #t)\n        ((or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (cycpattern_check (string-tail a 4) (string-tail b 0))) #t)\n        ((or\
    \ (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-tail\
    \ a 4) (string-tail b 1))) #t)\n        ((or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (cycpattern_check (string-tail a 5) (string-tail b 0))) #t)\n        ((or\
    \ (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-tail\
    \ a 5) (string-tail b 1))) #t)\n        ((or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (cycpattern_check (string-tail a 6) (string-tail b 0))) #t)\n        ((or\
    \ (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-tail\
    \ a 6) (string-tail b 1))) #t)\n        ((or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (cycpattern_check (string-tail a 7) (string-tail b 0))) #t)\n        ((or\
    \ (string=? (string-ref a 0) ", "  (cond ((or (string-match a b) (string-match\
    \ b a)) #t)\n        ((string-match a b) #t)\n        (else #f)))\n", "  (cond\
    \ [(empty? a) #f]\n        [(empty? b) #f]\n        [(equal? (first a) (first\
    \ b)) #t]\n        [(equal? (first a) (first b)) (cycpattern_check (rest a) (rest\
    \ b))]\n        [else (cycpattern_check (rest a) (rest b))]\n        ))\n", " \
    \ (cond ((or (string=? a b) #t)\n         (string=? (substring a 0 1) (substring\
    \ b 0 1)))\n        ((or (string=? a b) #t)\n         (string=? (substring a 0\
    \ 1) (substring b 0 1)))\n        ((or (string=? a b) #t)\n         (string=?\
    \ (substring a 0 1) (substring b 0 1)))\n        ((or (string=? a b) #t)\n   \
    \      (string=? (substring a 0 1) (substring b 0 1)))\n        ((or (string=?\
    \ a b) #t)\n         (string=? (substring a 0 1) (substring b 0 1)))\n       \
    \ ((or (string=? a b) #t)\n         (string=? (substring a 0 1) (substring b 0\
    \ 1)))\n        ((or (string=? a b) #t)\n         (string=? (substring a 0 1)\
    \ (substring b 0 1)))\n        ((or (string=? a b) #t)\n         (string=? (substring\
    \ a 0 1) (substring b 0 1)))\n        ((or (string=? a b) #t)\n         (string=?\
    \ (substring a 0 1) (substring b 0 1)))\n        ((or (string=? a b) #t)\n   \
    \      (string=? (substring a 0 1) (substring b 0 1)))\n        ((or (string=?\
    \ a b) #t)\n         (string=? (substring a 0 1) (substring b 0 1)))\n       \
    \ ((or (string=? a b) #t)\n         (string=? (substring a 0 1) (substring b 0\
    \ 1)))\n        ((or (string=? a b) #t)\n         (string=? (substring a 0 1)\
    \ (substring b 0 1)))\n        ((or (string=? a b) #t)\n         (string=? (substring\
    \ a 0 1) (substring b 0 1)))\n        ((or (string=? a b) #t)\n         (string=?\
    \ (substring a 0 1) (substring b 0 1)))\n        ((or (string=? a b) #t)\n   \
    \      (string=? (substring a 0 1) (substring b 0 1)))\n        ((or (string=?\
    \ a b) #t)\n         (string=? (substring a 0 1) (substring b 0 1)))\n       \
    \ ((or (string=? a b) #t)\n         (string=? (substring a 0 1) (substring b 0\
    \ 1)))\n        ((or (string=? a b) #t)\n         (string=? (substring a 0 1)\
    \ (substring b ", "  (cond ((or (string-match a b)\n             (string-match\
    \ a (reverse b)))\n         #t)\n        ((or (string-match a (reverse b))\n \
    \            (string-match b (reverse a)))\n         #f)\n        (else\n    \
    \     (string-match a (reverse b) (reverse a))))\n", "  (cond\n    [(empty? a)\
    \ #f]\n    [(empty? b) #f]\n    [(equal? (first a) (first b)) #t]\n    [(equal?\
    \ (first a) (first b)) (cycpattern_check (rest a) (rest b))]\n    [else (cycpattern_check\
    \ (rest a) (rest b))]\n  ))\n", "  (cond ((or (string=? a b) (string=? (string-ref\
    \ a 0) (string-ref b 0))) #f)\n        ((or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1)))\n        ((or (string=?\
    \ (string-ref a 1) (string-ref b 1)) (cycpattern_check (string-ref a 2) (string-ref\
    \ b 2)))\n        ((or (string=? (string-ref a 2) (string-ref b 2)) (cycpattern_check\
    \ (string-ref a 3) (string-ref b 3)))\n        ((or (string=? (string-ref a 3)\
    \ (string-ref b 3)) (cycpattern_check (string-ref a 4) (string-ref b 4)))\n  \
    \      ((or (string=? (string-ref a 4) (string-ref b 4)) (cycpattern_check (string-ref\
    \ a 5) (string-ref b 5)))\n        ((or (string=? (string-ref a 5) (string-ref\
    \ b 5)) (cycpattern_check (string-ref a 6) (string-ref b 6)))\n        ((or (string=?\
    \ (string-ref a 6) (string-ref b 6)) (cycpattern_check (string-ref a 7) (string-ref\
    \ b 7)))\n        ((or (string=? (string-ref a 7) (string-ref b 7)) (cycpattern_check\
    \ (string-ref a 8) (string-ref b 8)))\n        ((or (string=? (string-ref a 8)\
    \ (string-ref b 8)) (cycpattern_check (string-ref a 9) (string-ref b 9)))\n  \
    \      ((or (string=? (string-ref a 9) (string-ref b 9)) (cycpattern_check (string-ref\
    \ a 10) (string-ref b 10)))\n        ((or (string=? (string-ref a 10) (string-ref\
    \ b 10)) (cycpattern_check (string-ref a 11) (string-ref b 11)))\n        ((or\
    \ (string=? (string-ref a 11) (string-ref b 11)) (cycpattern_check (string-ref\
    \ a 12) (string-ref b 12)))\n        ((or (string=? (string-ref a 12) (string-ref\
    \ b 12)) (cycpattern_check (string-ref a 13) (string-ref b 13)))\n        ((or\
    \ (string=? (string-ref a 13) (string-ref b 13)) (cycpattern_check (string-ref\
    \ a 14) (string-ref b 14)))\n        ((or (string=? (string-ref a 14) (string-ref\
    \ b 14)) (cycp", "  (or (string=? b a)\n      (or (string=? (string-rotate b 1)\n\
    \                       (string-rotate a 1))\n          (string-contains-substring\
    \ a b))))\n", "  (or (string=? (substring b 0 (string-length a)) a)\n      (or\
    \ (string=? (substring a 0 (string-length b)) b)\n          (string-match (substring\
    \ a 0 (string-length b)) b))))\n", "  (cond ((or (string-match a b) (string-match\
    \ (string-reverse a) b)) #t)\n        ((or (string-match (string-reverse a) b)\
    \ (string-match a (string-reverse b)))\n         #t)\n        (else #f)))\n",
  "  (cond ((or (string-match a b) (string-match b a)) #t)\n        ((string-match\
    \ a b) #t)\n        (else #f)))\n", "  (or (string=? a b)\n      (or (string=?\
    \ (string-reverse a) b)\n          (string-rotations? a b))))\n", "  (cond ((or\
    \ (string-match a b) (string-match b a)) #t)\n        ((string-match a b) #t)\n\
    \        ((string-match b a) #t)\n        (else #f)))\n", "  (or (string=? b a)\n\
    \      (or (string=? (string-reverse a) (string-reverse b))\n          (string-contains?\
    \ a b))))\n", "  (or (string=? a b)\n      (or (string=? (string-ref a 0) (string-ref\
    \ b 0))\n          (string-contains-substring a b))))\n", "  (cond ((or (string=?\
    \ a b) (string=? b a)) #t)\n        ((or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1)))\n         (or (string=?\
    \ (string-ref a 1) (string-ref b 0)) (cycpattern_check (string-ref a 0) (string-ref\
    \ b 1)))\n        ((or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check\
    \ (string-ref a 1) (string-ref b 1)))\n         (or (string=? (string-ref a 1)\
    \ (string-ref b 0)) (cycpattern_check (string-ref a 0) (string-ref b 1)))\n  \
    \      ((or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-ref\
    \ a 1) (string-ref b 1)))\n         (or (string=? (string-ref a 1) (string-ref\
    \ b 0)) (cycpattern_check (string-ref a 0) (string-ref b 1)))\n        ((or (string=?\
    \ (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-ref a 1) (string-ref\
    \ b 1)))\n         (or (string=? (string-ref a 1) (string-ref b 0)) (cycpattern_check\
    \ (string-ref a 0) (string-ref b 1)))\n        ((or (string=? (string-ref a 0)\
    \ (string-ref b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1)))\n  \
    \       (or (string=? (string-ref a 1) (string-ref b 0)) (cycpattern_check (string-ref\
    \ a 0) (string-ref b 1)))\n        ((or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1)))\n         (or (string=?\
    \ (string-ref a 1) (string-ref b 0)) (cycpattern_check (string-ref a 0) (string-ref\
    \ b 1)))\n        ((or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check\
    \ (string-ref a 1) (string-ref b 1)))\n         (or (string=? (string-ref a 1)\
    \ (string-ref b 0)) (cycpattern_check (string-ref a 0) (string-ref b 1)))\n  \
    \      ((or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-ref\
    \ a 1) (string-ref b 1)))\n         (or (string=? (string-ref a 1) (string-ref\
    \ b 0)) (cycpattern_check (string-ref a 0) (string-ref b 1)))\n        ((or (string",
  "  (or (string=? a b)\n      (or (string=? (string-append a (butlast a)) b)\n  \
    \        (string=? (string-append (butfirst a) b) b))))\n", "  (or (string=? b\
    \ a)\n      (or (string=? (string-rotate b 1) a)\n          (string-contains-rotations\
    \ b a))))\n", "  (or (string=? a b)\n      (or (string=? (substring a 0 2) (substring\
    \ b 0 2))\n          (or (string=? (substring a 0 2) (substring b 0 2))\n    \
    \          (or (string=? (substring a 0 2) (substring b 0 2))\n              \
    \    (or (string=? (substring a 0 2) (substring b 0 2))\n                    \
    \  (or (string=? (substring a 0 2) (substring b 0 2))\n                      \
    \    (or (string=? (substring a 0 2) (substring b 0 2))\n                    \
    \          (or (string=? (substring a 0 2) (substring b 0 2))\n              \
    \                    (or (string=? (substring a 0 2) (substring b 0 2))\n    \
    \                                  (or (string=? (substring a 0 2) (substring\
    \ b 0 2))\n                                          (or (string=? (substring\
    \ a 0 2) (substring b 0 2))\n                                              (or\
    \ (string=? (substring a 0 2) (substring b 0 2))\n                           \
    \                       (or (string=? (substring a 0 2) (substring b 0 2))\n \
    \                                                     (or (string=? (substring\
    \ a 0 2) (substring b 0 2))\n                                                \
    \          (or (string=? (substring a 0 2) (substring b 0 2))\n              \
    \                                                (or (string=? (substring a 0\
    \ 2) (substring b 0 2))\n                                                    \
    \              (or (string=? (substring a 0 2) (substring b 0 2))\n          \
    \                                                            (or (string=? (substring\
    \ a 0 2) (substring b 0 2))\n                                                \
    \                          (or (string=? (substring a 0 2) (substring b 0 2))\n\
    \                                                                            \
    \  (or (string=? (substring a 0 2) (substring b 0 2))\n                      \
    \                                                            (or (string=? (substring\
    \ a 0 2) (substring b 0 2))\n                                                \
    \                                      (or (string=? (substring a 0 2) (substring\
    \ b 0 2))\n                                                                  \
    \                        (or (string=? (substring a 0 2) (substring b 0 2))\n\
    \                                                                            \
    \                  (or (string=? (substring a 0 2) (substring b 0 2))\n      \
    \                                                                            \
    \                (or (string=? (substring a 0 2) (substring b 0 2))\n        \
    \                                                                            \
    \                  (or (string=? (substring a 0 2) (substring b 0 2))\n      \
    \                                                                            \
    \                        (or (string=? (substring a 0 2) (substring b 0 2))\n\
    \                                                                            \
    \                                  (or (string=? (substring a 0 2) (substring\
    \ b 0 2))\n                                                                  \
    \                                                (or (string=? (substring ", " \
    \ (or (string=? (substring a 0 b) b)\n      (or (string=? (substring a b b) b)\n\
    \          (string=? (substring a (b b) b) b)\n          (string=? (substring\
    \ a (b (b b)) b) b)\n          (string=? (substring a (b (b (b b)))) b)\n    \
    \      (string=? (substring a (b (b (b (b b))))) b)\n          (string=? (substring\
    \ a (b (b (b (b (b b))))))) b)))\n", "  (or (string=? a b)\n      (or (string=?\
    \ (string-append a b) a)\n          (string-contains-rotations b a))))\n", " \
    \ (cond ((or (string=? a b) #t)\n         (string=? (substring a 0 1) (substring\
    \ b 0 1)))\n        ((or (string=? a b) #t)\n         (string=? (substring b 0\
    \ 1) (substring a 0 1)))\n        ((or (string=? a b) #t)\n         (string=?\
    \ (substring a 0 1) (substring b 0 1)))\n        ((or (string=? a b) #t)\n   \
    \      (string=? (substring b 0 1) (substring a 0 1)))\n        ((or (string=?\
    \ a b) #t)\n         (string=? (substring a 0 1) (substring b 0 1)))\n       \
    \ ((or (string=? a b) #t)\n         (string=? (substring b 0 1) (substring a 0\
    \ 1)))\n        ((or (string=? a b) #t)\n         (string=? (substring a 0 1)\
    \ (substring b 0 1)))\n        ((or (string=? a b) #t)\n         (string=? (substring\
    \ b 0 1) (substring a 0 1)))\n        ((or (string=? a b) #t)\n         (string=?\
    \ (substring a 0 1) (substring b 0 1)))\n        ((or (string=? a b) #t)\n   \
    \      (string=? (substring b 0 1) (substring a 0 1)))\n        ((or (string=?\
    \ a b) #t)\n         (string=? (substring a 0 1) (substring b 0 1)))\n       \
    \ ((or (string=? a b) #t)\n         (string=? (substring b 0 1) (substring a 0\
    \ 1)))\n        ((or (string=? a b) #t)\n         (string=? (substring a 0 1)\
    \ (substring b 0 1)))\n        ((or (string=? a b) #t)\n         (string=? (substring\
    \ b 0 1) (substring a 0 1)))\n        ((or (string=? a b) #t)\n         (string=?\
    \ (substring a 0 1) (substring b 0 1)))\n        ((or (string=? a b) #t)\n   \
    \      (string=? (substring b 0 1) (substring a 0 1)))\n        ((or (string=?\
    \ a b) #t)\n         (string=? (substring a 0 1) (substring b 0 1)))\n       \
    \ ((or (string=? a b) #t)\n         (string=? (substring b 0 1) (substring a 0\
    \ 1)))\n        ((or (string=? a b) #t)\n         (string=? (substring a 0 1)\
    \ (substring b ", "  (cond ((or (empty? a) (empty? b))\n         #f)\n       \
    \ ((equal? (substring a 0 1) (substring b 0 1))\n         (cycpattern_check (substring\
    \ a 2 1) (substring b 2 1)))\n        ((equal? (substring a 0 1) (substring b\
    \ 0 1))\n         (cycpattern_check (substring a 1 2) (substring b 1 2)))\n  \
    \      ((equal? (substring a 0 1) (substring b 0 1))\n         (cycpattern_check\
    \ (substring a 2 3) (substring b 2 3)))\n        ((equal? (substring a 0 1) (substring\
    \ b 0 1))\n         (cycpattern_check (substring a 1 2) (substring b 1 2)))\n\
    \        ((equal? (substring a 0 1) (substring b 0 1))\n         (cycpattern_check\
    \ (substring a 2 3) (substring b 2 3)))\n        ((equal? (substring a 0 1) (substring\
    \ b 0 1))\n         (cycpattern_check (substring a 1 2) (substring b 1 2)))\n\
    \        ((equal? (substring a 0 1) (substring b 0 1))\n         (cycpattern_check\
    \ (substring a 2 3) (substring b 2 3)))\n        ((equal? (substring a 0 1) (substring\
    \ b 0 1))\n         (cycpattern_check (substring a 1 2) (substring b 1 2)))\n\
    \        ((equal? (substring a 0 1) (substring b 0 1))\n         (cycpattern_check\
    \ (substring a 2 3) (substring b 2 3)))\n        ((equal? (substring a 0 1) (substring\
    \ b 0 1))\n         (cycpattern_check (substring a 1 2) (substring b 1 2)))\n\
    \        ((equal? (substring a 0 1) (substring b 0 1))\n         (cycpattern_check\
    \ (substring a 2 3) (substring b 2 3)))\n        ((equal? (substring a 0 1) (substring\
    \ b 0 1))\n         (cycpattern_check (substring a 1 2) (substring b 1 2)))\n\
    \        ((equal? (substring a 0 1) (substring b 0 1))\n         (cycpattern_check\
    \ (substring a 2 3) (substring b 2 3)))\n        ((equal? (substring a 0 1) (substring\
    \ b 0 1))\n         (cycpattern_check (substring a 1 2) (substring b 1 2)))\n\
    \        ((equal? (substring a 0 1) (substring b 0 1))\n         (cycp", "  (or\
    \ (string=? a b)\n      (or (string=? (substring a 0 b) b)\n          (string=?\
    \ (substring a (b length) b) b))))\n", "  (cond ((or (string-match a b) (string-match\
    \ b a)) #t)\n        ((string-match a b) #t)\n        (else #f)))\n", "  (or (string=?\
    \ a b)\n      (or (string=? (string-ref a 0) (string-ref b 0))\n          (string-contains-substring\
    \ a b))))\n", "  (cond [(or (string=? a b) (string=? (string-ref a 0) (string-ref\
    \ b 0))) #f]\n        [(string=? (string-ref a 0) (string-ref b 0)) #f]\n    \
    \    [(string=? (string-ref a 0) (string-ref b 0)) #f]\n        [(string=? (string-ref\
    \ a 0) (string-ref b 0)) #f]\n        [(string=? (string-ref a 0) (string-ref\
    \ b 0)) #f]\n        [(string=? (string-ref a 0) (string-ref b 0)) #f]\n     \
    \   [(string=? (string-ref a 0) (string-ref b 0)) #f]\n        [(string=? (string-ref\
    \ a 0) (string-ref b 0)) #f]\n        [(string=? (string-ref a 0) (string-ref\
    \ b 0)) #f]\n        [(string=? (string-ref a 0) (string-ref b 0)) #f]\n     \
    \   [(string=? (string-ref a 0) (string-ref b 0)) #f]\n        [(string=? (string-ref\
    \ a 0) (string-ref b 0)) #f]\n        [(string=? (string-ref a 0) (string-ref\
    \ b 0)) #f]\n        [(string=? (string-ref a 0) (string-ref b 0)) #f]\n     \
    \   [(string=? (string-ref a 0) (string-ref b 0)) #f]\n        [(string=? (string-ref\
    \ a 0) (string-ref b 0)) #f]\n        [(string=? (string-ref a 0) (string-ref\
    \ b 0)) #f]\n        [(string=? (string-ref a 0) (string-ref b 0)) #f]\n     \
    \   [(string=? (string-ref a 0) (string-ref b 0)) #f]\n        [(string=? (string-ref\
    \ a 0) (string-ref b 0)) #f]\n        [(string=? (string-ref a 0) (string-ref\
    \ b 0)) #f]\n        [(string=? (string-ref a 0) (string-ref b 0)) #f]\n     \
    \   [(string=? (string-ref a 0) (string-ref b 0)) #f]\n        [(string=? (string-ref\
    \ a 0) (string-ref b 0)) #f]\n        [(string=? (string-ref a 0) (string-ref\
    \ b 0)) #f]\n        [(string=? (string-ref a 0) (string-ref b 0)) #f]\n     \
    \   [(string=? (string-ref a 0) (string-ref b 0)) #f]\n        [(string=? (string-ref\
    \ a 0) (string-ref b 0)) #f]\n        [(string=? (string-ref a 0) (string-ref\
    \ b 0)) #f]\n        [(string=? (string-ref a 0) (string-ref b 0)) #f]\n     \
    \   [(string=? (string-ref a 0) (string-ref b 0)) #f]\n        [(string=? (string-",
  "  (cond ((or (empty? a) (empty? b)) #f)\n        ((equal? (first a) (first b))\
    \ #t)\n        ((equal? (first a) (first b)) #t)\n        ((equal? (first a) (first\
    \ b)) #t)\n        ((equal? (first a) (first b)) #t)\n        ((equal? (first\
    \ a) (first b)) #t)\n        ((equal? (first a) (first b)) #t)\n        ((equal?\
    \ (first a) (first b)) #t)\n        ((equal? (first a) (first b)) #t)\n      \
    \  ((equal? (first a) (first b)) #t)\n        ((equal? (first a) (first b)) #t)\n\
    \        ((equal? (first a) (first b)) #t)\n        ((equal? (first a) (first\
    \ b)) #t)\n        ((equal? (first a) (first b)) #t)\n        ((equal? (first\
    \ a) (first b)) #t)\n        ((equal? (first a) (first b)) #t)\n        ((equal?\
    \ (first a) (first b)) #t)\n        ((equal? (first a) (first b)) #t)\n      \
    \  ((equal? (first a) (first b)) #t)\n        ((equal? (first a) (first b)) #t)\n\
    \        ((equal? (first a) (first b)) #t)\n        ((equal? (first a) (first\
    \ b)) #t)\n        ((equal? (first a) (first b)) #t)\n        ((equal? (first\
    \ a) (first b)) #t)\n        ((equal? (first a) (first b)) #t)\n        ((equal?\
    \ (first a) (first b)) #t)\n        ((equal? (first a) (first b)) #t)\n      \
    \  ((equal? (first a) (first b)) #t)\n        ((equal? (first a) (first b)) #t)\n\
    \        ((equal? (first a) (first b)) #t)\n        ((equal? (first a) (first\
    \ b)) #t)\n        ((equal? (first a) (first b)) #t)\n        ((equal? (first\
    \ a) (first b)) #t)\n        ((equal? (first a) (first b)) #t)\n        ((equal?\
    \ (first a) (first b)) #t)\n        ((equal? (first a) (first b)) #t)\n      \
    \  ((equal? (first a) (first b)) #t)\n        ((equal? (first a) (first b)) #t)\n\
    \        ((equal? (first a) (first b)) #t)\n        ((", "  (or (string=? a b)\n\
    \      (or (string=? (string-reverse a) b)\n          (string-match (string-reverse\
    \ a) b))))\n", "  (or (string=? a b)\n      (or (string=? (string-ref a 0) (string-ref\
    \ b 0))\n          (string-contains? a b))))\n", "  (cond ((or (string=? a b)\
    \ (string=? (string-ref a 0) (string-ref b 0))) #f)\n        ((or (string=? (string-ref\
    \ a 0) (string-ref b 0)) (string=? a b)) #t)\n        ((or (string=? (string-ref\
    \ a 0) (string-ref b 0)) (string=? (string-ref b 0) (string-ref a 0))) #f)\n \
    \       ((or (string=? (string-ref a 0) (string-ref b 0)) (string=? (string-ref\
    \ b 0) (string-ref a 0)) (string=? a b)) #t)\n        ((or (string=? (string-ref\
    \ a 0) (string-ref b 0)) (string=? (string-ref b 0) (string-ref a 0)) (string=?\
    \ (string-ref a 0) (string-ref b 0))) #f)\n        ((or (string=? (string-ref\
    \ a 0) (string-ref b 0)) (string=? (string-ref b 0) (string-ref a 0)) (string=?\
    \ (string-ref a 0) (string-ref b 0)) (string=? a b)) #t)\n        ((or (string=?\
    \ (string-ref a 0) (string-ref b 0)) (string=? (string-ref b 0) (string-ref a\
    \ 0)) (string=? (string-ref a 0) (string-ref b 0)) (string=? (string-ref b 0)\
    \ (string-ref a 0))) #f)\n        ((or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (string=? (string-ref b 0) (string-ref a 0)) (string=? (string-ref a 0)\
    \ (string-ref b 0)) (string=? (string-ref b 0) (string-ref a 0)) (string=? a b))\
    \ #t)\n        ((or (string=? (string-ref a 0) (string-ref b 0)) (string=? (string-ref\
    \ b 0) (string-ref a 0)) (string=? (string-ref a 0) (string-ref b 0)) (string=?\
    \ (string-ref b 0) (string-ref a 0)) (string=? (string-ref a 0) (string-ref b\
    \ 0))) #f)\n        ((or (string=? (string-ref a 0) (string-ref b 0)) (string=?\
    \ (string-ref b 0) (string-ref a 0)) (string=? (string-ref a 0) (string-ref b\
    \ 0)) (string=? (string-ref b 0) (string-ref a 0)) (string=? (string-ref a 0)\
    \ (string-ref b 0)) (string=? a b)) #t)\n        ((or (string=? (string-ref a\
    \ 0) (string-ref b 0)) (string=? (string-ref b 0) (string-ref a 0)) (", "  (cond\
    \ ((or (string-match a b) #t)\n         (string-match a b))\n        ((string-match\
    \ a b)\n         (string-match b a))\n        (else #f)))\n", "  (cond ((or (string-match\
    \ a b) (string-match b a)) #t)\n        ((string-match a b) #f)\n        (else\
    \ (cycpattern_check (string-reverse a) b)\n              (cycpattern_check (string-reverse\
    \ b) a))))\n", "  (or (string=? a b)\n      (or (string=? (string-rotate b 1)\
    \ a)\n          (string-contains-substring a b))))\n", "  (or (string=? (substring\
    \ b 0 a) (substring a 0 b))\n      (or (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 ", "  (or (string=? a b)\n     \
    \ (or (string=? (string-ref a 0) (string-ref b 0))\n          (string-match (string-ref\
    \ a 0) (string-ref b 0)))))\n", "  (or (string=? (substring b 0 a) (substring\
    \ a 0 b))\n      (or (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 ", "  (cond ((or (string-match a b) (string-match b a))\
    \ #t)\n        ((string-match a b) #t)\n        (else #f)))\n", "  (cond\n   \
    \ [(empty? a) #f]\n    [(empty? b) #f]\n    [(equal? (first a) (first b)) #t]\n\
    \    [(equal? (first b) (first a)) #t]\n    [else (or (cycpattern_check (rest\
    \ a) b)\n              (cycpattern_check (rest b) a))]))\n", "  (or (string=?\
    \ a b)\n      (or (string=? (string-ref a 0) (string-ref b 0))\n          (string-contains-rotations\
    \ b a))))\n", "  (cond ((or (string-match a b) (string-match b a)) #t)\n     \
    \   ((string-match a b) #t)\n        (else #f)))\n", "  (cond ((or (string-match\
    \ a b)\n             (string-match (string-reverse a) (string-reverse b)))\n \
    \        #t)\n        ((string-match a b)\n         #f)\n        (else\n     \
    \    (string-match (string-reverse a) (string-reverse b))))\n", "  (or (string=?\
    \ (substring a 0 b) (substring b 0 a)) (string=? (substring a 0 b) (substring\
    \ b 0 a))))\n", "  (or (string=? a b)\n      (or (string=? (string-reverse a)\
    \ b)\n          (string=? (string-reverse b) a))))\n", "  (cond\n    [(empty?\
    \ a) #f]\n    [(empty? b) #f]\n    [(equal? (first a) (first b)) #t]\n    [(equal?\
    \ (first b) (first a)) #t]\n    [(equal? (first a) (first b)) (cycpattern_check\
    \ (rest a) (rest b))]\n    [(equal? (first b) (first a)) (cycpattern_check (rest\
    \ b) (rest a))]\n    [else (cycpattern_check (rest a) (rest b))]\n  )\n)\n", " \
    \ (cond ((or (string-match a b)\n             (string-match (string-append a b)\
    \ a))\n         #t)\n        ((or (string-match a b)\n             (string-match\
    \ (string-append a b) b))\n         #t)\n        ((or (string-match a b)\n   \
    \          (string-match (string-append b a) b))\n         #t)\n        ((or (string-match\
    \ a b)\n             (string-match (string-append b a) a))\n         #t)\n   \
    \     (else\n         #f)))\n", "  (or (string=? a b)\n      (or (string=? (string-ref\
    \ a 0) (string-ref b 0))\n          (string-contains? a b))))\n", "  (cond ((or\
    \ (string-match a b) (string-match (substring a 0 1) b)) #t)\n        ((or (string-match\
    \ a b) (string-match (substring a 1 2) b)) #t)\n        ((or (string-match a b)\
    \ (string-match (substring a 2 3) b)) #t)\n        ((or (string-match a b) (string-match\
    \ (substring a 3 4) b)) #t)\n        ((or (string-match a b) (string-match (substring\
    \ a 4 5) b)) #t)\n        ((or (string-match a b) (string-match (substring a 5\
    \ 6) b)) #t)\n        ((or (string-match a b) (string-match (substring a 6 7)\
    \ b)) #t)\n        ((or (string-match a b) (string-match (substring a 7 8) b))\
    \ #t)\n        ((or (string-match a b) (string-match (substring a 8 9) b)) #t)\n\
    \        ((or (string-match a b) (string-match (substring a 9 10) b)) #t)\n  \
    \      ((or (string-match a b) (string-match (substring a 10 11) b)) #t)\n   \
    \     ((or (string-match a b) (string-match (substring a 11 12) b)) #t)\n    \
    \    ((or (string-match a b) (string-match (substring a 12 13) b)) #t)\n     \
    \   ((or (string-match a b) (string-match (substring a 13 14) b)) #t)\n      \
    \  ((or (string-match a b) (string-match (substring a 14 15) b)) #t)\n       \
    \ ((or (string-match a b) (string-match (substring a 15 16) b)) #t)\n        ((or\
    \ (string-match a b) (string-match (substring a 16 17) b)) #t)\n        ((or (string-match\
    \ a b) (string-match (substring a 17 18) b)) #t)\n        ((or (string-match a\
    \ b) (string-match (substring a 18 19) b)) #t)\n        ((or (string-match a b)\
    \ (string-match (substring a 19 20) b)) #t)\n        ((or (string-match a b) (string-match\
    \ (substring a 20 21) b)) #t)\n        ((or (string-match a b) (string-match (substring\
    \ a 21 22) b)) #t)\n        ((or (string-match a b) (string-match (substring a\
    \ 22 23) b)) #t)\n        ((or (string-match a b) (string-match (substring ",
  "  (cond\n    [(empty? a) #f]\n    [(empty? b) #f]\n    [(equal? (first a) (first\
    \ b)) #t]\n    [(equal? (first a) (first b)) (cycpattern_check (rest a) (rest\
    \ b))]\n    [else (cycpattern_check (rest a) (rest b))]\n  ))\n", "  (or (string=?\
    \ a b)\n      (or (string=? (string-ref a 0) (string-ref b 0))\n          (string-contains-substring\
    \ a b))))\n", "  (or (string=? a b)\n      (or (string=? (substring a 0 1) (substring\
    \ b 0 1))\n          (string=? (substring a 0 2) (substring b 0 2))\n        \
    \  (string=? (substring a 0 3) (substring b 0 3))\n          (string=? (substring\
    \ a 0 4) (substring b 0 4))\n          (string=? (substring a 0 5) (substring\
    \ b 0 5))\n          (string=? (substring a 0 6) (substring b 0 6))\n        \
    \  (string=? (substring a 0 7) (substring b 0 7))\n          (string=? (substring\
    \ a 0 8) (substring b 0 8))\n          (string=? (substring a 0 9) (substring\
    \ b 0 9))\n          (string=? (substring a 0 10) (substring b 0 10))\n      \
    \    (string=? (substring a 0 11) (substring b 0 11))\n          (string=? (substring\
    \ a 0 12) (substring b 0 12))\n          (string=? (substring a 0 13) (substring\
    \ b 0 13))\n          (string=? (substring a 0 14) (substring b 0 14))\n     \
    \     (string=? (substring a 0 15) (substring b 0 15))\n          (string=? (substring\
    \ a 0 16) (substring b 0 16))\n          (string=? (substring a 0 17) (substring\
    \ b 0 17))\n          (string=? (substring a 0 18) (substring b 0 18))\n     \
    \     (string=? (substring a 0 19) (substring b 0 19))\n          (string=? (substring\
    \ a 0 20) (substring b 0 20))\n          (string=? (substring a 0 21) (substring\
    \ b 0 21))\n          (string=? (substring a 0 22) (substring b 0 22))\n     \
    \     (string=? (substring a 0 23) (substring b 0 23))\n          (string=? (substring\
    \ a 0 24) (substring b 0 24))\n          (string=? (substring a 0 25) (substring\
    \ b 0 25))\n          (string=? (substring a 0 26) (substring b 0 26))\n     \
    \     (string=? (substring a 0 27) (substring b 0 27))\n          (string=? (substring\
    \ a 0 28) (substring b 0 28))\n          (string=? (substring a 0 29) (substring\
    \ b 0 29))\n          (string=? (substring a 0 30) (substring b 0 30))\n     \
    \     (string=", "  (or (string=? a b)\n      (or (string=? (string-reverse a)\
    \ b)\n          (string-contains? a b))))\n", "  (cond\n    [(empty? a) #f]\n\
    \    [(empty? b) #f]\n    [(equal? (first a) (first b)) #t]\n    [(equal? (first\
    \ b) (first a)) #t]\n    [else (or (cycpattern_check (rest a) b)\n           \
    \   (cycpattern_check (rest b) a))]))\n", "  (cond ((or (string-match a b) #t)\n\
    \         (string-match a b))\n        ((or (string-match a b) #f)\n         (string-match\
    \ a b (string-length a)))\n        (else\n         (string-match a b (string-length\
    \ a))))\n  )\n", "  (or (string=? a b)\n      (or (string=? (substring a 0 1)\
    \ b)\n          (string=? (substring a 1 0) b))))\n", "  (or (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) 0)\n      (equal? (string-length\
    \ b) 0)\n      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length b))\n      (equal? (string-length a) (string-length b))\n\
    \      (equal? (string-length a) (string-length b))\n      (equal? (string-length\
    \ a) (string-length ", "  (or (string=? b a)\n      (or (string=? (string-append\
    \ a b) a)\n          (string-contains? a b))))\n", "  (or (string=? a b)\n   \
    \   (or (string=? (string-rotate b 1) a)\n          (string=? (string-rotate b\
    \ 2) a)\n          (string=? (string-rotate b 3) a)\n          (string=? (string-rotate\
    \ b 4) a)\n          (string=? (string-rotate b 5) a)\n          (string=? (string-rotate\
    \ b 6) a)\n          (string=? (string-rotate b 7) a)\n          (string=? (string-rotate\
    \ b 8) a)\n          (string=? (string-rotate b 9) a)\n          (string=? (string-rotate\
    \ b 10) a)\n          (string=? (string-rotate b 11) a)\n          (string=? (string-rotate\
    \ b 12) a)\n          (string=? (string-rotate b 13) a)\n          (string=? (string-rotate\
    \ b 14) a)\n          (string=? (string-rotate b 15) a)\n          (string=? (string-rotate\
    \ b 16) a)\n          (string=? (string-rotate b 17) a)\n          (string=? (string-rotate\
    \ b 18) a)\n          (string=? (string-rotate b 19) a)\n          (string=? (string-rotate\
    \ b 20) a)\n          (string=? (string-rotate b 21) a)\n          (string=? (string-rotate\
    \ b 22) a)\n          (string=? (string-rotate b 23) a)\n          (string=? (string-rotate\
    \ b 24) a)\n          (string=? (string-rotate b 25) a)\n          (string=? (string-rotate\
    \ b 26) a)\n          (string=? (string-rotate b 27) a)\n          (string=? (string-rotate\
    \ b 28) a)\n          (string=? (string-rotate b 29) a)\n          (string=? (string-rotate\
    \ b 30) a)\n          (string=? (string-rotate b 31) a)\n          (string=? (string-rotate\
    \ b 32) a)\n          (string=? (string-rotate b 33) a)\n          (string=? (string-rotate\
    \ b 34) a)\n          (string=? (string-rotate b 35) a)\n          (string=? (string-rotate\
    \ b 36) a)\n          (string=? (string-rotate b 37) a)\n          (string=? (string-rotate\
    \ b 38) a)\n          (string=? (string-rotate b 39) a)\n          (string=? (string-rotate\
    \ b 40) a)\n          (string=? (string-rotate b 41) a)\n          (string=? (string-rotate\
    \ b 42) a)\n          (string=? (string-rotate b 43) a)\n          (string=? (string-rotate\
    \ b 44) a)\n          (string=? (string-rotate b 45) a)\n          (string=? (string-rotate\
    \ b 46) a)\n          (string=? (string-rotate ", "  (or (string=? a b)\n    \
    \  (or (string=? (string-reverse a) b)\n          (string-contains-rotations b\
    \ a))))\n", "  (cond ((or (null? a) (null? b)) #f)\n        ((or (string=? a b)\
    \ (string=? (string-ref a 0) (string-ref b 0))) #t)\n        (else (or (string=?\
    \ (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-tail a 0) (string-tail\
    \ b 0))))))\n", "  (or (string=? a b)\n      (or (string=? (string-append a b)\
    \ a)\n          (string=? (string-append a b) (string-append b a))))) ;; #lang\
    \ racket\n", "  (or (string=? a b)\n      (or (string=? (string-reverse a) b)\n\
    \          (string-contains-rotations b a))))\n", "  (cond\n    [(empty? a) #f]\n\
    \    [(empty? b) #f]\n    [(equal? (first a) (first b)) #t]\n    [(equal? (first\
    \ b) (first a)) #t]\n    [else (or (cycpattern_check (rest a) b)\n           \
    \   (cycpattern_check (rest b) a))]))\n", "  (cond [(empty? a) #f]\n        [(empty?\
    \ b) #f]\n        [(equal? (substring b 0 (- (length a) 1)) (cycpattern_check\
    \ (substring a 0 (- (length a) 1)) b))\n         (cond [(equal? (substring b 0\
    \ (- (length a) 1)) (cycpattern_check (substring a 0 (- (length a) 1)) b))\n \
    \               (cond [(equal? (substring b 0 (- (length a) 1)) (cycpattern_check\
    \ (substring a 0 (- (length a) 1)) b))\n                      #t]\n          \
    \            [else #f])]\n        [else #f]))\n", "  (or (string=? a b)\n    \
    \  (or (string=? (string-ref a 0) (string-ref b 0))\n          (string-contains-substring\
    \ a b))))\n", "  (cond ((or (string-match a b) (string-match b a)) #t)\n     \
    \   ((string-match a b) #t)\n        (else #f)))\n", "  (or (string=? a b)\n \
    \     (or (string=? (string-reverse a) b)\n          (string-contains-rotations\
    \ b a))))\n", "  (or (string=? a b)\n      (or (string=? (string-reverse a) b)\n\
    \          (string-contains-substring a b))))\n", "  (or (string=? b a)\n    \
    \  (substring a 0 (string-length b)) (substring a 0 (string-length a))))\n", " \
    \ (or (string=? (substring b 0 a) (substring a 0 b)) (string=? (substring b 0\
    \ a) (substring a (b length) b))))\n", "  (cond ((or (string=? a b) (string=?\
    \ (string-ref a 0) (string-ref b 0))) #f)\n        ((or (string=? (string-ref\
    \ a 0) (string-ref b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1)))\n\
    \        ((or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-ref\
    \ a 1) (string-ref b 1)))\n        ((or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1)))\n        ((or (string=?\
    \ (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-ref a 1) (string-ref\
    \ b 1)))\n        ((or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check\
    \ (string-ref a 1) (string-ref b 1)))\n        ((or (string=? (string-ref a 0)\
    \ (string-ref b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1)))\n  \
    \      ((or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-ref\
    \ a 1) (string-ref b 1)))\n        ((or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1)))\n        ((or (string=?\
    \ (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-ref a 1) (string-ref\
    \ b 1)))\n        ((or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check\
    \ (string-ref a 1) (string-ref b 1)))\n        ((or (string=? (string-ref a 0)\
    \ (string-ref b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1)))\n  \
    \      ((or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-ref\
    \ a 1) (string-ref b 1)))\n        ((or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (cycpattern_check (string-ref a 1) (string-ref b 1)))\n        ((or (string=?\
    \ (string-ref a 0) (string-ref b 0)) (cycpattern_check (string-ref a 1) (string-ref\
    \ b 1)))\n        ((or (string=? (string-ref a 0) (string-ref b 0)) (cycpattern_check\
    \ (string-ref a 1) (string-ref b 1)))\n        ((or (string=? (string-ref a 0)\
    \ (string-ref b 0)) (cycpattern_check (", "  (cond\n    [(empty? a) #f]\n    [(empty?\
    \ b) #f]\n    [(equal? (first a) (first b)) #t]\n    [(equal? (first b) (first\
    \ a)) #t]\n    [else (or (cycpattern_check (rest a) b)\n              (cycpattern_check\
    \ (rest b) a)))]))\n", "  (or (string=? a b)\n      (or (string=? (string-ref\
    \ a 0) (string-ref b 0))\n          (string-contains-substring a b))))\n", " \
    \ (or (string=? a b)\n      (or (string=? (string-reverse a) b)\n          (string-match\
    \ (string-reverse a) b))))\n", "  (cond\n    [(empty? a) #f]\n    [(empty? b)\
    \ #f]\n    [(equal? (first a) (first b)) #t]\n    [(equal? (first b) (first a))\
    \ #t]\n    [else (or (cycpattern_check (rest a) b)\n              (cycpattern_check\
    \ (rest b) a))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

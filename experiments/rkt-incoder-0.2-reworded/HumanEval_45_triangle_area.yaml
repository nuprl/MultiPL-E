name: HumanEval_45_triangle_area
language: rkt
prompt: "#lang racket\n\n;; Given length of a side and high return area for a triangle.\n\
  ;; >>> (triangle_area 5 3)\n;; 7.5\n(define (triangle_area a h)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate triangle_area))\n\
  \    (check-equal? (candidate 5 3) 7.5)\n    (check-equal? (candidate 2 2) 2.0)\n\
  \    (check-equal? (candidate 10 8) 40.0)\n))\n\n(test-humaneval)"
completions: ["  (* a h))\n", "  (* a h))\n", "  (* a (/ h (- a h))))\n", "  (* a\
    \ h (/ a h)))\n", "  (* a h))\n", "  (* a h))\n", "  (* a h))\n", "  (* a h (/\
    \ a h)))\n", "  (* a h))\n", "  (* a (/ h 2)))\n", "  (* a h))\n", "  (/ (* a\
    \ h) (+ a h)))\n", "  (* a h))\n", "  (* a h))\n", "  (* a (* h h)))\n", "  (*\
    \ a h))\n", "  (* a h (/ a h)))\n", "  (* a h))\n", "  (* a h))\n", "  (/ (* a\
    \ h) (* a h)))\n", "  (* a h))\n", "  (* a h))\n", "  (* a h))\n", "  (* a h))\n",
  "  (* a h))\n", "  (/ (* a h) (+ a h)))\n", "  (* a h))\n", "  (/ (* a h) (+ a h)))\n",
  "  (* a (* h h)))\n", "  (* a h))\n", "  (* a h))\n", "  (* a (/ h 2)))\n", "  (/\
    \ (* a h) (* a h)))\n", "  (* a h))\n", "  (* a h (/ a h)))\n", "  (* a h))\n",
  "  (* a h))\n", "  (* a h))\n", "  (/ (* a h) (* a h)))\n", "  (* a h))\n", "  (*\
    \ a h (/ a h)))\n", "  (* a h (/ a h)))\n", "  (* a h))\n", "  (* a h))\n", " \
    \ (* a h))\n", "  (* a h))\n", "  (* a h))\n", "  (* a h (/ a h)))\n", "  (* a\
    \ h (/ a h)))\n", "  (* a (/ h 2)))\n", "  (* a h (/ a h)))\n", "  (* a h (/ a\
    \ h)))\n", "  (* a h))\n", "  (* a h (/ a h)))\n", "  (* a h))\n", "  (* a h))\n",
  "  (* a h))\n", "  (/ (* a h) (* 2 (+ a h))))\n", "  (* a h))\n", "  (* a (/ h 2)))\n",
  "  (* a h))\n", "  (* a h))\n", "  (* a h))\n", "  (* a (* h h)))\n", "  (* a h))\n",
  "  (* a h))\n", "  (/ (* a h) (* a h)))\n", "  (* a h (/ a h)))\n", "  (* a h (/\
    \ a h)))\n", "  (* a h (/ a h)))\n", "  (* a h))\n", "  (* a h))\n", "  (* a h))\n",
  "  (/ (* a h) (* a h)))\n", "  (* a h))\n", "  (/ (* a h) (* 2 a)))\n", "  (* a\
    \ h))\n", "  (* a h (/ a h)))\n", "  (/ (* a h) (* a h)))\n", "  (* a h (/ a h)))\n",
  "  (/ (* a h) (* 2 a)))\n", "  (* a h (/ a h)))\n", "  (* a h))\n", "  (* a h))\n",
  "  (* a (/ h 2)))\n", "  (* a h))\n", "  (* a h (/ a h)))\n", "  (* a h (/ a h)))\n",
  "  (/ (* a h) (* a h)))\n", "  (* a h (/ a h)))\n", "  (* a (/ h 2)))\n", "  (*\
    \ a h (/ a h)))\n", "  (* a (* h h)))\n", "  (* a h))\n", "  (* a h (/ a h)))\n",
  "  (* a h))\n", "  (/ (* a h) (* a h)))\n", "  (* a h))\n", "  (* a h))\n", "  (*\
    \ a h))\n", "  (* a h))\n", "  (* a h))\n", "  (* a h))\n", "  (* a h))\n", " \
    \ (* a h))\n", "  (/ (* a h) (* a h)))\n", "  (/ (* a h) (* a h)))\n", "  (* a\
    \ h))\n", "  (* a (/ 3 h)))\n", "  (* a h))\n", "  (* a (/ h 2)))\n", "  (* a\
    \ h))\n", "  (* a h (/ a h)))\n", "  (/ (* a h) (* 2 a)))\n", "  (/ (* a h) (*\
    \ a h)))\n", "  (* a h))\n", "  (* a h))\n", "  (* a h))\n", "  (/ (* a h) (*\
    \ a h)))\n", "  (/ (* a h) (* a h)))\n", "  (* a h))\n", "  (* a h))\n", "  (*\
    \ a h))\n", "  (/ (* a h) (* a h)))\n", "  (/ (* a h) (* 2 a)))\n", "  (/ (* a\
    \ h) (* 2 (+ a h))))\n", "  (* a h))\n", "  (* a (/ h 2)))\n", "  (* a h))\n",
  "  (* a h))\n", "  (* a h))\n", "  (* a h (/ a h)))\n", "  (* a h (/ a h)))\n",
  "  (/ (* a h) (+ a h)))\n", "  (* a h (/ a h)))\n", "  (* a h))\n", "  (* a h))\n",
  "  (* a h))\n", "  (* a h))\n", "  (* a h (/ a h)))\n", "  (* a h))\n", "  (/ (*\
    \ a h) (+ a h)))\n", "  (* a h))\n", "  (* a h (/ a h)))\n", "  (* a h))\n", " \
    \ (* a h))\n", "  (* a h))\n", "  (/ (* a h) (* a h)))\n", "  (* a h))\n", " \
    \ (* a h))\n", "  (/ (* a h) (* a h)))\n", "  (* a h))\n", "  (* a h))\n", " \
    \ (* a h (/ a h)))\n", "  (* a h))\n", "  (/ (* a h) (* a h)))\n", "  (* a h (/\
    \ a h)))\n", "  (/ (* a h) (+ a h)))\n", "  (* a h))\n", "  (* a h))\n", "  (/\
    \ (* a h) (+ a h)))\n", "  (* a h))\n", "  (* a h (/ a h)))\n", "  (* a (* h h)))\n",
  "  (* a (/ h 2)))\n", "  (/ (* a h) (+ a h)))\n", "  (/ (* a h) (+ a h)))\n", " \
    \ (* a h (/ a h)))\n", "  (* a h))\n", "  (* a h))\n", "  (* a h))\n", "  (* a\
    \ h))\n", "  (* a h (/ a h)))\n", "  (* a h))\n", "  (* a h))\n", "  (* a (* h\
    \ h)))\n", "  (* a h (/ a h)))\n", "  (* a h (/ a h)))\n", "  (* a (* h (/ a h))))\n",
  "  (* a h))\n", "  (* a h (/ a h)))\n", "  (* a h))\n", "  (* a h))\n", "  (/ (*\
    \ a h) (+ a h)))\n", "  (* a h))\n", "  (* a h (/ a h)))\n", "  (* a h))\n", " \
    \ (* a h))\n", "  (* a h (/ a h)))\n", "  (* a h))\n", "  (/ (* a h) (* 2 a)))\n",
  "  (* a h (/ a h)))\n", "  (* a (* h (/ h 2))))\n", "  (* a h))\n", "  (* a h))\n",
  "  (* a h))\n", "  (* a h (/ a h)))\n", "  (* a h))\n", "  (* a h (/ a h)))\n",
  "  (/ (* a h) (+ a h)))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

name: HumanEval_67_fruit_distribution
language: rkt
prompt: "#lang racket\n\n;; In this task, you will be given a string that represents\
  \ a number of apples and oranges \n;; that are distributed in a basket of fruit\
  \ this basket contains \n;; apples, oranges, and mango fruits. Given the string\
  \ that represents the total number of \n;; the oranges and apples and an integer\
  \ that represent the total number of the fruits \n;; in the basket return the number\
  \ of the mango fruits in the basket.\n;; for examble:\n;; >>> (fruit_distribution\
  \ \"5 apples and 6 oranges\" 19)\n;; 8\n;; >>> (fruit_distribution \"0 apples and\
  \ 1 oranges\" 3)\n;; 2\n;; >>> (fruit_distribution \"2 apples and 3 oranges\" 100)\n\
  ;; 95\n;; >>> (fruit_distribution \"100 apples and 1 oranges\" 120)\n;; 19\n(define\
  \ (fruit_distribution s n)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fruit_distribution))\n\
  \    (check-equal? (candidate \"5 apples and 6 oranges\" 19) 8)\n    (check-equal?\
  \ (candidate \"5 apples and 6 oranges\" 21) 10)\n    (check-equal? (candidate \"\
  0 apples and 1 oranges\" 3) 2)\n    (check-equal? (candidate \"1 apples and 0 oranges\"\
  \ 3) 2)\n    (check-equal? (candidate \"2 apples and 3 oranges\" 100) 95)\n    (check-equal?\
  \ (candidate \"2 apples and 3 oranges\" 5) 0)\n    (check-equal? (candidate \"1\
  \ apples and 100 oranges\" 120) 19)\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n \
    \    (+ (fruit_distribution (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\"\
    )\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first\
    \ s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [(equal?\
    \ (first s) \"oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n\
    \    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 1))]\n    [else (error \"invalid input\")]))\n", "  (cond\n    [(empty? s)\
    \ 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest s)\
    \ n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [else (+ (fruit_distribution (rest s) n) (* n 4))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\") (+ (fruit_distribution\
    \ (rest s) n) 1)]\n    [(equal? (first s) \"oranges\") (+ (fruit_distribution\
    \ (rest s) n) 2)]\n    [else (+ (fruit_distribution (rest s) n) (+ (fruit_distribution\
    \ (rest s) n) 3))]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first s)\
    \ \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [(equal?\
    \ (first s) \"oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n\
    \    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n", "  (cond\n    [(empty?\
    \ s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [else (+ (fruit_distribution (rest s) n) (* n 0))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\") (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\") (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 1))]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\"\
    )\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [(equal? (first s) \"\
    oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n    [(equal? (first\
    \ s) \"mango\")\n     (+ (fruit_distribution (rest s) n) (* n 1))]\n    [else\
    \ (error \"Invalid input\")]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal?\
    \ (first s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n \
    \   [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n    [(empty?\
    \ s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (let loop\
    \ ((i 0) (sum 0) (count 0))\n    (if (< i n)\n        (loop (+ i 1) (+ sum 1)\
    \ (+ count 1))\n        (+ count (if (string=? (substring s i i) \"oranges\")\n\
    \                      (+ count 1)\n                      0)))))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else\n     (fruit_distribution (rest s) n)]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\") (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\") (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (let ((apples\
    \ (string->number (string-ref s 0))\n         oranges (string->number (string-ref\
    \ s 1))\n         mango (string->number (string-ref s 2)))\n        (count 0))\n\
    \    (cond\n      [(and (number? apples) (number? oranges)) (+ count mango)]\n\
    \      [(and (number? apples) (number? mango)) (+ count apples)]\n      [(and\
    \ (number? oranges) (number? mango)) (+ count oranges)]\n      [else (+ count\
    \ (* apples oranges mango))]\n      )\n    ))\n", "  (cond\n    [(empty? s) 0]\n\
    \    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 1))]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\"\
    )\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [(equal? (first s) \"\
    oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]))\n", "  (let ((apples (string->number (string-ref s 0))\n\
    \         oranges (string->number (string-ref s 1))\n         mango (string->number\
    \ (string-ref s 2)))\n        (total (+ apples oranges mango)))\n    (cond\n \
    \     [(< total n (+ apples oranges mango))\n       (+ apples oranges mango)]\n\
    \      [(< apples 0)\n       (+ oranges mango)]\n      [(< oranges 0)\n      \
    \ (+ apples mango)]\n      [(< mango 0)\n       (+ apples oranges)]\n      [else\n\
    \       (fruit_distribution (substring s 2 n) (- total n))]))) ; #lang racket\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else\n     (fruit_distribution (rest s) n)]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (let ((apples (string->number (substring s 0 1))))\n    (let ((oranges (string->number\
    \ (substring s 2 3))))\n      (let ((mango (string->number (substring s 4 5))))\n\
    \        (cond\n          [(= apples 0) 0]\n          [(= oranges 0) 0]\n    \
    \      [(= mango 0) 0]\n          [(= apples oranges) 0]\n          [(= apples\
    \ mango) 0]\n          [(= oranges mango) 0]\n          [(= (+ apples oranges)\
    \ mango) 0]\n          [(= (+ apples mango) oranges) 0]\n          [(= (+ oranges\
    \ mango) apples) 0]\n          [(= (+ apples oranges) (+ oranges mango)) 0]\n\
    \          [(= (+ apples mango) (+ oranges mango)) 0]\n          [(= (+ oranges\
    \ mango) (+ apples oranges)) 0]\n          [(= (+ apples oranges) (+ apples mango))\
    \ 0]\n          [(= (+ apples mango) (+ apples oranges)) 0]\n          [(= (+\
    \ oranges mango) (+ oranges mango)) 0]\n          [(= (+ apples oranges) (+ oranges\
    \ mango)) 0]\n          [(= (+ apples mango) (+ oranges mango)) 0]\n         \
    \ [(= (+ oranges mango) (+ apples oranges)) 0]\n          [(= (+ apples oranges)\
    \ (+ apples mango)) 0]\n          [(= (+ apples mango) (+ apples oranges)) 0]\n\
    \          [(= (+ oranges mango) (+ oranges mango)) 0]\n          [(= (+ apples\
    \ oranges) (+ apples mango)) 0]\n          [(= (+ apples mango) (+ apples oranges))\
    \ 0]\n          [(= (+ oranges mango) (+ oranges mango)) 0]\n          [(= (+\
    \ apples oranges) (+ apples mango)) 0]\n          [(= (+ apples mango) (+ apples\
    \ oranges)) 0]\n          [(= (+ oranges mango) (+ oranges mango)) 0]\n      \
    \    [(= (+ apples oranges) (+ apples mango)) 0]\n          [(= (+ apples mango)\
    \ (+ apples oranges)) 0]\n          [(= (+ oranges mang", "  (cond\n    [(empty?\
    \ s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else 0]))\n", "  (cond\n    [(empty? s) 0]\n   \
    \ [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n\
    \ 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else 0]))\n", "  (cond\n    [(empty? s) 0]\n   \
    \ [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n\
    \ 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else 0]))\n", "  (cond\n    [(empty? s) 0]\n   \
    \ [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n\
    \ 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [else (+ (fruit_distribution (rest s) n) (* n 0))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else\n     (fruit_distribution (rest s) n)]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 1))]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\"\
    )\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n    [(equal? (first s) \"\
    oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 1))]\n    [(equal? (first\
    \ s) \"mango\")\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [else\
    \ (+ (fruit_distribution (rest s) n) (* n 4))]))\n", "  (cond\n    [(empty? s)\
    \ 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest s)\
    \ n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 1))]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\"\
    )\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n    [(equal? (first s) \"\
    oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 1))]\n    [(equal? (first\
    \ s) \"mango\")\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [else\
    \ (error \"Invalid input\")]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal?\
    \ (first s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n \
    \   [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\") (+ (fruit_distribution\
    \ (rest s) n) 1)]\n    [(equal? (first s) \"oranges\") (+ (fruit_distribution\
    \ (rest s) n) 2)]\n    [else (+ (fruit_distribution (rest s) n) (+ (fruit_distribution\
    \ (rest s) n) (+ (fruit_distribution (rest s) n) (+ (fruit_distribution (rest\
    \ s) n) (+ (fruit_distribution (rest s) n) (+ (fruit_distribution (rest s) n)\
    \ (+ (fruit_distribution (rest s) n) (+ (fruit_distribution (rest s) n) (+ (fruit_distribution\
    \ (rest s) n) (+ (fruit_distribution (rest s) n) (+ (fruit_distribution (rest\
    \ s) n) (+ (fruit_distribution (rest s) n) (+ (fruit_distribution (rest s) n)\
    \ (+ (fruit_distribution (rest s) n) (+ (fruit_distribution (rest s) n) (+ (fruit_distribution\
    \ (rest s) n) (+ (fruit_distribution (rest s) n) (+ (fruit_distribution (rest\
    \ s) n) (+ (fruit_distribution (rest s) n) (+ (fruit_distribution (rest s) n)\
    \ (+ (fruit_distribution (rest s) n) (+ (fruit_distribution (rest s) n) (+ (fruit_distribution\
    \ (rest s) n) (+ (fruit_distribution (rest s) n) (+ (fruit_distribution (rest\
    \ s) n) (+ (fruit_distribution (rest s) n) (+ (fruit_distribution (rest s) n)\
    \ (+ (fruit_distribution (rest s) n) (+ (fruit_distribution (rest s) n) (+ (fruit_distribution\
    \ (rest s) n) (+ (fruit_distribution (rest s) n) (+ (fruit_distribution (rest\
    \ s) n) (+ (fruit_distribution (rest s) n) (+ (fruit_distribution (rest s) n)\
    \ (+ (fruit_distribution (rest s) n) (+ (fruit_distribution (rest s) n) (+ (fruit_distribution\
    \ (rest s) n) (+ (fruit_distribution (rest s) n) (+ (fruit_distribution (rest\
    \ s) n) (+ (fruit_distribution (rest s) n) (+ (fruit_distribution (rest s) n)\
    \ (+ (fruit_distribution (rest s) n) (+ (fruit_distribution (rest s) n) (+ (fruit_distribution\
    \ (rest s) n) (+ (fruit_distribution (rest s) n) (+ (fruit_distribution", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (let ((apples\
    \ (string->number (substring s 0 (string-length s) #\\Space #\\And))) \n     \
    \   (oranges (string->number (substring s 1 (string-length s) #\\Space #\\And)))\n\
    \        (mango (string->number (substring s 2 (string-length s) #\\Space #\\\
    And))))\n    (cond\n      [(= n 0) mango]\n      [(= n 1) oranges]\n      [(=\
    \ n 2) apples]\n      [(= n 3) (+ apples (+ oranges mango))]\n      [(= n 4) (+\
    \ apples (+ oranges (+ mango 1)))]\n      [(= n 5) (+ apples (+ oranges (+ mango\
    \ (+ 1 1)))]\n      [(= n 6) (+ apples (+ oranges (+ mango (+ 1 2))))]\n     \
    \ [(= n 7) (+ apples (+ oranges (+ mango (+ 1 3))))]\n      [(= n 8) (+ apples\
    \ (+ oranges (+ mango (+ 1 4))))]\n      [(= n 9) (+ apples (+ oranges (+ mango\
    \ (+ 1 5))))]\n      [(= n 10) (+ apples (+ oranges (+ mango (+ 1 6))))]\n   \
    \   [(= n 11) (+ apples (+ oranges (+ mango (+ 1 7))))]\n      [(= n 12) (+ apples\
    \ (+ oranges (+ mango (+ 1 8))))]\n      [(= n 13) (+ apples (+ oranges (+ mango\
    \ (+ 1 9))))]\n      [(= n 14) (+ apples (+ oranges (+ mango (+ 1 10))))]\n  \
    \    [(= n 15) (+ apples (+ oranges (+ mango (+ 1 11))))]\n      [(= n 16) (+\
    \ apples (+ oranges (+ mango (+ 1 12))))]\n      [(= n 17) (+ apples (+ oranges\
    \ (+ mango (+ 1 13))))]\n      [(= n 18) (+ apples (+ oranges (+ mango (+ 1 14))))]\n\
    \      [(= n 19) (+ apples (+ oranges (+ mango (+ 1 15))))]\n      [(= n 20) (+\
    \ apples (+ oranges (+ mango (+ 1 16))))]\n      [(= n 21) (+ apples (+ oranges\
    \ (+ mango (+ 1 17))))]\n      [(= n 22) (+ apples (+ ", "  (cond\n    [(empty?\
    \ s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else\n     (fruit_distribution (rest s) n)]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (let ((apples\
    \ (string->number (first s))\n         (oranges (string->number (second s))\n\
    \         (mango (string->number (third s))))\n        (count 0))\n    (cond\n\
    \      [(and (> apples 0) (> oranges 0)) \n       (cond\n         [(> oranges\
    \ 0) (set! count (+ count (- oranges mango)))]\n         [(> apples 0) (set! count\
    \ (+ count (- apples mango)))]\n         [else (set! count (+ count mango))]\n\
    \       )]\n      [(and (> apples 0) (> mango 0)) \n       (cond\n         [(>\
    \ apples 0) (set! count (+ count (- apples mango)))]\n         [(> oranges 0)\
    \ (set! count (+ count (- oranges mango)))]\n         [else (set! count (+ count\
    \ mango))]\n       )]\n      [(and (> oranges 0) (> mango 0)) \n       (cond\n\
    \         [(> apples 0) (set! count (+ count (- apples mango)))]\n         [(>\
    \ oranges 0) (set! count (+ count (- oranges mango)))]\n         [else (set! count\
    \ (+ count mango))]\n       )]\n      [(and (> apples 0) (> oranges 0)) \n   \
    \    (cond\n         [(> apples 0) (set! count (+ count (- apples mango)))]\n\
    \         [(> oranges 0) (set! count (+ count (- oranges mango)))]\n         [else\
    \ (set! count (+ count mango))]\n       )]\n      [(and (> oranges 0) (> mango\
    \ 0)) \n       (cond\n         [(> apples 0) (set! count (+ count (- apples mango)))]\n\
    \         [(> oranges 0) (set! count (+ count (- oranges mango)))]\n         [else\
    \ (set! count (+ count mango))]\n       )]\n      [(and (> apples 0) (> oranges\
    \ 0)) \n       (cond\n         [(> apples 0) (set! count (+ count (- apples mango)))]\n\
    \         [(> oranges 0) (set! count (+ count (- oranges mango)))]\n         [else\
    \ (set! count (+ count mango))]\n       )]\n      [(and (> oranges 0) (> mango\
    \ 0)) ", "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\") (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\") (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\") (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\") (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (let ((apples (string->number (substring s 0 (string-length s) #\\Space)))\n\
    \        (oranges (string->number (substring s 1 (string-length s) #\\Space)))\n\
    \        (mango (string->number (substring s 2 (string-length s) #\\Space))))\n\
    \    (cond\n      [(= n 0) mango]\n      [(= n 1) oranges]\n      [(= n 2) apples]\n\
    \      [(= n 3) (+ (* oranges mango) (* apples mango))]\n      [(= n 4) (+ (*\
    \ oranges mango) (* apples mango))]\n      [(= n 5) (+ (* oranges mango) (* apples\
    \ mango))]\n      [(= n 6) (+ (* oranges mango) (* apples mango))]\n      [(=\
    \ n 7) (+ (* oranges mango) (* apples mango))]\n      [(= n 8) (+ (* oranges mango)\
    \ (* apples mango))]\n      [(= n 9) (+ (* oranges mango) (* apples mango))]\n\
    \      [(= n 10) (+ (* oranges mango) (* apples mango))]\n      [(= n 11) (+ (*\
    \ oranges mango) (* apples mango))]\n      [(= n 12) (+ (* oranges mango) (* apples\
    \ mango))]\n      [(= n 13) (+ (* oranges mango) (* apples mango))]\n      [(=\
    \ n 14) (+ (* oranges mango) (* apples mango))]\n      [(= n 15) (+ (* oranges\
    \ mango) (* apples mango))]\n      [(= n 16) (+ (* oranges mango) (* apples mango))]\n\
    \      [(= n 17) (+ (* oranges mango) (* apples mango))]\n      [(= n 18) (+ (*\
    \ oranges mango) (* apples mango))]\n      [(= n 19) (+ (* oranges mango) (* apples\
    \ mango))]\n      [(= n 20) (+ (* oranges mango) (* apples mango))]\n      [(=\
    \ n 21) (+ (* oranges mango) (* apples mango))]\n      [(= n 22) (+ (* oranges\
    \ mango) (* apples mango))]\n      [(= n 23) (+ (* oranges mango) (* apples mango))]\n\
    \      [(= n 24) (", "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\"\
    )\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [(equal? (first s) \"\
    oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n    [(equal? (first\
    \ s) \"mango\")\n     (+ (fruit_distribution (rest s) n) (* n 1))]\n    [else\
    \ (error \"Invalid input\")]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal?\
    \ (first s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n \
    \   [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 1))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 3))]\n    [else (+ (fruit_distribution (rest s) n) (* n 4))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 4))]\n    [else (+ (fruit_distribution (rest s) n) (* n 5))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (+ (fruit_distribution (rest s) n) (* n 0))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [else (+ (fruit_distribution (rest s) n) (* n 0))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\") (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\") (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 0))]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\"\
    )\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [(equal? (first s) \"\
    oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n    [(equal? (first\
    \ s) \"mango\")\n     (+ (fruit_distribution (rest s) n) (* n 1))]\n    [else\
    \ (error \"Invalid input\")]))\n", "  (let ((apples (string->number (first s))\n\
    \         (oranges (string->number (second s))\n         (mango (string->number\
    \ (third s))))\n        (total (+ apples oranges mango)))\n    (cond\n      [(<\
    \ total n) 0]\n      [(= total n) 1]\n      [(> total n) (+ (fruit_distribution\
    \ s (- total n)) (fruit_distribution s (- total n)))]\n      [(= (mod total n)\
    \ 0) (+ (fruit_distribution s (- n total)) (fruit_distribution s (- n total)))]\n\
    \      [(= (mod total n) 1) (+ (fruit_distribution s (- n total)) (fruit_distribution\
    \ s (- n total)))]\n      [(= (mod total n) 2) (+ (fruit_distribution s (- n total))\
    \ (fruit_distribution s (- n total)))]\n      [(= (mod total n) 3) (+ (fruit_distribution\
    \ s (- n total)) (fruit_distribution s (- n total)))]\n      [(= (mod total n)\
    \ 4) (+ (fruit_distribution s (- n total)) (fruit_distribution s (- n total)))]\n\
    \      [(= (mod total n) 5) (+ (fruit_distribution s (- n total)) (fruit_distribution\
    \ s (- n total)))]\n      [(= (mod total n) 6) (+ (fruit_distribution s (- n total))\
    \ (fruit_distribution s (- n total)))]\n      [(= (mod total n) 7) (+ (fruit_distribution\
    \ s (- n total)) (fruit_distribution s (- n total)))]\n      [(= (mod total n)\
    \ 8) (+ (fruit_distribution s (- n total)) (fruit_distribution s (- n total)))]\n\
    \      [(= (mod total n) 9) (+ (fruit_distribution s (- n total)) (fruit_distribution\
    \ s (- n total)))]\n      [(= (mod total n) 10) (+ (fruit_distribution s (- n\
    \ total)) (fruit_distribution s (- n total)))]\n      [(= (mod total n) 11) (+\
    \ (fruit_distribution s (- n total)) (fruit_distribution s (- n total)))]\n  \
    \    [(= (mod total n) 12) (+ (fruit_distribution s (- n total)) (fruit_distribution\
    \ s (- n total)))]\n      [(= (mod total ", "  (cond\n    [(empty? s) 0]\n   \
    \ [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n\
    \ 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 1))]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\"\
    )\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [(equal? (first s) \"\
    oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n    [(equal? (first\
    \ s) \"mango\")\n     (+ (fruit_distribution (rest s) n) (* n 1))]\n    [else\
    \ (error \"Invalid input\")]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal?\
    \ (first s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n \
    \   [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n", "  (cond\n    [(empty?\
    \ s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 1))]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\"\
    )\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [(equal? (first s) \"\
    oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first\
    \ s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [(equal?\
    \ (first s) \"oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n\
    \    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n", "  (cond\n    [(empty?\
    \ s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 1))]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\"\
    )\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n    [(equal? (first s) \"\
    oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 1))]\n    [else (+ (fruit_distribution\
    \ (rest s) n) (* n 0))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

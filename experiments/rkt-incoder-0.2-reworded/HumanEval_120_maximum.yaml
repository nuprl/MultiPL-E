name: HumanEval_120_maximum
language: rkt
prompt: "#lang racket\n\n;; Given a list arr of integers and a positive integer k,\
  \ return a sorted list \n;; of length k with the maximum k numbers in arr.\n;; Example\
  \ 1:\n;; >>> (maximum (list -3 -4 5) 3)\n;; (list -4 -3 5)\n;; Example 2:\n;; >>>\
  \ (maximum (list 4 -4 4) 2)\n;; (list 4 4)\n;; Example 3:\n;; >>> (maximum (list\
  \ -3 2 1 2 -1 -2 1) 1)\n;; (list 2)\n;; Note:\n;; 1. The length of the list will\
  \ be in the range of [1, 1000].\n;; 2. The elements in the list will be in the range\
  \ of [-1000, 1000].\n;; 3. 0 <= k <= len(arr)\n(define (maximum arr k)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate maximum))\n\
  \    (check-equal? (candidate (list -3 -4 5) 3) (list -4 -3 5))\n    (check-equal?\
  \ (candidate (list 4 -4 4) 2) (list 4 4))\n    (check-equal? (candidate (list -3\
  \ 2 1 2 -1 -2 1) 1) (list 2))\n    (check-equal? (candidate (list 123 -123 20 0\
  \ 1 2 -3) 3) (list 2 20 123))\n    (check-equal? (candidate (list -123 20 0 1 2\
  \ -3) 4) (list 0 1 2 20))\n    (check-equal? (candidate (list 5 15 0 3 -13 -8 0)\
  \ 7) (list -13 -8 0 0 3 5 15))\n    (check-equal? (candidate (list -1 0 2 5 3 -10)\
  \ 2) (list 3 5))\n    (check-equal? (candidate (list 1 0 5 -7) 1) (list 5))\n  \
  \  (check-equal? (candidate (list 4 -4) 2) (list -4 4))\n    (check-equal? (candidate\
  \ (list -10 10) 2) (list -10 10))\n    (check-equal? (candidate (list 1 2 3 -23\
  \ 243 -400 0) 0) (list ))\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(empty? arr) (list 0)]\n    [(= k 0) (first arr)]\n \
    \   [else (max (rest arr) (- k 1))]))\n", "  (if (= k 0)\n      (list arr)\n \
    \     (append (maximum (rest arr) (sub1 k)) (maximum (first arr) (sub1 k)))))\n",
  "  (cond\n    [(empty? arr) empty]\n    [(= k 0) (first arr)]\n    [else (cons (max\
    \ (rest arr)) (maximum (rest arr) (sub1 k)))]))\n", "  (cond\n    [(empty? arr)\
    \ empty]\n    [(= k 0) (first arr)]\n    [else (cons (max (rest arr) k) (maximum\
    \ (rest arr) (sub1 k)))]))\n", "  (if (= k 0)\n      (list 0)\n      (let ([max-so-far\
    \ 0])\n        (let ([cur-max 0])\n          (for ([i arr])\n            (if (>\
    \ i cur-max)\n                (set! cur-max i)\n                (set! max-so-far\
    \ cur-max)\n              )\n            )\n          (cons max-so-far max-so-far)\n\
    \        )\n      )\n    )\n  )\n", "  (if (= k 0)\n      (list arr)\n      (let\
    \ ([max (first arr)])\n        (if (null? (rest arr))\n            (list max)\n\
    \            (let ([next (maximum (rest arr) (sub1 k))]\n                  [max\
    \ (max max next)])\n              (cons max max))))))\n", "  (if (= k 0)\n   \
    \   (list 0)\n      (let ([max-so-far 0])\n        (let loop ((arr arr) (k k)\
    \ (max-so-far max-so-far))\n          (cond [(empty? arr) (list max-so-far)]\n\
    \                [else (let ([curr (first arr)])\n                       (if (<\
    \ k 0)\n                           (loop (rest arr) (sub1 k) max-so-far)\n   \
    \                        (loop (rest arr) (sub1 k) (cond [(> curr max-so-far)\
    \ (list curr max-so-far)]\n                                                  \
    \          [else (cons curr max-so-far)]))]))]))))\n", "  (if (= k 0)\n      (list\
    \ 0)\n      (let ([max (car arr)])\n        (if (> (car arr) max)\n          \
    \  (cons max arr)\n            (maximum (cdr arr) (sub1 k))))))\n", "  (if (=\
    \ k 0)\n      (list arr)\n      (append (maximum (rest arr) (sub1 k)) (maximum\
    \ (first arr) (sub1 k))))))\n", "  (if (= k 0)\n      (list 0)\n      (let ([head\
    \ (first arr)])\n        (if (> head 0)\n            (append (maximum (rest arr)\
    \ (- k 1))\n                    (list head))\n            (maximum (rest arr)\
    \ (- k 1))))))\n", "  (if (= k 0)\n      (list 0)\n      (let ([max (car arr)])\n\
    \        (if (> (car arr) max)\n            (cons max \n                   (maximum\
    \ (cdr arr) (sub1 k)))\n            (maximum (cdr arr) (sub1 k))))))\n", "  (if\
    \ (= k 0)\n      (list 0)\n      (let ([max-so-far 0])\n        (let loop ([arr\
    \ arr]\n                   [max-so-far max-so-far]\n                   [k k])\n\
    \          (cond [(empty? arr) max-so-far]\n                [(< k 0) max-so-far]\n\
    \                [else (loop (rest arr)\n                          (cond [(< max-so-far\
    \ arr) (cons max-so-far arr)]\n                                [(> max-so-far\
    \ arr) (cons arr max-so-far)]\n                                [else (cons max-so-far\
    \ arr))])]\n                [else (loop (rest arr)\n                         \
    \ (cond [(< max-so-far arr) (cons max-so-far arr)]\n                         \
    \       [(> max-so-far arr) (cons arr max-so-far)]\n                         \
    \       [else (cons max-so-far arr))])]\n                [else (loop (rest arr)\n\
    \                          (cond [(< max-so-far arr) (cons max-so-far arr)]\n\
    \                                [(> max-so-far arr) (cons arr max-so-far)]\n\
    \                                [else (cons max-so-far arr))])]\n           \
    \     [else (loop (rest arr)\n                          (cond [(< max-so-far arr)\
    \ (cons max-so-far arr)]\n                                [(> max-so-far arr)\
    \ (cons arr max-so-far)]\n                                [else (cons max-so-far\
    \ arr))])]\n                [else (loop (rest arr)\n                         \
    \ (cond [(< max-so-far arr) (cons max-so-far arr)]\n                         \
    \       [(> max-so-far arr) (cons arr max-so-far)]\n                         \
    \       [else (cons max-so-far arr))])]\n                [else (loop (rest arr)\n\
    \                          (cond [(< max-so-far arr) (cons max-so-far arr)]\n\
    \                                [(> max-so-far arr) (cons arr max-so-far)]\n\
    \                                [else (cons max-so-far arr))])]\n           \
    \     [else (loop (rest arr)\n                          (cond [(< max-so-far arr)\
    \ (cons max-so-far arr)]\n                                [(> max-so-far arr)\
    \ (cons arr max-so-far)]\n                                [else (cons max-so-far\
    \ arr))])", "  (if (= k 0)\n      (list 0)\n      (let ([max (car arr)])\n   \
    \     (if (> (car arr) max)\n            (let ([max (car arr)])\n            \
    \  (if (> (car arr) max)\n                  (let ([max (car arr)])\n         \
    \           (if (> (car arr) max)\n                        (let ([max (car arr)])\n\
    \                          (if (> (car arr) max)\n                           \
    \   (let ([max (car arr)])\n                                (if (> (car arr) max)\n\
    \                                    (let ([max (car arr)])\n                \
    \                      (if (> (car arr) max)\n                               \
    \           (let ([max (car arr)])\n                                         \
    \   (if (> (car arr) max)\n                                                (let\
    \ ([max (car arr)])\n                                                  (if (>\
    \ (car arr) max)\n                                                      (let ([max\
    \ (car arr)])\n                                                        (if (>\
    \ (car arr) max)\n                                                           \
    \ (let ([max (car arr)])\n                                                   \
    \           (if (> (car arr) max)\n                                          \
    \                        (let ([max (car arr)])\n                            \
    \                                        (if (> (car arr) max)\n             \
    \                                                           (let ([max (car arr)])\n\
    \                                                                          (if\
    \ (> (car arr) max)\n                                                        \
    \                      (let ([max (car arr)])\n                              \
    \                                                  (if (> (car arr) max)\n   \
    \                                                                            \
    \     (let ([max (car arr)])\n                                               \
    \                                       (if (> (car arr) max)\n              \
    \                                                                            (let\
    \ ([max (car arr)])\n                                                        \
    \                                    (if (> (car arr) max)\n                 \
    \                                                                            \
    \   (let ([max (car arr)])\n                                                 \
    \                                                 (if (> (car arr) max)\n    \
    \                                                                            \
    \                      (let ([max (car arr)])\n                              \
    \                                                                          (if\
    \ (> (car arr) max)\n                                                        \
    \                                                    (let ([max (car arr)])\n\
    \                                                                            \
    \                                  (if (> (car arr) max)\n                   \
    \                                                                            \
    \                   (let ([max (car arr)])\n                                 \
    \                                                                            \
    \       (if (> (car arr) max)\n                                              \
    \                                                                          (let\
    \ ([max (car arr)])\n                                                        \
    \                                                                  (if (> (car\
    \ arr) max)\n                                                                \
    \                                                              (let ([max (car\
    \ arr)])\n                                                                   \
    \                                                             (if (> (car arr)\
    \ max)\n                                                                     \
    \                                                             (let ([max (car\
    \ arr)])\n                                                                   \
    \                                                                 (if (> (car\
    \ arr) max)\n                                                                \
    \                                                                        (let\
    \ ([max (car arr)])\n                                                        \
    \                                                                            \
    \      (if (> (car arr) ", "  (cond\n    [(empty? arr) (list -1)]\n    [(= k 0)\
    \ (first arr)]\n    [else (max (rest arr) (- k 1))]))\n", "  (if (= k 0)\n   \
    \   (list arr)\n      (append (maximum (rest arr) (sub1 k)) (maximum (rest arr)\
    \ (sub1 k))))))\n", "  (if (= k 0)\n      (list 0)\n      (let ([max (car arr)])\n\
    \        (if (< (car arr) max)\n            (let ([max (car arr)])\n         \
    \     (if (< (car arr) max)\n                  (let ([max (car arr)])\n      \
    \              (if (< (car arr) max)\n                        (let ([max (car\
    \ arr)])\n                          (if (< (car arr) max)\n                  \
    \            (let ([max (car arr)])\n                                (if (< (car\
    \ arr) max)\n                                    (let ([max (car arr)])\n    \
    \                                  (if (< (car arr) max)\n                   \
    \                       (let ([max (car arr)])\n                             \
    \               (if (< (car arr) max)\n                                      \
    \          (let ([max (car arr)])\n                                          \
    \        (if (< (car arr) max)\n                                             \
    \         (let ([max (car arr)])\n                                           \
    \             (if (< (car arr) max)\n                                        \
    \                    (let ([max (car arr)])\n                                \
    \                              (if (< (car arr) max)\n                       \
    \                                           (let ([max (car arr)])\n         \
    \                                                           (if (< (car arr) max)\n\
    \                                                                        (let\
    \ ([max (car arr)])\n                                                        \
    \                  (if (< (car arr) max)\n                                   \
    \                                           (let ([max (car arr)])\n         \
    \                                                                       (if (<\
    \ (car arr) max)\n                                                           \
    \                         (let ([max (car arr)])\n                           \
    \                                                           (if (< (car arr) max)\n\
    \                                                                            \
    \              (let ([max (car arr)])\n                                      \
    \                                                      (if (< (car arr) max)\n\
    \                                                                            \
    \                    (let ([max (car arr)])\n                                \
    \                                                                  (if (< (car\
    \ arr) max)\n                                                                \
    \                                      (let ([max (car arr)])\n              \
    \                                                                            \
    \              (if (< (car arr) max)\n                                       \
    \                                                                     (let ([max\
    \ (car arr)])\n                                                              \
    \                                                (if (< (car arr) max)\n     \
    \                                                                            \
    \                                 (let ([max (car arr)])\n                   \
    \                                                                            \
    \                     (if (< (car arr) max)\n                                \
    \                                                                            \
    \            (let ([max (car arr)])\n                                        \
    \                                                                            \
    \      (if (< (car arr) max)\n                                               \
    \                                                                            \
    \   (let ([max (car arr)])\n                                                 \
    \                                                                            \
    \   (if (< (car arr) max)\n                                                  \
    \                                                                            \
    \      (let ([max (car arr)])\n                                              \
    \                                                                            \
    \            (if (< (car arr) max)\n                                         \
    \                                                                            \
    \                   (let ([max (car arr)])\n                                 \
    \                                                                            \
    \                             (if (< (car arr) max)", "  (if (= k 0)\n      (list\
    \ 0)\n      (let ([max (car arr)])\n        (if (> (car arr) max)\n          \
    \  (cons max (maximum (cdr arr) (sub1 k)))\n            (maximum (cdr arr) (sub1\
    \ k))))))\n", "  (if (= k 0)\n      (list 0)\n      (let ([max (car arr)])\n \
    \       (if (> (car arr) max)\n            (cons max (maximum (cdr arr) (sub1\
    \ k)))\n            (maximum (cdr arr) (sub1 k)))))) \n", "  (cond\n    [(empty?\
    \ arr) empty]\n    [(= k 0) (first arr)]\n    [else (cons (max (rest arr)) (maximum\
    \ (rest arr) (sub1 k)))]))\n", "  (if (= k 0)\n      (list arr)\n      (let ([max\
    \ (car arr)])\n        (if (< (length arr) k)\n            (append (maximum (cdr\
    \ arr) (sub1 k)) (list max))\n            (append (maximum (cdr arr) (sub1 k))\
    \ (list max))))))\n", "  (if (= k 0)\n      (list 0)\n      (let ([max (car arr)])\n\
    \        (if (> (car arr) max)\n            (let ([max (car arr)])\n         \
    \     (if (> (car arr) max)\n                  (let ([max (car arr)])\n      \
    \              (if (> (car arr) max)\n                        (let ([max (car\
    \ arr)])\n                          (if (> (car arr) max)\n                  \
    \            (let ([max (car arr)])\n                                (if (> (car\
    \ arr) max)\n                                    (let ([max (car arr)])\n    \
    \                                  (if (> (car arr) max)\n                   \
    \                       (let ([max (car arr)])\n                             \
    \               (if (> (car arr) max)\n                                      \
    \          (let ([max (car arr)])\n                                          \
    \        (if (> (car arr) max)\n                                             \
    \         (let ([max (car arr)])\n                                           \
    \             (if (> (car arr) max)\n                                        \
    \                    (let ([max (car arr)])\n                                \
    \                              (if (> (car arr) max)\n                       \
    \                                           (let ([max (car arr)])\n         \
    \                                                           (if (> (car arr) max)\n\
    \                                                                        (let\
    \ ([max (car arr)])\n                                                        \
    \                  (if (> (car arr) max)\n                                   \
    \                                           (let ([max (car arr)])\n         \
    \                                                                       (if (>\
    \ (car arr) max)\n                                                           \
    \                         (let ([max (car arr)])\n                           \
    \                                                           (if (> (car arr) max)\n\
    \                                                                            \
    \              (let ([max (car arr)])\n                                      \
    \                                                      (if (> (car arr) max)\n\
    \                                                                            \
    \                    (let ([max (car arr)])\n                                \
    \                                                                  (if (> (car\
    \ arr) max)\n                                                                \
    \                                      (let ([max (car arr)])\n              \
    \                                                                            \
    \              (if (> (car arr) max)\n                                       \
    \                                                                     (let ([max\
    \ (car arr)])\n                                                              \
    \                                                (if (> (car arr) max)\n     \
    \                                                                            \
    \                                 (let ([max (car arr)])\n                   \
    \                                                                            \
    \                     (if (> (car arr) max)\n                                \
    \                                                                            \
    \            (let ([max (car arr)])\n                                        \
    \                                                                            \
    \      (if (> (car arr) max)\n                                               \
    \                                                                            \
    \   (let ([max (car arr)])\n                                                 \
    \                                                                            \
    \   (if (> (car arr) max)\n                                                  \
    \                                                                            \
    \    (let ([max (car arr)])\n                                                \
    \                                                                            \
    \        (if (> (car arr) max)\n                                             \
    \                                                                            \
    \               (let ([max (car arr)])\n                                     \
    \                                                                            \
    \                         (if (> (car arr) ", "  (if (= k 0)\n      (list arr)\n\
    \      (let ([max-so-far #f (max-so-far-so-far (car arr) k #f)])\n        (if\
    \ (< k 0)\n            (if (> max-so-far #f)\n                (let ([max-so-far\
    \ #f (max-so-far-so-far (car arr) k (car max-so-far))])\n                  (if\
    \ (> max-so-far #f)\n                      (let ([max-so-far #f (max-so-far-so-far\
    \ (car arr) k (car max-so-far))])\n                        (if (> max-so-far #f)\n\
    \                            (let ([max-so-far #f (max-so-far-so-far (car arr)\
    \ k (car max-so-far))])\n                              (if (> max-so-far #f)\n\
    \                                  (let ([max-so-far #f (max-so-far-so-far (car\
    \ arr) k (car max-so-far))])\n                                    (if (> max-so-far\
    \ #f)\n                                        (let ([max-so-far #f (max-so-far-so-far\
    \ (car arr) k (car max-so-far))])\n                                          (if\
    \ (> max-so-far #f)\n                                              (let ([max-so-far\
    \ #f (max-so-far-so-far (car arr) k (car max-so-far))])\n                    \
    \                            (if (> max-so-far #f)\n                         \
    \                           (let ([max-so-far #f (max-so-far-so-far (car arr)\
    \ k (car max-so-far))])\n                                                    \
    \  (if (> max-so-far #f)\n                                                   \
    \       (let ([max-so-far #f (max-so-far-so-far (car arr) k (car max-so-far))])\n\
    \                                                            (if (> max-so-far\
    \ #f)\n                                                                (let ([max-so-far\
    \ #f (max-so-far-so-far (car arr) k (car max-so-far))])\n                    \
    \                                              (if (> max-so-far #f)\n       \
    \                                                               (let ([max-so-far\
    \ #f (max-so-far-so-far (car arr) k (car max-so-far))])\n                    \
    \                                                    (if (> max-so-far #f)", " \
    \ (cond\n    [(empty? arr) empty]\n    [(= k 0) (first arr)]\n    [else (max (rest\
    \ arr) (- k 1))]))\n", "  (cond\n    [(empty? arr) empty]\n    [(= k 0) (first\
    \ arr)]\n    [else (max (rest arr) (- k 1))]))\n", "  (cond\n    [(empty? arr)\
    \ empty]\n    [(= k 0) (first arr)]\n    [else (cons (max (rest arr) k) (maximum\
    \ (rest arr) (sub1 k)))]))\n", "  (if (= k 0)\n      (list arr)\n      (append\
    \ (maximum (rest arr) (sub1 k)) (maximum (first arr) (sub1 k)))))\n", "  (if (=\
    \ k 0)\n      (list arr)\n      (append (maximum (rest arr) (sub1 k)) (maximum\
    \ (first arr) (sub1 k)))))\n", "  (if (= k 0)\n      (list 0)\n      (let ([max\
    \ (car arr)])\n        (if (< (car arr) max)\n            (cons max (maximum (cdr\
    \ arr) (sub1 k)))\n            (maximum (cdr arr) (sub1 k))))))\n", "  (if (=\
    \ k 0)\n      (list arr)\n      (append (maximum (rest arr) (sub1 k)) (maximum\
    \ (rest arr) (sub1 k)))))\n", "  (cond\n    [(empty? arr) empty]\n    [(= k 0)\
    \ (first arr)]\n    [else (max (rest arr) (- k 1))]))\n", "  (if (= k 0)\n   \
    \   (list arr)\n      (append (maximum (rest arr) (sub1 k)) (maximum (rest arr)\
    \ (sub1 k))))))\n", "  (if (= k 0)\n      (list arr)\n      (append (sort (append\
    \ (take arr (- k 1))\n                           (take arr (- k 2)))\n       \
    \              (lambda (x y)\n                       (if (> x y)\n           \
    \                (- x y)\n                           (- y x)))))\n      (maximum\
    \ (take arr (- k 1))\n               (- k 2))))\n", "  (if (= k 0)\n      (list\
    \ 0)\n      (let ([max (car arr)])\n        (if (> (car arr) max)\n          \
    \  (let ([max (car arr)])\n              (if (> (car arr) max)\n             \
    \     (let ([max (car arr)])\n                    (if (> (car arr) max)\n    \
    \                    (let ([max (car arr)])\n                          (if (>\
    \ (car arr) max)\n                              (let ([max (car arr)])\n     \
    \                           (if (> (car arr) max)\n                          \
    \          (let ([max (car arr)])\n                                      (if (>\
    \ (car arr) max)\n                                          (let ([max (car arr)])\n\
    \                                            (if (> (car arr) max)\n         \
    \                                       (let ([max (car arr)])\n             \
    \                                     (if (> (car arr) max)\n                \
    \                                      (let ([max (car arr)])\n              \
    \                                          (if (> (car arr) max)\n           \
    \                                                 (let ([max (car arr)])\n   \
    \                                                           (if (> (car arr) max)\n\
    \                                                                  (let ([max\
    \ (car arr)])\n                                                              \
    \      (if (> (car arr) max)\n                                               \
    \                         (let ([max (car arr)])\n                           \
    \                                               (if (> (car arr) max)\n      \
    \                                                                        (let\
    \ ([max (car arr)])\n                                                        \
    \                        (if (> (car arr) max)\n                             \
    \                                                       (let ([max (car arr)])\n\
    \                                                                            \
    \          (if (> (car arr) max)\n                                           \
    \                                               (let ([max (car arr)])\n     \
    \                                                                            \
    \           (if (> (car arr) max)\n                                          \
    \                                                      (let ([max (car arr)])\n\
    \                                                                            \
    \                      (if (> (car arr) max)\n                               \
    \                                                                       (let ([max\
    \ (car arr)])\n                                                              \
    \                                          (if (> (car arr) max)\n           \
    \                                                                            \
    \                     (let ([max (car arr)])\n                               \
    \                                                                            \
    \   (if (> (car arr) max)\n                                                  \
    \                                                                (let ([max (car\
    \ arr)])\n                                                                   \
    \                                                 (if (> (car arr) max)\n    \
    \                                                                            \
    \                                        (let ([max (car arr)])\n            \
    \                                                                            \
    \                                  (if (> (car arr) max)\n                   \
    \                                                                            \
    \                               (let ([max (car arr)])\n                     \
    \                                                                            \
    \                               (if (> (car arr) max)\n                      \
    \                                                                            \
    \                                  (let ([max (car arr)])\n                  \
    \                                                                            \
    \                                        (if (> (car arr) max)\n             \
    \                                                                            \
    \                                                 (let ([max (car arr)])\n   \
    \                                                                            \
    \                                                             (if (> (car arr)\
    \ max)", "  (if (= k 0)\n      (list arr)\n      (let ([max-so-far #f max-so-far-so-far\
    \ (maximum (rest arr) (k - 1))])\n        (if (< k max-so-far-so-far)\n      \
    \      (let ([max-so-far max-so-far-so-far])\n              (if (< max-so-far\
    \ max-so-far-so-far)\n                  (let ([max-so-far max-so-far-so-far])\n\
    \                    (if (< max-so-far max-so-far-so-far)\n                  \
    \      (let ([max-so-far max-so-far-so-far])\n                          (if (<\
    \ max-so-far max-so-far-so-far)\n                              (let ([max-so-far\
    \ max-so-far-so-far])\n                                (if (< max-so-far max-so-far-so-far)\n\
    \                                    (let ([max-so-far max-so-far-so-far])\n \
    \                                     (if (< max-so-far max-so-far-so-far)\n \
    \                                         (let ([max-so-far max-so-far-so-far])\n\
    \                                            (if (< max-so-far max-so-far-so-far)\n\
    \                                                (let ([max-so-far max-so-far-so-far])\n\
    \                                                  (if (< max-so-far max-so-far-so-far)\n\
    \                                                      (let ([max-so-far max-so-far-so-far])\n\
    \                                                        (if (< max-so-far max-so-far-so-far)\n\
    \                                                            (let ([max-so-far\
    \ max-so-far-so-far])\n                                                      \
    \        (if (< max-so-far max-so-far-so-far)\n                              \
    \                                    (let ([max-so-far max-so-far-so-far])\n \
    \                                                                   (if (< max-so-far\
    \ max-so-far-so-far)\n                                                       \
    \                 (let ([max-so-far max-so-far-so-far])\n                    \
    \                                                      (if (< max-so-far max-so-far-so-far)\n\
    \                                                                            \
    \  (let ([max-so-far max-so-far-so-far])\n                                   \
    \                                             (if (< max-so-far max-so-far-so-far)\n\
    \                                                                            \
    \        (let ([max-so-far max-so-far-so-far])\n                             \
    \                                                         (if (< max-so-far ",
  "  (if (= k 0)\n      (list 0)\n      (let ([head (first arr)])\n        (if (>\
    \ head 0)\n            (append (maximum (rest arr) (sub1 k)) (list head))\n  \
    \          (append (maximum (rest arr) (sub1 k)) (list head))))))\n", "  (if (=\
    \ k 0)\n      (list arr)\n      (let ([max (car arr)])\n        (if (> (car arr)\
    \ max)\n            (let ([max (car arr)])\n              (if (> (car arr) max)\n\
    \                  (let ([max (car arr)])\n                    (if (> (car arr)\
    \ max)\n                        (let ([max (car arr)])\n                     \
    \     (if (> (car arr) max)\n                              (let ([max (car arr)])\n\
    \                                (if (> (car arr) max)\n                     \
    \               (let ([max (car arr)])\n                                     \
    \ (if (> (car arr) max)\n                                          (let ([max\
    \ (car arr)])\n                                            (if (> (car arr) max)\n\
    \                                                (let ([max (car arr)])\n    \
    \                                              (if (> (car arr) max)\n       \
    \                                               (let ([max (car arr)])\n     \
    \                                                   (if (> (car arr) max)\n  \
    \                                                          (let ([max (car arr)])\n\
    \                                                              (if (> (car arr)\
    \ max)\n                                                                  (let\
    \ ([max (car arr)])\n                                                        \
    \            (if (> (car arr) max)\n                                         \
    \                               (let ([max (car arr)])\n                     \
    \                                                     (if (> (car arr) max)\n\
    \                                                                            \
    \  (let ([max (car arr)])\n                                                  \
    \                              (if (> (car arr) max)\n                       \
    \                                                             (let ([max (car\
    \ arr)])\n                                                                   \
    \                   (if (> (car arr) max)\n                                  \
    \                                                        (let ([max (car arr)])\n\
    \                                                                            \
    \                (if (> (car arr) max)\n                                     \
    \                                                           (let ([max (car arr)])\n\
    \                                                                            \
    \                      (if (> (car arr) max)\n                               \
    \                                                                       (let ([max\
    \ (car arr)])\n                                                              \
    \                                          (if (> (car arr) max)\n           \
    \                                                                            \
    \                     (let ([max (car arr)])\n                               \
    \                                                                            \
    \   (if (> (car arr) max)\n                                                  \
    \                                                                (let ([max (car\
    \ arr)])\n                                                                   \
    \                                                 (if (> (car arr) max)\n    \
    \                                                                            \
    \                                        (let ([max (car arr)])\n            \
    \                                                                            \
    \                                  (if (> (car arr) max)\n                   \
    \                                                                            \
    \                               (let ([max (car arr)])\n                     \
    \                                                                            \
    \                               (if (> (car arr) max)\n                      \
    \                                                                            \
    \                                  (let ([max (car arr)])\n                  \
    \                                                                            \
    \                                        (if (> (car arr) max)\n             \
    \                                                                            \
    \                                                 (let ([max (car arr)])\n   \
    \                                                                            \
    \                                                             (if (> (car arr)\
    \ max)", "  (if (= k 0)\n      (list arr)\n      (append (maximum (rest arr) (sub1\
    \ k)) (maximum (first arr) (sub1 k))))))\n", "  (if (= k 0)\n      (list 0)\n\
    \      (let ([max (car arr)])\n        (if (> (car arr) max)\n            (let\
    \ ([max (car arr)])\n              (if (> (car arr) max)\n                  (let\
    \ ([max (car arr)])\n                    (if (> (car arr) max)\n             \
    \           (let ([max (car arr)])\n                          (if (> (car arr)\
    \ max)\n                              (let ([max (car arr)])\n               \
    \                 (if (> (car arr) max)\n                                    (let\
    \ ([max (car arr)])\n                                      (if (> (car arr) max)\n\
    \                                          (let ([max (car arr)])\n          \
    \                                  (if (> (car arr) max)\n                   \
    \                             (let ([max (car arr)])\n                       \
    \                           (if (> (car arr) max)\n                          \
    \                            (let ([max (car arr)])\n                        \
    \                                (if (> (car arr) max)\n                     \
    \                                       (let ([max (car arr)])\n             \
    \                                                 (if (> (car arr) max)\n    \
    \                                                              (let ([max (car\
    \ arr)])\n                                                                   \
    \ (if (> (car arr) max)\n                                                    \
    \                    (let ([max (car arr)])\n                                \
    \                                          (if (> (car arr) max)\n           \
    \                                                                   (let ([max\
    \ (car arr)])\n                                                              \
    \                  (if (> (car arr) max)\n                                   \
    \                                                 (let ([max (car arr)])\n   \
    \                                                                            \
    \       (if (> (car arr) max)\n                                              \
    \                                            (let ([max (car arr)])\n        \
    \                                                                            \
    \        (if (> (car arr) max)\n                                             \
    \                                                   (let ([max (car arr)])\n \
    \                                                                            \
    \                     (if (> (car arr) max)\n                                \
    \                                                                      (let ([max\
    \ (car arr)])\n                                                              \
    \                                          (if (> (car arr) max)\n           \
    \                                                                            \
    \                     (let ([max (car arr)])\n                               \
    \                                                                            \
    \   (if (> (car arr) max)\n                                                  \
    \                                                                (let ([max (car\
    \ arr)])\n                                                                   \
    \                                                 (if (> (car arr) max)\n    \
    \                                                                            \
    \                                        (let ([max (car arr)])\n            \
    \                                                                            \
    \                                  (if (> (car arr) max)\n                   \
    \                                                                            \
    \                               (let ([max (car arr)])\n                     \
    \                                                                            \
    \                               (if (> (car arr) max)\n                      \
    \                                                                            \
    \                                  (let ([max (car arr)])\n                  \
    \                                                                            \
    \                                        (if (> (car arr) max)\n             \
    \                                                                            \
    \                                                 (let ([max (car arr)])\n   \
    \                                                                            \
    \                                                             (if (> (car arr)\
    \ max)", "  (if (= k 0)\n      (list arr)\n      (let ([max (car arr)])\n    \
    \    (if (> (car arr) max)\n            (let ([new (car arr)])\n             \
    \ (if (> (car arr) max)\n                  (let ([new (car arr)])\n          \
    \          (if (> (car arr) max)\n                        (let ([new (car arr)])\n\
    \                          (if (> (car arr) max)\n                           \
    \   (let ([new (car arr)])\n                                (if (> (car arr) max)\n\
    \                                    (let ([new (car arr)])\n                \
    \                      (if (> (car arr) max)\n                               \
    \           (let ([new (car arr)])\n                                         \
    \   (if (> (car arr) max)\n                                                (let\
    \ ([new (car arr)])\n                                                  (if (>\
    \ (car arr) max)\n                                                      (let ([new\
    \ (car arr)])\n                                                        (if (>\
    \ (car arr) max)\n                                                           \
    \ (let ([new (car arr)])\n                                                   \
    \           (if (> (car arr) max)\n                                          \
    \                        (let ([new (car arr)])\n                            \
    \                                        (if (> (car arr) max)\n             \
    \                                                           (let ([new (car arr)])\n\
    \                                                                          (if\
    \ (> (car arr) max)\n                                                        \
    \                      (let ([new (car arr)])\n                              \
    \                                                  (if (> (car arr) max)\n   \
    \                                                                            \
    \     (let ([new (car arr)])\n                                               \
    \                                       (if (> (car arr) max)\n              \
    \                                                                            (let\
    \ ([new (car arr)])\n                                                        \
    \                                    (if (> (car arr) max)\n                 \
    \                                                                            \
    \   (let ([new (car arr)])\n                                                 \
    \                                                 (if (> (car arr) max)\n    \
    \                                                                            \
    \                      (let ([new (car arr)])\n                              \
    \                                                                          (if\
    \ (> (car arr) max)\n                                                        \
    \                                                    (let ([new (car arr)])\n\
    \                                                                            \
    \                                  (if (> (car arr) max)\n                   \
    \                                                                            \
    \                   (let ([new (car arr)])\n                                 \
    \                                                                            \
    \       (if (> (car arr) max)\n                                              \
    \                                                                          (let\
    \ ([new (car arr)])\n                                                        \
    \                                                                  (if (> (car\
    \ arr) max)\n                                                                \
    \                                                              (let ([new (car\
    \ arr)])\n                                                                   \
    \                                                             (if (> (car arr)\
    \ max)\n                                                                     \
    \                                                               (let ([new (car\
    \ arr)])\n                                                                   \
    \                                                                   (if (> (car\
    \ arr) max)\n                                                                \
    \                                                                          (let\
    \ ([new (car arr)])\n                                                        \
    \                                                                            \
    \        (if (> (car arr) max)", "  (cond\n    [(empty? arr) (list 0)]\n    [(=\
    \ k 0) (first arr)]\n    [else (append (maximum (rest arr) (sub1 k)) (first arr))]))\n",
  "  (cond\n    [(empty? arr) empty]\n    [(= k 0) (first arr)]\n    [else (max (rest\
    \ arr) (- k 1))]))\n", "  (cond\n    [(empty? arr) empty]\n    [(= k 0) (first\
    \ arr)]\n    [else (max (rest arr) (- k 1))]))\n", "  (if (= k 0)\n      (list\
    \ arr)\n      (let ([head (first arr)])\n        (if (< head (first arr))\n  \
    \          (append (maximum (rest arr) (- k 1))\n                    (list head))\n\
    \            (append (maximum (rest arr) (- k 1))\n                    (maximum\
    \ (rest arr) (- k 1))))))))\n", "  (if (= k 0)\n      (list arr)\n      (append\
    \ (maximum (rest arr) (sub1 k)) (maximum (first arr) (sub1 k)))))\n", "  (cond\n\
    \    [(empty? arr) empty]\n    [(= k 0) (first arr)]\n    [else (max (rest arr)\
    \ (- k 1))]))\n", "  (if (= k 0)\n      (list arr)\n      (let ([max (car arr)])\n\
    \        (if (> (car arr) max)\n            (cons max \n                   (maximum\
    \ (cdr arr) (sub1 k)))\n            (maximum (cdr arr) (sub1 k))))))\n", "  (if\
    \ (= k 0)\n      (list 0)\n      (let ([max (car arr)])\n        (if (< (car arr)\
    \ max)\n            (cons max (maximum (cdr arr) (sub1 k)))\n            (maximum\
    \ (cdr arr) (sub1 k))))))\n", "  (if (= k 0)\n      (list 0)\n      (let ([max\
    \ (first arr)])\n        (if (null? (rest arr))\n            (list max)\n    \
    \        (let ([next (maximum (rest arr) (sub1 k))]\n                  [max (if\
    \ (> max next)\n                          (cons max next)\n                  \
    \        (cons next max))])\n              (if (= k 1)\n                  (cons\
    \ max next)\n                  (cons next max)))))\n      (error \"k must be in\
    \ range [0, len(arr)]\")))\n", "  (if (= k 0)\n      (list arr)\n      (append\
    \ (maximum (rest arr) (sub1 k)) (maximum (first arr) (sub1 k))))))\n", "  (if\
    \ (= k 0)\n      (list 0)\n      (let ([max-so-far (first arr)])\n        (if\
    \ (> (first arr) max-so-far)\n            (let ([new-max-so-far (first arr)])\n\
    \              (if (> (first arr) new-max-so-far)\n                  (let ([new-max-so-far\
    \ (first arr)])\n                    (if (> (first arr) new-max-so-far)\n    \
    \                    (let ([new-max-so-far (first arr)])\n                   \
    \       (if (> (first arr) new-max-so-far)\n                              (let\
    \ ([new-max-so-far (first arr)])\n                                (if (> (first\
    \ arr) new-max-so-far)\n                                    (let ([new-max-so-far\
    \ (first arr)])\n                                      (if (> (first arr) new-max-so-far)\n\
    \                                          (let ([new-max-so-far (first arr)])\n\
    \                                            (if (> (first arr) new-max-so-far)\n\
    \                                                (let ([new-max-so-far (first\
    \ arr)])\n                                                  (if (> (first arr)\
    \ new-max-so-far)\n                                                      (let\
    \ ([new-max-so-far (first arr)])\n                                           \
    \             (if (> (first arr) new-max-so-far)\n                           \
    \                                 (let ([new-max-so-far (first arr)])\n      \
    \                                                        (if (> (first arr) new-max-so-far)\n\
    \                                                                  (let ([new-max-so-far\
    \ (first arr)])\n                                                            \
    \        (if (> (first arr) new-max-so-far)\n                                \
    \                                        (let ([new-max-so-far (first arr)])\n\
    \                                                          (if (> (first arr)\
    \ new-max-so-far)\n                                                          \
    \    (let ([new-max-so-far (first arr)])\n                                   \
    \                             (if (> (first arr) new-max-so-far)\n           \
    \                                                         (let ([new-max-so-far\
    \ (first arr)])\n                                                            \
    \          (if (> (first arr) new-max-so-far)\n                              \
    \                                            (let ([new-max-so-far (first arr)])\n\
    \                                                                            (if\
    \ (> (first arr) new-max-so-far)\n                                           \
    \                                     (let ([new-max-so-far (first arr)])\n  \
    \                                                                            \
    \    (if (> (first arr) new-max-so-far)\n                                    \
    \                                                  (let ([new-max-so-far (first\
    \ arr)])\n                                                                   \
    \     (if (> (first arr) new-max-so-far)\n                                   \
    \                                         (let ([new-max-so-far (first arr)])\n\
    \                                                                            \
    \  (if (> (first arr) new-max-so-f", "  (cond\n    [(empty? arr) empty]\n    [(=\
    \ k 0) (first arr)]\n    [else (cons (max (rest arr) k) (maximum (rest arr) (sub1\
    \ k)))]))\n", "  (if (= k 0)\n      (list 0)\n      (let ([max (first arr)])\n\
    \        (if (null? (rest arr))\n            (cons max 0)\n            (let ([next\
    \ (maximum (rest arr) (sub1 k))]\n                  [max (if (> max next) max\
    \ next)])\n              (cons max max))))))\n", "  (if (= k 0)\n      (list arr)\n\
    \      (let ([max-so-far #f (max-so-far-so-far (car arr) arr)])\n        (if (<\
    \ (length max-so-far) k)\n            (let ([max (car max-so-far)])\n        \
    \      (if (> max max-so-far)\n                  (set! max-so-far max)\n     \
    \             (set! max-so-far-so-far (cons max max-so-far-so-far))\n        \
    \          (set! max-so-far-so-far (cdr max-so-far-so-far))\n                \
    \  (set! max-so-far-so-far (cons max max-so-far-so-far))\n                  (set!\
    \ max-so-far-so-far (cdr max-so-far-so-far))\n                  (set! max-so-far-so-far\
    \ (cons max max-so-far-so-far))\n                  (set! max-so-far-so-far (cdr\
    \ max-so-far-so-far))\n                  (set! max-so-far-so-far (cons max max-so-far-so-far))\n\
    \                  (set! max-so-far-so-far (cdr max-so-far-so-far))\n        \
    \          (set! max-so-far-so-far (cons max max-so-far-so-far))\n           \
    \       (set! max-so-far-so-far (cdr max-so-far-so-far))\n                  (set!\
    \ max-so-far-so-far (cons max max-so-far-so-far))\n                  (set! max-so-far-so-far\
    \ (cdr max-so-far-so-far))\n                  (set! max-so-far-so-far (cons max\
    \ max-so-far-so-far))\n                  (set! max-so-far-so-far (cdr max-so-far-so-far))\n\
    \                  (set! max-so-far-so-far (cons max max-so-far-so-far))\n   \
    \               (set! max-so-far-so-far (cdr max-so-far-so-far))\n           \
    \       (set! max-so-far-so-far (cons max max-so-far-so-", "  (cond\n    [(empty?\
    \ arr) empty]\n    [(= k 0) (first arr)]\n    [else (max (rest arr) (- k 1))]))\n",
  "  (if (= k 0)\n      (list 0)\n      (let ([max (car arr)])\n        (if (< (car\
    \ arr) max)\n            (let ([new (car arr)])\n              (if (< (car arr)\
    \ max)\n                  (let ([new (car arr)])\n                    (if (< (car\
    \ arr) max)\n                        (let ([new (car arr)])\n                \
    \          (if (< (car arr) max)\n                              (let ([new (car\
    \ arr)])\n                                (if (< (car arr) max)\n            \
    \                        (let ([new (car arr)])\n                            \
    \          (if (< (car arr) max)\n                                          (let\
    \ ([new (car arr)])\n                                            (if (< (car arr)\
    \ max)\n                                                (let ([new (car arr)])\n\
    \                                                  (if (< (car arr) max)\n   \
    \                                                   (let ([new (car arr)])\n \
    \                                                       (if (< (car arr) max)\n\
    \                                                            (let ([new (car arr)])\n\
    \                                                              (if (< (car arr)\
    \ max)\n                                                                  (let\
    \ ([new (car arr)])\n                                                        \
    \            (if (< (car arr) max)\n                                         \
    \                               (let ([new (car arr)])\n                     \
    \                                                     (if (< (car arr) max)\n\
    \                                                                            \
    \  (let ([new (car arr)])\n                                                  \
    \                              (if (< (car arr) max)\n                       \
    \                                                             (let ([new (car\
    \ arr)])\n                                                                   \
    \                   (if (< (car arr) max)\n                                  \
    \                                                        (let ([new (car arr)])\n\
    \                                                                            \
    \                (if (< (car arr) max)\n                                     \
    \                                                           (let ([new (car arr)])\n\
    \                                                                            \
    \                      (if (< (car arr) max)\n                               \
    \                                                                       (let ([new\
    \ (car arr)])\n                                                              \
    \                                          (if (< (car arr) max)\n           \
    \                                                                            \
    \                     (let ([new (car arr)])\n                               \
    \                                                                            \
    \   (if (< (car arr) max)\n                                                  \
    \                                                                (let ([new (car\
    \ arr)])\n                                                                   \
    \                                                 (if (< (car arr) max)\n    \
    \                                                                            \
    \                                        (let ([new (car arr)])\n            \
    \                                                                            \
    \                                  (if (< (car arr) max)\n                   \
    \                                                                            \
    \                               (let ([new (car arr)])\n                     \
    \                                                                            \
    \                               (if (< (car arr) max)\n                      \
    \                                                                            \
    \                                  (let ([new (car arr)])\n                  \
    \                                                                            \
    \                                        (if (< (car arr) max)\n             \
    \                                                                            \
    \                                                 (let ([new (car arr)])\n   \
    \                                                                            \
    \                                                             (if (< (car arr)\
    \ max)", "  (if (= k 0)\n      (list 0)\n      (append (maximum (rest arr) (sub1\
    \ k)) (maximum (rest arr) (sub1 k))))))\n", "  (cond\n    [(empty? arr) empty]\n\
    \    [(= k 0) (first arr)]\n    [else (max (rest arr) (- k 1))]))\n", "  (if (=\
    \ k 0)\n      (list arr)\n      (append (maximum (rest arr) (sub1 k)) (maximum\
    \ (first arr) (sub1 k)))))\n", "  (cond\n    [(empty? arr) empty]\n    [(= k 0)\
    \ (first arr)]\n    [else (cons (max (rest arr) k) (maximum (rest arr) (sub1 k)))]))\n",
  "  (if (= k 0)\n      (list 0)\n      (let ([max (car arr)])\n        (if (> (car\
    \ arr) max)\n            (let ([new (car arr)])\n              (if (> (car arr)\
    \ max)\n                  (let ([new (car arr)])\n                    (if (> (car\
    \ arr) max)\n                        (let ([new (car arr)])\n                \
    \          (if (> (car arr) max)\n                              (let ([new (car\
    \ arr)])\n                                (if (> (car arr) max)\n            \
    \                        (let ([new (car arr)])\n                            \
    \          (if (> (car arr) max)\n                                          (let\
    \ ([new (car arr)])\n                                            (if (> (car arr)\
    \ max)\n                                                (let ([new (car arr)])\n\
    \                                                  (if (> (car arr) max)\n   \
    \                                                   (let ([new (car arr)])\n \
    \                                                       (if (> (car arr) max)\n\
    \                                                            (let ([new (car arr)])\n\
    \                                                              (if (> (car arr)\
    \ max)\n                                                                  (let\
    \ ([new (car arr)])\n                                                        \
    \            (if (> (car arr) max)\n                                         \
    \                               (let ([new (car arr)])\n                     \
    \                                                     (if (> (car arr) max)\n\
    \                                                                            \
    \  (let ([new (car arr)])\n                                                  \
    \                              (if (> (car arr) max)\n                       \
    \                                                             (let ([new (car\
    \ arr)])\n                                                                   \
    \                   (if (> (car arr) max)\n                                  \
    \                                                        (let ([new (car arr)])\n\
    \                                                                            \
    \                (if (> (car arr) max)\n                                     \
    \                                                           (let ([new (car arr)])\n\
    \                                                                            \
    \                      (if (> (car arr) max)\n                               \
    \                                                                       (let ([new\
    \ (car arr)])\n                                                              \
    \                                          (if (> (car arr) max)\n           \
    \                                                                            \
    \                     (let ([new (car arr)])\n                               \
    \                                                                            \
    \   (if (> (car arr) max)\n                                                  \
    \                                                                (let ([new (car\
    \ arr)])\n                                                                   \
    \                                                 (if (> (car arr) max)\n    \
    \                                                                            \
    \                                        (let ([new (car arr)])\n            \
    \                                                                            \
    \                                  (if (> (car arr) max)\n                   \
    \                                                                            \
    \                               (let ([new (car arr)])\n                     \
    \                                                                            \
    \                               (if (> (car arr) max)\n                      \
    \                                                                            \
    \                                  (let ([new (car arr)])\n                  \
    \                                                                            \
    \                                        (if (> (car arr) max)\n             \
    \                                                                            \
    \                                                 (let ([new (car arr)])\n   \
    \                                                                            \
    \                                                             (if (> (car arr)\
    \ max)", "  (if (= k 0)\n      (list arr)\n      (append (maximum (rest arr) (sub1\
    \ k)) (maximum (first arr) (sub1 k)))))\n", "  (if (= k 0)\n      (list 0)\n \
    \     (let ([head (first arr)])\n        (if (< head (first arr))\n          \
    \  (let ([tail (maximum (rest arr) (sub1 k)))]\n              (cons head tail))\n\
    \            (let ([tail (maximum (rest arr) (sub1 k)))]\n              (cons\
    \ head tail)))))) ; base case\n</code>\n<|/ a dscore=0 |>\n<| a tags=racket,scheme\
    \ |>\n<code>", "  (if (= k 0)\n      (list arr)\n      (append (maximum (rest\
    \ arr) (sub1 k)) (maximum (first arr) (sub1 k))))))\n", "  (if (= k 0)\n     \
    \ (list arr)\n      (let ([max-so-far (first arr)])\n        (if (null? (rest\
    \ arr))\n            (list max-so-far)\n            (let ([next (maximum (rest\
    \ arr) (sub1 k))]\n                  [max-so-far (cons (max max-so-far next) max-so-far)])\n\
    \              (if (= k 1)\n                  max-so-far\n                  (maximum-k\
    \ max-so-far next)))))))\n", "  (cond\n    [(empty? arr) empty]\n    [(= k 0)\
    \ (first arr)]\n    [else (cons (max (rest arr) k) (maximum (rest arr) (sub1 k)))]))\n",
  "  (if (= k 0)\n      (list 0)\n      (let ([max (first arr)])\n        (if (> max\
    \ 0)\n            (append (maximum (rest arr) (sub1 k)) (list max))\n        \
    \    (append (maximum (rest arr) (sub1 k)) (list max))))))\n", "  (if (= k 0)\n\
    \      (list arr)\n      (append (maximum (rest arr) (sub1 k)) (maximum (first\
    \ arr) (sub1 k))))))\n", "  (if (= k 0)\n      (list arr)\n      (append (maximum\
    \ (rest arr) (sub1 k)) (maximum (rest arr) (sub1 k)))))\n", "  (if (= k 0)\n \
    \     (list 0)\n      (let ([max (car arr)])\n        (if (> (car arr) max)\n\
    \            (let ([max (car arr)])\n              (if (> (car arr) max)\n   \
    \               (let ([max (car arr)])\n                    (if (> (car arr) max)\n\
    \                        (let ([max (car arr)])\n                          (if\
    \ (> (car arr) max)\n                              (let ([max (car arr)])\n  \
    \                              (if (> (car arr) max)\n                       \
    \             (let ([max (car arr)])\n                                      (if\
    \ (> (car arr) max)\n                                          (let ([max (car\
    \ arr)])\n                                            (if (> (car arr) max)\n\
    \                                                (let ([max (car arr)])\n    \
    \                                              (if (> (car arr) max)\n       \
    \                                               (let ([max (car arr)])\n     \
    \                                                   (if (> (car arr) max)\n  \
    \                                                          (let ([max (car arr)])\n\
    \                                                              (if (> (car arr)\
    \ max)\n                                                                  (let\
    \ ([max (car arr)])\n                                                        \
    \            (if (> (car arr) max)\n                                         \
    \                               (let ([max (car arr)])\n                     \
    \                                                     (if (> (car arr) max)\n\
    \                                                                            \
    \  (let ([max (car arr)])\n                                                  \
    \                              (if (> (car arr) max)\n                       \
    \                                                             (let ([max (car\
    \ arr)])\n                                                                   \
    \                   (if (> (car arr) max)\n                                  \
    \                                                        (let ([max (car arr)])\n\
    \                                                                            \
    \                (if (> (car arr) max)\n                                     \
    \                                                           (let ([max (car arr)])\n\
    \                                                                            \
    \                      (if (> (car arr) max)\n                               \
    \                                                                       (let ([max\
    \ (car arr)])\n                                                              \
    \                                          (if (> (car arr) max)\n           \
    \                                                                            \
    \                     (let ([max (car arr)])\n                               \
    \                                                                            \
    \   (if (> (car arr) max)\n                                                  \
    \                                                                (let ([max (car\
    \ arr)])\n                                                                   \
    \                                                 (if (> (car arr) max)\n    \
    \                                                                            \
    \                                        (let ([max (car arr)])\n            \
    \                                                                            \
    \                                  (if (> (car arr) max)\n                   \
    \                                                                            \
    \                               (let ([max (car arr)])\n                     \
    \                                                                            \
    \                               (if (> (car arr) max)\n                      \
    \                                                                            \
    \                                  (let ([max (car arr)])\n                  \
    \                                                                            \
    \                                        (if (> (car arr) max)\n             \
    \                                                                            \
    \                                               (let ([max (car arr)])\n     \
    \                                                                            \
    \                                                         (if (> (car arr) max)",
  "  (if (= k 0)\n      (list 0)\n      (let ([max-so-far (first arr)])\n        (if\
    \ (null? (rest arr))\n            (cons max-so-far (maximum (rest arr) (sub1 k)))\n\
    \            (let ([cur-max (first arr)])\n              (if (> (first arr) cur-max)\n\
    \                  (cons cur-max (maximum (rest arr) (sub1 k)))\n            \
    \      (cons max-so-far (maximum (rest arr) (sub1 k))))))))\n", "  (cond\n   \
    \ [(empty? arr) empty]\n    [(= k 0) (first arr)]\n    [else (cons (max (rest\
    \ arr)) (maximum (rest arr) (sub1 k)))]))\n", "  (if (= k 0)\n      (list arr)\n\
    \      (let ([max-so-far #f max-so-far-idx #f max-so-far-idx max-so-far-idx #f\
    \ max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx\
    \ max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx\
    \ #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx\
    \ max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx\
    \ #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx\
    \ max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx\
    \ #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx\
    \ max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx\
    \ #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx\
    \ max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx\
    \ #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx\
    \ max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx\
    \ #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx\
    \ max-so-far-idx #f max-so-far-idx max-so-", "  (if (= k 0)\n      (list arr)\n\
    \      (let ([max-so-far (first arr)])\n        (if (null? (rest arr))\n     \
    \       (list max-so-far)\n            (let ([max-so-far (first arr)])\n     \
    \         (if (> (first arr) max-so-far)\n                  (list max-so-far)\n\
    \                  (maximum (rest arr) (sub1 k))))))))\n", "  (cond\n    [(empty?\
    \ arr) (list 0)]\n    [(= k 0) (first arr)]\n    [else (append (maximum (rest\
    \ arr) (sub1 k)) (first arr))]\n  ))\n", "  (cond\n    [(empty? arr) empty]\n\
    \    [(= k 0) (first arr)]\n    [else (cons (max (rest arr) k) (maximum (rest\
    \ arr) (sub1 k)))]))\n", "  (if (= k 0)\n      (list arr)\n      (let ([max-so-far\
    \ (first arr)])\n        (if (null? (rest arr))\n            (list max-so-far)\n\
    \            (let ([cur (first arr)])\n              (if (> (first arr) max-so-far)\n\
    \                  (list max-so-far (first arr))\n                  (let ([next\
    \ (first arr)])\n                    (if (> (first arr) cur)\n               \
    \         (list cur next)\n                        (let ([next-next (first arr)])\n\
    \                          (if (> (first arr) next-next)\n                   \
    \           (list cur next next-next)\n                              (let ([next-next-next\
    \ (first arr)])\n                                (if (> (first arr) next-next-next)\n\
    \                                    (list cur next next-next next-next-next)\n\
    \                                    (let ([next-next-next-next (first arr)])\n\
    \                                      (if (> (first arr) next-next-next-next)\n\
    \                                          (list cur next next-next next-next-next\
    \ next-next-next)\n                                          (maximum (rest arr)\
    \ (sub1 k))))))))))))))))\n", "  (cond\n    [(empty? arr) (list '())]\n    [(=\
    \ k 0) (first arr)]\n    [else (append (maximum (rest arr) (- k 1))\n        \
    \          (list (first arr)))]))\n", "  (if (= k 0)\n      (list arr)\n     \
    \ (let ([max-so-far #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx\
    \ #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx\
    \ #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx\
    \ #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx\
    \ #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx\
    \ #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx\
    \ #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx\
    \ #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx\
    \ #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx\
    \ #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx\
    \ #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx\
    \ #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx #f max-so-far-idx\
    \ #f max-so-far-idx #f max-so-far-idx #f max-so-far-", "  (if (= k 0)\n      (list\
    \ arr)\n      (append (maximum (rest arr) (sub1 k)) (maximum (rest arr) (sub1\
    \ k)))))\n", "  (cond\n    [(empty? arr) empty]\n    [(= k 0) (first arr)]\n \
    \   [else (max (rest arr) (- k 1))]))\n", "  (if (= k 0)\n      (list arr)\n \
    \     (let ([max (car arr)])\n        (if (> (car arr) max)\n            (let\
    \ ([max (car arr)])\n              (if (> (car arr) max)\n                  (let\
    \ ([max (car arr)])\n                    (if (> (car arr) max)\n             \
    \           (let ([max (car arr)])\n                          (if (> (car arr)\
    \ max)\n                              (let ([max (car arr)])\n               \
    \                 (if (> (car arr) max)\n                                    (let\
    \ ([max (car arr)])\n                                      (if (> (car arr) max)\n\
    \                                          (let ([max (car arr)])\n          \
    \                                  (if (> (car arr) max)\n                   \
    \                             (let ([max (car arr)])\n                       \
    \                           (if (> (car arr) max)\n                          \
    \                            (let ([max (car arr)])\n                        \
    \                                (if (> (car arr) max)\n                     \
    \                                       (let ([max (car arr)])\n             \
    \                                                 (if (> (car arr) max)\n    \
    \                                                              (let ([max (car\
    \ arr)])\n                                                                   \
    \ (if (> (car arr) max)\n                                                    \
    \                    (let ([max (car arr)])\n                                \
    \                                          (if (> (car arr) max)\n           \
    \                                                                   (let ([max\
    \ (car arr)])\n                                                              \
    \                  (if (> (car arr) max)\n                                   \
    \                                                 (let ([max (car arr)])\n   \
    \                                                                            \
    \       (if (> (car arr) max)\n                                              \
    \                                            (let ([max (car arr)])\n        \
    \                                                                            \
    \        (if (> (car arr) max)\n                                             \
    \                                                   (let ([max (car arr)])\n \
    \                                                                            \
    \                     (if (> (car arr) max)\n                                \
    \                                                                      (let ([max\
    \ (car arr)])\n                                                              \
    \                                          (if (> (car arr) max)\n           \
    \                                                                            \
    \                     (let ([max (car arr)])\n                               \
    \                                                                            \
    \   (if (> (car arr) max)\n                                                  \
    \                                                                (let ([max (car\
    \ arr)])\n                                                                   \
    \                                                 (if (> (car arr) max)\n    \
    \                                                                            \
    \                                        (let ([max (car arr)])\n            \
    \                                                                            \
    \                                  (if (> (car arr) max)\n                   \
    \                                                                            \
    \                               (let ([max (car arr)])\n                     \
    \                                                                            \
    \                               (if (> (car arr) max)\n                      \
    \                                                                            \
    \                                  (let ([max (car arr)])\n                  \
    \                                                                            \
    \                                        (if (> (car arr) max)\n             \
    \                                                                            \
    \                                                 (let ([max (car arr)])\n   \
    \                                                                            \
    \                                                             (if (> (car arr)\
    \ max)", "  (cond\n    [(empty? arr) empty]\n    [(= k 0) (first arr)]\n    [else\
    \ (max (rest arr) (- k 1))]))\n", "  (if (= k 0)\n      (list arr)\n      (append\
    \ (maximum (rest arr) (sub1 k)) (maximum (first arr) (sub1 k)))))\n", "  (if (=\
    \ k 0)\n      (list 0)\n      (let ([max-so-far 0])\n        (if (null? (rest\
    \ arr))\n            (cons (car arr) max-so-far)\n            (let ([cur-max (car\
    \ arr)])\n              (if (> (car arr) cur-max)\n                  (cons cur-max\
    \ (maximum (rest arr) (sub1 k)))\n                  (maximum (rest arr) (sub1\
    \ k))))))))\n", "  (if (= k 0)\n      (list 0)\n      (let ([max-so-far 0])\n\
    \        (let loop ([i 0])\n          (cond [(empty? arr) (reverse (list max-so-far))]\n\
    \                [else (let ([cur (car arr)])\n                       (cond [(>\
    \ cur max-so-far) (set! max-so-far cur)]\n                             [else (loop\
    \ (add1 i))]))]))))\n", "  (if (= k 0)\n      (list 0)\n      (let ([max (first\
    \ arr)])\n        (if (> (first arr) max)\n            (set! max (first arr))\n\
    \            (set! arr (rest arr))\n            (maximum (rest arr) (sub1 k)))))\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "  (if (= k 0)\n      (list\
    \ arr)\n      (let ([max-so-far #f (max-so-far-so-far #f (max-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far #f (max-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far",
  "  (cond\n    [(empty? arr) empty]\n    [(= k 0) (first arr)]\n    [else (cons (max\
    \ (rest arr)) (maximum (rest arr) (sub1 k)))]))\n", "  (if (= k 0)\n      (list\
    \ 0)\n      (let ([max (car arr)])\n        (if (> (car arr) max)\n          \
    \  (let ([max (car arr)])\n              (if (> (car arr) max)\n             \
    \     (let ([max (car arr)])\n                    (if (> (car arr) max)\n    \
    \                    (let ([max (car arr)])\n                          (if (>\
    \ (car arr) max)\n                              (let ([max (car arr)])\n     \
    \                           (if (> (car arr) max)\n                          \
    \          (let ([max (car arr)])\n                                      (if (>\
    \ (car arr) max)\n                                          (let ([max (car arr)])\n\
    \                                            (if (> (car arr) max)\n         \
    \                                       (let ([max (car arr)])\n             \
    \                                     (if (> (car arr) max)\n                \
    \                                      (let ([max (car arr)])\n              \
    \                                          (if (> (car arr) max)\n           \
    \                                                 (let ([max (car arr)])\n   \
    \                                                           (if (> (car arr) max)\n\
    \                                                                  (let ([max\
    \ (car arr)])\n                                                              \
    \      (if (> (car arr) max)\n                                               \
    \                         (let ([max (car arr)])\n                           \
    \                                               (if (> (car arr) max)\n      \
    \                                                                        (let\
    \ ([max (car arr)])\n                                                        \
    \                        (if (> (car arr) max)\n                             \
    \                                                       (let ([max (car arr)])\n\
    \                                                                            \
    \          (if (> (car arr) max)\n                                           \
    \                                               (let ([max (car arr)])\n     \
    \                                                                            \
    \           (if (> (car arr) max)\n                                          \
    \                                                      (let ([max (car arr)])\n\
    \                                                                            \
    \                      (if (> (car arr) max)\n                               \
    \                                                                       (let ([max\
    \ (car arr)])\n                                                              \
    \                                          (if (> (car arr) max)\n           \
    \                                                                            \
    \                     (let ([max (car arr)])\n                               \
    \                                                                            \
    \   (if (> (car arr) max)\n                                                  \
    \                                                                (let ([max (car\
    \ arr)])\n                                                                   \
    \                                                 (if (> (car arr) max)\n    \
    \                                                                            \
    \                                        (let ([max (car arr)])\n            \
    \                                                                            \
    \                                  (if (> (car arr) max)\n                   \
    \                                                                            \
    \                               (let ([max (car arr)])\n                     \
    \                                                                            \
    \                               (if (> (car arr) max)\n                      \
    \                                                                            \
    \                                  (let ([max (car arr)])\n                  \
    \                                                                            \
    \                                        (if (> (car arr) max)\n             \
    \                                                                            \
    \                                                 (let ([max (car arr)])\n   \
    \                                                                            \
    \                                                             (if (> (car arr)\
    \ max)", "  (if (= k 0)\n      (list arr)\n      (let ([max (car arr)])\n    \
    \    (if (> (car arr) max)\n            (cons max arr)\n            (maximum (cdr\
    \ arr) (sub1 k))))))\n", "  (if (= k 0)\n      (list 0)\n      (let ([max-so-far\
    \ 0])\n        (let loop ([arr arr]\n                   [k k]\n              \
    \     [max-so-far max-so-far])\n          (cond [(empty? arr) (list max-so-far)]\n\
    \                [else (loop (rest arr)\n                             (- k 1)\n\
    \                             (cond [(> max-so-far arr) (list max-so-far)]\n \
    \                                  [else (cons max-so-far (loop (rest arr)\n \
    \                                                            (- k 1)\n       \
    \                                                      max-so-far))]))]))))\n",
  "  (if (= k 0)\n      (list arr)\n      (let ([max-so-far #f (max-so-far-so-far\
    \ #f (max-so-far-so-far-so-far #f (max-so-far-so-far-so-far-so-far #f (max-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-",
  "  (if (= k 0)\n      (list arr)\n      (append (sort (append (take arr (- k 1))\n\
    \                           (take arr (- k 1)))\n                    >\n     \
    \               (lambda (x y)\n                      (< (first x) y)\n       \
    \               (> (first x) y))\n                    (take arr (- k 1))\n   \
    \                 (take arr (- k 1)))))\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    Thank you for your answer. I tried your code, but I got this error: \"(sort (append\
    \ (take arr (- k 1)) (take arr (- k 1))) >\n  (lambda (x y) (< (first x) y) (>\
    \ (first x) y))\n  (take arr (- k 1))\n  (take arr (- k 1))))\n  ; in: sort (append\
    \ (take arr (- k 1)) (take arr (- k 1))) >\n  ;     (lambda (x y) (< (first x)\
    \ y) (> (first x) y))\n  ;   (take arr (- k 1))\n  ;   (take arr (- k 1))))\n\
    \  ; \n  ; caught STYLE-WARNING:\n  ;   this variable is bound but not used\n\
    \  ; \n  ; compilation unit finished\n  ;   Undefined variable: arr\n  ;   Undefined\
    \ variable: k\n  ;   Undefined variable: x\n  ;   Undefined variable: y\n  ; \
    \  Undefined variable: arr\n  ;   Undefined variable: k\n  ;   Undefined variable:\
    \ x\n  ;   Undefined variable: y\n  ;   Undefined variable: arr\n  ;   Undefined\
    \ variable: k\n  ;   Undefined variable: x\n  ;   Undefined variable: y\n  ; \
    \  Undefined variable: arr\n  ;   Undefined variable: k\n  ;   Undefined variable:\
    \ x\n  ;   Undefined variable: y\n  ;   Undefined variable: arr\n  ;   Undefined\
    \ variable: k\n  ;   Undefined variable: x\n  ;   Undefined variable: y\n  ; \
    \  Undefined variable: arr\n  ;   Undefined variable: k\n  ;   Undefined variable:\
    \ x\n  ;   Undefined variable: y\n  ;   Undefined variable: arr\n  ;   Undefined\
    \ variable: k\n  ;   Undefined variable: x\n  ;   Undefined variable: y\n  ; \
    \  Undefined variable: arr\n  ", "  (if (= k 0)\n      (list 0)\n      (let ([max\
    \ (car arr)])\n        (if (> (car arr) max)\n            (let ([max (car arr)])\n\
    \              (if (> (car arr) max)\n                  (let ([max (car arr)])\n\
    \                    (if (> (car arr) max)\n                        (let ([max\
    \ (car arr)])\n                          (if (> (car arr) max)\n             \
    \                 (let ([max (car arr)])\n                                (if\
    \ (> (car arr) max)\n                                    (let ([max (car arr)])\n\
    \                                      (if (> (car arr) max)\n               \
    \                           (let ([max (car arr)])\n                         \
    \                   (if (> (car arr) max)\n                                  \
    \              (let ([max (car arr)])\n                                      \
    \            (if (> (car arr) max)\n                                         \
    \             (let ([max (car arr)])\n                                       \
    \                 (if (> (car arr) max)\n                                    \
    \                        (let ([max (car arr)])\n                            \
    \                                  (if (> (car arr) max)\n                   \
    \                                               (let ([max (car arr)])\n     \
    \                                                               (if (> (car arr)\
    \ max)\n                                                                     \
    \   (let ([max (car arr)])\n                                                 \
    \                         (if (> (car arr) max)\n                            \
    \                                                  (let ([max (car arr)])\n  \
    \                                                                            \
    \  (if (> (car arr) max)\n                                                   \
    \                                 (let ([max (car arr)])\n                   \
    \                                                                   (if (> (car\
    \ arr) max)\n                                                                \
    \                          (let ([max (car arr)])\n                          \
    \                                                                  (if (> (car\
    \ arr) max)\n                                                                \
    \                                (let ([max (car arr)])\n                    \
    \                                                                            \
    \  (if (> (car arr) max)\n                                                   \
    \                                                   (let ([max (car arr)])\n \
    \                                                                            \
    \                           (if (> (car arr) max)\n                          \
    \                                                                            \
    \      (let ([max (car arr)])\n                                              \
    \                                                                (if (> (car arr)\
    \ max)\n                                                                     \
    \                                             (let ([max (car arr)])\n       \
    \                                                                            \
    \                                 (if (> (car arr) max)\n                    \
    \                                                                            \
    \                        (let ([max (car arr)])\n                            \
    \                                                                            \
    \                  (if (> (car arr) max)\n                                   \
    \                                                                            \
    \               (let ([max (car arr)])\n                                     \
    \                                                                            \
    \               (if (> (car arr) max)\n                                      \
    \                                                                            \
    \                  (let ([max (car arr)])\n                                  \
    \                                                                            \
    \                        (if (> (car arr) max)\n                             \
    \                                                                            \
    \                                 (let ([max (car arr)])\n                   \
    \                                                                            \
    \                                             (if (> (car arr) max)", "  (cond\n\
    \    [(empty? arr) empty]\n    [(= k 0) (first arr)]\n    [else (max (rest arr)\
    \ (- k 1))]))\n", "  (if (= k 0)\n      (list 0)\n      (let ([max-so-far (first\
    \ arr)])\n        (if (> (first arr) max-so-far)\n            (let ([max-so-far\
    \ (first arr)])\n              (cons (first arr) (maximum (rest arr) (sub1 k))))\n\
    \            (maximum (rest arr) (sub1 k))))))\n", "  (cond\n    [(empty? arr)\
    \ empty]\n    [(= k 0) (first arr)]\n    [else (cons (max (rest arr) (- k 1))\
    \ \n                (maximum (rest arr) (- k 1))))]))\n", "  (if (= k 0)\n   \
    \   (list arr)\n      (let ([max-so-far #f max-so-far-idx #f max-so-far-idx max-so-far-idx\
    \ #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx\
    \ max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx\
    \ #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx\
    \ max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx\
    \ #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx\
    \ max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx\
    \ #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx\
    \ max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx\
    \ #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx\
    \ max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx\
    \ #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx\
    \ max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx\
    \ #f max-so-far-idx max-so-far-idx #f max-so-far-idx max-so-far-idx #f max-so-far-idx\
    \ max-so-far-idx #f max-so-far-idx max-so-", "  (if (= k 0)\n      (list arr)\n\
    \      (append (maximum (rest arr) (sub1 k)) (maximum (first arr) (sub1 k))))))\n",
  "  (if (= k 0)\n      (list arr)\n      (append (maximum (rest arr) (sub1 k)) (maximum\
    \ (first arr) (sub1 k))))))\n", "  (if (= k 0)\n      (list arr)\n      (let ([max\
    \ (car arr)])\n        (if (> (car arr) max)\n            (let ([max (car arr)])\n\
    \              (if (> (car arr) max)\n                  (let ([max (car arr)])\n\
    \                    (if (> (car arr) max)\n                        (let ([max\
    \ (car arr)])\n                          (if (> (car arr) max)\n             \
    \                 (let ([max (car arr)])\n                                (if\
    \ (> (car arr) max)\n                                    (let ([max (car arr)])\n\
    \                                      (if (> (car arr) max)\n               \
    \                           (let ([max (car arr)])\n                         \
    \                   (if (> (car arr) max)\n                                  \
    \              (let ([max (car arr)])\n                                      \
    \            (if (> (car arr) max)\n                                         \
    \             (let ([max (car arr)])\n                                       \
    \                 (if (> (car arr) max)\n                                    \
    \                        (let ([max (car arr)])\n                            \
    \                                  (if (> (car arr) max)\n                   \
    \                                               (let ([max (car arr)])\n     \
    \                                                               (if (> (car arr)\
    \ max)\n                                                                     \
    \   (let ([max (car arr)])\n                                                 \
    \                         (if (> (car arr) max)\n                            \
    \                                                  (let ([max (car arr)])\n  \
    \                                                                            \
    \  (if (> (car arr) max)\n                                                   \
    \                                 (let ([max (car arr)])\n                   \
    \                                                                   (if (> (car\
    \ arr) max)\n                                                                \
    \                          (let ([max (car arr)])\n                          \
    \                                                                  (if (> (car\
    \ arr) max)\n                                                                \
    \                                (let ([max (car arr)])\n                    \
    \                                                                            \
    \  (if (> (car arr) max)\n                                                   \
    \                                                   (let ([max (car arr)])\n \
    \                                                                            \
    \                           (if (> (car arr) max)\n                          \
    \                                                                            \
    \      (let ([max (car arr)])\n                                              \
    \                                                                (if (> (car arr)\
    \ max)\n                                                                     \
    \                                             (let ([max (car arr)])\n       \
    \                                                                            \
    \                                 (if (> (car arr) max)\n                    \
    \                                                                            \
    \                        (let ([max (car arr)])\n                            \
    \                                                                            \
    \                  (if (> (car arr) max)\n                                   \
    \                                                                            \
    \               (let ([max (car arr)])\n                                     \
    \                                                                            \
    \               (if (> (car arr) max)\n                                      \
    \                                                                            \
    \                  (let ([max (car arr)])\n                                  \
    \                                                                            \
    \                        (if (> (car arr) max)\n                             \
    \                                                                            \
    \                                 (let ([max (car arr)])\n                   \
    \                                                                            \
    \                                             (if (> (car arr) max)", "  (if (=\
    \ k 0)\n      (list arr)\n      (let ([max (car arr)])\n        (if (< (car arr)\
    \ max)\n            (cons max (maximum (cdr arr) (sub1 k)))\n            (maximum\
    \ (cdr arr) (sub1 k))))))\n", "  (if (= k 0)\n      (list 0)\n      (let ([max\
    \ (first arr)])\n        (if (null? (rest arr))\n            (list max)\n    \
    \        (let ([next (maximum (rest arr) (sub1 k))]\n                  [max (if\
    \ (> (first arr) max) max next)])\n              (cons max max))))))\n", "  (if\
    \ (= k 0)\n      (list arr)\n      (let ([max (car arr)])\n        (if (> (car\
    \ arr) max)\n            (let ([max (car arr)])\n              (if (> (car arr)\
    \ max)\n                  (let ([max (car arr)])\n                    (if (> (car\
    \ arr) max)\n                        (let ([max (car arr)])\n                \
    \          (if (> (car arr) max)\n                              (let ([max (car\
    \ arr)])\n                                (if (> (car arr) max)\n            \
    \                        (let ([max (car arr)])\n                            \
    \          (if (> (car arr) max)\n                                          (let\
    \ ([max (car arr)])\n                                            (if (> (car arr)\
    \ max)\n                                                (let ([max (car arr)])\n\
    \                                                  (if (> (car arr) max)\n   \
    \                                                   (let ([max (car arr)])\n \
    \                                                       (if (> (car arr) max)\n\
    \                                                            (let ([max (car arr)])\n\
    \                                                              (if (> (car arr)\
    \ max)\n                                                                  (let\
    \ ([max (car arr)])\n                                                        \
    \            (if (> (car arr) max)\n                                         \
    \                               (let ([max (car arr)])\n                     \
    \                                                     (if (> (car arr) max)\n\
    \                                                                            \
    \  (let ([max (car arr)])\n                                                  \
    \                              (if (> (car arr) max)\n                       \
    \                                                             (let ([max (car\
    \ arr)])\n                                                                   \
    \                   (if (> (car arr) max)\n                                  \
    \                                                        (let ([max (car arr)])\n\
    \                                                                            \
    \                (if (> (car arr) max)\n                                     \
    \                                                           (let ([max (car arr)])\n\
    \                                                                            \
    \                      (if (> (car arr) max)\n                               \
    \                                                                       (let ([max\
    \ (car arr)])\n                                                              \
    \                                          (if (> (car arr) max)\n           \
    \                                                                            \
    \                     (let ([max (car arr)])\n                               \
    \                                                                            \
    \   (if (> (car arr) max)\n                                                  \
    \                                                                (let ([max (car\
    \ arr)])\n                                                                   \
    \                                                 (if (> (car arr) max)\n    \
    \                                                                            \
    \                                        (let ([max (car arr)])\n            \
    \                                                                            \
    \                                  (if (> (car arr) max)\n                   \
    \                                                                            \
    \                               (let ([max (car arr)])\n                     \
    \                                                                            \
    \                               (if (> (car arr) max)\n                      \
    \                                                                            \
    \                                  (let ([max (car arr)])\n                  \
    \                                                                            \
    \                                        (if (> (car arr) max)\n             \
    \                                                                            \
    \                                               (let ([max (car arr)])\n     \
    \                                                                            \
    \                                                         (if (> (car arr) max)",
  "  (cond\n    [(empty? arr) empty]\n    [(= k 0) (first arr)]\n    [else (cons (max\
    \ (rest arr) k) (maximum (rest arr) (sub1 k)))]))\n", "  (cond\n    [(empty? arr)\
    \ empty]\n    [(= k 0) (first arr)]\n    [else (cons (max (rest arr) (- k 1))\
    \ \n                (maximum (rest arr) (- k 1))))]))\n", "  (if (= k 0)\n   \
    \   (list arr)\n      (let ([max (car arr)])\n        (if (< (length arr) k)\n\
    \            (append (maximum (cdr arr) (sub1 k)) (list max))\n            (append\
    \ (maximum (cdr arr) (sub1 k)) (list max))))))\n", "  (cond\n    [(empty? arr)\
    \ empty]\n    [(= k 0) (first arr)]\n    [else (cons (max (rest arr) k) (maximum\
    \ (rest arr) (sub1 k)))]))\n", "  (if (= k 0)\n      (list arr)\n      (append\
    \ (maximum (rest arr) (sub1 k)) (maximum (rest arr) (sub1 k))))))\n", "  (if (=\
    \ k 0)\n      (list arr)\n      (let ([max (car arr)])\n        (if (> (car arr)\
    \ max)\n            (let ([max (car arr)])\n              (if (> (car arr) max)\n\
    \                  (let ([max (car arr)])\n                    (if (> (car arr)\
    \ max)\n                        (let ([max (car arr)])\n                     \
    \     (if (> (car arr) max)\n                              (let ([max (car arr)])\n\
    \                                (if (> (car arr) max)\n                     \
    \               (let ([max (car arr)])\n                                     \
    \ (if (> (car arr) max)\n                                          (let ([max\
    \ (car arr)])\n                                            (if (> (car arr) max)\n\
    \                                                (let ([max (car arr)])\n    \
    \                                              (if (> (car arr) max)\n       \
    \                                               (let ([max (car arr)])\n     \
    \                                                   (if (> (car arr) max)\n  \
    \                                                          (let ([max (car arr)])\n\
    \                                                              (if (> (car arr)\
    \ max)\n                                                                  (let\
    \ ([max (car arr)])\n                                                        \
    \            (if (> (car arr) max)\n                                         \
    \                               (let ([max (car arr)])\n                     \
    \                                                     (if (> (car arr) max)\n\
    \                                                                            \
    \  (let ([max (car arr)])\n                                                  \
    \                              (if (> (car arr) max)\n                       \
    \                                                             (let ([max (car\
    \ arr)])\n                                                                   \
    \                   (if (> (car arr) max)\n                                  \
    \                                                        (let ([max (car arr)])\n\
    \                                                                            \
    \                (if (> (car arr) max)\n                                     \
    \                                                           (let ([max (car arr)])\n\
    \                                                                            \
    \                      (if (> (car arr) max)\n                               \
    \                                                                       (let ([max\
    \ (car arr)])\n                                                              \
    \                                          (if (> (car arr) max)\n           \
    \                                                                            \
    \                     (let ([max (car arr)])\n                               \
    \                                                                            \
    \   (if (> (car arr) max)\n                                                  \
    \                                                                (let ([max (car\
    \ arr)])\n                                                                   \
    \                                                 (if (> (car arr) max)\n    \
    \                                                                            \
    \                                        (let ([max (car arr)])\n            \
    \                                                                            \
    \                                  (if (> (car arr) max)\n                   \
    \                                                                            \
    \                               (let ([max (car arr)])\n                     \
    \                                                                            \
    \                               (if (> (car arr) max)\n                      \
    \                                                                            \
    \                                  (let ([max (car arr)])\n                  \
    \                                                                            \
    \                                        (if (> (car arr) max)\n             \
    \                                                                            \
    \                                                 (let ([max (car arr)])\n   \
    \                                                                            \
    \                                                             (if (> (car arr)\
    \ max)", "  (if (= k 0)\n      (list arr)\n      (let ([max-so-far #f (max-so-far-so-far\
    \ (car arr) k)]\n            [max-so-far-so-far #f (max-so-far-so-far (cdr arr)\
    \ k)]\n            [max-so-far-so-far-so-far #f (max-so-far-so-far-so-far (car\
    \ arr) k)]\n            [max-so-far-so-far-so-far-so-far #f (max-so-far-so-far-so-far-so-far\
    \ (cdr arr) k)])\n        (if (or (< max-so-far max-so-far-so-far) (< max-so-far-so-far\
    \ max-so-far-so-far-so-far))\n            (cons max-so-far max-so-far-so-far)\n\
    \            (cons max-so-far-so-far max-so-far-so-far-so-far)))))\n", "  (if\
    \ (= k 0)\n      (list arr)\n      (append (maximum (rest arr) (sub1 k)) (maximum\
    \ (first arr) (sub1 k))))))\n", "  (if (= k 0)\n      (list arr)\n      (let ([head\
    \ (first arr)])\n        (if (> (first arr) (second arr))\n            (append\
    \ (maximum (rest arr) (sub1 k)) (list head))\n            (append (maximum (rest\
    \ arr) (sub1 k)) (list head))))))\n", "  (cond\n    [(empty? arr) empty]\n   \
    \ [(= k 0) (first arr)]\n    [else (append (maximum (rest arr) (sub1 k)) (first\
    \ arr))]))\n", "  (cond\n    [(empty? arr) empty]\n    [(= k 0) (first arr)]\n\
    \    [else (max (rest arr) (- k 1))]))\n", "  (if (= k 0)\n      (list 0)\n  \
    \    (let ([max (car arr)])\n        (if (> (car arr) max)\n            (cons\
    \ max \n                  (maximum (cdr arr) (sub1 k)))\n            (maximum\
    \ (cdr arr) (sub1 k))))))\n", "  (if (= k 0)\n      (list 0)\n      (let ([max\
    \ (car arr)])\n        (if (> (car arr) max)\n            (cons max arr)\n   \
    \         (maximum (cdr arr) (sub1 k))))))\n", "  (if (= k 0)\n      (list arr)\n\
    \      (append (maximum (rest arr) (sub1 k)) (maximum (first arr) (sub1 k))))))\n",
  "  (if (= k 0)\n      (list 0)\n      (let ([max (car arr)])\n        (if (> (car\
    \ arr) max)\n            (cons max (maximum (cdr arr) (sub1 k)))\n           \
    \ (maximum (cdr arr) (sub1 k))))))\n", "  (if (= k 0)\n      (list arr)\n    \
    \  (let ([max-so-far #f (max-so-far-so-far (car arr) k)]\n            [max-so-far-so-far\
    \ (car max-so-far)]\n            [max-so-far-so-far-so-far (car max-so-far-so-far)]\n\
    \            [max-so-far-so-far-so-far-so-far (car max-so-far-so-far-so-far)])\n\
    \        (if (< k 1)\n            (if (> max-so-far max-so-far-so-far)\n     \
    \           (cons max-so-far max-so-far-so-far)\n                (maximum (cdr\
    \ arr) (sub1 k)))\n            (if (> max-so-far-so-far-so-far)\n            \
    \    (cons max-so-far-so-far max-so-far-so-far-so-far)\n                (maximum\
    \ (cdr arr) (sub1 k)))))))\n", "  (if (= k 0)\n      (list arr)\n      (append\
    \ (maximum (rest arr) (sub1 k)) (maximum (first arr) (sub1 k)))))\n", "  (cond\n\
    \    [(empty? arr) empty]\n    [(= k 0) (first arr)]\n    [else (max (rest arr)\
    \ (- k 1))]))\n", "  (if (= k 0)\n      (list 0)\n      (let ([max-so-far 0])\n\
    \        (let loop ([i 0])\n          (if (< i k)\n              (loop (+ i 1))\n\
    \              (if (< (car arr) max-so-far)\n                  (loop (+ i 1))\n\
    \                  (loop (+ i 1))\n                  (cons (car arr) (loop (+\
    \ i 1)))))))\n    )\n  )\n)\n", "  (cond\n    [(empty? arr) (list 0)]\n    [(=\
    \ k 0) (first arr)]\n    [else (append (maximum (rest arr) (sub1 k)) (first arr))]\n\
    \  ))\n", "  (if (= k 0)\n      (list 0)\n      (append (maximum (rest arr) (sub1\
    \ k)) (maximum (rest arr) (sub1 k))))\n  )\n", "  (if (= k 0)\n      (list 0)\n\
    \      (let ([max-so-far 0])\n        (if (null? arr)\n            (list 0)\n\
    \            (let ([cur (car arr)])\n              (if (> cur max-so-far)\n  \
    \                (list cur)\n                  (let ([new-so-far (+ max-so-far\
    \ cur)])\n                    (if (= new-so-far k)\n                        (list\
    \ new-so-far)\n                        (let ([new (maximum (cdr arr) (k - 1))])\n\
    \                          (cons cur new))))))))))\n", "  (if (= k 0)\n      (list\
    \ 0)\n      (let ([max-so-far 0])\n        (let loop ((arr (reverse arr))\n  \
    \                 (k k)\n                   (max-so-far max-so-far))\n       \
    \   (cond ((null? arr) (list max-so-far))\n                ((= k 1)\n        \
    \         (cons (car arr) max-so-far))\n                (else (loop (cdr arr)\
    \ (sub1 k) (max max-so-far car)))))))\n", "  (if (= k 0)\n      (list arr)\n \
    \     (append (maximum (rest arr) (sub1 k)) (maximum (first arr) (sub1 k))))))\n",
  "  (if (= k 0)\n      (list arr)\n      (let ([max (car arr)])\n        (if (> (car\
    \ arr) max)\n            (cons max arr)\n            (maximum (cdr arr) (sub1\
    \ k))))))\n", "  (cond\n    [(empty? arr) empty]\n    [(= k 0) (first arr)]\n\
    \    [else (max (rest arr) (- k 1))]))\n", "  (if (= k 0)\n      (list 0)\n  \
    \    (let ([max-so-far 0])\n        (let loop ([i 0] [arr arr] [k k])\n      \
    \    (cond [(empty? arr) (reverse (list max-so-far))]\n                [else (let\
    \ ([curr (car arr)])\n                       (if (> curr max-so-far)\n       \
    \                    (set! max-so-far curr)\n                           (loop\
    \ (add1 i) (sub1 arr) (sub1 k)))]\n                [else (loop (add1 i) (sub1\
    \ arr) (sub1 k))])))))\n", "  (if (= k 0)\n      (list arr)\n      (append (maximum\
    \ (rest arr) (sub1 k)) (maximum (first arr) (sub1 k))))))\n", "  (if (= k 0)\n\
    \      (list arr)\n      (append (sort (append (subseq arr (- k 1))\n        \
    \                  (subseq arr (- k 1))\n                          (subseq arr\
    \ (- k 1))\n                          (subseq arr (- k 1))\n                 \
    \         (subseq arr (- k 1))\n                          (subseq arr (- k 1))\n\
    \                          (subseq arr (- k 1))\n                          (subseq\
    \ arr (- k 1))\n                          (subseq arr (- k 1))\n             \
    \             (subseq arr (- k 1))\n                          (subseq arr (- k\
    \ 1))\n                          (subseq arr (- k 1))\n                      \
    \    (subseq arr (- k 1))\n                          (subseq arr (- k 1))\n  \
    \                        (subseq arr (- k 1))\n                          (subseq\
    \ arr (- k 1))\n                          (subseq arr (- k 1))\n             \
    \             (subseq arr (- k 1))\n                          (subseq arr (- k\
    \ 1))\n                          (subseq arr (- k 1))\n                      \
    \    (subseq arr (- k 1))\n                          (subseq arr (- k 1))\n  \
    \                        (subseq arr (- k 1))\n                          (subseq\
    \ arr (- k 1))\n                          (subseq arr (- k 1))\n             \
    \             (subseq arr (- k 1))\n                          (subseq arr (- k\
    \ 1))\n                          (subseq arr (- k 1))\n                      \
    \    (subseq arr (- k 1))\n                          (subseq arr (- k 1))\n  \
    \                        (subseq arr (- k 1))\n                          (subseq\
    \ arr (- k 1))\n                          (subseq arr (- k 1))\n             \
    \             (subseq arr (- k 1))\n                          (subseq arr (- k\
    \ 1))\n                          (subseq arr (- k 1))\n                      \
    \    (subseq arr (- k 1))\n                          (subseq arr (- k 1))\n  \
    \                        (subseq arr (- k 1))\n                          (subseq\
    \ arr (- k 1))\n                          (subseq arr (- k 1))\n             \
    \             (subseq arr (- k 1))\n                          (subseq arr (- k\
    \ 1))\n                          (subseq arr (- k 1))\n                      \
    \    (subseq arr (- k 1))\n                          (subseq arr (- k 1))\n  \
    \                        (subseq arr (- k 1))\n                          (subseq\
    \ arr (- k 1))\n                          (subseq arr (- k 1))\n             \
    \             (subseq arr (- ", "  (if (= k 0)\n      (list arr)\n      (append\
    \ (maximum (rest arr) (sub1 k)) (maximum (rest arr) (sub1 k))))\n  )\n", "  (if\
    \ (= k 0)\n      (list 0)\n      (let ([max (car arr)])\n        (if (> (car arr)\
    \ max)\n            (let ([max (car arr)])\n              (if (> (car arr) max)\n\
    \                  (let ([max (car arr)])\n                    (if (> (car arr)\
    \ max)\n                        (let ([max (car arr)])\n                     \
    \     (if (> (car arr) max)\n                              (let ([max (car arr)])\n\
    \                                (if (> (car arr) max)\n                     \
    \               (let ([max (car arr)])\n                                     \
    \ (if (> (car arr) max)\n                                          (let ([max\
    \ (car arr)])\n                                            (if (> (car arr) max)\n\
    \                                                (let ([max (car arr)])\n    \
    \                                              (if (> (car arr) max)\n       \
    \                                               (let ([max (car arr)])\n     \
    \                                                   (if (> (car arr) max)\n  \
    \                                                          (let ([max (car arr)])\n\
    \                                                              (if (> (car arr)\
    \ max)\n                                                                  (let\
    \ ([max (car arr)])\n                                                        \
    \            (if (> (car arr) max)\n                                         \
    \                               (let ([max (car arr)])\n                     \
    \                                                     (if (> (car arr) max)\n\
    \                                                                            \
    \  (let ([max (car arr)])\n                                                  \
    \                              (if (> (car arr) max)\n                       \
    \                                                             (let ([max (car\
    \ arr)])\n                                                                   \
    \                   (if (> (car arr) max)\n                                  \
    \                                                        (let ([max (car arr)])\n\
    \                                                                            \
    \                (if (> (car arr) max)\n                                     \
    \                                                           (let ([max (car arr)])\n\
    \                                                                            \
    \                      (if (> (car arr) max)\n                               \
    \                                                                       (let ([max\
    \ (car arr)])\n                                                              \
    \                                          (if (> (car arr) max)\n           \
    \                                                                            \
    \                     (let ([max (car arr)])\n                               \
    \                                                                            \
    \   (if (> (car arr) max)\n                                                  \
    \                                                                (let ([max (car\
    \ arr)])\n                                                                   \
    \                                                 (if (> (car arr) max)\n    \
    \                                                                            \
    \                                        (let ([max (car arr)])\n            \
    \                                                                            \
    \                                  (if (> (car arr) max)\n                   \
    \                                                                            \
    \                               (let ([max (car arr)])\n                     \
    \                                                                            \
    \                               (if (> (car arr) max)\n                      \
    \                                                                            \
    \                                  (let ([max (car arr)])\n                  \
    \                                                                            \
    \                                        (if (> (car arr) max)\n             \
    \                                                                            \
    \                                                 (let ([max (car arr)])\n   \
    \                                                                            \
    \                                                             (if (> (car arr)\
    \ max)", "  (if (= k 0)\n      (list 0)\n      (append (maximum (rest arr) (sub1\
    \ k)) (maximum (first arr) (sub1 k)))))\n", "  (if (= k 0)\n      (list arr)\n\
    \      (append (maximum (rest arr) (sub1 k)) (maximum (first arr) (sub1 k))))))\n",
  "  (if (= k 0)\n      (list arr)\n      (let ([max (car arr)])\n        (if (> (car\
    \ arr) max)\n            (cons max \n                   (maximum (cdr arr) (sub1\
    \ k)))\n            (maximum (cdr arr) (sub1 k))))))\n", "  (if (= k 0)\n    \
    \  (list 0)\n      (let ([max (car arr)])\n        (if (< (length arr) k)\n  \
    \          (cons max \n                   (maximum (cdr arr) (sub1 k)))\n    \
    \        (cons max \n                   (maximum (cdr arr) (sub1 k)))))))\n",
  "  (if (= k 0)\n      (list arr)\n      (append (sort (append (take arr (- k 1))\n\
    \                          (take arr (- k 2)))\n                    (lambda (x\
    \ y)\n                      (if (> x y)\n                          (- x y)\n \
    \                         (- y x)))))\n      (maximum (take arr (- k 1))\n   \
    \           (- k 2))))\n", "  (cond\n    [(empty? arr) empty]\n    [(= k 0) (first\
    \ arr)]\n    [else (append (maximum (rest arr) (sub1 k)) (first arr))]))\n", " \
    \ (if (= k 0)\n      (list 0)\n      (let ([max (car arr)])\n        (if (> (car\
    \ arr) max)\n            (cons max (maximum (cdr arr) (sub1 k)))\n           \
    \ (maximum (cdr arr) (sub1 k)))))) ; #lang racket\n", "  (if (= k 0)\n      (list\
    \ 0)\n      (let ([max-so-far 0])\n        (if (null? arr)\n            (list\
    \ 0)\n            (let ([cur (car arr)])\n              (if (> cur max-so-far)\n\
    \                  (set! max-so-far cur)\n                  (append (list cur)\
    \ (maximum (cdr arr) (sub1 k))))))))\n", "  (if (= k 0)\n      (list arr)\n  \
    \    (append (maximum (rest arr) (sub1 k)) (maximum (first arr) (sub1 k)))))\n",
  "  (if (= k 0)\n      (list arr)\n      (append (maximum (rest arr) (sub1 k)) (maximum\
    \ (first arr) (sub1 k)))))\n", "  (cond\n    [(empty? arr) empty]\n    [(= k 0)\
    \ (first arr)]\n    [else (cons (max (rest arr) (- k 1)) \n               (maximum\
    \ (rest arr) (- k 1)))]))\n", "  (if (= k 0)\n      (list arr)\n      (let ([max-so-far\
    \ #f (max-so-far-so-far #f (max-so-far-so-far-so-far #f (max-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far #f (max-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-",
  "  (if (= k 0)\n      (list 0)\n      (let ([max (car arr)])\n        (if (null?\
    \ (cdr arr))\n            (cons max 0)\n            (let ([max (car arr)])\n \
    \             (if (> (car arr) max)\n                  (cons max 0)\n        \
    \          (maximum (cdr arr) (sub1 k))))))))\n", "  (cond\n    [(empty? arr)\
    \ empty]\n    [(= k 0) (first arr)]\n    [else (max (rest arr) (- k 1))]))\n",
  "  (if (= k 0)\n      (list 0)\n      (let ([max (car arr)])\n        (if (> (car\
    \ arr) max)\n            (let ([max (car arr)])\n              (if (> (car arr)\
    \ max)\n                  (let ([max (car arr)])\n                    (if (> (car\
    \ arr) max)\n                        (let ([max (car arr)])\n                \
    \          (if (> (car arr) max)\n                              (let ([max (car\
    \ arr)])\n                                (if (> (car arr) max)\n            \
    \                        (let ([max (car arr)])\n                            \
    \          (if (> (car arr) max)\n                                          (let\
    \ ([max (car arr)])\n                                            (if (> (car arr)\
    \ max)\n                                                (let ([max (car arr)])\n\
    \                                                  (if (> (car arr) max)\n   \
    \                                                   (let ([max (car arr)])\n \
    \                                                       (if (> (car arr) max)\n\
    \                                                            (let ([max (car arr)])\n\
    \                                                              (if (> (car arr)\
    \ max)\n                                                                  (let\
    \ ([max (car arr)])\n                                                        \
    \            (if (> (car arr) max)\n                                         \
    \                               (let ([max (car arr)])\n                     \
    \                                                     (if (> (car arr) max)\n\
    \                                                                            \
    \  (let ([max (car arr)])\n                                                  \
    \                              (if (> (car arr) max)\n                       \
    \                                                             (let ([max (car\
    \ arr)])\n                                                                   \
    \                   (if (> (car arr) max)\n                                  \
    \                                                        (let ([max (car arr)])\n\
    \                                                                            \
    \                (if (> (car arr) max)\n                                     \
    \                                                           (let ([max (car arr)])\n\
    \                                                                            \
    \                      (if (> (car arr) max)\n                               \
    \                                                                       (let ([max\
    \ (car arr)])\n                                                              \
    \                                          (if (> (car arr) max)\n           \
    \                                                                            \
    \                     (let ([max (car arr)])\n                               \
    \                                                                            \
    \   (if (> (car arr) max)\n                                                  \
    \                                                                (let ([max (car\
    \ arr)])\n                                                                   \
    \                                                 (if (> (car arr) max)\n    \
    \                                                                            \
    \                                        (let ([max (car arr)])\n            \
    \                                                                            \
    \                                  (if (> (car arr) max)\n                   \
    \                                                                            \
    \                               (let ([max (car arr)])\n                     \
    \                                                                            \
    \                               (if (> (car arr) max)\n                      \
    \                                                                            \
    \                                  (let ([max (car arr)])\n                  \
    \                                                                            \
    \                                        (if (> (car arr) max)\n             \
    \                                                                            \
    \                                               (let ([max (car arr)])\n     \
    \                                                                            \
    \                                                         (if (> (car arr) max)",
  "  (cond\n    [(empty? arr) empty]\n    [(= k 0) (first arr)]\n    [else (cons (max\
    \ (rest arr) k) (maximum (rest arr) (sub1 k)))]))\n", "  (if (= k 0)\n      (list\
    \ arr)\n      (let ([max-so-far #f (max-so-far-so-far #f (max-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far #f (max-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far-so-far\
    \ #f (max-so-far-so-far-so-far-so-far-so", "  (if (= k 0)\n      (list arr)\n\
    \      (append (maximum (rest arr) (sub1 k)) (maximum (first arr) (sub1 k)))))\n",
  "  (if (= k 0)\n      (list arr)\n      (let ([max (car arr)])\n        (if (> (car\
    \ arr) max)\n            (cons max arr)\n            (maximum (cdr arr) (sub1\
    \ k))))))\n", "  (if (= k 0)\n      (list 0)\n      (let ([max (car arr)])\n \
    \       (if (> (car arr) max)\n            (let ([max (car arr)])\n          \
    \    (if (> (car arr) max)\n                  (let ([max (car arr)])\n       \
    \             (if (> (car arr) max)\n                        (let ([max (car arr)])\n\
    \                          (if (> (car arr) max)\n                           \
    \   (let ([max (car arr)])\n                                (if (> (car arr) max)\n\
    \                                    (let ([max (car arr)])\n                \
    \                      (if (> (car arr) max)\n                               \
    \           (let ([max (car arr)])\n                                         \
    \   (if (> (car arr) max)\n                                                (let\
    \ ([max (car arr)])\n                                                  (if (>\
    \ (car arr) max)\n                                                      (let ([max\
    \ (car arr)])\n                                                        (if (>\
    \ (car arr) max)\n                                                           \
    \ (let ([max (car arr)])\n                                                   \
    \           (if (> (car arr) max)\n                                          \
    \                        (let ([max (car arr)])\n                            \
    \                                        (if (> (car arr) max)\n             \
    \                                                           (let ([max (car arr)])\n\
    \                                                                          (if\
    \ (> (car arr) max)\n                                                        \
    \                      (let ([max (car arr)])\n                              \
    \                                                  (if (> (car arr) max)\n   \
    \                                                                            \
    \     (let ([max (car arr)])\n                                               \
    \                                       (if (> (car arr) max)\n              \
    \                                                                            (let\
    \ ([max (car arr)])\n                                                        \
    \                                    (if (> (car arr) max)\n                 \
    \                                                                            \
    \   (let ([max (car arr)])\n                                                 \
    \                                                 (if (> (car arr) max)\n    \
    \                                                                            \
    \                      (let ([max (car arr)])\n                              \
    \                                                                          (if\
    \ (> (car arr) max)\n                                                        \
    \                                                    (let ([max (car arr)])\n\
    \                                                                            \
    \                                  (if (> (car arr) max)\n                   \
    \                                                                            \
    \                   (let ([max (car arr)])\n                                 \
    \                                                                            \
    \       (if (> (car arr) max)\n                                              \
    \                                                                          (let\
    \ ([max (car arr)])\n                                                        \
    \                                                                  (if (> (car\
    \ arr) max)\n                                                                \
    \                                                              (let ([max (car\
    \ arr)])\n                                                                   \
    \                                                             (if (> (car arr)\
    \ max)\n                                                                     \
    \                                                               (let ([max (car\
    \ arr)])\n                                                                   \
    \                                                                   (if (> (car\
    \ arr) max)\n                                                                \
    \                                                                          (let\
    \ ([max (car arr)])\n                                                        \
    \                                                                            \
    \        (if (> (car arr) max)", "  (if (= k 0)\n      (list 0)\n      (append\
    \ (maximum (rest arr) (sub1 k)) (maximum (rest arr) (sub1 k)))))\n", "  (cond\n\
    \    [(empty? arr) empty]\n    [(= k 0) (first arr)]\n    [else (max (rest arr)\
    \ (- k 1))]))\n", "  (if (= k 0)\n      (list 0)\n      (let ([max (first arr)])\n\
    \        (if (> max 0)\n            (append (maximum (rest arr) (sub1 k)) (list\
    \ max))\n            (append (maximum (rest arr) (sub1 k)) (list max))))))\n",
  "  (cond\n    [(empty? arr) empty]\n    [(= k 0) (first arr)]\n    [else (append\
    \ (maximum (rest arr) (sub1 k)) (first arr))]))\n", "  (cond\n    [(empty? arr)\
    \ (list empty)]\n    [(= k 0) (list arr)]\n    [else (append (maximum (rest arr)\
    \ (sub1 k)) (maximum (first arr) (sub1 k)))]))\n", "  (if (= k 0)\n      (list\
    \ 0)\n      (let ([max (car arr)])\n        (if (> (car arr) max)\n          \
    \  (let ([max (car arr)])\n              (if (> (car arr) max)\n             \
    \     (let ([max (car arr)])\n                    (if (> (car arr) max)\n    \
    \                    (let ([max (car arr)])\n                          (if (>\
    \ (car arr) max)\n                              (let ([max (car arr)])\n     \
    \                           (if (> (car arr) max)\n                          \
    \          (let ([max (car arr)])\n                                      (if (>\
    \ (car arr) max)\n                                          (let ([max (car arr)])\n\
    \                                            (if (> (car arr) max)\n         \
    \                                       (let ([max (car arr)])\n             \
    \                                     (if (> (car arr) max)\n                \
    \                                      (let ([max (car arr)])\n              \
    \                                          (if (> (car arr) max)\n           \
    \                                                 (let ([max (car arr)])\n   \
    \                                                           (if (> (car arr) max)\n\
    \                                                                  (let ([max\
    \ (car arr)])\n                                                              \
    \      (if (> (car arr) max)\n                                               \
    \                         (let ([max (car arr)])\n                           \
    \                                               (if (> (car arr) max)\n      \
    \                                                                        (let\
    \ ([max (car arr)])\n                                                        \
    \                        (if (> (car arr) max)\n                             \
    \                                                       (let ([max (car arr)])\n\
    \                                                                            \
    \          (if (> (car arr) max)\n                                           \
    \                                               (let ([max (car arr)])\n     \
    \                                                                            \
    \           (if (> (car arr) max)\n                                          \
    \                                                      (let ([max (car arr)])\n\
    \                                                                            \
    \                      (if (> (car arr) max)\n                               \
    \                                                                       (let ([max\
    \ (car arr)])\n                                                              \
    \                                          (if (> (car arr) max)\n           \
    \                                                                            \
    \                     (let ([max (car arr)])\n                               \
    \                                                                            \
    \   (if (> (car arr) max)\n                                                  \
    \                                                                (let ([max (car\
    \ arr)])\n                                                                   \
    \                                                 (if (> (car arr) max)\n    \
    \                                                                            \
    \                                        (let ([max (car arr)])\n            \
    \                                                                            \
    \                                  (if (> (car arr) max)\n                   \
    \                                                                            \
    \                               (let ([max (car arr)])\n                     \
    \                                                                            \
    \                               (if (> (car arr) max)\n                      \
    \                                                                            \
    \                                  (let ([max (car arr)])\n                  \
    \                                                                            \
    \                                        (if (> (car arr) max)\n             \
    \                                                                            \
    \                                               (let ([max (car arr)])\n     \
    \                                                                            \
    \                                                         (if (> (car arr) max)",
  "  (if (= k 0)\n      (list 0)\n      (let ([max (car arr)])\n        (if (> (car\
    \ arr) max)\n            (let ([max (car arr)])\n              (if (> (car arr)\
    \ max)\n                  (let ([max (car arr)])\n                    (if (> (car\
    \ arr) max)\n                        (let ([max (car arr)])\n                \
    \          (if (> (car arr) max)\n                              (let ([max (car\
    \ arr)])\n                                (if (> (car arr) max)\n            \
    \                        (let ([max (car arr)])\n                            \
    \          (if (> (car arr) max)\n                                          (let\
    \ ([max (car arr)])\n                                            (if (> (car arr)\
    \ max)\n                                                (let ([max (car arr)])\n\
    \                                                  (if (> (car arr) max)\n   \
    \                                                   (let ([max (car arr)])\n \
    \                                                       (if (> (car arr) max)\n\
    \                                                            (let ([max (car arr)])\n\
    \                                                              (if (> (car arr)\
    \ max)\n                                                                  (let\
    \ ([max (car arr)])\n                                                        \
    \            (if (> (car arr) max)\n                                         \
    \                               (let ([max (car arr)])\n                     \
    \                                                     (if (> (car arr) max)\n\
    \                                                                            \
    \  (let ([max (car arr)])\n                                                  \
    \                              (if (> (car arr) max)\n                       \
    \                                                             (let ([max (car\
    \ arr)])\n                                                                   \
    \                   (if (> (car arr) max)\n                                  \
    \                                                        (let ([max (car arr)])\n\
    \                                                                            \
    \                (if (> (car arr) max)\n                                     \
    \                                                           (let ([max (car arr)])\n\
    \                                                                            \
    \                      (if (> (car arr) max)\n                               \
    \                                                                       (let ([max\
    \ (car arr)])\n                                                              \
    \                                          (if (> (car arr) max)\n           \
    \                                                                            \
    \                     (let ([max (car arr)])\n                               \
    \                                                                            \
    \   (if (> (car arr) max)\n                                                  \
    \                                                                (let ([max (car\
    \ arr)])\n                                                                   \
    \                                                 (if (> (car arr) max)\n    \
    \                                                                            \
    \                                        (let ([max (car arr)])\n            \
    \                                                                            \
    \                                  (if (> (car arr) max)\n                   \
    \                                                                            \
    \                               (let ([max (car arr)])\n                     \
    \                                                                            \
    \                               (if (> (car arr) max)\n                      \
    \                                                                            \
    \                                (let ([max (car arr)])\n                    \
    \                                                                            \
    \                                    (if (> (car arr) max)\n                 \
    \                                                                            \
    \                                           (let ([max (car arr)])\n         \
    \                                                                            \
    \                                                     (if (> (car arr) ", "  (if\
    \ (= k 0)\n      (list arr)\n      (let ([max (car arr)])\n        (if (> (car\
    \ arr) max)\n            (cons max (maximum (cdr arr) (sub1 k)))\n           \
    \ (maximum (cdr arr) (sub1 k))))))\n", "  (cond\n    [(empty? arr) (list 0)]\n\
    \    [(= k 0) (first arr)]\n    [else (append (maximum (rest arr) (sub1 k)) (first\
    \ arr))]))\n", "  (if (= k 0)\n      (list 0)\n      (let ([max (car arr)])\n\
    \        (if (> (car arr) max)\n            (let ([max (car arr)])\n         \
    \     (if (> (car arr) max)\n                  (let ([max (car arr)])\n      \
    \              (if (> (car arr) max)\n                        (let ([max (car\
    \ arr)])\n                          (if (> (car arr) max)\n                  \
    \            (let ([max (car arr)])\n                                (if (> (car\
    \ arr) max)\n                                    (let ([max (car arr)])\n    \
    \                                  (if (> (car arr) max)\n                   \
    \                       (let ([max (car arr)])\n                             \
    \               (if (> (car arr) max)\n                                      \
    \          (let ([max (car arr)])\n                                          \
    \        (if (> (car arr) max)\n                                             \
    \         (let ([max (car arr)])\n                                           \
    \             (if (> (car arr) max)\n                                        \
    \                    (let ([max (car arr)])\n                                \
    \                              (if (> (car arr) max)\n                       \
    \                                           (let ([max (car arr)])\n         \
    \                                                           (if (> (car arr) max)\n\
    \                                                                        (let\
    \ ([max (car arr)])\n                                                        \
    \                  (if (> (car arr) max)\n                                   \
    \                                           (let ([max (car arr)])\n         \
    \                                                                       (if (>\
    \ (car arr) max)\n                                                           \
    \                         (let ([max (car arr)])\n                           \
    \                                                           (if (> (car arr) max)\n\
    \                                                                            \
    \              (let ([max (car arr)])\n                                      \
    \                                                      (if (> (car arr) max)\n\
    \                                                                            \
    \                    (let ([max (car arr)])\n                                \
    \                                                                  (if (> (car\
    \ arr) max)\n                                                                \
    \                                      (let ([max (car arr)])\n              \
    \                                                                            \
    \              (if (> (car arr) max)\n                                       \
    \                                                                     (let ([max\
    \ (car arr)])\n                                                              \
    \                                                (if (> (car arr) max)\n     \
    \                                                                            \
    \                                 (let ([max (car arr)])\n                   \
    \                                                                            \
    \                     (if (> (car arr) max)\n                                \
    \                                                                            \
    \            (let ([max (car arr)])\n                                        \
    \                                                                            \
    \      (if (> (car arr) max)\n                                               \
    \                                                                            \
    \   (let ([max (car arr)])\n                                                 \
    \                                                                            \
    \   (if (> (car arr) max)\n                                                  \
    \                                                                            \
    \      (let ([max (car arr)])\n                                              \
    \                                                                            \
    \            (if (> (car arr) max)\n                                         \
    \                                                                            \
    \                     (let ([max (car arr)])\n                               \
    \                                                                            \
    \                                 (if (> (car arr) max)", "  (if (= k 0)\n   \
    \   (list arr)\n      (append (maximum (rest arr) (sub1 k)) (maximum (rest arr)\
    \ (sub1 k))))\n  )\n", "  (if (= k 0)\n      (list arr)\n      (let ([max-so-far\
    \ #f (max-so-far #f (first arr))])\n        (if (null? (rest arr))\n         \
    \   (if (< max-so-far k)\n                (list max-so-far)\n                (list\
    \ arr))\n            (if (< max-so-far k)\n                (list arr)\n      \
    \          (maximum (rest arr) (sub1 k)))))))\n", "  (cond\n    [(empty? arr)\
    \ empty]\n    [(= k 0) (first arr)]\n    [else (max (rest arr) (- k 1))]))\n",
  "  (if (= k 0)\n      (list 0)\n      (let ([max-so-far 0])\n        (if (null?\
    \ arr)\n            (list 0)\n            (let ([cur (car arr)])\n           \
    \   (if (> cur max-so-far)\n                  (list cur)\n                  (let\
    \ ([new (car arr)])\n                    (if (> new max-so-far)\n            \
    \            (set! max-so-far new)\n                        (append (maximum (cdr\
    \ arr) (- k 1))\n                                (list new))))))))))\n", "  (cond\n\
    \    [(empty? arr) (list empty)]\n    [(= k 0) (list arr)]\n    [else (append\
    \ (maximum (rest arr) (sub1 k)) (maximum (first arr) (sub1 k)))]))\n", "  (cond\n\
    \    [(empty? arr) empty]\n    [(= k 0) (first arr)]\n    [else (max (rest arr)\
    \ (- k 1))]))\n", "  (if (= k 0)\n      (list arr)\n      (let ([max (car arr)])\n\
    \        (if (> (car arr) max)\n            (let ([max (car arr)])\n         \
    \     (if (> (car arr) max)\n                  (let ([max (car arr)])\n      \
    \              (if (> (car arr) max)\n                        (let ([max (car\
    \ arr)])\n                          (if (> (car arr) max)\n                  \
    \            (let ([max (car arr)])\n                                (if (> (car\
    \ arr) max)\n                                    (let ([max (car arr)])\n    \
    \                                  (if (> (car arr) max)\n                   \
    \                       (let ([max (car arr)])\n                             \
    \               (if (> (car arr) max)\n                                      \
    \          (let ([max (car arr)])\n                                          \
    \        (if (> (car arr) max)\n                                             \
    \         (let ([max (car arr)])\n                                           \
    \             (if (> (car arr) max)\n                                        \
    \                    (let ([max (car arr)])\n                                \
    \                              (if (> (car arr) max)\n                       \
    \                                           (let ([max (car arr)])\n         \
    \                                                           (if (> (car arr) max)\n\
    \                                                                        (let\
    \ ([max (car arr)])\n                                                        \
    \                  (if (> (car arr) max)\n                                   \
    \                                           (let ([max (car arr)])\n         \
    \                                                                       (if (>\
    \ (car arr) max)\n                                                           \
    \                         (let ([max (car arr)])\n                           \
    \                                                           (if (> (car arr) max)\n\
    \                                                                            \
    \              (let ([max (car arr)])\n                                      \
    \                                                      (if (> (car arr) max)\n\
    \                                                                            \
    \                    (let ([max (car arr)])\n                                \
    \                                                                  (if (> (car\
    \ arr) max)\n                                                                \
    \                                      (let ([max (car arr)])\n              \
    \                                                                            \
    \              (if (> (car arr) max)\n                                       \
    \                                                                     (let ([max\
    \ (car arr)])\n                                                              \
    \                                                (if (> (car arr) max)\n     \
    \                                                                            \
    \                                 (let ([max (car arr)])\n                   \
    \                                                                            \
    \                     (if (> (car arr) max)\n                                \
    \                                                                            \
    \            (let ([max (car arr)])\n                                        \
    \                                                                            \
    \      (if (> (car arr) max)\n                                               \
    \                                                                            \
    \   (let ([max (car arr)])\n                                                 \
    \                                                                            \
    \   (if (> (car arr) max)\n                                                  \
    \                                                                            \
    \      (let ([max (car arr)])\n                                              \
    \                                                                            \
    \            (if (> (car arr) max)\n                                         \
    \                                                                            \
    \                     (let ([max (car arr)])\n                               \
    \                                                                            \
    \                                 (if (> (car arr) max)", "  (if (= k 0)\n   \
    \   (list arr)\n      (let ([max-so-far #f])\n        (let loop ([i 0] [arr arr]\
    \ [k k])\n          (cond [(< k i) max-so-far]\n                [else (loop (+\
    \ i 1) (append (list arr (max arr (- i k)))\n                                \
    \          (loop (+ i 1) arr (- k i))))]\n          )\n        (loop 0 arr k)\n\
    \      )\n    )\n  )\n", "  (cond\n    [(empty? arr) empty]\n    [(= k 0) (first\
    \ arr)]\n    [else (cons (max (rest arr) (- k 1))\n                (maximum (rest\
    \ arr) (- k 1)))]))\n", "  (cond\n    [(empty? arr) empty]\n    [(= k 0) (first\
    \ arr)]\n    [else (cons (max (rest arr) k) (maximum (rest arr) (sub1 k)))]))\n",
  "  (if (= k 0)\n      (list arr)\n      (append (sort (append (take arr (- k 1))\n\
    \                           (take arr (- k 1)))\n                   (lambda (x\
    \ y)\n                     (if (> x y)\n                         (list x)\n  \
    \                       (list y)))))))\n", "  (if (= k 0)\n      (list arr)\n\
    \      (let ([max-so-far #f (max-so-far-so-far (car arr) k)]\n            [max-so-far-so-far\
    \ (car arr) k (cdr arr)])\n        (if (< k 0)\n            (if (> max-so-far-so-far\
    \ (car arr))\n                (cons (car arr) max-so-far-so-far)\n           \
    \     (cons (car arr) max-so-far))\n            (if (> max-so-far-so-far (car\
    \ arr))\n                (cons (car arr) max-so-far-so-far)\n                (cons\
    \ (car arr) max-so-far))\n            (if (> max-so-far-so-far (car arr))\n  \
    \              (cons (car arr) max-so-far-so-far)\n                (cons (car\
    \ arr) max-so-far))\n            (if (> max-so-far-so-far (car arr))\n       \
    \         (cons (car arr) max-so-far-so-far)\n                (cons (car arr)\
    \ max-so-far))\n            (if (> max-so-far-so-far (car arr))\n            \
    \    (cons (car arr) max-so-far-so-far)\n                (cons (car arr) max-so-far))\n\
    \            (if (> max-so-far-so-far (car arr))\n                (cons (car arr)\
    \ max-so-far-so-far)\n                (cons (car arr) max-so-far))\n         \
    \   (if (> max-so-far-so-far (car arr))\n                (cons (car arr) max-so-far-so-far)\n\
    \                (cons (car arr) max-so-far))\n            (if (> max-so-far-so-far\
    \ (car arr))\n                (cons (car arr) max-so-far-so-far)\n           \
    \     (cons (car arr) max-so-far))\n            (if (> max-so-far-so-far (car\
    \ arr))\n                (cons (car arr) max-so-far-so-far)\n                (cons\
    \ (car arr) max-so-far))\n            (if (> max-so-far-so-far (car arr))\n  \
    \              (cons (car arr) max-so", "  (if (= k 0)\n      (list arr)\n   \
    \   (append (maximum (rest arr) (sub1 k)) (maximum (first arr) (sub1 k)))))\n",
  "  (if (= k 0)\n      (list arr)\n      (let ([max (car arr)])\n        (if (< (car\
    \ arr) max)\n            (cons max (maximum (cdr arr) (sub1 k)))\n           \
    \ (maximum (cdr arr) (sub1 k))))))\n", "  (cond\n    [(empty? arr) empty]\n  \
    \  [(= k 0) (first arr)]\n    [else (cons (max (rest arr) k) (maximum (rest arr)\
    \ (sub1 k)))]))\n", "  (if (= k 0)\n      (list arr)\n      (append (maximum (rest\
    \ arr) (sub1 k)) (maximum (first arr) (sub1 k)))))\n", "  (if (= k 0)\n      (list\
    \ 0)\n      (let ([max (car arr)])\n        (if (< (car arr) max)\n          \
    \  (cons max (maximum (cdr arr) (sub1 k)))\n            (maximum (cdr arr) (sub1\
    \ k))))))\n", "  (if (= k 0)\n      (list arr)\n      (append (maximum (rest arr)\
    \ (sub1 k)) (maximum (first arr) (sub1 k))))))\n", "  (if (= k 0)\n      (list\
    \ 0)\n      (append (maximum (rest arr) (sub1 k)) (list (max arr (first arr))))))\
    \ ; #lang racket\n", "  (if (= k 0)\n      (list arr)\n      (let ([max (car arr)])\n\
    \        (if (> (car arr) max)\n            (let ([max (car arr)])\n         \
    \     (if (> (car arr) max)\n                  (let ([max (car arr)])\n      \
    \              (if (> (car arr) max)\n                        (let ([max (car\
    \ arr)])\n                          (if (> (car arr) max)\n                  \
    \            (let ([max (car arr)])\n                                (if (> (car\
    \ arr) max)\n                                    (let ([max (car arr)])\n    \
    \                                  (if (> (car arr) max)\n                   \
    \                       (let ([max (car arr)])\n                             \
    \               (if (> (car arr) max)\n                                      \
    \          (let ([max (car arr)])\n                                          \
    \        (if (> (car arr) max)\n                                             \
    \         (let ([max (car arr)])\n                                           \
    \             (if (> (car arr) max)\n                                        \
    \                    (let ([max (car arr)])\n                                \
    \                              (if (> (car arr) max)\n                       \
    \                                           (let ([max (car arr)])\n         \
    \                                                           (if (> (car arr) max)\n\
    \                                                                        (let\
    \ ([max (car arr)])\n                                                        \
    \                  (if (> (car arr) max)\n                                   \
    \                                           (let ([max (car arr)])\n         \
    \                                                                       (if (>\
    \ (car arr) max)\n                                                           \
    \                         (let ([max (car arr)])\n                           \
    \                                                           (if (> (car arr) max)\n\
    \                                                                            \
    \              (let ([max (car arr)])\n                                      \
    \                                                      (if (> (car arr) max)\n\
    \                                                                            \
    \                    (let ([max (car arr)])\n                                \
    \                                                                  (if (> (car\
    \ arr) max)\n                                                                \
    \                                      (let ([max (car arr)])\n              \
    \                                                                            \
    \              (if (> (car arr) max)\n                                       \
    \                                                                     (let ([max\
    \ (car arr)])\n                                                              \
    \                                                (if (> (car arr) max)\n     \
    \                                                                            \
    \                                 (let ([max (car arr)])\n                   \
    \                                                                            \
    \                     (if (> (car arr) max)\n                                \
    \                                                                            \
    \            (let ([max (car arr)])\n                                        \
    \                                                                            \
    \      (if (> (car arr) max)\n                                               \
    \                                                                            \
    \   (let ([max (car arr)])\n                                                 \
    \                                                                            \
    \   (if (> (car arr) max)\n                                                  \
    \                                                                            \
    \      (let ([max (car arr)])\n                                              \
    \                                                                            \
    \            (if (> (car arr) max)\n                                         \
    \                                                                            \
    \                   (let ([max (car arr)])\n                                 \
    \                                                                            \
    \                             (if (> (car arr) max)", "  (cond\n    [(empty? arr)\
    \ empty]\n    [(= k 0) (first arr)]\n    [else (cons (max (rest arr) k) (maximum\
    \ (rest arr) (sub1 k)))]))\n", "  (if (= k 0)\n      (list arr)\n      (append\
    \ (maximum (rest arr) (sub1 k)) (maximum (rest arr) (sub1 k))))) \n", "  (if (=\
    \ k 0)\n      (list 0)\n      (let ([max (first arr)])\n        (if (null? (rest\
    \ arr))\n            (cons max 0)\n            (let ([next (maximum (rest arr)\
    \ (sub1 k))]\n                  [max (if (> max next) max next)])\n          \
    \    (cons max 0))))))\n", "  (cond\n    [(empty? arr) (list 0)]\n    [(= k 0)\
    \ (first arr)]\n    [else (append (maximum (rest arr) (- k 1))\n             \
    \     (list (first arr)))]))\n", "  (if (= k 0)\n      (list 0)\n      (let ([max-so-far\
    \ (first arr)])\n        (if (null? (rest arr))\n            (list max-so-far)\n\
    \            (let ([cur-max (maximum (rest arr) (sub1 k)))]\n              (if\
    \ (> cur-max max-so-far)\n                  (list max-so-far cur-max)\n      \
    \            (list cur-max max-so-far)))))))\n", "  (cond\n    [(empty? arr) empty]\n\
    \    [(= k 0) (first arr)]\n    [else (cons (max (rest arr)) (maximum (rest arr)\
    \ (sub1 k)))]))\n", "  (if (= k 0)\n      (list 0)\n      (let ([max (car arr)])\n\
    \        (if (> (car arr) max)\n            (cons max arr)\n            (maximum\
    \ (cdr arr) (sub1 k))))))\n", "  (if (= k 0)\n      (list 0)\n      (append (maximum\
    \ (rest arr) (sub1 k)) (maximum (first arr) (sub1 k)))))\n", "  (if (= k 0)\n\
    \      (list arr)\n      (append (maximum (rest arr) (sub1 k)) (maximum (first\
    \ arr) (sub1 k)))))\n", "  (cond\n    [(empty? arr) (list 0)]\n    [(= k 0) (first\
    \ arr)]\n    [else (append (maximum (rest arr) (sub1 k)) (first arr))]))\n", " \
    \ (if (= k 0)\n      (list 0)\n      (let ([max (car arr)])\n        (if (> (car\
    \ arr) max)\n            (cons max (maximum (cdr arr) (sub1 k)))\n           \
    \ (maximum (cdr arr) (sub1 k)))))) ; #lang racket\n", "  (if (= k 0)\n      (list\
    \ 0)\n      (let ([max (car arr)])\n        (if (null? (cdr arr))\n          \
    \  (cons max 0)\n            (let ([max (car arr)])\n              (if (> (car\
    \ arr) max)\n                  (cons max 0)\n                  (maximum (cdr arr)\
    \ (sub1 k))))))))\n", "  (if (= k 0)\n      (list arr)\n      (append (maximum\
    \ (rest arr) (sub1 k)) (maximum (rest arr) (sub1 k))))))\n", "  (if (= k 0)\n\
    \      (list arr)\n      (append (maximum (rest arr) (sub1 k)) (maximum (first\
    \ arr) (sub1 k)))))\n", "  (if (= k 0)\n      (list arr)\n      (append (maximum\
    \ (rest arr) (sub1 k)) (maximum (first arr) (sub1 k)))))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

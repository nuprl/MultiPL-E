name: HumanEval_102_choose_num
language: rkt
prompt: "#lang racket\n\n;; This function takes two positive numbers x and y and returns\
  \ the\n;; biggest even integer number that is in the range [x, y] inclusive. If\
  \ \n;; there's no such number, then the function should return -1.\n;; For example:\n\
  ;; >>> (choose_num 12 15)\n;; 14\n;; >>> (choose_num 13 12)\n;; -1\n(define (choose_num\
  \ x y)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate choose_num))\n\
  \    (check-equal? (candidate 12 15) 14)\n    (check-equal? (candidate 13 12) -1)\n\
  \    (check-equal? (candidate 33 12354) 12354)\n    (check-equal? (candidate 5234\
  \ 5233) -1)\n    (check-equal? (candidate 6 29) 28)\n    (check-equal? (candidate\
  \ 27 10) -1)\n    (check-equal? (candidate 7 7) -1)\n    (check-equal? (candidate\
  \ 546 546) 546)\n))\n\n(test-humaneval)"
completions: ["  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond ((= x y) -1)\n        ((even? x) x)\n\
    \        (else (choose_num (+ x 1) y))))\n", "  (cond ((= x y) -1)\n        ((even?\
    \ x) (if (= x y) x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond [(=\
    \ x y) -1]\n        [(even? (modulo x 2)) (modulo x 2)]\n        [else (choose_num\
    \ (+ x 1) y)]))\n", "  (cond\n    [(and (>= x y) \n          (even? x))\n    \
    \ (even? x)]\n    [(and (>= y x)\n          (even? y))\n     (even? y)]\n    [else\n\
    \     (if (even? (- x y))\n         (- x y)\n         (- y x))]))\n", "  (cond\
    \ ((= x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond ((= x y) -1)\n        ((even? x) (if (= y x) x y))\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond [(= x y) -1]\n        [(even? x) (max (+ x y) -1)]\n\
    \        [else (max (+ x y) -1)]))\n", "  (cond [(< x y) -1]\n        [(< y x)\
    \ -1]\n        [(= (modulo x 2) 0) (+ x 2)]\n        [else (+ x 2)]))\n", "  (cond\
    \ [(= x y) x]\n        [(even? (modulo x 2)) (+ x 2)]\n        [else -1]))\n",
  "  (cond ((< x y) -1)\n        ((even? x) (even? y))\n        (else (max (min x\
    \ y) (x+y)))))\n", "  (cond\n    [(and (integer? x) (integer? y)) x]\n    [(and\
    \ (integer? x) (not (integer? y))) y]\n    [(and (not (integer? x)) (integer?\
    \ y)) x]\n    [(and (not (integer? x)) (not (integer? y))) -1]))\n", "  (cond\
    \ ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond [(< x y) -1]\n        [(< y x) -1]\n        [(= x y) 0]\n        [(= y\
    \ x) 0]\n        [else (max (floor (/ (- x y) 2))\n                   (floor (/\
    \ (- y x) 2)))]))\n", "  (cond ((= x y) -1)\n        ((even? x) (max (+ x y) x))\n\
    \        (else (choose_num (+ x y) y))))\n", "  (cond\n    [(and (positive? x)\
    \ (positive? y)) x]\n    [(and (positive? y) (positive? x)) y]\n    [else (max\
    \ (floor (/ (- x y) 2))\n              (floor (/ (- y x) 2)))]))\n", "  (cond\
    \ ((= x y) -1)\n        ((even? x) (even? y))\n        (else (max (min x y) x))))\n",
  "  (cond ((< x y) -1)\n        ((even? x) (max (+ x y) x))\n        (else (max (+\
    \ x y) -1))))\n", "  (cond\n    [(or (< x y) (- (- x y) y)) -1]\n    [(= x y)\
    \ x]\n    [(= y x) y]\n    [else (max (+ x y) (- (- x y) y))]))\n", "  (cond ((=\
    \ x y) -1)\n        ((even? x) (even? y))\n        (else (max (min x y) \n   \
    \                (choose_num (+ x 1) (+ y 1))))))\n", "  (cond [(= x y) x]\n \
    \       [(even? x) (+ x 2)]\n        [else -1]))\n", "  (cond ((> x y) -1)\n \
    \       ((even? x) (max x y))\n        (else (choose_num (+ x 1) y))))\n", " \
    \ (cond ((and (integer? x) (integer? y)) x)\n        ((and (integer? y) (integer?\
    \ x)) y)\n        (else -1)))\n", "  (cond\n    [(and (positive? x) (positive?\
    \ y)) (if (even? (modulo x y)) (modulo x y) (modulo y x))]\n    [else -1]))\n",
  "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((= x y) -1)\n        ((even? x) (max (+ x y) x))\n     \
    \   (else (choose_num (+ x y) y))))\n", "  (cond ((< x y) -1)\n        ((even?\
    \ x) (max (+ x y) x))\n        (else (max (+ x y) y))))\n", "  (cond [(= x y)\
    \ x]\n        [(even? x) (+ x 2)]\n        [else (- x 1)]))\n", "  (cond\n   \
    \ [(and (integer? x) (integer? y)) x]\n    [(and (integer? y) (integer? x)) y]\n\
    \    [(and (integer? x) (integer? y)) (max (min x y) 2)]\n    [else -1]))\n",
  "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((< x y) -1)\n        ((even? x) (max (+ x y) x))\n     \
    \   (else (max (+ x y) -1))))\n", "  (cond [(= x y) x]\n        [(= (modulo x\
    \ 2) 0) (+ x 2)]\n        [else (+ x 1)]))\n", "  (cond [(= x y) x]\n        [(=\
    \ x 0) -1]\n        [(= y 0) -1]\n        [(even? x) (max (+ x y) 2)]\n      \
    \  [(even? y) (max (+ x y) 2)]\n        [else (max (+ x y) 2)]))\n", "  (cond\
    \ [(< x y) -1]\n        [(< y x) -1]\n        [(= (mod x 2) (mod y 2)) x]\n  \
    \      [else y]))\n", "  (cond [(= x y) x]\n        [(= (mod x 2) 0) (+ x 2)]\n\
    \        [else (choose_num (+ x 2) y)]))\n", "  (cond ((< x y) -1)\n        ((even?\
    \ x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((> x y) -1)\n \
    \       ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((<\
    \ x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond ((or (< x y) (- (- x y) y))\n         (if (< x y) -1 x))\n        ((< y\
    \ x)\n         (if (< y x) -1 y))\n        ((< x y)\n         (if (< x y) -1 x))\n\
    \        ((< y x)\n         (if (< y x) -1 y))\n        (else\n         (if (<\
    \ x y) -1 x))\n        (else\n         (if (< y x) -1 y))))\n", "  (cond ((or\
    \ (< x y) (- (- x y) y))\n         (if (= x y)\n             x\n             (if\
    \ (even? (- x y))\n                 (- x y)\n                 (- y x))))\n   \
    \     (else -1)))\n", "  (cond\n    [(and (integer? x) (integer? y)) (if (even?\
    \ (modulo x y)) (modulo x y) -1)]\n    [else -1]))\n", "  (cond ((< x y) -1)\n\
    \        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((or\
    \ (< x y) (- (- x y) y))\n         (if (< x y) -1 x))\n        ((< y x) -1)\n\
    \        (else (if (even? (modulo x y))\n                  (modulo x y)\n    \
    \              (modulo (+ x y) y))))))\n", "  (cond ((< x y) -1)\n        ((even?\
    \ x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond [(= x y) x]\n  \
    \      [(= x 0) -1]\n        [(= y 0) -1]\n        [(even? x) (cond [(= (modulo\
    \ x 2) 0) (+ x 2)] [(= (modulo x 2) 1) (+ x 1)])]\n        [(even? y) (cond [(=\
    \ (modulo y 2) 0) (+ y 2)] [(= (modulo y 2) 1) (+ y 1)])]\n        [else (cond\
    \ [(= (modulo x y) 0) (+ x y)] [(= (modulo x y) 1) (+ x y)])]))\n", "  (cond [(=\
    \ x y) -1]\n        [(even? x) (max (+ x y) 2)]\n        [else (max (+ x y) 1)]))\n",
  "  (cond ((= x y) -1)\n        ((even? x) (max (+ x y) x))\n        (else (choose_num\
    \ (+ x y) y))))\n", "  (cond ((= x y) -1)\n        ((even? x) (even? y))\n   \
    \     (else (max (choose_num (+ x 1) y)\n                  (choose_num (+ y 1)\
    \ x)))))\n", "  (cond ((> x y) -1)\n        ((even? x) x)\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond [(= x y) x]\n        [(even? x) (+ x 2)]\n      \
    \  [else -1]))\n", "  (cond ((< x y) -1)\n        ((even? x) (max (+ x y) x))\n\
    \        (else (max (+ x y) y))))\n", "  (cond ((= x y) -1)\n        ((even? x)\
    \ (+ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n\
    \        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((<\
    \ x y) -1)\n        ((even? x) (even? y))\n        (else (max (min x y) x))))\n",
  "  (cond ((> x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((< x y) -1)\n        ((even? x) (max (+ x y) x))\n     \
    \   (else (choose_num (+ x y) y))))\n", "  (cond ((< x y) -1)\n        ((even?\
    \ x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n \
    \       ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond [(<\
    \ x y) -1]\n        [(< y x) -1]\n        [(= x y) 0]\n        [(= y x) 0]\n \
    \       [else (max (floor (/ x y)) (floor (/ y x)))]))\n", "  (cond ((< x y) -1)\n\
    \        ((even? x) (even? y)) \n        (else (max (+ x y) 2))))\n", "  (cond\
    \ ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond [(< x y) -1]\n        [(< y x) -1]\n        [(< x y) x]\n        [(< y\
    \ x) y]\n        [else (max (+ x y) 2)]))\n", "  (cond ((> x y) -1)\n        ((even?\
    \ x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond [(= x y) x]\n  \
    \      [(= x 0) -1]\n        [(= y 0) -1]\n        [(even? x) (max (choose_num\
    \ (- x 2) (- y 2)) x)]))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n  \
    \      ((even? y) y)\n        (else (choose_num (+ x 1) (+ y 1)))))\n", "  (cond\
    \ ((and (integer? x) (integer? y)) \n         (if (even? (- x y)) (- x y) -1))\n\
    \        ((and (integer? x) (not (integer? y))) -1)\n        (else -1)))\n", " \
    \ (cond ((or (< x y) (- (- x y) y))\n         (if (< x y) x y))\n        ((even?\
    \ x)\n         (if (even? y)\n             (if (even? (- x y)) (- x y) (- y x))\n\
    \             (if (even? (- y x)) (- x y) (- y x))))\n        (else\n        \
    \ (if (even? y)\n             (if (even? (- x y)) (- x y) (- y x))\n         \
    \    (if (even? (- y x)) (- x y) (- y x))))))\n", "  (cond\n    [(or (< x y) (-\
    \ (- x y) y)) -1]\n    [(= x y) (* x x)]\n    [else (* x y)]))\n", "  (cond [(=\
    \ x y) -1]\n        [(= (modulo x 2) 0) (modulo x 2)]\n        [else (choose_num\
    \ (+ x 1) y)]))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        ((even?\
    \ y) y)\n        (else (choose_num (+ x 1) (+ y 1)))))\n", "  (cond ((< x y) -1)\n\
    \        ((even? x) (if (< x y) x y))\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond [(< x y) -1]\n        [(< x y) x]\n        [(< y x) -1]\n        [(< y\
    \ x) y]\n        [else (max (+ x y) 1)]))\n", "  (cond ((< x y) -1)\n        ((even?\
    \ x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((= x y) -1)\n \
    \       ((even? x) (+ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond\
    \ ((= x y) (if (even? x) x y))\n        ((even? x) (choose_num (+ x 1) y))\n \
    \       (else -1)))\n", "  (cond ((= x y) -1)\n        ((even? x) (+ x y))\n \
    \       (else (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((=\
    \ x y) x)\n        ((even? x) (max (+ x y) x))\n        (else (choose_num (+ x\
    \ y) y))))\n", "  (cond [(< x y) -1]\n        [(< y x) -1]\n        [(< x y) x]\n\
    \        [(< y x) y]\n        [else (max (+ x y) 2)]))\n", "  (cond ((or (< x\
    \ y) (- (- x y) y))\n         (if (= x y)\n             (- x y)\n            \
    \ -1))\n        (else (max (- x y) y))))\n", "  (cond ((< x y) -1)\n        ((even?\
    \ x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n \
    \       ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((>\
    \ x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond ((< x y) -1)\n        ((even? x) (max x y))\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even? x) (max\
    \ (+ x y) x))\n        (else (max (+ x y) -1))))\n", "  (cond\n    ((< x y) -1)\n\
    \    ((< y x) -1)\n    ((even? x) (even? y) (even? (+ x y)))\n    ((odd? x) (odd?\
    \ y) (odd? (+ x y)))\n    (else (choose_num (+ x y) y))))\n", "  (cond [(= x y)\
    \ x]\n        [(even? x) (+ x 2)]\n        [else (choose_num (+ x 1) y)]))\n",
  "  (cond ((and (>= x y) \n             (= (mod x 2) 0))\n         (/ x 2))\n   \
    \     ((and (>= x y) \n             (= (mod y 2) 0))\n         (/ y 2))\n    \
    \    ((and (>= x y) \n             (= (mod x 2) (mod y 2)))\n         (* x y))\n\
    \        ((and (>= x y) \n             (= (mod y 2) (mod x 2)))\n         (* y\
    \ x))\n        (else\n         (- x y))))\n", "  (cond ((= x y) -1)\n        ((even?\
    \ x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((or (< x y) (-\
    \ (- x y) y))\n         (if (< x y)\n             (- x y)\n             -1))\n\
    \        ((= x y)\n         x)\n        (else\n         (if (even? (modulo x y))\n\
    \             (modulo x y)\n             (- x y))))))\n", "  (cond ((= x y) -1)\n\
    \        ((even? x) (max x y))\n        (else (choose_num (+ x 1) y))))\n", " \
    \ (cond ((or (< x y) (- (- x y) y))\n         (if (= x y)\n             (- x y)\n\
    \             (- y x)))\n        (else (if (even? (- x y))\n                 (-\
    \ x y)\n                 (- y x)))))\n", "  (cond ((= x y) (if (even? x) x -1))\n\
    \        ((even? x) (if (even? y) y -1))\n        (else (if (even? y) y -1))))\n",
  "  (cond ((< x y) -1)\n        ((even? x) (max x y))\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((= x y) x)\n        ((even?\
    \ x) (max (+ x y) x))\n        (else (choose_num (+ x y) y))))\n", "  (cond ((and\
    \ (integer? x) (integer? y)) (if (even? (modulo x y)) (modulo x y) -1))\n    \
    \    ((and (integer? x) (not (integer? y))) (if (even? (modulo x y)) (modulo x\
    \ y) -1))\n        ((and (integer? y) (not (integer? x))) (if (even? (modulo x\
    \ y)) (modulo x y) -1))\n        (else -1)))\n", "  (cond ((< x y) -1)\n     \
    \   ((even? x) x)\n        ((even? y) y)\n        (else (choose_num (+ x 1) (+\
    \ y 1)))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond ((= x y) -1)\n        ((= x 0) 0)\n        ((= y\
    \ 0) 0)\n        ((even? x) (max (+ x y) x))\n        (else (max (+ x y) y))))\n",
  "  (cond ((> x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((> x y) -1)\n        ((even? x) x)\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond [(< x y) -1]\n        [(< y x) -1]\n\
    \        [(= x y) 0]\n        [(= y x) 0]\n        [else (max (floor (/ x y))\
    \ (floor (/ y x)))]))\n", "  (cond ((= x y) -1)\n        ((even? x) (max x y))\n\
    \        (else (choose_num (+ x 1) y))))\n", "  (cond ((= x y) -1)\n        ((even?\
    \ x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond [(< x y) -1]\n \
    \       [(< y x) -1]\n        [(= x y) 0]\n        [(= y x) 0]\n        [else\
    \ (max (+ x y) 2)]))\n", "  (cond\n    [(and (integer? x) (integer? y)) x]\n \
    \   [(and (integer? x) (not (integer? y))) y]\n    [(and (not (integer? x)) (integer?\
    \ y)) x]\n    [(and (not (integer? x)) (not (integer? y))) -1]\n    [else (max\
    \ (min x y) 2)]))\n", "  (cond ((< x y) -1)\n        ((even? x) (even? y))\n \
    \       (else (max (min x y) x))))\n", "  (cond\n    [(< x y) -1]\n    [(< y x)\
    \ -1]\n    [(< x y) x]\n    [(< y x) y]\n    [else (max (floor (/ x y)) (floor\
    \ (/ y x)))]))\n", "  (cond ((< x y) -1)\n        ((even? x) (max (x y) (+ x y)))\n\
    \        (else (choose_num (+ x y) y))))\n", "  (cond [(= x y) -1]\n        [(even?\
    \ x) (+ x 2)]\n        [else (choose_num (+ x 1) y)]))\n", "  (cond ((< x y) -1)\n\
    \        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((<\
    \ x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((< x y) -1)\n        ((even? x) (max (+ x y) x))\n     \
    \   (else (max (+ x y) y))))\n", "  (cond ((or (< x y) (- (- x y) y))\n      \
    \   (if (= x y)\n             (- x y)\n             (- y x)))\n        (else (if\
    \ (even? (- x y))\n                 (- x y)\n                 (- y x))))))\n",
  "  (cond ((= x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((< x y) -1)\n        ((even? x) (even? y) (if (< x y) x\
    \ y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((or (< x y) (- (-\
    \ x y) y))\n         (- x))\n        ((= x y)\n         x)\n        (else\n  \
    \       (let ((x (- x y)))\n           (if (even? x)\n               (if (< x\
    \ y)\n                   (- x)\n                   (- y))\n               (- x))))))\n",
  "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((= x y) -1)\n        ((even? x) (even? y))\n        (else\
    \ (max (min x y) \n                   (choose_num (+ x 1) (+ y 1))))))\n", " \
    \ (cond ((< x y) -1)\n        ((even? x) (even? y))\n        (else (max (min x\
    \ y) (x+y)))))\n", "  (cond ((> x y) -1)\n        ((even? x) x)\n        (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n\
    \        (else (choose_num (+ x 1) y))))\n", "  (cond ((> x y) -1)\n        ((even?\
    \ x) x)\n        ((even? y) y)\n        (else (choose_num (+ x 1) (+ y 1)))))\n",
  "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((< x y) -1)\n        ((even? x) (max x y))\n        (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((= x y) x)\n \
    \       ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((<\
    \ x y) -1)\n        ((even? x) x)\n        ((even? y) y)\n        (else (choose_num\
    \ (+ x 1) (+ y 1)))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n     \
    \   (else (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even?\
    \ x) (even? y) (even? (+ x y)))\n        (else (choose_num (+ x y) y))))\n", " \
    \ (cond ((= x y) -1)\n        ((even? x) (max (+ x y) x))\n        (else (choose_num\
    \ (+ x y) y))))\n", "  (cond [(< x y) -1]\n        [(< y x) -1]\n        [(= x\
    \ y) 0]\n        [(= y x) 0]\n        [else (max (floor (/ x y)) (floor (/ y x)))\
    \ ]))\n", "  (cond [(< x y) -1]\n        [(= x y) x]\n        [(= y x) y]\n  \
    \      [else (max (min x y) \n                   (min (+ x 1) (+ y 1)))]))\n",
  "  (cond ((or (< x y) (- (- x y) y))\n         (if (= x y)\n             (- x y)\n\
    \             (- x y)))\n        (else (if (even? (- x y))\n                 (-\
    \ x y)\n                 (- x y))))))\n", "  (cond ((> x y) -1)\n        ((even?\
    \ x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((= x y) -1)\n \
    \       ((even? x) (max (+ x y) x))\n        (else (choose_num (+ x y) y))))\n",
  "  (cond ((> x y) (-1))\n        ((even? x) (even? y))\n        (else (max (min\
    \ x y) x))))\n", "  (cond [(= x y) -1]\n        [(even? (modulo x 2)) (modulo\
    \ x 2)]\n        [else (choose_num (+ x 1) y)]))\n", "  (cond [(= x y) x]\n  \
    \      [(even? x) (max (+ x y) -1)]\n        [else (max (+ x y) -1)]))\n", " \
    \ (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((> x y) -1)\n        ((even? x) x)\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond ((and (>= x y) \n               (= (mod x 2) 0))\n\
    \         (/ x 2))\n        ((and (>= x y) \n               (= (mod y 2) 0))\n\
    \         (/ y 2))\n        (else\n         (if (= x y)\n           (/ x 2)\n\
    \           (/ y 2))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n    \
    \    (else (choose_num (+ x 1) y))))\n", "  (cond ((> x y) -1)\n        ((even?\
    \ x) (max (x y) x))\n        (else (choose_num (+ x 1) y))))\n", "  (cond\n  \
    \  [(and (< x y) \n           (< y x)) x]\n    [(and (< y x) \n           (< x\
    \ y)) y]\n    [else -1]))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n \
    \       (else (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even?\
    \ x) (even? y))\n        (else (max (min x y) (x+y))))))\n", "  (cond ((< x y)\
    \ -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond\n\
    \    ((< x y) -1)\n    ((= x y) x)\n    ((= x y) y)\n    ((even? x) (max (+ x\
    \ y) x))\n    ((even? y) (max (+ x y) y))\n    (else (max (+ x y) (- (+ x y) y)))))\
    \ \n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        ((even?\
    \ y) y)\n        (else (choose_num (+ x 1) (+ y 1)))))\n", "  (cond\n    [(or\
    \ (< x y) (- (- x y) y))\n     (if (< x y) x y)]\n    [(< x y)\n     (if (< x\
    \ y) x y)]\n    [else\n     (if (< x y) x y)]))\n", "  (cond ((= x y) -1)\n  \
    \      ((even? x) (max (+ x y) x))\n        (else (choose_num (+ x y) y))))\n",
  "  (cond\n    [(and (number? x) (number? y)) (if (even? (- x y)) (- x y) (- y x))]\n\
    \    [(and (number? x) (number? y)) (if (even? (- x y)) (- x y) (- y x))]\n  \
    \  [else -1]))\n", "  (cond ((= x y) -1)\n        ((even? x) (cons x y))\n   \
    \     (else (choose_num (+ x 1) y))))\n", "  (cond ((and (integer? x) (integer?\
    \ y)) (if (even? (- x y)) (- x y) (- y x)))\n        ((and (integer? x) (not (integer?\
    \ y))) (if (even? (- x y)) (- x y) (- y x)))\n        (else -1)))\n", "  (cond\
    \ [(= x y) -1]\n        [(= x 0) -1]\n        [(= y 0) -1]\n        [(even? x)\
    \ (max (+ x y) 2)]\n        [else (max (+ x y) 2)]))\n", "  (cond ((< x y) -1)\n\
    \        ((= x y) x)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond [(< x y) -1]\n        [(< y x) -1]\n        [(= x y) 0]\n\
    \        [(= y x) 0]\n        [else (max (floor (/ (- x y) 2))\n             \
    \     (floor (/ (- y x) 2)))]))\n", "  (cond ((< x y) -1)\n        ((even? x)\
    \ (max (+ x y) x))\n        (else (choose_num (+ x y) y))))\n", "  (cond ((> x\
    \ y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", " \
    \ (cond ((or (< x y) (- (- x y) y))\n         (if (< x y) (- (- x y) y) -1))\n\
    \        ((= x y) y)\n        ((= x y) x)\n        (else (max (+ x y) (- (- x\
    \ y) y))))))\n", "  (cond [(< x y) -1]\n        [(< y x) -1]\n        [(even?\
    \ x) (max (+ x y) 2)]\n        [(even? y) (max (+ x y) 2)]\n        [else (max\
    \ (+ x y) 2)]))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond ((= x y) -1)\n        ((even? x) (+ x\
    \ y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n   \
    \     ((even? x) (max x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond\n\
    \    [(= x y) -1]\n    [(= (mod x 2) 0) (* x 2)] \n    [else (+ x 1)]))\n", " \
    \ (cond ((> x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond [(< x y) -1]\n        [(< y x) -1]\n        [(= (mod x 2)\
    \ 0) (+ x y)]\n        [else (choose_num (+ x 2) y)]))\n", "  (cond ((< x y) -1)\n\
    \        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond [(=\
    \ x y) -1]\n        [(even? x) (+ x 2)]\n        [else (choose_num (+ x 1) y)]))\n",
  "  (cond ((or (< x y) (- (- x y) y))\n         (if (= x y)\n             (- x y)\n\
    \             (- x y)))\n        (else (if (even? (- x y))\n                 (-\
    \ x y)\n                 (- x y))))))\n", "  (cond ((< x y) -1)\n        ((even?\
    \ x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n \
    \       ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((<\
    \ x y) -1)\n        ((even? x) x)\n        ((even? y) y)\n        (else (choose_num\
    \ (+ x 1) (+ y 1)))))\n", "  (cond ((or (< x y) (- (- x y) y))\n         (if (=\
    \ x y)\n             x\n             (if (even? (- x y))\n                 (-\
    \ x y)\n                 (- y x))))\n        (else -1)))\n", "  (cond ((or (<\
    \ x y) (- (- x y) y))\n         (if (< x y) -1 x))\n        ((< y x)\n       \
    \  (if (< x y) -1 x))\n        ((< x y)\n         (if (< x y) -1 x))\n       \
    \ (else\n         (if (< x y) -1 x))))\n", "  (cond ((< x y) -1)\n        ((even?\
    \ x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond [(= x y) -1]\n \
    \       [(even? x) (max (+ x y) 2)]\n        [else (max (+ x y) 1)]))\n", "  (cond\
    \ ((or (< x y) (- (- x y) y))\n         (if (< x y) (- (- x y) y) -1))\n     \
    \   ((even? (- x y))\n         (- x y))\n        (else\n         (if (< x y) (-\
    \ (- x y) y) -1))))\n", "  (cond ((> x y) -1)\n        ((even? x) x)\n       \
    \ (else (choose_num (+ x 1) y))))\n", "  (cond ((or (< x y) (- (- x y) y))\n \
    \        (if (< x y)\n             (- x y)\n             -1))\n        ((= x y)\n\
    \         x)\n        (else\n         (if (even? (modulo x 2))\n             (-\
    \ x y)\n             (- y x)))))\n", "  (cond\n    [(and (integer? x) (integer?\
    \ y)) (if (even? (- x y)) (- x y) (- y x))]\n    [else -1]))\n", "  (cond ((<\
    \ x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond ((> x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((< x y) -1)\n        ((even? x) (max (+ x y) x))\n     \
    \   (else (max (+ x y) y))))\n", "  (cond ((or (< x y) (- (- x y) y))\n      \
    \   (if (< x y)\n             (- x y)\n             y))\n        ((even? x)\n\
    \         (if (even? y)\n             (- x y)\n             y))\n        (else\n\
    \         (if (even? (- x y))\n             (- x y)\n             y))))\n", " \
    \ (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((and (>= x y) \n               (= (mod x 2) 0))\n      \
    \   (/ x 2))\n        ((and (>= x y) \n               (= (mod y 2) 0))\n     \
    \    (/ y 2))\n        (else\n         (/ x y))))\n", "  (cond\n    [(< x y) -1]\n\
    \    [(< y x) -1]\n    [(= x y) 0]\n    [(= y x) 0]\n    [else (max (floor (/\
    \ x y)) (floor (/ y x))) (max (floor (/ x y)) (floor (/ y x)))]))\n", "  (cond\
    \ ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond\n    [(= x y) -1]\n    [(even? (modulo x 2)) (modulo x 2)]\n    [else (choose_num\
    \ (+ x 1) y)]))\n", "  (cond\n    [(< x y) -1]\n    [(< y x) -1]\n    [(= x y)\
    \ 0]\n    [(= y x) 0]\n    [else (max (floor (/ (- x y) 2))\n              (floor\
    \ (/ (- y x) 2)))]))\n", "  (cond ((> x y) -1)\n        ((even? x) (even? y))\n\
    \        (else (max (+ x y) 2))))\n", "  (cond ((< x y) -1)\n        ((even? x)\
    \ x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((= x y) -1)\n    \
    \    ((even? x) (if (= x y) x y))\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((> x y) -1)\n        ((even? x) x)\n        ((even? y) y)\n\
    \        (else (choose_num (+ x 1) (+ y 1)))))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

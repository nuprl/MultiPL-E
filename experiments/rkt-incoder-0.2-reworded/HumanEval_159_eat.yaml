name: HumanEval_159_eat
language: rkt
prompt: "#lang racket\n\n;; You're a hungry rabbit, and you already have eaten a certain\
  \ number of carrots,\n;; but now you need to eat more carrots to complete the day's\
  \ meals.\n;; you should return a list of [ total number of eaten carrots after your\
  \ meals,\n;; the number of carrots left after your meals ]\n;; if there are not\
  \ enough remaining carrots, you will eat all remaining carrots, but will still be\
  \ hungry.\n;; Example:\n;; >>> (eat 5 6 10)\n;; (list 11 4)\n;; >>> (eat 4 8 9)\n\
  ;; (list 12 1)\n;; >>> (eat 1 10 10)\n;; (list 11 0)\n;; >>> (eat 2 11 5)\n;; (list\
  \ 7 0)\n;; Variables:\n;; @number : integer\n;; the number of carrots that you have\
  \ eaten.\n;; @need : integer\n;; the number of carrots that you need to eat.\n;;\
  \ @remaining : integer\n;; the number of remaining carrots thet exist in stock\n\
  ;; Constrain:\n;; * 0 <= number <= 1000\n;; * 0 <= need <= 1000\n;; * 0 <= remaining\
  \ <= 1000\n;; Have fun :)\n(define (eat number need remaining)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate eat))\n\
  \    (check-equal? (candidate 5 6 10) (list 11 4))\n    (check-equal? (candidate\
  \ 4 8 9) (list 12 1))\n    (check-equal? (candidate 1 10 10) (list 11 0))\n    (check-equal?\
  \ (candidate 2 11 5) (list 7 0))\n    (check-equal? (candidate 4 5 7) (list 9 2))\n\
  \    (check-equal? (candidate 4 5 1) (list 5 0))\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(or (= remaining 0) (= need 0))\n     (list number 0)]\n\
    \    [(= remaining 0)\n     (list number 0)]\n    [(= need 0)\n     (list number\
    \ 0)]\n    [else\n     (let ([carrots (- remaining need)])\n       (cond\n   \
    \      [(< carrots 0)\n          (list number 0)]\n         [(= carrots 0)\n \
    \         (list number 0)]\n         [else\n          (list number (+ number carrots))]))]))\n",
  "  (cond\n    [(= remaining 0) (list number 0)]\n    [(= remaining (- need number))\
    \ (list number 0)]\n    [else (cons (- number remaining) (cons number 0))]))\n",
  "  (cond\n    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(< remaining\
    \ 0)\n     (list 0 0)]\n    [(< number need)\n     (list 0 0)]\n    [else\n  \
    \   (cond\n       [(< remaining number)\n        (cond\n         [(< number need)\n\
    \          (cond\n           [(< number number)\n            (cond\n         \
    \    [(< number remaining)\n              (cond\n               [(< number remaining)\n\
    \                (list number remaining)]\n               [else\n            \
    \    (list number 0)]\n               )]\n             [else\n              (list\
    \ number 0)]\n             )]\n           [else\n            (list number 0)]\n\
    \         )]\n         [else\n          (list number 0)]\n       )]\n       [else\n\
    \        (list number 0)]\n     )]\n   ))\n", "  (cond\n    [(or (= remaining\
    \ 0) (= number 0))\n     (list 0 0)]\n    [(and (= remaining 0) (= number 0))\n\
    \     (list 0 0)]\n    [(and (= remaining 0) (< number need))\n     (list 0 0)]\n\
    \    [(and (= remaining 0) (> number need))\n     (list 0 0)]\n    [(and (= remaining\
    \ 0) (= number need))\n     (list 0 0)]\n    [(and (= remaining 0) (< number need)\
    \ (< number remaining))\n     (list (- number need) (- number remaining))]\n \
    \   [(and (= remaining 0) (> number need) (> number remaining))\n     (list 0\
    \ 0)]\n    [(and (= remaining 0) (= number need) (< number remaining))\n     (list\
    \ (- number need) (- number remaining))]\n    [(and (= remaining 0) (= number\
    \ need) (> number remaining))\n     (list 0 0)]\n    [(and (= remaining 0) (<\
    \ number need) (> number remaining))\n     (list 0 0)]\n    [(and (= remaining\
    \ 0) (> number need) (< number remaining))\n     (list 0 0)]\n    [(and (= remaining\
    \ 0) (> number need) (> number remaining))\n     (list 0 0)]\n    [(and (= remaining\
    \ 0) (= number need) (< number remaining))\n     (list (- number need) (- number\
    \ remaining))]\n    [(and (= remaining 0) (= number need) (> number remaining))\n\
    \     (list 0 0)]\n    [(and (= remaining 0) (< number need) (> number remaining))\n\
    \     (list 0 0)]\n    [(and (= remaining 0) (> number need) (< number remaining))\n\
    \     (list 0 0)]\n    [(and (= remaining 0) (> number need) (> number remaining))\n\
    \     (list 0 0)]\n    [(and (= remaining 0) (= number need) (< number remaining))\n\
    \     (list (- number need) (- number remaining))]\n    [(and (= remaining 0)\
    \ (= number need) (> number remaining))\n     (list 0 0)]\n    [(and (= remaining\
    \ 0) (< number need) (> number remaining))\n     (list 0 0)]\n    [(and (= remaining\
    \ 0) (> number need) (< number remaining))\n     (list 0 0)]\n    [(and (= remaining\
    \ 0) (> number need) (> number remaining))\n     (list 0 0)]\n    [(and (= remaining\
    \ 0) (= number need) (< number remaining))\n     (list (- number need) (- number\
    \ remaining))]\n", "  (cond\n    [(= remaining 0) (list number 0)]\n    [(= remaining\
    \ 0) (list number 0)]\n    [(= remaining 0) (list number 0)]\n    [else (cond\n\
    \            [(< need 0) (list number 0)]\n            [else (cond\n         \
    \           [(< number 0) (list number 0)]\n                    [else (cond\n\
    \                            [(< remaining 0) (list number 0)]\n             \
    \               [(< remaining 0) (list number 0)]\n                          \
    \  [(< remaining 0) (list number 0)]\n                            [(< remaining\
    \ 0) (list number 0)]\n                            [(< remaining 0) (list number\
    \ 0)]\n                            [(< remaining 0) (list number 0)]\n       \
    \                     [(< remaining 0) (list number 0)]\n                    \
    \        [(< remaining 0) (list number 0)]\n                            [(< remaining\
    \ 0) (list number 0)]\n                            [(< remaining 0) (list number\
    \ 0)]\n                            [(< remaining 0) (list number 0)]\n       \
    \                     [(< remaining 0) (list number 0)]\n                    \
    \        [(< remaining 0) (list number 0)]\n                            [(< remaining\
    \ 0) (list number 0)]\n                            [(< remaining 0) (list number\
    \ 0)]\n                            [(< remaining 0) (list number 0)]\n       \
    \                     [(< remaining 0) (list number 0)]\n                    \
    \        [(< remaining 0) (list number 0)]\n                            [(< remaining\
    \ 0) (list number 0)]\n                            [(< remaining 0) (list number\
    \ 0)]\n                            [(< remaining 0) (list number 0)]\n       \
    \                     [(< remaining 0) (list number 0)]\n                    \
    \        [(< remaining 0) (list number 0)]\n                            [(< remaining\
    \ 0) (list number 0)]\n                            [(< remaining 0) (list number\
    \ 0)]\n                            [(< remaining 0) (list number 0)]\n       \
    \                     [(< remaining 0) (list number 0)]\n                    \
    \        [(< remaining 0) (list number 0)]\n                            [(< remaining\
    \ 0) (list number 0)]\n                            [(< remaining 0) (list number\
    \ 0)]\n                            [(< remaining 0) (list number 0)]\n       \
    \                     [(< remaining 0) (list number 0)]\n                    \
    \        [(< remaining 0) (list number 0)]\n                            [(< remaining\
    \ 0) (list number 0)]\n                            [(< remaining 0) (list number\
    \ 0)]\n                            [(< remaining 0) (list number 0)]\n       \
    \                     [(< remaining 0) (list number 0)]\n                    \
    \        [(< remaining 0) (list number 0)]\n                            [(< remaining\
    \ 0) (list number 0)]\n                            [(< remaining 0) (list number\
    \ 0)]", "  (cond\n    [(and (<= 0 number 1000) (<= 0 need 1000) (<= 0 remaining\
    \ 1000)) (list 0 0)]\n    [(and (<= 0 number 1000) (<= 0 need 1000) (> remaining\
    \ 0)) (list 0 0)]\n    [(and (<= 0 number 1000) (> need 0) (<= 0 remaining 1000))\
    \ (list 0 0)]\n    [(and (<= 0 number 1000) (> need 0) (> remaining 0)) (list\
    \ 0 0)]\n    [(and (> number 0) (<= 0 need 1000) (<= 0 remaining 1000)) (list\
    \ 0 0)]\n    [(and (> number 0) (<= 0 need 1000) (> remaining 0)) (list 0 0)]\n\
    \    [(and (> number 0) (> need 0) (<= 0 remaining 1000)) (list 0 0)]\n    [(and\
    \ (> number 0) (> need 0) (> remaining 0)) (list 0 0)]\n    [(and (> number 0)\
    \ (> need 0) (<= remaining 1000)) (list 0 0)]\n    [(and (> number 0) (> need\
    \ 0) (> remaining 0)) (list 0 0)]\n    [(and (> number 0) (> need 0) (<= remaining\
    \ 1000)) (list 0 0)]\n    [(and (> number 0) (> need 0) (> remaining 0)) (list\
    \ 0 0)]\n    [(and (> number 0) (> need 0) (<= remaining 1000)) (list 0 0)]\n\
    \    [(and (> number 0) (> need 0) (> remaining 0)) (list 0 0)]\n    [(and (>\
    \ number 0) (> need 0) (<= remaining 1000)) (list 0 0)]\n    [(and (> number 0)\
    \ (> need 0) (> remaining 0)) (list 0 0)]\n    [(and (> number 0) (> need 0) (<=\
    \ remaining 1000)) (list 0 0)]\n    [(and (> number 0) (> need 0) (> remaining\
    \ 0)) (list 0 0)]\n    [(and (> number 0) (> need 0) (<= remaining 1000)) (list\
    \ 0 0)]\n    [(and (> number 0) (> need 0) (> remaining 0)) (list 0 0)]\n    [(and\
    \ (> number 0) (> need 0) (<= remaining 1000)) (list 0 0)]\n    [(and (> number\
    \ 0) (> need 0) (> remaining 0)) (list 0 0)]\n    [(and (> number 0) (> need 0)\
    \ (<= remaining 1000)) (list 0 0)]\n    [(and (> number 0) (> need 0) (> remaining\
    \ 0)) (list 0 0)]\n    [(and (> number 0) (> need ", "  (cond\n    [(and (<= 0\
    \ number 1000) (<= 0 need 1000) (<= 0 remaining 1000)) (list 0 0)]\n    [(and\
    \ (<= 0 number 1000) (<= 0 need 1000) (> remaining 0)) (list 0 0)]\n    [(and\
    \ (<= 0 number 1000) (> need 0) (<= 0 remaining 1000)) (list 0 0)]\n    [(and\
    \ (<= 0 number 1000) (> need 0) (> remaining 0)) (list 0 0)]\n    [(and (> number\
    \ 0) (<= 0 need 1000) (<= 0 remaining 1000)) (list 0 0)]\n    [(and (> number\
    \ 0) (<= 0 need 1000) (> remaining 0)) (list 0 0)]\n    [(and (> number 0) (>\
    \ need 0) (<= 0 remaining 1000)) (list 0 0)]\n    [(and (> number 0) (> need 0)\
    \ (> remaining 0)) (list 0 0)]\n    [(and (<= 0 number 1000) (<= 0 need 1000)\
    \ (> remaining 1000)) (list 0 0)]\n    [(and (<= 0 number 1000) (> need 0) (<=\
    \ 0 remaining 1000)) (list 0 0)]\n    [(and (<= 0 number 1000) (> need 0) (> remaining\
    \ 0)) (list 0 0)]\n    [(and (> number 0) (<= 0 need 1000) (<= 0 remaining 1000))\
    \ (list 0 0)]\n    [(and (> number 0) (<= 0 need 1000) (> remaining 0)) (list\
    \ 0 0)]\n    [(and (> number 0) (> need 0) (<= 0 remaining 1000)) (list 0 0)]\n\
    \    [(and (> number 0) (> need 0) (> remaining 0)) (list 0 0)]\n    [(and (<=\
    \ 0 number 1000) (<= 0 need 1000) (> remaining 1000)) (list 0 0)]\n    [(and (<=\
    \ 0 number 1000) (> need 0) (<= 0 remaining 1000)) (list 0 0)]\n    [(and (<=\
    \ 0 number 1000) (> need 0) (> remaining 0)) (list 0 0)]\n    [(and (> number\
    \ 0) (<= 0 need 1000) (<= 0 remaining 1000)) (list 0 0)]\n    [(and (> number\
    \ 0) (<= 0 need 1000) (> remaining 0)) (list 0 0)]\n    [(and (> number 0) (>\
    \ need 0) (<= 0 remaining 1000)) (list 0 0)]\n    [(and (> number 0) (> need 0)\
    \ (> remaining 0)) (list 0 0)]\n    [(and (<= 0 number 1000) (<= 0 need 1000)\
    \ (> remaining 1000)) (", "  (cond\n    [(and (<= number 1000) (<= need 1000)\
    \ (<= remaining 1000)) (list number need)]\n    [(and (<= number 1000) (<= need\
    \ 0) (<= remaining 1000)) (list number need)]\n    [(and (<= number 0) (<= need\
    \ 1000) (<= remaining 1000)) (list number need)]\n    [(and (<= number 0) (<=\
    \ need 0) (<= remaining 1000)) (list number need)]\n    [else (list number need)]))\n",
  "  (cond\n    [(and (<= number 1000) (<= need 1000) (<= remaining 1000)) (list number\
    \ need)]\n    [else (list number need)]))\n", "  (cond\n    [(or (= remaining\
    \ 0) (= number 0))\n     (list 0 0)]\n    [(and (< remaining 1000) (< number 1000))\n\
    \     (cond\n       [(< need 0)\n        (cond\n         [(= remaining 0)\n  \
    \        (list 0 0)]\n         [else\n          (list number (- need remaining))]\n\
    \        )]\n       [(< need (- remaining number))\n        (cond\n         [(=\
    \ remaining 0)\n          (list 0 0)]\n         [else\n          (list number\
    \ (- need remaining))]\n        )]\n       [else\n        (cond\n         [(=\
    \ remaining 0)\n          (list 0 0)]\n         [else\n          (list number\
    \ (- remaining remaining))]\n        )]\n      )]\n    [else\n     (cond\n   \
    \    [(= remaining 0)\n        (cond\n         [(= number 0)\n          (list\
    \ 0 0)]\n         [else\n          (list number (- remaining remaining))]\n  \
    \      )]\n       [(< need (- remaining number))\n        (cond\n         [(=\
    \ remaining 0)\n          (list 0 0)]\n         [else\n          (list number\
    \ (- remaining remaining))]\n        )]\n       [else\n        (cond\n       \
    \  [(= remaining 0)\n          (list 0 0)]\n         [else\n          (list number\
    \ (- remaining remaining))]\n        )]\n      )]\n  ))\n", "  (cond\n    [(or\
    \ (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(< remaining 0)\n    \
    \ (list number 0)]\n    [(< number need)\n     (list number (- need remaining))]\n\
    \    [else\n     (list number (- remaining number))]))\n", "  (cond\n    [(= remaining\
    \ 0) (list number 0)]\n    [(= remaining (- need number)) (list number 0)]\n \
    \   [else (cons (- remaining (- need number)) (eat number (- need number) (remaining\
    \ (remaining - number))))]))\n", "  (cond\n    [(or (= remaining 0) (= number\
    \ 0))\n     (list 0 0)]\n    [(= remaining 0)\n     (list number 0)]\n    [(=\
    \ number 0)\n     (list 0 0)]\n    [else\n     (cond\n       [(= remaining need)\n\
    \        (list number 0)]\n       [else\n        (cond\n          [(< remaining\
    \ need)\n           (cond\n             [(< number 0)\n               (list 0\
    \ 0)]\n             [else\n               (list number (- remaining need))]\n\
    \             ])]\n         ])]\n     ]))\n", "  (cond\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining (- need number)) (list number 0)]\n    [else (cons\
    \ (- remaining (- need number)) (eat number (- need number) (remaining 0)))]))\n",
  "  (cond\n    [(and (<= 0 number 1000) (<= 0 need 1000) (<= 0 remaining 1000)) (list\
    \ 0 0)]\n    [(and (<= 0 number 1000) (<= 0 need 1000) (> remaining 0)) (list\
    \ 0 0)]\n    [(and (<= 0 number 1000) (> need 0) (> remaining 0)) (list 0 0)]\n\
    \    [(and (> number 0) (> need 0) (> remaining 0)) (list 0 0)]\n    [(and (>\
    \ number 0) (> need 0) (<= remaining 0)) (list 0 0)]\n    [(and (> number 0) (<=\
    \ need 0) (<= remaining 0)) (list 0 0)]\n    [(and (> number 0) (<= need 0) (>\
    \ remaining 0)) (list 0 0)]\n    [(and (> number 0) (<= need 0) (> remaining 0))\
    \ (list 0 0)]\n    [(and (<= 0 number 1000) (> need 0) (> remaining 0)) (list\
    \ 0 0)]\n    [(and (<= 0 number 1000) (> need 0) (<= remaining 0)) (list 0 0)]\n\
    \    [(and (<= 0 number 1000) (<= need 0) (<= remaining 0)) (list 0 0)]\n    [(and\
    \ (<= 0 number 1000) (<= need 0) (> remaining 0)) (list 0 0)]\n    [(and (<= 0\
    \ number 1000) (<= need 0) (> remaining 0)) (list 0 0)]\n    [(and (> number 0)\
    \ (> need 0) (> remaining 0)) (list 0 0)]\n    [(and (> number 0) (> need 0) (<=\
    \ remaining 0)) (list 0 0)]\n    [(and (> number 0) (> need 0) (<= remaining 0))\
    \ (list 0 0)]\n    [(and (> number 0) (<= need 0) (<= remaining 0)) (list 0 0)]\n\
    \    [(and (> number 0) (<= need 0) (> remaining 0)) (list 0 0)]\n    [(and (>\
    \ number 0) (<= need 0) (> remaining 0)) (list 0 0)]\n    [(and (<= 0 number 1000)\
    \ (> need 0) (<= remaining 0)) (list 0 0)]\n    [(and (<= 0 number 1000) (> need\
    \ 0) (> remaining 0)) (list 0 0)]\n    [(and (<= 0 number 1000) (> need 0) (<=\
    \ remaining 0)) (list 0 0)]\n    [(and (<= 0 number 1000) (<= need 0) (<= remaining\
    \ 0)) (list 0 0)]\n    [(and (<= 0 number 1000) (<= need 0) (> remaining 0)) (list\
    \ 0 0)", "  (cond\n    [(and (<= remaining 0) (<= need 0))\n     (list number\
    \ 0)]\n    [(<= remaining 0)\n     (list number 0)]\n    [else\n     (let ([carrots\
    \ (- remaining need)])\n       (cond\n         [(< carrots 0)\n          (list\
    \ number 0)]\n         [else\n          (cond\n            [(< carrots 1)\n  \
    \           (list number (- carrots 1))]\n            [else\n             (cond\n\
    \              [(< carrots 2)\n               (list number (- carrots 2))]\n \
    \             [else\n               (cond\n                 [(< carrots 3)\n \
    \                 (list number (- carrots 3))]\n                 [else\n     \
    \             (cond\n                    [else\n                     (list number\
    \ (- carrots 4))]\n                    [else\n                     (list number\
    \ (- carrots 5))]\n                    [else\n                     (list number\
    \ (- carrots 6))]\n                    [else\n                     (list number\
    \ (- carrots 7))])])])])])]))\n", "  (cond\n    [(and (<= number 1000) (<= need\
    \ 1000) (<= remaining 1000)\n          (= (mod number need) 0))\n     (list number\
    \ need)]\n    [(and (<= number 1000) (<= need 1000) (<= remaining 1000)\n    \
    \      (= (mod number need) 1))\n     (list number need (- need (mod number need)))]\n\
    \    [(and (<= number 1000) (<= need 1000) (<= remaining 1000)\n          (= (mod\
    \ number need) 2))\n     (list number need (- need (mod number need) (- need (mod\
    \ number need))))]\n    [(and (<= number 1000) (<= need 1000) (<= remaining 1000)\n\
    \          (= (mod number need) 3))\n     (list number need (- need (mod number\
    \ need) (- need (mod number need) (- need (mod number need))))]\n    [(and (<=\
    \ number 1000) (<= need 1000) (<= remaining 1000)\n          (= (mod number need)\
    \ 4))\n     (list number need (- need (mod number need) (- need (mod number need)\
    \ (- need (mod number need) (- need (mod number need))))]\n    [(and (<= number\
    \ 1000) (<= need 1000) (<= remaining 1000)\n          (= (mod number need) 5))\n\
    \     (list number need (- need (mod number need) (- need (mod number need) (-\
    \ need (mod number need) (- need (mod number need) (- need (mod number need))))])]\n\
    \    [(and (<= number 1000) (<= need 1000) (<= remaining 1000)\n          (= (mod\
    \ number need) 6))\n     (list number need (- need (mod number need) (- need (mod\
    \ number need) (- need (mod number need) (- need (mod number need) (- need (mod\
    \ number need))))])]\n    [(and (<= number 1000) (<= need 1000) (<= remaining\
    \ 1000)\n          (= (mod number need) 7))\n     (list number need (- need (mod\
    \ number need) (- need (mod number need) (- need (mod number need) (- need (mod\
    \ number need) (- need (mod number need))))])]\n    [(and (<= number 1000) (<=\
    \ need 1000) (<= remaining 1000)\n          (= (mod number need) 8))\n     (list\
    \ number need (- need (mod number need) (- need (mod number need) (- need (mod\
    \ number need) (- need (mod number need))))", "  (cond\n    [(and (<= remaining\
    \ 0) (<= need 0))\n     (list number 0)]\n    [(and (<= remaining 0) (< need 0))\n\
    \     (list number 0)]\n    [(and (<= remaining 0) (> need 0))\n     (list number\
    \ 0)]\n    [else\n     (let ([carrots (- remaining need)])\n       (cond\n   \
    \      [(< carrots 0)\n          (list number 0)]\n         [(< carrots 1)\n \
    \         (list number carrots)]\n         [else\n          (list number (+ carrots\
    \ 1))]))]))\n", "  (cond\n    [(= remaining 0) (list number 0)]\n    [(= remaining\
    \ need) (list number 0)]\n    [else (cond\n             [(= remaining (- need\
    \ number)) (list number 0)]\n             [else (cond\n                      [(=\
    \ remaining (- need (- number need))) (list number 0)]\n                     \
    \ [else (cond\n                               [(= remaining (- need (- number\
    \ need) (- number remaining))) (list number 0)]\n                            \
    \   [else (cond\n                                        [(= remaining (- need\
    \ (- number need) (- number remaining) (- number remaining))) (list number 0)]\n\
    \                                        [else (cond\n                       \
    \                          [(= remaining (- need (- number need) (- number remaining)\
    \ (- number remaining) (- number remaining))) (list number 0)]\n             \
    \                                    [else (cond\n                           \
    \                              [(= remaining (- need (- number need) (- number\
    \ remaining) (- number remaining) (- number remaining) (- number remaining)))\
    \ (list number 0)]\n                                                         [else\
    \ (cond\n                                                                   [(=\
    \ remaining (- need (- number need) (- number remaining) (- number remaining)\
    \ (- number remaining) (- number remaining) (- number remaining))) (list number\
    \ 0)]\n                                                                   [else\
    \ (cond\n                                                                    \
    \      [(= remaining (- need (- number need) (- number remaining) (- number remaining)\
    \ (- number remaining) (- number remaining) (- number remaining) (- number remaining)))\
    \ (list number 0)]\n                                                         \
    \                 [else (cond\n                                              \
    \                                   [(= remaining (- need (- number need) (- number\
    \ remaining) (- number remaining) (- number remaining) (- number remaining) (-\
    \ number remaining) (- number remaining) (- number remaining))) (list number 0)]\n\
    \                                                                            \
    \     [else (cond\n                                                          \
    \                                 [(= remaining (- need (- number need) (- number\
    \ remaining) (- number remaining) (- number remaining) (- number remaining) (-\
    \ number remaining) (- number remaining) (- number remaining) (- number remaining)))\
    \ (list number 0)]\n                                                         \
    \                                  [else (cond\n                             \
    \                                                                      [(= remaining\
    \ (- need (- number need) (- number remaining) (- number remaining) (- number\
    \ remaining) (- number remaining) (- number remaining) (- number remaining) (-\
    \ number remaining) (- number remaining) (- number remaining))) (list number 0)]\n\
    \                                                                            \
    \                       [else (cond\n                                        \
    \                                                                  [(= remaining\
    \ (- need (- number need) (- number remaining) (- number remaining) (- number\
    \ remaining) (- number remaining) (- number ", "  (cond\n    [(= remaining 0)\
    \ (list number 0)]\n    [(= remaining need) (list number 0)]\n    [else (cond\n\
    \             [(= remaining (- need number)) (list number 0)]\n             [else\
    \ (cond\n                      [(= remaining (- need (- number remaining))) (list\
    \ number 0)]\n                      [else (cond\n                            \
    \  [(= remaining (- need (- number remaining) (- number need))) (list number 0)]\n\
    \                              [else (cond\n                                 \
    \     [(= remaining (- need (- number remaining) (- number need) (- number remaining)))\
    \ (list number 0)]\n                                      [else (cond\n      \
    \                                        [(= remaining (- need (- number remaining)\
    \ (- number need) (- number remaining) (- number need))) (list number 0)]\n  \
    \                                            [else (cond\n                   \
    \                                   [(= remaining (- need (- number remaining)\
    \ (- number need) (- number remaining) (- number need) (- number remaining)))\
    \ (list number 0)]\n                                                      [else\
    \ (cond\n                                                              [(= remaining\
    \ (- need (- number remaining) (- number need) (- number remaining) (- number\
    \ need) (- number remaining) (- number need))) (list number 0)]\n            \
    \                                                  [else (cond\n             \
    \                                                       [(= remaining (- need\
    \ (- number remaining) (- number need) (- number remaining) (- number need) (-\
    \ number remaining) (- number need) (- number remaining))) (list number 0)]\n\
    \                                                                    [else (cond\n\
    \                                                                          [(=\
    \ remaining (- need (- number remaining) (- number need) (- number remaining)\
    \ (- number need) (- number remaining) (- number need) (- number remaining) (-\
    \ number need))) (list number 0)]\n                                          \
    \                                [else (cond\n                               \
    \                                                 [else (cond\n              \
    \                                                                           [(=\
    \ remaining (- need (- number remaining) (- number need) (- number remaining)\
    \ (- number need) (- number remaining) (- number need) (- number remaining) (-\
    \ number need) (- number remaining))) (list number 0)]\n                     \
    \                                                                    [else (cond\n\
    \                                                                            \
    \                     [(= remaining (- need (- number remaining) (- number need)\
    \ (- number remaining) (- number need) (- number remaining) (- number need) (-\
    \ number remaining) (- number need) (- number remaining) (- number need))) (list\
    \ number 0)]\n                                                               \
    \                                  [else (cond\n                             \
    \                                                                            [(=\
    \ remaining (- need (- number remaining) (- number need) (- number remaining)\
    \ (- number need) (- number ", "  (cond\n    [(and (<= 0 number 1000) (<= 0 need\
    \ 1000) (<= 0 remaining 1000)) (error \"Invalid input\")]\n    [(and (<= 0 number\
    \ 1000) (<= 0 need 1000) (<= 0 remaining 0)) (list number need)]\n    [(and (<=\
    \ 0 number 1000) (<= 0 need 0) (<= 0 remaining 1000)) (list number need)]\n  \
    \  [(and (<= 0 number 1000) (<= 0 need 1000) (<= 0 remaining 0)) (list number\
    \ need)]\n    [(and (<= 0 number 1000) (<= 0 need 0) (<= 0 remaining 0)) (list\
    \ number need)]\n    [(and (<= 0 number 0) (<= 0 need 1000) (<= 0 remaining 1000))\
    \ (list need number)]\n    [(and (<= 0 number 0) (<= 0 need 1000) (<= 0 remaining\
    \ 0)) (list need number)]\n    [(and (<= 0 number 0) (<= 0 need 0) (<= 0 remaining\
    \ 1000)) (list need number)]\n    [(and (<= 0 number 0) (<= 0 need 0) (<= 0 remaining\
    \ 0)) (list need number)]\n    [(and (<= 0 number 0) (<= 0 need 0) (<= 0 remaining\
    \ 0)) (list need number)]\n    [else (cond\n            [(<= 0 remaining 0) (list\
    \ number need)]\n            [else (cond\n                    [(<= 0 remaining\
    \ 1000) (list number need)]\n                    [else (cond\n               \
    \             [(<= 0 remaining 0) (list number need)]\n                      \
    \      [else (cond\n                                    [(<= 0 remaining 1000)\
    \ (list number need)]\n                                    [else (cond\n     \
    \                                       [(<= 0 remaining 0) (list number need)]\n\
    \                                            [else (cond\n                   \
    \                                 [(<= 0 remaining 1000) (list number need)]\n\
    \                                                    [else (cond\n           \
    \                                                 [(<= 0 remaining 0) (list number\
    \ need)]\n                                                            [else (cond\n\
    \                                                                    [(<= 0 remaining\
    \ 1000) (list number need)]\n                                                \
    \                    [else (cond\n                                           \
    \                                 [(<= 0 remaining 0) (list number need)]\n  \
    \                                                                          [else\
    \ (cond\n                                                                    \
    \    [(<= 0 remaining 1000) (list number need)]\n                            \
    \                                            [else (cond\n                   \
    \                                                             [(<= 0 remaining\
    \ 0) (list number need)]\n                                                   \
    \                             [else (cond\n                                  \
    \                                      [(<= 0 remaining 1000) (list number need)]\n\
    \                                                                        [else\
    \ (cond\n                                                                    \
    \            [(<= 0 remaining 0) (list number need)]\n                       \
    \                                                         [else (cond\n      \
    \                                                                  [(<= 0 remaining\
    \ 1000) (list number need)]\n                                                \
    \                        ", "  (cond\n    [(and (<= remaining 0) (<= need 0))\n\
    \     (list number 0)]\n    [(and (<= remaining 0) (< need 0))\n     (list number\
    \ 0)]\n    [(and (<= remaining 0) (> need 0))\n     (list number 0)]\n    [else\n\
    \     (cond\n       [(< remaining number)\n        (cons (- remaining number)\
    \ (eat number (- need number) remaining))]\n       [(< remaining number)\n   \
    \     (cons (- remaining number) (eat number (- need number) remaining))]\n  \
    \     [(< remaining number)\n        (cons (- remaining number) (eat number (-\
    \ need number) remaining))]\n       [(< remaining number)\n        (cons (- remaining\
    \ number) (eat number (- need number) remaining))]\n       [(< remaining number)\n\
    \        (cons (- remaining number) (eat number (- need number) remaining))]\n\
    \       [(< remaining number)\n        (cons (- remaining number) (eat number\
    \ (- need number) remaining))]\n       [(< remaining number)\n        (cons (-\
    \ remaining number) (eat number (- need number) remaining))]\n       [(< remaining\
    \ number)\n        (cons (- remaining number) (eat number (- need number) remaining))]\n\
    \       [(< remaining number)\n        (cons (- remaining number) (eat number\
    \ (- need number) remaining))]\n       [(< remaining number)\n        (cons (-\
    \ remaining number) (eat number (- need number) remaining))]\n       [(< remaining\
    \ number)\n        (cons (- remaining number) (eat number (- need number) remaining))]\n\
    \       [(< remaining number)\n        (cons (- remaining number) (eat number\
    \ (- need number) remaining))]\n       [(< remaining number)\n        (cons (-\
    \ remaining number) (eat number (- need number) remaining))]\n       [(< remaining\
    \ number)\n        (cons (- remaining number) (eat number (- need number) remaining))]\n\
    \       [(< remaining number)\n        (cons (- remaining number) (eat number\
    \ (- need number) remaining))]\n       [(< remaining number)\n        (cons (-\
    \ remaining number) (eat number (- need number) remaining))]\n       [(< remaining\
    \ number)\n        (cons (- remaining number) (eat number (- need number) remaining))]\n\
    \       [(< remaining number)\n        (cons (- remaining number) (eat number\
    \ (- need number) remaining))]\n       [(< remaining number)\n        (cons (-\
    \ remaining number) (eat number (- need number) remaining))]\n       [(< remaining\
    \ number)\n        (cons (- remaining number) (eat number (- need number) remaining))]\n\
    \       [(< remaining number)\n        (cons (- remaining number) (eat number\
    \ (- need number) remaining))]\n       [(< remaining number)\n        (cons (-\
    \ remaining ", "  (cond\n    [(= remaining 0) (list number 0)]\n    [(= remaining\
    \ need) (list number 0)]\n    [else (cond\n             [(< remaining need) (cons\
    \ (- remaining need) (eat remaining (- need number) 0))]\n             [(< remaining\
    \ 0) (cons remaining (eat remaining need 0))]\n             [else (cons (- remaining\
    \ need) (eat remaining need 0))])]))\n", "  (cond\n    [(or (= remaining 0) (=\
    \ number 0))\n     (list 0 0)]\n    [(= remaining 0)\n     (list number 0)]\n\
    \    [(= number 0)\n     (list 0 0)]\n    [else\n     (cond\n       [(< need (-\
    \ remaining number))\n        (list 0 0)]\n       [(< remaining 0)\n        (list\
    \ number 0)]\n       [(< number 0)\n        (list 0 0)]\n       [else\n      \
    \  (cond\n          [(< remaining number)\n           (list number (- remaining\
    \ number))]\n          [else\n           (list number (- remaining number))])])]))\n",
  "  (cond\n    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(= remaining\
    \ 0)\n     (list number 0)]\n    [(= number 0)\n     (list 0 0)]\n    [else\n\
    \     (cond\n       [(< need (- remaining number))\n        (list remaining 0)]\n\
    \       [(< remaining 0)\n        (list 0 0)]\n       [else\n        (cond\n \
    \         [(< remaining (- number need))\n           (list number 0)]\n      \
    \    [(< need (- remaining number))\n           (list remaining 0)]\n        \
    \  [else\n           (cond\n             [(< remaining (- number need))\n    \
    \           (list number 0)]\n             [(< need (- remaining number))\n  \
    \             (list remaining 0)]\n             [else\n               (cond\n\
    \                 [(< remaining (- number need))\n                   (list number\
    \ 0)]\n                 [(< need (- remaining number))\n                   (list\
    \ remaining 0)]\n                 [else\n                   (cond\n          \
    \           [(< remaining (- number need))\n                       (list number\
    \ 0)]\n                     [(< need (- remaining number))\n                 \
    \      (list remaining 0)]\n                     [else\n                     \
    \  (cond\n                         [(< remaining (- number need))\n          \
    \                 (list number 0)]\n                         [(< need (- remaining\
    \ number))\n                           (list remaining 0)]\n                 \
    \        [else\n                           (cond\n                           \
    \  [(< remaining (- number need))\n                               (list number\
    \ 0)]\n                             [(< need (- remaining number))\n         \
    \                      (list remaining 0)]\n                             [else\n\
    \                               (cond\n                                 [(< remaining\
    \ (- number need))\n                                   (list number 0)]\n    \
    \                             [(< need (- remaining number))\n               \
    \                    (list remaining 0)]\n                                 [else\n\
    \                                   (cond\n                                  \
    \   [(< remaining (- number need))\n                                       (list\
    \ number 0)]\n                                     [(< need (- remaining number))\n\
    \                                       (list remaining 0)]\n                \
    \                     [else\n                                       (cond\n  \
    \                                       [(< remaining (- number need))\n     \
    \                                      (list number 0)]\n                    \
    \                     [(< need (- remaining number))\n                       \
    \                    (list remaining 0)]\n                                   \
    \      [else\n                                           (cond\n             \
    \                                [(< remaining (- number need))\n            \
    \                                  (list number 0)]\n                        \
    \                     [(< need (- remaining number))\n                       \
    \                       (list remaining 0)]\n                                \
    \             [else\n                                               (cond\n  \
    \                                               [(< remaining (- number need))\n",
  "  (cond\n    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(= remaining\
    \ 0)\n     (list number 0)]\n    [(= number 0)\n     (list 0 0)]\n    [else\n\
    \     (cond\n       [(< need (- remaining number))\n        (cond\n         [(<\
    \ remaining 0)\n          (list number 0)]\n         [else\n          (list number\
    \ (- remaining number))])]\n       [(< need (- remaining number))\n        (cond\n\
    \         [(< remaining 0)\n          (list 0 0)]\n         [else\n          (list\
    \ 0 (- remaining number))])]\n       [else\n        (cond\n         [(< remaining\
    \ 0)\n          (list 0 0)]\n         [else\n          (list 0 (- remaining number))])]\n\
    \       ])]))\n", "  (cond\n    [(= remaining 0) (list number 0)]\n    [(= remaining\
    \ 1) (list number 1)]\n    [else (cons (- remaining (* number need)) (eat number\
    \ (+ need 1) (- remaining need)))]))\n", "  (cond\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining (- need number)) (list number 0)]\n    [else (cond\
    \ [(= (modulo number remaining) 0) (list number 0)]\n               [(= (modulo\
    \ number remaining) 1) (list (+ number 1) (- remaining 1))]\n               [else\
    \ (cond [(= (modulo number remaining) 2) (list (+ number 1) (- remaining 2))]\n\
    \                         [(= (modulo number remaining) 3) (list (+ number 1)\
    \ (- remaining 3))]\n                         [(= (modulo number remaining) 4)\
    \ (list (+ number 1) (- remaining 4))]\n                         [(= (modulo number\
    \ remaining) 5) (list (+ number 1) (- remaining 5))]\n                       \
    \  [(= (modulo number remaining) 6) (list (+ number 1) (- remaining 6))]\n   \
    \                      [(= (modulo number remaining) 7) (list (+ number 1) (-\
    \ remaining 7))])])]))\n", "  (cond\n    [(and (integer? number) \n          (integer?\
    \ need))\n     (cond\n       [(<= remaining 0)\n        (list 0 0)]\n       [(<=\
    \ remaining (- need number))\n        (list number (- remaining number))]\n  \
    \     [else\n        (list number (- remaining number))]\n       )]\n    [else\n\
    \     (cond\n       [(<= remaining 0)\n        (list 0 0)]\n       [(<= remaining\
    \ (- need number))\n        (list number (- remaining number))]\n       [else\n\
    \        (list number (- remaining number))]\n       )]\n    [else\n     (cond\n\
    \       [(<= remaining 0)\n        (list 0 0)]\n       [(<= remaining (- need\
    \ number))\n        (list number (- remaining number))]\n       [else\n      \
    \  (list number (- remaining number))]\n       )]\n    [else\n     (cond\n   \
    \    [(<= remaining 0)\n        (list 0 0)]\n       [(<= remaining (- need number))\n\
    \        (list number (- remaining number))]\n       [else\n        (list number\
    \ (- remaining number))]\n       )]\n    [else\n     (cond\n       [(<= remaining\
    \ 0)\n        (list 0 0)]\n       [(<= remaining (- need number))\n        (list\
    \ number (- remaining number))]\n       [else\n        (list number (- remaining\
    \ number))]\n       )]\n    [else\n     (cond\n       [(<= remaining 0)\n    \
    \    (list 0 0)]\n       [(<= remaining (- need number))\n        (list number\
    \ (- remaining number))]\n       [else\n        (list number (- remaining number))]\n\
    \       )]\n    [else\n     (cond\n       [(<= remaining 0)\n        (list 0 0)]\n\
    \       [(<= remaining (- need number))\n        (list number (- remaining number))]\n\
    \       [else\n        (list number (- remaining number))]\n       )]\n    [else\n\
    \     (cond\n       [(<= remaining 0)\n        (list 0 0)]\n       [(<= remaining\
    \ (- need number))\n        (list number (- remaining number))]\n       [else\n\
    \        (list number (- remaining number))]\n       )]\n    [else\n     (cond\n\
    \       [(<= remaining 0)\n        (list 0 0)]\n       [(<= remaining (- need\
    \ number))\n        (list number (- remaining number))]\n       [else\n      \
    \  (list number (- remaining number))]\n       )]\n    [else\n     (cond\n   \
    \    [(<= remaining 0)\n        (list 0 0)]\n       [(<= remaining (- need number))\n\
    \        (list number (- remaining number))]\n       [else", "  (cond\n    [(or\
    \ (= remaining 0) (= need 0))\n     (list number 0)]\n    [(or (= remaining 0)\
    \ (= need 0))\n     (list number 0)]\n    [(or (= remaining 0) (= need 0))\n \
    \    (list number 0)]\n    [(or (= remaining 0) (= need 0))\n     (list number\
    \ 0)]\n    [(or (= remaining 0) (= need 0))\n     (list number 0)]\n    [(or (=\
    \ remaining 0) (= need 0))\n     (list number 0)]\n    [(or (= remaining 0) (=\
    \ need 0))\n     (list number 0)]\n    [(or (= remaining 0) (= need 0))\n    \
    \ (list number 0)]\n    [(or (= remaining 0) (= need 0))\n     (list number 0)]\n\
    \    [(or (= remaining 0) (= need 0))\n     (list number 0)]\n    [(or (= remaining\
    \ 0) (= need 0))\n     (list number 0)]\n    [(or (= remaining 0) (= need 0))\n\
    \     (list number 0)]\n    [(or (= remaining 0) (= need 0))\n     (list number\
    \ 0)]\n    [(or (= remaining 0) (= need 0))\n     (list number 0)]\n    [(or (=\
    \ remaining 0) (= need 0))\n     (list number 0)]\n    [(or (= remaining 0) (=\
    \ need 0))\n     (list number 0)]\n    [(or (= remaining 0) (= need 0))\n    \
    \ (list number 0)]\n    [(or (= remaining 0) (= need 0))\n     (list number 0)]\n\
    \    [(or (= remaining 0) (= need 0))\n     (list number 0)]\n    [(or (= remaining\
    \ 0) (= need 0))\n     (list number 0)]\n    [(or (= remaining 0) (= need 0))\n\
    \     (list number 0)]\n    [(or (= remaining 0) (= need 0))\n     (list number\
    \ 0)]\n    [(or (= remaining 0) (= need 0))\n     (list number 0)]\n    [(or (=\
    \ remaining 0) (= need 0))\n     (list number 0)]\n    [(or (= remaining 0) (=\
    \ need 0))\n     (list number 0)]\n    [(or (= remaining 0) (= need 0))\n    \
    \ (list number 0)]\n    [(or (= remaining 0) (= need 0))\n     (list number 0)]\n\
    \    [(or (= remaining 0) (= need 0))\n     (list number 0)]\n    [(or (= remaining\
    \ 0) (= need 0))\n     (list number 0)]\n    [(or (= remaining 0) (= need 0))\n\
    \     (list number 0)]", "  (cond\n    [(and (<= number 1000) (<= need 1000) (<=\
    \ remaining 1000)) (list number need)]\n    [else (list number need)]))\n", " \
    \ (cond\n    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(< remaining\
    \ 0)\n     (list 0 0)]\n    [else\n     (cond\n       [(= remaining need)\n  \
    \      (list number 0)]\n       [(< remaining need)\n        (list number (- remaining\
    \ need))]\n       [else\n        (cond\n          [(= remaining 0)\n         \
    \  (list number 0)]\n          [(< remaining 0)\n           (list number (- remaining\
    \ 0))]\n          [else\n           (cond\n             [(= remaining number)\n\
    \              (list number 0)]\n             [(< remaining number)\n        \
    \      (list number (- remaining number))]\n             [else\n             \
    \ (cond\n                [(= remaining number)\n                 (list number\
    \ 0)]\n                [else\n                 (cond\n                   [(= remaining\
    \ number)\n                    (list number 0)]\n                   [else\n  \
    \                  (cond\n                      [(= remaining number)\n      \
    \                 (list number 0)]\n                      [else\n            \
    \           (cond\n                         [(= remaining number)\n          \
    \                 (list number 0)]\n                         [else\n         \
    \                  (cond\n                             [(= remaining number)\n\
    \                              (list number 0)]\n                            \
    \ [else\n                              (cond\n                               \
    \ [(= remaining number)\n                                 (list number 0)]\n \
    \                               [else\n                                 (cond\n\
    \                                   [(= remaining number)\n                  \
    \                  (list number 0)]\n                                   [else\n\
    \                                    (cond\n                                 \
    \    [(= remaining number)\n                                      (list number\
    \ 0)]\n                                     [else\n                          \
    \            (cond\n                                       [(= remaining number)\n\
    \                                        (list number 0)]\n                  \
    \                     [else\n                                        (cond\n \
    \                                        [(= remaining number)\n             \
    \                             (list number 0)]\n                             \
    \            [else\n                                          (cond\n        \
    \                                   [(= remaining number)\n                  \
    \                           (list number 0)]\n                               \
    \            [else\n                                             (cond\n     \
    \                                          [(= remaining number)\n           \
    \                                     (list number 0)]\n                     \
    \                          [else\n                                           \
    \     (cond\n                                                 [(= remaining number)\n\
    \                                                  (list number 0)]\n        \
    \                                         [else\n                            \
    \                      (cond\n                                               \
    \    [(= remaining number)\n                                                 \
    \   (list number 0)]\n                                                   [else\n\
    \                                                    (cond\n                 \
    \                                    [(= remaining number)\n                 \
    \                                     (list number 0)]\n                     \
    \                                [else\n                                     \
    \                 (cond\n                                                    \
    \   [(= remaining number)\n                                                  \
    \      (list number 0)]\n                                                    \
    \   [else\n                                                        (cond\n   \
    \                                                      [(= remaining number)\n\
    \                                                          (list number 0)]\n\
    \                                                         [else\n            \
    \                                              (cond\n                       \
    \                                    [(= remaining number)\n                 \
    \                                           (list number 0)]\n               \
    \                                            [else\n                         \
    \                                   ", "  (cond\n    [(and (<= remaining 0) (<=\
    \ need 0))\n     (list number 0)]\n    [(and (<= remaining 0) (< need 0))\n  \
    \   (list number 0)]\n    [(and (<= remaining 0) (> need 0))\n     (list number\
    \ 0)]\n    [(and (<= remaining 0) (= need 0))\n     (list number 0)]\n    [(and\
    \ (<= remaining 0) (< number 0))\n     (list number 0)]\n    [(and (<= remaining\
    \ 0) (> number 0))\n     (list number 0)]\n    [(and (<= remaining 0) (= number\
    \ 0))\n     (list number 0)]\n    [else\n     (cond\n       [(< remaining 0)\n\
    \        (cond\n         [(< need 0)\n          (cond\n           [(< number 0)\n\
    \            (cond\n             [(< number 0)\n              (list number 0)]\n\
    \             [(> number 0)\n              (list number 0)]\n             [(=\
    \ number 0)\n              (list number 0)]\n             [(< number 1)\n    \
    \          (list number 0)]\n             [(> number 1)\n              (list number\
    \ 0)]\n             [(= number 1)\n              (list number 0)]\n          \
    \   [(< number 2)\n              (list number 0)]\n             [(> number 2)\n\
    \              (list number 0)]\n             [(= number 2)\n              (list\
    \ number 0)]\n             [(< number 3)\n              (list number 0)]\n   \
    \          [(> number 3)\n              (list number 0)]\n             [(= number\
    \ 3)\n              (list number 0)]\n             [(< number 4)\n           \
    \   (list number 0)]\n             [(> number 4)\n              (list number 0)]\n\
    \             [(= number 4)\n              (list number 0)]\n             [(<\
    \ number 5)\n              (list number 0)]\n             [(> number 5)\n    \
    \          (list number 0)]\n             [(= number 5)\n              (list number\
    \ 0)]\n             [(< number 6)\n              (list number 0)]\n          \
    \   [(> number 6)\n              (list number 0)]\n             [(= number 6)\n\
    \              (list number 0)]\n             [(< number 7)\n              (list\
    \ number 0)]\n             [(> number 7)\n              (list number 0)]\n   \
    \          [(= number 7)\n              (list number 0)]\n             [(< number\
    \ 8)\n              (list number 0)]\n             [(> number 8)\n           \
    \   (list number 0)]\n             [(= number 8)\n              (list number 0)]\n\
    \             [(< number 9)", "  (cond\n    [(or (= remaining 0) (= number 0))\n\
    \     (list 0 0)]\n    [(= remaining 0)\n     (list number 0)]\n    [(= number\
    \ 0)\n     (list 0 0)]\n    [else\n     (cond\n       [(< need (- remaining (-\
    \ number 1)))\n        (list remaining 0)]\n       [(< need (- remaining (- number\
    \ 2)))\n        (list remaining (- number 1))]\n       [(< need (- remaining (-\
    \ number 3)))\n        (list remaining (- number 2))]\n       [(< need (- remaining\
    \ (- number 4)))\n        (list remaining (- number 3))]\n       [(< need (- remaining\
    \ (- number 5)))\n        (list remaining (- number 4))]\n       [(< need (- remaining\
    \ (- number 6)))\n        (list remaining (- number 5))]\n       [(< need (- remaining\
    \ (- number 7)))\n        (list remaining (- number 6))]\n       [(< need (- remaining\
    \ (- number 8)))\n        (list remaining (- number 7))])]))\n", "  (cond\n  \
    \  [(= remaining 0) (list number 0)]\n    [(= remaining need) (list number 0)]\n\
    \    [else (cons (- remaining need) (cons number 0))]))\n", "  (cond\n    [(or\
    \ (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(< number need)\n    \
    \ (cons (- number need) (cons remaining (cons 0 (eat remaining (- number need)\
    \ remaining))))]\n    [(< need 0)\n     (cons (- number need) (cons remaining\
    \ (cons 0 (eat remaining (- number need) remaining))))]\n    [else\n     (cons\
    \ (- number need) (cons remaining (cons 0 (eat remaining (- number need) remaining))))]))\n",
  "  (cond\n    [(= remaining 0) (list number 0)]\n    [(= remaining need) (list number\
    \ 0)]\n    [else (cond [(< remaining need) (cons 0 eat remaining (- remaining\
    \ need))]\n               [else (cons 1 eat remaining (- remaining need))])]))\n",
  "  (cond\n    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(< remaining\
    \ 0)\n     (list number 0)]\n    [else\n     (cond\n       [(= remaining need)\n\
    \        (list number 0)]\n       [else\n        (cond\n          [(= remaining\
    \ (- need number))\n           (list number 0)]\n          [else\n           (cond\n\
    \             [(= remaining (- need (- number need)))\n               (list number\
    \ 0)]\n             [else\n               (cond\n                 [(= remaining\
    \ (- need (- number (- need number))))\n                   (list number 0)]\n\
    \                 [else\n                   (cond\n                     [(= remaining\
    \ (- need (- number (- need (- number need))))\n                       (list number\
    \ 0)]\n                     [else\n                       (cond\n            \
    \             [(= remaining (- need (- number (- need (- number (- need number))))))\n\
    \                         (list number 0)]\n                        [else\n  \
    \                       (cond\n                           [(= remaining (- need\
    \ (- number (- need (- number (- need (- number need))))))\n                 \
    \           (list number 0)]\n                           [else\n             \
    \                (cond\n                               [(= remaining (- need (-\
    \ number (- need (- number (- need (- number need))))))\n                    \
    \            (list number 0)]\n                               [else\n        \
    \                         (cond\n                                   [(= remaining\
    \ (- need (- number (- need (- number (- need (- number (- need number))))))\n\
    \                                    (list number 0)]\n                      \
    \             [else\n                                     (cond\n            \
    \                           [(= remaining (- need (- number (- need (- number\
    \ (- need (- number (- need (- number need)))))))))\n                        \
    \               (list number 0)]\n                                      [else\n\
    \                                       (cond\n                              \
    \           [(= remaining (- need (- number (- need (- number (- need (- number\
    \ (- need (- number need))))))))\n                                          (list\
    \ number 0)]\n                                          [else\n              \
    \                             (cond\n                                        \
    \     [(= remaining (- need (- number (- need (- number (- need (- number (- need\
    \ (- number (- need number))))))))))\n                                       \
    \       (list number 0)]\n                                              [else\n\
    \                                               (cond\n                      \
    \                           [(= remaining (- need (- number (- need (- number\
    \ (- need (- number (- need (- number (- need (- number need))))))))))\n     \
    \                                             (list number 0)]\n             \
    \                                     [else\n                                \
    \                   (cond\n", "  (cond\n    [(or (= remaining 0) (= number 0))\n\
    \     (list 0 0)]\n    [(< remaining 0)\n     (list number 0)]\n    [(< number\
    \ need)\n     (list (+ number need) remaining)]\n    [else\n     (let ([carrots\
    \ (- number need)])\n       (cond\n         [(< carrots remaining)\n         \
    \ (list (+ carrots remaining) remaining)]\n         [else\n          (list carrots\
    \ 0)]\n       ))]))\n", "  (cond\n    [(or (= remaining 0) (= number 0))\n   \
    \  (list 0 0)]\n    [(or (= remaining 0) (= number need))\n     (list need 0)]\n\
    \    [else\n     (let ([carrots (- number need)])\n       (cond\n         [(<\
    \ carrots remaining)\n          (list carrots remaining)]\n         [else\n  \
    \        (list carrots 0)]\n       )\n     )\n    ]\n  )\n)\n", "  (cond\n   \
    \ [(and (<= 0 number 1000) (<= 0 need 1000) (<= 0 remaining 1000)) (list 0 0)]\n\
    \    [(and (<= 0 number 1000) (<= 0 need 1000) (> remaining 0)) (list 0 0)]\n\
    \    [(and (<= 0 number 1000) (> need 0) (<= 0 remaining 1000)) (list 0 0)]\n\
    \    [(and (<= 0 number 1000) (> need 0) (> remaining 0)) (list 0 0)]\n    [(and\
    \ (> number 0) (<= 0 need 1000) (<= 0 remaining 1000)) (list 0 0)]\n    [(and\
    \ (> number 0) (<= 0 need 1000) (> remaining 0)) (list 0 0)]\n    [(and (> number\
    \ 0) (> need 0) (<= 0 remaining 1000)) (list 0 0)]\n    [(and (> number 0) (>\
    \ need 0) (> remaining 0)) (list 0 0)]\n    [else (cond\n          [(and (<= 0\
    \ number 1000) (<= 0 need 1000) (<= remaining 0)) (list 0 0)]\n          [(and\
    \ (<= 0 number 1000) (<= 0 need 1000) (> remaining 0)) (list 0 0)]\n         \
    \ [(and (<= 0 number 1000) (> need 0) (<= remaining 0)) (list 0 0)]\n        \
    \  [(and (<= 0 number 1000) (> need 0) (> remaining 0)) (list 0 0)]\n        \
    \  [(and (> number 0) (<= 0 need 1000) (<= remaining 0)) (list 0 0)]\n       \
    \   [(and (> number 0) (<= 0 need 1000) (> remaining 0)) (list 0 0)]\n       \
    \   [(and (> number 0) (> need 0) (<= remaining 0)) (list 0 0)]\n          [(and\
    \ (> number 0) (> need 0) (> remaining 0)) (list 0 0)]\n          [else (cond\n\
    \                [(and (<= 0 number 1000) (<= 0 need 1000) (<= remaining 1000))\
    \ (list 0 0)]\n                [(and (<= 0 number 1000) (<= 0 need 1000) (> remaining\
    \ 1000)) (list 0 0)]\n                [(and (<= 0 number 1000) (> need 0) (<=\
    \ remaining 1000)) (list 0 0)]\n                [(and (<= 0 number 1000) (> need\
    \ 0) (> remaining 1000)) (list 0 0)]\n                [(and (> number 0) (<= 0\
    \ need 1000) (<= remaining 1000)) (list 0 0)]\n                [(and (> number\
    \ 0) (<= 0 need 1000) (> remaining 1000)) (list 0 0)]\n                [(and (>\
    \ number 0) ", "  (cond\n    [(or (= remaining 0) (= number 0))\n     (list 0\
    \ 0)]\n    [(= remaining 0)\n     (list number 0)]\n    [else\n     (cond\n  \
    \     [(< need number)\n        (list number 0)]\n       [(< number need)\n  \
    \      (list 0 (- number need))]\n       [else\n        (cond\n          [(< remaining\
    \ 0)\n           (list number 0)]\n          [else\n           (cond\n       \
    \      [(< remaining number)\n              (list number 0)]\n             [else\n\
    \              (cond\n                [(< remaining number)\n                \
    \ (list number 0)]\n                [else\n                 (cond\n          \
    \         [(< remaining number)\n                    (list number (- remaining\
    \ number))]\n                   [else\n                    (cond\n           \
    \           [(< remaining number)\n                       (list number (- remaining\
    \ number))]\n                      [else\n                       (cond\n     \
    \                    [(< remaining number)\n                           (list number\
    \ (- remaining number))]\n                         [else\n                   \
    \        (cond\n                             [(< remaining number)\n         \
    \                      (list number (- remaining number))]\n                 \
    \            [else\n                               (cond\n                   \
    \              [(< remaining number)\n                                   (list\
    \ number (- remaining number))]\n                                 [else\n    \
    \                               (cond\n                                     [(<\
    \ remaining number)\n                                       (list number (- remaining\
    \ number))]\n                                     [else\n                    \
    \                   (cond\n                                         [(< remaining\
    \ number)\n                                           (list number (- remaining\
    \ number))]\n                                         [else\n                \
    \                           (cond\n                                          \
    \   [(< remaining number)\n                                              (list\
    \ number (- remaining number))]\n                                            \
    \ [else\n                                               (cond\n              \
    \                                   [(< remaining number)\n                  \
    \                                (list number (- remaining number))]\n       \
    \                                          [else\n                           \
    \                        (cond\n                                             \
    \        [(< remaining number)\n                                             \
    \          (list number (- remaining number))]\n                             \
    \                        [else\n                                             \
    \          (cond\n                                                       [(< remaining\
    \ number)\n                                                        (list number\
    \ (- remaining number))]\n                                                   \
    \    [else\n                                                        (cond\n  \
    \                                                        [(< remaining number)\n\
    \                                                           (list number (- remaining\
    \ number))]\n                                                          [else\n\
    \                                                           (cond\n          \
    \                                                   [(< remaining number)\n  \
    \                                                           (list number (- remaining\
    \ number))]\n                                                             [else\n\
    \                                                             (cond\n        \
    \                                                       [(< remaining number)\n\
    \                                                               (list number (-\
    \ remaining number))]\n                                                      \
    \         [else\n                                                            \
    \   (cond\n                                                                [(<\
    \ remaining number)\n                                                        \
    \         (list number (- remaining number))]\n                              \
    \                                  [else\n                                   \
    \                              (cond\n                                       \
    \                            [(< remaining number)\n                         \
    \                                          (list number (- remaining number))]\n\
    \                                                                   [else\n  \
    \                                                                 (cond\n    \
    \                                                                 [(< remaining\
    \ number)\n                                                                  \
    \   (list number (- remaining ", "  (cond\n    [(or (= remaining 0) (= need 0))\n\
    \     (list number 0)]\n    [else\n     (cond\n       [(= remaining 0)\n     \
    \   (cond\n         [(= number need)\n          (list number 0)]\n         [else\n\
    \          (list number (- need remaining))]\n         )]\n       [else\n    \
    \    (cond\n         [(= number need)\n          (list number (- remaining 0))]\n\
    \         [else\n          (list number (- remaining (- number need)))]\n    \
    \     )]\n       )]\n     )]))\n", "  (cond\n    [(= remaining 0) (list number\
    \ 0)]\n    [(= remaining (- need number)) (list number 0)]\n    [else (cond [(=\
    \ (modulo remaining number) 0) (cons number remaining)]\n              [(= (modulo\
    \ remaining number) 1) (cons number (- remaining 1))]\n              [else (cons\
    \ number (- remaining 1))]))))\n", "  (cond\n    [(= remaining 0) (list number\
    \ 0)]\n    [(= remaining (- need number)) (list number 0)]\n    [else (cons (-\
    \ remaining (- need number)) (eat number (- need number) (remaining (remaining\
    \ - number))))]))\n", "  (cond\n    [(or (= remaining 0) (= number 0))\n     (list\
    \ 0 0)]\n    [(= remaining 0)\n     (list number 0)]\n    [(= number 0)\n    \
    \ (list 0 0)]\n    [else\n     (let ([carrots (- remaining need)])\n       (cond\n\
    \         [(< carrots 0)\n          (list 0 0)]\n         [(< carrots 100)\n \
    \         (list carrots 0)]\n         [(< carrots 200)\n          (list carrots\
    \ 0)]\n         [(< carrots 300)\n          (list carrots 0)]\n         [(< carrots\
    \ 400)\n          (list carrots 0)]\n         [(< carrots 500)\n          (list\
    \ carrots 0)]\n         [(< carrots 600)\n          (list carrots 0)]\n      \
    \   [(< carrots 700)\n          (list carrots 0)]\n         [(< carrots 800)\n\
    \          (list carrots 0)]\n         [(< carrots 900)\n          (list carrots\
    \ 0)]\n         [(< carrots 1000)\n          (list carrots 0)]\n         [(< carrots\
    \ 1000)\n          (list carrots 0)]\n         [(< carrots 1000)\n          (list\
    \ carrots 0)]\n         [(< carrots 1000)\n          (list carrots 0)]\n     \
    \    [(< carrots 1000)\n          (list carrots 0)]\n         [(< carrots 1000)\n\
    \          (list carrots 0)]\n         [(< carrots 1000)\n          (list carrots\
    \ 0)]\n         [(< carrots 1000)\n          (list carrots 0)]\n         [(< carrots\
    \ 1000)\n          (list carrots 0)]\n         [(< carrots 1000)\n          (list\
    \ carrots 0)]\n         [(< carrots 1000)\n          (list carrots 0)]\n     \
    \    [(< carrots 1000)\n          (list carrots 0)]\n         [(< carrots 1000)\n\
    \          (list carrots 0)]\n         [(< carrots 1000)\n          (list carrots\
    \ 0)]\n         [(< carrots 1000)\n          (list carrots 0)]\n         [(< carrots\
    \ 1000)\n          (list carrots 0)]\n         [(< carrots 1000)", "  (cond\n\
    \    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list number 0)]\n\
    \    [(= remaining 0) (list number 0)]\n    [else (cond\n             [(= number\
    \ need) (list number 0)]\n             [(< number need) (list number 0)]\n   \
    \          [(< number need) (list number 0)]\n             [(< number need) (list\
    \ number 0)]\n             [(< number need) (list number 0)]\n             [(<\
    \ number need) (list number 0)]\n             [(< number need) (list number 0)]\n\
    \             [(< number need) (list number 0)]\n             [(< number need)\
    \ (list number 0)]\n             [(< number need) (list number 0)]\n         \
    \    [(< number need) (list number 0)]\n             [(< number need) (list number\
    \ 0)]\n             [(< number need) (list number 0)]\n             [(< number\
    \ need) (list number 0)]\n             [(< number need) (list number 0)]\n   \
    \          [(< number need) (list number 0)]\n             [(< number need) (list\
    \ number 0)]\n             [(< number need) (list number 0)]\n             [(<\
    \ number need) (list number 0)]\n             [(< number need) (list number 0)]\n\
    \             [(< number need) (list number 0)]\n             [(< number need)\
    \ (list number 0)]\n             [(< number need) (list number 0)]\n         \
    \    [(< number need) (list number 0)]\n             [(< number need) (list number\
    \ 0)]\n             [(< number need) (list number 0)]\n             [(< number\
    \ need) (list number 0)]\n             [(< number need) (list number 0)]\n   \
    \          [(< number need) (list number 0)]\n             [(< number need) (list\
    \ number 0)]\n             [(< number need) (list number 0)]\n             [(<\
    \ number need) (list number 0)]\n             [(< number need) (list number 0)]\n\
    \             [(< number need) (list number 0)]\n             [(< number need)\
    \ (list number 0)]\n             [(< number need) (list number 0)]\n         \
    \    [(< number need) (list number 0)]\n             [(< number need) (list number\
    \ 0)]\n             [(< number need) (list number 0)]\n             [(< number\
    \ need) (list number 0)]\n             [(< number need) (list number 0)]\n   \
    \          [(< number need) (list number 0)]\n             [(< number need) (list\
    \ number 0)", "  (cond\n    [(and (>= number 0) (<= need 1000)) (list number 0)]\n\
    \    [(and (>= need 0) (<= remaining 1000)) (list need 0)]\n    [else (list number\
    \ need)]))\n", "  (cond\n    [(or (= remaining 0) (= number 0))\n     (list 0\
    \ 0)]\n    [(< remaining 0)\n     (list number 0)]\n    [(< number need)\n   \
    \  (list (+ number need) (- remaining need))]\n    [else\n     (list (+ number\
    \ need) (- remaining need))]))\n", "  (cond\n    [(or (= remaining 0) (= number\
    \ 0))\n     (list 0 0)]\n    [(and (= remaining 0) (= number 0))\n     (list 0\
    \ 0)]\n    [(and (= remaining 0) (= need 0))\n     (list 0 0)]\n    [(and (= remaining\
    \ 0) (< need 0))\n     (list 0 0)]\n    [(and (< remaining 0) (< number 0))\n\
    \     (list 0 0)]\n    [(and (< remaining 0) (< need 0))\n     (list 0 0)]\n \
    \   [(and (< remaining 0) (< number 0))\n     (list 0 0)]\n    [(and (< remaining\
    \ 0) (< need 0))\n     (list 0 0)]\n    [(and (< remaining 0) (< number 0))\n\
    \     (list 0 0)]\n    [(and (< remaining 0) (< need 0))\n     (list 0 0)]\n \
    \   [(and (< remaining 0) (< number 0))\n     (list 0 0)]\n    [(and (< remaining\
    \ 0) (< need 0))\n     (list 0 0)]\n    [(and (< remaining 0) (< number 0))\n\
    \     (list 0 0)]\n    [(and (< remaining 0) (< need 0))\n     (list 0 0)]\n \
    \   [(and (< remaining 0) (< number 0))\n     (list 0 0)]\n    [(and (< remaining\
    \ 0) (< need 0))\n     (list 0 0)]\n    [(and (< remaining 0) (< number 0))\n\
    \     (list 0 0)]\n    [(and (< remaining 0) (< need 0))\n     (list 0 0)]\n \
    \   [(and (< remaining 0) (< number 0))\n     (list 0 0)]\n    [(and (< remaining\
    \ 0) (< need 0))\n     (list 0 0)]\n    [(and (< remaining 0) (< number 0))\n\
    \     (list 0 0)]\n    [(and (< remaining 0) (< need 0))\n     (list 0 0)]\n \
    \   [(and (< remaining 0) (< number 0))\n     (list 0 0)]\n    [(and (< remaining\
    \ 0) (< need 0))\n     (list 0 0)]\n    [(and (< remaining 0) (< number 0))\n\
    \     (list 0 0)]\n    [(and (< remaining 0) (< need 0))\n     (list 0 0)]\n \
    \   [(and (< remaining 0) (< number 0))\n     (list 0 0)]\n    [(and (< remaining\
    \ 0) (< need 0))\n     (list 0 0)]\n    [(and (< remaining 0) (< number 0))\n\
    \     (list 0 0)]\n    [(and (< remaining 0) (< need 0))\n     (list 0 0)]", " \
    \ (cond\n    [(= remaining 0) (list number 0)]\n    [(= remaining need) (list\
    \ number 0)]\n    [else (cons (- remaining need) (cons number 0))]))\n", "  (cond\n\
    \    [(and (>= number 0) (<= need 1000) (<= remaining 1000)) (list number need)]\n\
    \    [else (list number need)]))\n", "  (cond\n    [(and (<= remaining 0) (<=\
    \ need 0))\n     (list number 0)]\n    [(and (<= remaining 0) (< need 0))\n  \
    \   (list number 0)]\n    [(and (<= remaining 0) (> need 0))\n     (list number\
    \ 0)]\n    [(and (<= remaining 0) (= remaining 0))\n     (list number 0)]\n  \
    \  [(and (<= remaining 0) (< number 0))\n     (list number 0)]\n    [(and (<=\
    \ remaining 0) (> number 0))\n     (list number 0)]\n    [(and (<= remaining 0)\
    \ (= number 0))\n     (list number 0)]\n    [(and (<= remaining 0) (< number need))\n\
    \     (list number need)]\n    [(and (<= remaining 0) (> number need))\n     (list\
    \ number need)]\n    [(and (<= remaining 0) (= number need))\n     (list number\
    \ need)]\n    [(and (<= remaining 0) (< number need) (< number remaining))\n \
    \    (list number need remaining)]\n    [(and (<= remaining 0) (> number need)\
    \ (< number remaining))\n     (list number need remaining)]\n    [(and (<= remaining\
    \ 0) (= number need) (< number remaining))\n     (list number need remaining)]\n\
    \    [(and (<= remaining 0) (< number need) (> number remaining))\n     (list\
    \ number need remaining)]\n    [(and (<= remaining 0) (> number need) (> number\
    \ remaining))\n     (list number need remaining)]\n    [(and (<= remaining 0)\
    \ (= number need) (> number remaining))\n     (list number need remaining)]\n\
    \    [(and (<= remaining 0) (< number need) (= number remaining))\n     (list\
    \ number need remaining)]\n    [(and (<= remaining 0) (> number need) (= number\
    \ remaining))\n     (list number need remaining)]\n    [(and (<= remaining 0)\
    \ (= number need) (= number remaining))\n     (list number need remaining)]\n\
    \    [else\n     (list number need remaining)]\n  )\n)\n", "  (cond\n    [(or\
    \ (< number 0) (> number 1000)) (list 0 0)]\n    [(or (< need 0) (> need 1000))\
    \ (list 0 0)]\n    [(or (< remaining 0) (> remaining 1000)) (list 0 0)]\n    [else\
    \ (cond [(> remaining 0) (cons 0 (eat number (- need number) remaining))]\n  \
    \            [(< number need) (cons 0 (eat number (- need number) remaining))]\n\
    \              [else (cons number (eat number (- need number) remaining))]))\n\
    </code>\n<|/ a dscore=1 |>\n<| c |>\nThank you so much for your answer! I really\
    \ appreciate it!\n<|/ c |>\n<| a tags=racket,scheme |>\n<code>", "  (cond\n  \
    \  [(and (<= 0 number 1000) (<= 0 need 1000) (<= 0 remaining 1000)) (list 0 0)]\n\
    \    [(and (<= 0 number 1000) (<= 0 need 1000) (> remaining 0)) (list 0 0)]\n\
    \    [(and (<= 0 number 1000) (> need 0) (<= 0 remaining 1000)) (list 0 0)]\n\
    \    [(and (<= 0 number 1000) (> need 0) (> remaining 0)) (list 0 0)]\n    [(and\
    \ (> number 0) (<= 0 need 1000) (<= 0 remaining 1000)) (list 0 0)]\n    [(and\
    \ (> number 0) (<= 0 need 1000) (> remaining 0)) (list 0 0)]\n    [(and (> number\
    \ 0) (> need 0) (<= 0 remaining 1000)) (list 0 0)]\n    [(and (> number 0) (>\
    \ need 0) (> remaining 0)) (list 0 0)]\n    [(and (<= 0 number 1000) (<= 0 need\
    \ 1000) (> remaining 1000)) (list 0 0)]\n    [(and (<= 0 number 1000) (> need\
    \ 0) (<= 0 remaining 1000)) (list 0 0)]\n    [(and (<= 0 number 1000) (> need\
    \ 0) (> remaining 0)) (list 0 0)]\n    [(and (> number 0) (<= 0 need 1000) (<=\
    \ 0 remaining 1000)) (list 0 0)]\n    [(and (> number 0) (<= 0 need 1000) (> remaining\
    \ 0)) (list 0 0)]\n    [(and (> number 0) (> need 0) (<= 0 remaining 1000)) (list\
    \ 0 0)]\n    [(and (> number 0) (> need 0) (> remaining 0)) (list 0 0)]\n    [(and\
    \ (<= 0 number 1000) (<= 0 need 1000) (<= 0 remaining 1000)) (list 0 0)]\n   \
    \ [(and (<= 0 number 1000) (> need 0) (<= 0 remaining 1000)) (list 0 0)]\n   \
    \ [(and (<= 0 number 1000) (> need 0) (> remaining 0)) (list 0 0)]\n    [(and\
    \ (> number 0) (<= 0 need 1000) (<= 0 remaining 1000)) (list 0 0)]\n    [(and\
    \ (> number 0) (<= 0 need 1000) (> remaining 0)) (list 0 0)]\n    [(and (> number\
    \ 0) (> need 0) (<= 0 remaining 1000)) (list 0 0)]\n    [(and (> number 0) (>\
    \ need 0) (> remaining 0)) (list 0 0)]\n    [(and (<= 0 number 1000) (<= 0 need\
    \ 1000) (<= 0 remaining ", "  (cond\n    [(= remaining 0) (list number 0)]\n \
    \   [(= remaining (- need number)) (list number 0)]\n    [else (cons (- remaining\
    \ (- need number)) (eat number (- need number) (remaining 0)))]))\n", "  (cond\n\
    \    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(< remaining 0)\n\
    \     (list number 0)]\n    [(< number need)\n     (list number (- remaining need))]\n\
    \    [else\n     (list number (- remaining (- number need)))]))\n", "  (cond\n\
    \    [(and (<= number 1000) (<= need 1000) (<= remaining 1000)) (list number need\
    \ remaining)]\n    [(and (<= number 1000) (<= need 0) (<= remaining 1000)) (list\
    \ number need remaining)]\n    [(and (<= number 1000) (<= need 1000) (<= remaining\
    \ 0)) (list number need remaining)]\n    [(and (<= number 1000) (<= need 1000)\
    \ (<= remaining 100)) (list number need remaining)]\n    [else (list number need\
    \ remaining)]))\n", "  (cond\n    [(or (= remaining 0) (= number 0))\n     (list\
    \ 0 0)]\n    [(= remaining 0)\n     (list number 0)]\n    [(= number 0)\n    \
    \ (list 0 0)]\n    [else\n     (cond\n       [(= remaining need)\n        (list\
    \ number 0)]\n       [else\n        (cond\n          [(= remaining (- need remaining))\n\
    \           (list number 0)]\n          [else\n           (cond\n            \
    \ [(= remaining (- need (- number remaining)))\n               (list number 0)]\n\
    \             [else\n               (cond\n                 [(= remaining (- need\
    \ (- number remaining)))\n                   (list number 0)]\n              \
    \   [else\n                   (cond\n                     [(= remaining (- need\
    \ (- number remaining)))\n                       (list number 0)]\n          \
    \           [else\n                       (cond\n                         [(=\
    \ remaining (- need (- number remaining)))\n                           (list number\
    \ 0)]\n                         [else\n                           (cond\n    \
    \                         [(= remaining (- need (- number remaining)))\n     \
    \                          (list number 0)]\n                             [else\n\
    \                               (cond\n                                 [(= remaining\
    \ (- need (- number remaining)))\n                                   (list number\
    \ 0)]\n                                 [else\n                              \
    \     (cond\n                                     [(= remaining (- need (- number\
    \ remaining)))\n                                       (list number 0)]\n    \
    \                                 [else\n                                    \
    \   (cond\n                                         [(= remaining (- need (- number\
    \ remaining)))\n                                           (list number 0)]\n\
    \                                         [else\n                            \
    \               (cond\n                                             [(= remaining\
    \ (- need (- number remaining)))\n                                           \
    \    (list number 0)]\n                                             [else\n  \
    \                                             (cond\n                        \
    \                         [(= remaining (- need (- number remaining)))\n     \
    \                                              (list number 0)]\n            \
    \                                     [else\n                                \
    \                   (cond\n                                                  \
    \   [(= remaining (- need (- number remaining)))\n                           \
    \                            (list number 0)]\n                              \
    \                       [else\n                                              \
    \         (cond\n                                                         [(=\
    \ remaining (- need (- number remaining)))\n                                 \
    \                          (list number 0)]\n                                \
    \                         [else\n                                            \
    \               (cond\n                                                      \
    \       [(= remaining (- need (- number remaining)))\n                       \
    \                                        (list number 0)]\n                  \
    \                                           [else\n                          \
    \                                     (cond\n                                \
    \                                [(= remaining (- need (- number remaining)))\n\
    \                                                                 (list number\
    \ 0)]\n                                                                [else\n\
    \                                                                 (cond\n    \
    \                                                               [(= remaining\
    \ (- need (- number remaining)))\n                                           \
    \                          (list number 0)]\n                                \
    \                                   [else\n", "  (cond\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining (- need number)) (list number 0)]\n    [else (cons\
    \ (- remaining (- need number)) (eat number (- need number) (remaining 0)))]))\n",
  "  (cond\n    [(= remaining 0) (list number 0)]\n    [(= remaining need) (list number\
    \ 0)]\n    [else (cond [(= remaining (- need number)) (list number 0)]\n     \
    \         [(= remaining (- need (- number need))) (list number 0)]\n         \
    \     [else (cond [(= remaining (- need (- number need)))\n                  \
    \         (list (- number need) (- remaining need))]\n                       \
    \  [else (cond [(= remaining (- need (- number need)))\n                     \
    \                (list (- number need) (- remaining need))]\n                \
    \                   [else (cond [(= remaining (- need (- number need)))\n    \
    \                                          (list (- number need) (- remaining\
    \ need))]\n                                             [else (cond [(= remaining\
    \ (- need (- number need)))\n                                                \
    \      (list (- number need) (- remaining need))]\n                          \
    \                         [else (cond [(= remaining (- need (- number need)))\n\
    \                                                            (list (- number need)\
    \ (- remaining need))]\n                                                     \
    \      [else (cond [(= remaining (- need (- number need)))\n                 \
    \                                                   (list (- number need) (- remaining\
    \ need))]\n                                                                  \
    \ [else (cond [(= remaining (- need (- number need)))\n                      \
    \                                                      (list (- number need) (-\
    \ remaining need))]\n                                                        \
    \         [else (cond [(= remaining (- need (- number need)))\n              \
    \                                                            (list (- number need)\
    \ (- remaining need))]\n                                                     \
    \              [else (cond [(= remaining (- need (- number need)))\n         \
    \                                                                   (list (- number\
    \ need) (- remaining need))]\n                                               \
    \                  [else (cond [(= remaining (- need (- number need)))\n     \
    \                                                                       (list\
    \ (- number need) (- remaining need))]\n                                     \
    \                              [else (cond [(= remaining (- need (- number need)))\n\
    \                                                                            (list\
    \ (- number need) (- remaining need))]\n                                     \
    \                            [else (cond [(= remaining (- need (- number need)))\n\
    \                                                                            (list\
    \ (- number need) (- remaining need))]\n                                     \
    \                              [else (cond [(= remaining (- need (- number need)))\n\
    \                                                                            (list\
    \ (- number need) (- remaining need))]\n                                     \
    \                            [else (cond [(= remaining (- need (- number need)))\n\
    \                                                                            (list\
    \ (- number need) (- remaining need))]\n                                     \
    \                              [else (cond [(= remaining (- need (- number need)))\n\
    \                                                                ", "  (cond\n\
    \    [(or (= remaining 0) (= need 0))\n     (list number 0)]\n    [(< remaining\
    \ 0)\n     (list number 0)]\n    [(< need 0)\n     (list number 0)]\n    [else\n\
    \     (cond\n       [(= remaining number)\n        (list number 0)]\n       [(=\
    \ need number)\n        (list number 0)]\n       [else\n        (cond\n      \
    \    [(= remaining number)\n           (list number 0)]\n          [(= need number)\n\
    \           (list number 0)]\n          [else\n           (cond\n            \
    \ [(= remaining number)\n               (list number 0)]\n             [(= need\
    \ number)\n               (list number 0)]\n             [else\n             \
    \  (cond\n                 [(= remaining number)\n                   (list number\
    \ 0)]\n                 [(= need number)\n                   (list number 0)]\n\
    \                 [else\n                   (cond\n                     [(= remaining\
    \ number)\n                       (list number 0)]\n                     [(= need\
    \ number)\n                       (list number 0)]\n                     [else\n\
    \                       (cond\n                         [(= remaining number)\n\
    \                           (list number 0)]\n                         [(= need\
    \ number)\n                           (list number 0)]\n                     \
    \    [else\n                           (cond\n                             [(=\
    \ remaining number)\n                               (list number 0)]\n       \
    \                      [(= need number)\n                               (list\
    \ number 0)]\n                             [else\n                           \
    \    (cond\n                                 [(= remaining number)\n         \
    \                          (list number 0)]\n                                \
    \ [(= need number)\n                                   (list number 0)]\n    \
    \                             [else\n                                   (cond\n\
    \                                     [(= remaining number)\n                \
    \                       (list number 0)]\n                                   \
    \  [(= need number)\n                                       (list number 0)]\n\
    \                                     [else\n                                \
    \       (cond\n                                         [(= remaining number)\n\
    \                                           (list number 0)]\n               \
    \                          [(= need number)\n                                \
    \           (list number 0)]\n                                         [else\n\
    \                                           (cond\n                          \
    \                   [(= remaining number)\n                                  \
    \             (list number 0)]\n                                             [(=\
    \ need number)\n                                               (list number 0)]\n\
    \                                             [else\n                        \
    \                       (cond\n                                              \
    \   [(= remaining number)\n                                                  \
    \ (list number 0)]\n                                                 [(= need\
    \ number)\n                                                   (list number 0)]\n\
    \                                                 [else\n                    \
    \                               (cond\n                                      \
    \               [(= remaining number)\n                                      \
    \                 (list number 0)]\n                                         \
    \            [(= need number)\n                                              \
    \         (list number 0)]\n                                                 \
    \    [else\n                                                       (cond\n   \
    \                                                      [(= remaining number)\n\
    \                                                          (list number 0)]\n\
    \                                                         [(= need number)\n \
    \                                                         (list number 0)]\n",
  "  (cond\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list number\
    \ 0)]\n    [else (cond\n             [(= (mod number need) 0) (cons number (eat\
    \ number (- need (mod number need)) (- remaining 1)))]\n             [(= (mod\
    \ number need) 0) (cons number (eat number (- need (mod number need)) (- remaining\
    \ 1)))]\n             [else (cond\n                      [(= (mod number need)\
    \ 0) (cons number (eat number (- need (mod number need)) (- remaining 1)))]\n\
    \                      [(= (mod number need) 0) (cons number (eat number (- need\
    \ (mod number need)) (- remaining 1)))]\n                      [else (cond\n \
    \                              [(= (mod number need) 0) (cons number (eat number\
    \ (- need (mod number need)) (- remaining 1)))]\n                            \
    \   [(= (mod number need) 0) (cons number (eat number (- need (mod number need))\
    \ (- remaining 1)))]\n                               [else (cond\n           \
    \                             [(= (mod number need) 0) (cons number (eat number\
    \ (- need (mod number need)) (- remaining 1)))]\n                            \
    \            [(= (mod number need) 0) (cons number (eat number (- need (mod number\
    \ need)) (- remaining 1)))]\n                                        [else (cond\n\
    \                                                  [(= (mod number need) 0) (cons\
    \ number (eat number (- need (mod number need)) (- remaining 1)))]\n         \
    \                                         [(= (mod number need) 0) (cons number\
    \ (eat number (- need (mod number need)) (- remaining 1)))]\n                \
    \                                  [else (cond\n                             \
    \                             [(= (mod number need) 0) (cons number (eat number\
    \ (- need (mod number need)) (- remaining 1)))]\n                            \
    \                              [(= (mod number need) 0) (cons number (eat number\
    \ (- need (mod number need)) (- remaining 1)))]\n                            \
    \                              [else (cond\n                                 \
    \                                   [(= (mod number need) 0) (cons number (eat\
    \ number (- need (mod number need)) (- remaining 1)))]\n                     \
    \                                               [(= (mod number need) 0) (cons\
    \ number (eat number (- need (mod number need)) (- remaining 1)))]\n         \
    \                                                           [else (cond\n    \
    \                                                                      [(= (mod\
    \ number need) 0) (cons number (eat number (- need (mod number need)) (- remaining\
    \ 1)))]\n                                ", "  (cond\n    [(and (<= 0 number 1000)\
    \ (<= 0 need 1000) (<= 0 remaining 1000)) (list 0 0)]\n    [(and (<= 0 number\
    \ 1000) (<= 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and (<= 0 number\
    \ 1000) (> 0 need 1000) (<= 0 remaining 0)) (list 0 0)]\n    [(and (<= 0 number\
    \ 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and (> 0 number\
    \ 1000) (<= 0 need 1000) (<= 0 remaining 0)) (list 0 0)]\n    [(and (> 0 number\
    \ 1000) (<= 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and (> 0 number\
    \ 1000) (> 0 need 1000) (<= 0 remaining 0)) (list 0 0)]\n    [(and (> 0 number\
    \ 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and (> 0 number\
    \ 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and (> 0 number\
    \ 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and (> 0 number\
    \ 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and (> 0 number\
    \ 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and (> 0 number\
    \ 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and (> 0 number\
    \ 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and (> 0 number\
    \ 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and (> 0 number\
    \ 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and (> 0 number\
    \ 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and (> 0 number\
    \ 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and (> 0 number\
    \ 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and (> 0 number\
    \ 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and (> 0 number\
    \ 1000) (", "  (cond\n    [(= remaining 0) (list number need)]\n    [(= remaining\
    \ (- need number)) (list number 0)]\n    [else (cons (- remaining (- need number))\
    \ (eat number (- need number) (remaining 0))))))\n", "  (cond\n    [(and (<= 0\
    \ number 1000) (<= 0 need 1000) (<= 0 remaining 1000)) (list 0 0)]\n    [(and\
    \ (<= 0 number 1000) (<= 0 need 1000) (> remaining 0)) (list 0 0)]\n    [(and\
    \ (<= 0 number 1000) (> need 0) (<= 0 remaining 1000)) (list 0 0)]\n    [(and\
    \ (<= 0 number 1000) (> need 0) (> remaining 0)) (list 0 0)]\n    [(and (> number\
    \ 0) (<= 0 need 1000) (<= 0 remaining 1000)) (list 0 0)]\n    [(and (> number\
    \ 0) (<= 0 need 1000) (> remaining 0)) (list 0 0)]\n    [(and (> number 0) (>\
    \ need 0) (<= 0 remaining 1000)) (list 0 0)]\n    [(and (> number 0) (> need 0)\
    \ (> remaining 0)) (list 0 0)]\n    [(and (> number 0) (> need 0) (> remaining\
    \ 0)) (list (+ remaining need) 0)]\n    [(and (> number 0) (> need 0) (> remaining\
    \ 0)) (list (+ remaining need) (+ remaining need))]\n    [(and (> number 0) (>\
    \ need 0) (> remaining 0)) (list (+ remaining need) (+ remaining need) (+ remaining\
    \ need))]\n    [(and (> number 0) (> need 0) (> remaining 0)) (list (+ remaining\
    \ need) (+ remaining need) (+ remaining need) (+ remaining need))]\n    [(and\
    \ (> number 0) (> need 0) (> remaining 0)) (list (+ remaining need) (+ remaining\
    \ need) (+ remaining need) (+ remaining need) (+ remaining need))]\n    [(and\
    \ (> number 0) (> need 0) (> remaining 0)) (list (+ remaining need) (+ remaining\
    \ need) (+ remaining need) (+ remaining need) (+ remaining need) (+ remaining\
    \ need))]\n    [(and (> number 0) (> need 0) (> remaining 0)) (list (+ remaining\
    \ need) (+ remaining need) (+ remaining need) (+ remaining need) (+ remaining\
    \ need) (+ remaining need) (+ remaining need))]\n    [(and (> number 0) (> need\
    \ 0) (> remaining 0)) (list (+ remaining need) (+ remaining need) (+ remaining\
    \ need) (+ remaining need) (+ remaining need) (+ remaining need) (+ remaining\
    \ need) (+ remaining need))]\n    [(and (> number 0) (> need 0) (> remaining 0))\
    \ (list (+ remaining need) (+ remaining need) (+ remaining need) (+ remaining\
    \ need) (+ remaining need) (+ remaining need) (+ remaining need) (+ remaining\
    \ need", "  (cond\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0)\
    \ (list number 0)]\n    [else (cond\n             [(= number need) (list number\
    \ 0)]\n             [(< number need) (list number 0)]\n             [(< number\
    \ remaining) (list number 0)]\n             [(> number remaining) (list number\
    \ 0)]\n             [(> number need) (list number 0)]\n             [else (cond\
    \ [(= (modulo number need) 0) (list number 0)]\n                       [(< number\
    \ need) (list number 0)]\n                       [(< number remaining) (list number\
    \ 0)]\n                       [(> number remaining) (list number 0)]\n       \
    \                [(> number need) (list number 0)]\n                       [else\
    \ (cond [(= (modulo number remaining) 0) (list number 0)]\n                  \
    \               [(< number need) (list number 0)]\n                          \
    \       [(< number remaining) (list number 0)]\n                             \
    \    [(> number remaining) (list number 0)]\n                                \
    \ [(> number need) (list number 0)]\n                                 [else (cond\
    \ [(= (modulo number remaining) 0) (list number 0)]\n                        \
    \                   [(< number need) (list number 0)]\n                      \
    \                     [(< number remaining) (list number 0)]\n               \
    \                            [(> number remaining) (list number 0)]\n        \
    \                                   [(> number need) (list number 0)]\n      \
    \                                     [else (cond [(= (modulo number remaining)\
    \ 0) (list number 0)]\n                                                      [(<\
    \ number need) (list number 0)]\n                                            \
    \          [(< number remaining) (list number 0)]\n                          \
    \                            [(> number remaining) (list number 0)]\n        \
    \                                              [(> number need) (list number 0)]\n\
    \                                                      [else (cond [(= (modulo\
    \ number remaining) 0) (list number 0)]\n                                    \
    \                            [(< number need) (list number 0)]\n             \
    \                                                   [(< number remaining) (list\
    \ number 0)]\n                                                               \
    \ [(> number remaining) (list number 0)]\n                                   \
    \                             [(> number need) (list number 0)]\n            \
    \                                                    [else (cond [(= (modulo number\
    \ remaining) 0) (list number 0)]\n                                           \
    \                             [(< number need) (list number 0)]\n            \
    \                                                            [(< number remaining)\
    \ (list number 0)]\n                                                         \
    \               [(> number remaining) (list number 0)]\n                     \
    \                                                   [(> number need) (list number\
    \ 0)]\n                                                                      \
    \  [else (cond [(= (modulo number remaining) 0) (list number 0)]\n           \
    \                                                                       [(< number\
    \ need) (list number 0)]", "  (cond\n    [(or (< number 0) (< need 0) (< remaining\
    \ 0))\n     (list 0 0)]\n    [(= remaining 0)\n     (list number 0)]\n    [else\n\
    \     (cond\n       [(= number need)\n        (list number 0)]\n       [else\n\
    \        (cond\n          [(< number need)\n           (cond\n             [(=\
    \ remaining 0)\n              (list number 0)]\n             [else\n         \
    \     (cons (- remaining number)\n                     (eat number (- number need)\
    \ remaining))]\n             )\n          ]\n         )\n       ]\n      )\n \
    \   ]\n   )\n  )\n", "  (cond\n    [(or (= remaining 0) (= number 0))\n     (list\
    \ 0 0)]\n    [(or (= remaining 0) (= need 0))\n     (list number 0)]\n    [else\n\
    \     (cond\n       [(= remaining 0)\n        (cond\n         [(= number 0)\n\
    \          (list 0 0)]\n         [else\n          (list number 0)]\n         )]\n\
    \       [(= number 0)\n        (cond\n         [(= need 0)\n          (list 0\
    \ 0)]\n         [else\n          (list number 0)]\n         )]\n       [else\n\
    \        (cond\n         [(= need 0)\n          (list number 0)]\n         [else\n\
    \          (list number 0)]\n         )]\n       ])]))\n", "  (cond\n    [(and\
    \ (<= 0 number 1000) (<= 0 need 1000) (<= 0 remaining 1000)) (list 0 0)]\n   \
    \ [(and (<= 0 number 1000) (<= 0 need 1000) (< remaining 1)) (list 0 0)]\n   \
    \ [(and (<= 0 number 1000) (< need 1000) (<= 0 remaining 1000)) (list 0 0)]\n\
    \    [(and (<= 0 number 1000) (< need 1000) (< remaining 1)) (list 0 0)]\n   \
    \ [(and (<= 0 number 1000) (< need 1000) (< remaining 1)) (list 0 0)]\n    [(and\
    \ (<= 0 number 1000) (< need 1000) (< remaining 1)) (list 0 0)]\n    [(and (<=\
    \ 0 number 1000) (< need 1000) (< remaining 1)) (list 0 0)]\n    [(and (<= 0 number\
    \ 1000) (< need 1000) (< remaining 1)) (list 0 0)]\n    [(and (<= 0 number 1000)\
    \ (< need 1000) (< remaining 1)) (list 0 0)]\n    [(and (<= 0 number 1000) (<\
    \ need 1000) (< remaining 1)) (list 0 0)]\n    [(and (<= 0 number 1000) (< need\
    \ 1000) (< remaining 1)) (list 0 0)]\n    [(and (<= 0 number 1000) (< need 1000)\
    \ (< remaining 1)) (list 0 0)]\n    [(and (<= 0 number 1000) (< need 1000) (<\
    \ remaining 1)) (list 0 0)]\n    [(and (<= 0 number 1000) (< need 1000) (< remaining\
    \ 1)) (list 0 0)]\n    [(and (<= 0 number 1000) (< need 1000) (< remaining 1))\
    \ (list 0 0)]\n    [(and (<= 0 number 1000) (< need 1000) (< remaining 1)) (list\
    \ 0 0)]\n    [(and (<= 0 number 1000) (< need 1000) (< remaining 1)) (list 0 0)]\n\
    \    [(and (<= 0 number 1000) (< need 1000) (< remaining 1)) (list 0 0)]\n   \
    \ [(and (<= 0 number 1000) (< need 1000) (< remaining 1)) (list 0 0)]\n    [(and\
    \ (<= 0 number 1000) (< need 1000) (< remaining 1)) (list 0 0)]\n    [(and (<=\
    \ 0 number 1000) (< need 1000) (< remaining 1)) (list 0 0)]\n    [(and (<= 0 number\
    \ 1000) (< need 1000) (< remaining 1)) (list 0 0)]", "  (cond\n    [(= remaining\
    \ 0) (list number 0)]\n    [(= remaining (- need number)) (list number 0)]\n \
    \   [else (cons (- remaining (- need number)) (eat number (- need number) (remaining\
    \ 0)))]))\n", "  (cond\n    [(= remaining 0) (list number 0)]\n    [(= remaining\
    \ need) (list number 0)]\n    [else (cond\n             [(= remaining (- need\
    \ number)) (list number 0)]\n             [(< remaining (- need number)) (list\
    \ number (- remaining number))]\n             [else (cond\n                  \
    \    [(= remaining (- need (- number need)))\n                       (list number\
    \ (- remaining (- number need)))]\n                      [else (cond\n       \
    \                       [(= remaining (- need (- number need) (- number number)))\n\
    \                               (list number (- remaining (- number need) (- number\
    \ number)))]\n                              [else (cond\n                    \
    \                  [(= remaining (- need (- number need) (- number number) (-\
    \ number remaining)))\n                                       (list number (-\
    \ remaining (- number need) (- number number) (- number remaining)))]\n      \
    \                                [else (cond\n                               \
    \               [(= remaining (- need (- number need) (- number number) (- number\
    \ remaining) (- number remaining)))\n                                        \
    \       (list number (- remaining (- number need) (- number number) (- number\
    \ remaining) (- number remaining)))]\n                                       \
    \       [else (cond\n                                                      [(=\
    \ remaining (- need (- number need) (- number number) (- number remaining) (-\
    \ number remaining) (- number remaining)))\n                                 \
    \                      (list number (- remaining (- number need) (- number number)\
    \ (- number remaining) (- number remaining) (- number remaining)))]\n        \
    \                                              [else (cond\n                 \
    \                                             [(= remaining (- need (- number\
    \ need) (- number number) (- number remaining) (- number remaining) (- number\
    \ remaining) (- number remaining)))\n                                        \
    \                       (list number (- remaining (- number need) (- number number)\
    \ (- number remaining) (- number remaining) (- number remaining) (- number remaining)))]\n\
    \                                                              [else (cond\n \
    \                                                                  [(= remaining\
    \ (- need (- number need) (- number number) (- number remaining) (- number remaining)\
    \ (- number remaining) (- number remaining) (- number remaining)))\n         \
    \                                                           (list number (- remaining\
    \ (- number need) (- number number) (- number remaining) (- number remaining)\
    \ (- number remaining) (- number remaining) (- number remaining)))]\n        \
    \                                                           [else (cond\n    \
    \                                                                      [(= remaining\
    \ (- need (- number need) (- number number) (- number remaining) (- number remaining)\
    \ (- number remaining) (- number remaining) (- number remaining) (- number remaining)))\n\
    \                                                                           (list\
    \ number (- remaining ", "  (cond\n    [(= remaining 0) (list number 0)]\n   \
    \ [(= remaining (- need number)) (list number 0)]\n    [else (cond [(< remaining\
    \ (- need number)) (list number 0)]\n              [(= remaining (- need (- number\
    \ need))) (list number 0)]\n              [else (cond [(< remaining (- need (-\
    \ number need)))\n                           (cond [(< remaining (- number need))\
    \ (list number 0)]\n                                 [(= remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (- number need))\
    \ (list number 0)]\n                                 [(> remaining (", "  (cond\n\
    \    [(= remaining 0) (list number 0)]\n    [(= remaining (- need number)) (list\
    \ number 0)]\n    [else (cons (- remaining (- need number)) (eat number (- need\
    \ number) (- remaining number)))]))\n", "  (cond\n    [(= remaining 0) (list number\
    \ 0)]\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list number\
    \ 0)]\n    [else (cond\n             [(= number need) (list number 0)]\n     \
    \        [(< number need) (list number 0)]\n             [(< number need) (list\
    \ number 0)]\n             [(< number need) (list number 0)]\n             [(<\
    \ number need) (list number 0)]\n             [(< number need) (list number 0)]\n\
    \             [(< number need) (list number 0)]\n             [(< number need)\
    \ (list number 0)]\n             [(< number need) (list number 0)]\n         \
    \    [(< number need) (list number 0)]\n             [(< number need) (list number\
    \ 0)]\n             [(< number need) (list number 0)]\n             [(< number\
    \ need) (list number 0)]\n             [(< number need) (list number 0)]\n   \
    \          [(< number need) (list number 0)]\n             [(< number need) (list\
    \ number 0)]\n             [(< number need) (list number 0)]\n             [(<\
    \ number need) (list number 0)]\n             [(< number need) (list number 0)]\n\
    \             [(< number need) (list number 0)]\n             [(< number need)\
    \ (list number 0)]\n             [(< number need) (list number 0)]\n         \
    \    [(< number need) (list number 0)]\n             [(< number need) (list number\
    \ 0)]\n             [(< number need) (list number 0)]\n             [(< number\
    \ need) (list number 0)]\n             [(< number need) (list number 0)]\n   \
    \          [(< number need) (list number 0)]\n             [(< number need) (list\
    \ number 0)]\n             [(< number need) (list number 0)]\n             [(<\
    \ number need) (list number 0)]\n             [(< number need) (list number 0)]\n\
    \             [(< number need) (list number 0)]\n             [(< number need)\
    \ (list number 0)]\n             [(< number need) (list number 0)]\n         \
    \    [(< number need) (list number 0)]\n             [(< number need) (list number\
    \ 0)]\n             [(< number need) (list number 0)]\n             [(< number\
    \ need) (list number 0)]\n             [(< number need) (list number 0)]\n   \
    \          [(< number need) (list number 0)]\n             [(< number need) (list\
    \ number 0)]\n             [(< number need) (list number 0)", "  (cond\n    [(or\
    \ (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(= remaining 0)\n    \
    \ (list number 0)]\n    [(= number need)\n     (list number 0)]\n    [else\n \
    \    (let ([carrots (- need (* number remaining))])\n       (cond\n         [(<\
    \ carrots 0)\n          (list number 0)]\n         [(< carrots 100)\n        \
    \  (list number (- carrots 100))]\n         [else\n          (list number (- carrots\
    \ 100))])])]))\n", "  (cond\n    [(or (= remaining 0) (= number 0))\n     (list\
    \ 0 0)]\n    [(= remaining 0)\n     (list number 0)]\n    [(= number 0)\n    \
    \ (list 0 0)]\n    [else\n     (cond\n       [(= (modulo number need) 0)\n   \
    \     (cons (- remaining need) (cons 0 (eat remaining (- number need) remaining)))]\n\
    \       [(< number need)\n        (cons (- remaining need) (cons 0 (eat remaining\
    \ (- number need) remaining)))]\n       [(< need number)\n        (cons (- remaining\
    \ need) (cons 0 (eat remaining (- number need) remaining)))]\n       [else\n \
    \       (cons (- remaining need) (cons 0 (eat remaining (- number need) remaining)))]\n\
    \       )])]))\n", "  (cond\n    [(or (= remaining 0) (= number 0))\n     (list\
    \ 0 0)]\n    [(= remaining 0)\n     (list number 0)]\n    [(= number 0)\n    \
    \ (list 0 0)]\n    [else\n     (cond\n       [(= remaining need)\n        (list\
    \ number 0)]\n       [(< remaining need)\n        (list 0 0)]\n       [(< number\
    \ need)\n        (list 0 0)]\n       [(< remaining number)\n        (list 0 0)]\n\
    \       [(< number number)\n        (list 0 0)]\n       [else\n        (cond\n\
    \          [(= (mod number 2) 0)\n           (list number 0)]\n          [(= (mod\
    \ number 2) 1)\n           (list 0 0)]\n          [(= (mod number 3) 0)\n    \
    \       (list 0 0)]\n          [(= (mod number 3) 1)\n           (list 0 0)]\n\
    \          [(= (mod number 4) 0)\n           (list 0 0)]\n          [(= (mod number\
    \ 4) 1)\n           (list 0 0)]\n          [(= (mod number 5) 0)\n           (list\
    \ 0 0)]\n          [(= (mod number 5) 1)\n           (list 0 0)]\n          [(=\
    \ (mod number 6) 0)\n           (list 0 0)]\n          [(= (mod number 6) 1)\n\
    \           (list 0 0)]\n          [(= (mod number 7) 0)\n           (list 0 0)]\n\
    \          [(= (mod number 7) 1)\n           (list 0 0)]\n          [(= (mod number\
    \ 8) 0)\n           (list 0 0)]\n          [(= (mod number 8) 1)\n           (list\
    \ 0 0)]\n          [(= (mod number 9) 0)\n           (list 0 0)]\n          [(=\
    \ (mod number 9) 1)\n           (list 0 0)]\n          [(= (mod number 10) 0)\n\
    \           (list 0 0)]\n          [(= (mod number 10) 1)\n           (list 0\
    \ 0)]\n          [(= (mod number 11) 0)\n           (list 0 0)]\n          [(=\
    \ (mod number 11) 1)\n           (list 0 0)]\n          [(= (mod number 12) 0)\n\
    \           (list 0 0)]\n          [(= (mod number 12) 1)\n           (list 0\
    \ 0)]\n          [(= (mod number 13) 0)\n           (list 0 0)]\n          [(=\
    \ (mod number 13) 1)\n           (list 0 0)]\n          [(= (mod number 14) 0)\n\
    \           (list 0 0)]\n          [(= (mod number 14) ", "  (cond\n    [(= remaining\
    \ 0) (list number 0)]\n    [(= remaining need) (list number 0)]\n    [else (cond\n\
    \             [(< remaining need) (cons (- remaining need) (eat number (- need\
    \ remaining) 0))]\n             [(= remaining need) (cons 0 (eat number (- need\
    \ remaining) 0))]\n             [else (cond\n                      [(< remaining\
    \ 0) (cons (- remaining 0) (eat number (- need remaining) 0))]\n             \
    \         [(< need 0) (cons (- remaining 0) (eat number (- need remaining) 0))]\n\
    \                      [else (cond\n                              [(< remaining\
    \ 0) (cons (- remaining 0) (eat number (- need remaining) 0))]\n             \
    \                 [(< need 0) (cons (- remaining 0) (eat number (- need remaining)\
    \ 0))]\n                              [(< remaining need) (cons (- remaining need)\
    \ (eat number (- need remaining) (- remaining remaining)))]\n                \
    \              [else (cond\n                                      [(< remaining\
    \ 0) (cons (- remaining 0) (eat number (- need remaining) (- remaining remaining)))]\n\
    \                                      [(< need 0) (cons (- remaining 0) (eat\
    \ number (- need remaining) (- remaining remaining)))]\n                     \
    \                 [(< remaining need) (cons (- remaining need) (eat number (-\
    \ need remaining) (- remaining remaining)))]\n                               \
    \       [else (cond\n                                              [(< remaining\
    \ 0) (cons (- remaining 0) (eat number (- need remaining) (- remaining remaining)))]\n\
    \                                              [(< need 0) (cons (- remaining\
    \ 0) (eat number (- need remaining) (- remaining remaining)))]\n             \
    \                                 [(< remaining need) (cons (- remaining need)\
    \ (eat number (- need remaining) (- remaining remaining)))]\n                \
    \                              [else (cond\n                                 \
    \                     [(< remaining 0) (cons (- remaining 0) (eat number (- need\
    \ remaining) (- remaining remaining)))]\n                                    \
    \                  [(< need 0) (cons (- remaining 0) (eat number (- need remaining)\
    \ (- remaining remaining)))]\n                                               \
    \       [(< remaining need) (cons (- remaining need) (eat number (- need remaining)\
    \ (- remaining remaining)))]\n                                               \
    \       [else (cond\n                                                        \
    \      [(< remaining 0) (cons (- remaining 0) (eat number (- need remaining) (-\
    \ remaining remaining)))]\n                                                  \
    \            [(< need 0) (cons (- remaining 0) (eat number (- need remaining)\
    \ (- remaining remaining)))]\n                                               \
    \               [(< remaining need) (cons (- remaining need) (eat number (- need\
    \ remaining) (- remaining remaining)))]\n                                    \
    \                          [else (", "  (cond\n    [(= remaining 0) (list number\
    \ 0)]\n    [(= remaining (- need number)) (list number 0)]\n    [else (cons (-\
    \ remaining (- need number)) (eat number (- number need) remaining))]\n  ))\n",
  "  (cond\n    [(and (<= remaining 0) (<= need 0))\n     (list number 0)]\n    [(and\
    \ (<= remaining 0) (< need 0))\n     (list number 0)]\n    [(and (<= remaining\
    \ 0) (> need 0))\n     (list number 0)]\n    [(and (<= remaining 0) (< number\
    \ 0))\n     (list number 0)]\n    [(and (<= remaining 0) (> number 0))\n     (list\
    \ number 0)]\n    [(and (<= remaining 0) (< number need))\n     (list number need)]\n\
    \    [(and (<= remaining 0) (> number need))\n     (list number need)]\n    [(and\
    \ (<= remaining 0) (< number need) (< number remaining))\n     (list number need\
    \ remaining)]\n    [(and (<= remaining 0) (> number need) (> number remaining))\n\
    \     (list number need remaining)]\n    [else\n     (let ([remaining-carrots\
    \ (- remaining need)])\n       (cond\n         [(< remaining-carrots 0)\n    \
    \      (list number 0)]\n         [(< remaining-carrots need)\n          (list\
    \ number need)]\n         [(< remaining-carrots need)\n          (list number\
    \ need)]\n         [(< remaining-carrots need)\n          (list number need)]\n\
    \         [(< remaining-carrots need)\n          (list number need)]\n       \
    \  [(< remaining-carrots need)\n          (list number need)]\n         [(< remaining-carrots\
    \ need)\n          (list number need)]\n         [(< remaining-carrots need)\n\
    \          (list number need)]\n         [(< remaining-carrots need)\n       \
    \   (list number need)]\n         [(< remaining-carrots need)\n          (list\
    \ number need)]\n         [(< remaining-carrots need)\n          (list number\
    \ need)]\n         [(< remaining-carrots need)\n          (list number need)]\n\
    \         [(< remaining-carrots need)\n          (list number need)]\n       \
    \  [(< remaining-carrots need)\n          (list number need)]\n         [(< remaining-carrots\
    \ need)\n          (list number need)]\n         [(< remaining-carrots need)\n\
    \          (list number need)]\n         [(< remaining-carrots need)\n       \
    \   (list number need)]\n         [(< remaining-carrots need)\n          (list\
    \ number need)]\n", "  (cond\n    [(and (<= 0 number 1000) (<= 0 need 1000) (<=\
    \ 0 remaining 1000)) (list 0 0)]\n    [(and (<= 0 number 1000) (<= 0 need 1000)\
    \ (> remaining 0)) (list 0 0)]\n    [(and (<= 0 number 1000) (> need 0) (<= 0\
    \ remaining 1000)) (list 0 0)]\n    [(and (<= 0 number 1000) (> need 0) (> remaining\
    \ 0)) (list 0 0)]\n    [(and (> number 0) (<= 0 need 1000) (<= 0 remaining 1000))\
    \ (list 0 0)]\n    [(and (> number 0) (<= 0 need 1000) (> remaining 0)) (list\
    \ 0 0)]\n    [(and (> number 0) (> need 0) (<= 0 remaining 1000)) (list 0 0)]\n\
    \    [(and (> number 0) (> need 0) (> remaining 0)) (list 0 0)]\n    [else (cond\n\
    \            [(and (<= 0 number 1000) (> need 0) (<= remaining 1000)) (list 0\
    \ 0)]\n            [(and (<= 0 number 1000) (> need 0) (> remaining 0)) (list\
    \ 0 0)]\n            [(and (> number 0) (<= 0 need 1000) (<= remaining 1000))\
    \ (list 0 0)]\n            [(and (> number 0) (<= 0 need 1000) (> remaining 0))\
    \ (list 0 0)]\n            [(and (> number 0) (> need 0) (<= remaining 1000))\
    \ (list 0 0)]\n            [(and (> number 0) (> need 0) (> remaining 0)) (list\
    \ 0 0)]\n            [else (cond\n                    [(and (<= 0 number 1000)\
    \ (<= remaining 1000)) (list 0 0)]\n                    [(and (<= 0 number 1000)\
    \ (> remaining 0)) (list 0 0)]\n                    [(and (> number 0) (<= 0 need\
    \ 1000) (<= remaining 1000)) (list 0 0)]\n                    [(and (> number\
    \ 0) (<= 0 need 1000) (> remaining 0)) (list 0 0)]\n                    [(and\
    \ (> number 0) (> need 0) (<= remaining 1000)) (list 0 0)]\n                 \
    \   [(and (> number 0) (> need 0) (> remaining 0)) (list 0 0)]\n             \
    \       [else (cond\n                            [(and (<= 0 number 1000) (> remaining\
    \ 1000)) (list 0 0)]\n                            [(and (<= 0 number 1000) (>\
    \ remaining 0)) (list 0 0)]\n                            [(and (> number 0) (<=\
    \ 0 need 1000) (> remaining 1000)) (list 0 0)]\n                            [(and\
    \ (> number 0) (<= ", "  (cond\n    [(or (= remaining 0) (= need 0))\n     (list\
    \ number 0)]\n    [(< remaining 0)\n     (list number 0)]\n    [(< need 0)\n \
    \    (list number 0)]\n    [else\n     (cond\n       [(= remaining 0)\n      \
    \  (cond\n         [(= number 0)\n          (list 0 0)]\n         [else\n    \
    \      (list number (- remaining need))])]\n       [(= number 0)\n        (cond\n\
    \         [(= need 0)\n          (list 0 0)]\n         [else\n          (list\
    \ 0 0)])]\n       [else\n        (cond\n         [(= need 0)\n          (list\
    \ 0 0)]\n         [else\n          (list number (- need remaining))])]\n     \
    \  [else\n        (cond\n         [(= number 0)\n          (list 0 0)]\n     \
    \    [else\n          (list number (- remaining number))])]\n       [else\n  \
    \      (cond\n         [(= number 0)\n          (list 0 0)]\n         [else\n\
    \          (list number (- remaining number))])]\n       [else\n        (cond\n\
    \         [(= number 0)\n          (list 0 0)]\n         [else\n          (list\
    \ number (- remaining number))])]\n       [else\n        (cond\n         [(= number\
    \ 0)\n          (list 0 0)]\n         [else\n          (list number (- remaining\
    \ number))])]\n       [else\n        (cond\n         [(= number 0)\n         \
    \ (list 0 0)]\n         [else\n          (list number (- remaining number))])]\n\
    \       [else\n        (cond\n         [(= number 0)\n          (list 0 0)]\n\
    \         [else\n          (list number (- remaining number))])]\n       [else\n\
    \        (cond\n         [(= number 0)\n          (list 0 0)]\n         [else\n\
    \          (list number (- remaining number))])]\n       [else\n        (cond\n\
    \         [(= number 0)\n          (list 0 0)]\n         [else\n          (list\
    \ number (- remaining number))])]\n       [else\n        (cond\n         [(= number\
    \ 0)\n          (list 0 0)]\n         [else\n          (list number (- remaining\
    \ number))])]\n       [else\n        (cond\n         [(= number 0)\n         \
    \ (list 0 0)]\n         [else\n          (list number (- remaining number))])]\n\
    \       [else\n        (cond", "  (cond\n    [(= remaining 0) (list number 0)]\n\
    \    [(= remaining (- need number)) (list number 0)]\n    [else (cons (- remaining\
    \ (- need number)) (eat number (- need number) (remaining (remaining - number))))]))\n",
  "  (cond\n    [(and (>= number 0) (<= need 1000) (<= remaining 1000)) (list number\
    \ 0)]\n    [else (cond\n             [(and (>= remaining 0) (<= need 1000) (<=\
    \ number 1000)) (list remaining 0)]\n             [(and (>= remaining 0) (<= need\
    \ 1000) (<= number 1000)) (list remaining 0)]\n             [(and (>= remaining\
    \ 0) (<= need 1000) (<= number 1000)) (list remaining 0)]\n             [(and\
    \ (>= remaining 0) (<= need 1000) (<= number 1000)) (list remaining 0)]\n    \
    \         [(and (>= remaining 0) (<= need 1000) (<= number 1000)) (list remaining\
    \ 0)]\n             [(and (>= remaining 0) (<= need 1000) (<= number 1000)) (list\
    \ remaining 0)]\n             [(and (>= remaining 0) (<= need 1000) (<= number\
    \ 1000)) (list remaining 0)]\n             [(and (>= remaining 0) (<= need 1000)\
    \ (<= number 1000)) (list remaining 0)]\n             [(and (>= remaining 0) (<=\
    \ need 1000) (<= number 1000)) (list remaining 0)]\n             [(and (>= remaining\
    \ 0) (<= need 1000) (<= number 1000)) (list remaining 0)]\n             [(and\
    \ (>= remaining 0) (<= need 1000) (<= number 1000)) (list remaining 0)]\n    \
    \         [(and (>= remaining 0) (<= need 1000) (<= number 1000)) (list remaining\
    \ 0)]\n             [(and (>= remaining 0) (<= need 1000) (<= number 1000)) (list\
    \ remaining 0)]\n             [(and (>= remaining 0) (<= need 1000) (<= number\
    \ 1000)) (list remaining 0)]\n             [(and (>= remaining 0) (<= need 1000)\
    \ (<= number 1000)) (list remaining 0)]\n             [(and (>= remaining 0) (<=\
    \ need 1000) (<= number 1000)) (list remaining 0)]\n             [(and (>= remaining\
    \ 0) (<= need 1000) (<= number 1000)) (list remaining 0)]\n             [(and\
    \ (>= remaining 0) (<= need 1000) (<= number 1000)) (list remaining 0)]\n    \
    \         [(and (>= remaining 0) (<= need 1000) (<= number 1000)) (list remaining\
    \ 0)]\n             [(and (>= remaining 0) (<= need 1000) (<= number 1000)) (list\
    \ remaining 0)]\n             [(and (>= remaining 0) (<= need 1000) (<= number\
    \ 1000)) (list remaining 0)]\n             [(and (>= remaining 0) (<= need 1000)\
    \ (<= number 1000)) (list remaining 0)]\n             [(and (>= remaining 0) (<=\
    \ need 1000) (<= number 1000)) (list remaining 0)]\n", "  (cond\n    [(or (= remaining\
    \ 0) (= number 0))\n     (list 0 0)]\n    [(and (= remaining 0) (< need 0))\n\
    \     (list 0 0)]\n    [(and (= remaining 0) (< number 0))\n     (list 0 0)]\n\
    \    [else\n     (cond\n       [(= remaining 0)\n        (cond\n         [(= number\
    \ 0)\n          (list 0 0)]\n         [else\n          (list number (- remaining\
    \ need))]\n         )]\n       [(< remaining 0)\n        (cond\n         [(= number\
    \ 0)\n          (list 0 0)]\n         [else\n          (list number (- remaining\
    \ number))]\n         )]\n       [else\n        (cond\n         [(= number 0)\n\
    \          (list 0 0)]\n         [else\n          (list number (- remaining (-\
    \ number number)))]\n         )]\n       )]\n     )\n    )\n  )\n", "  (cond\n\
    \    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(< remaining 0)\n\
    \     (list number 0)]\n    [(< number need)\n     (list number (- remaining number))]\n\
    \    [else\n     (list number (- remaining need))]))\n", "  (cond\n    [(= remaining\
    \ 0) (list number 0)]\n    [(= remaining (- need number)) (list number 0)]\n \
    \   [else (cons (- remaining (- need number)) (eat number (- need number) (remaining\
    \ 0)))]))\n", "  (cond\n    [(= remaining 0) (list number 0)]\n    [(= remaining\
    \ (- need number)) (list number 0)]\n    [else (cond [(< remaining (- need number))\
    \ (list number 0)]\n              [(< remaining 0) (list number (- remaining number))])]))\n",
  "  (cond\n    [(and (<= remaining 0) (<= need 0))\n     (list number 0)]\n    [(and\
    \ (<= remaining 0) (< need 0))\n     (list number 0)]\n    [(and (<= remaining\
    \ 0) (> need 0))\n     (list number 0)]\n    [else\n     (cond\n       [(< remaining\
    \ 0)\n        (cond\n         [(< number 0)\n          (list number 0)]\n    \
    \     [else\n          (list number (- remaining number))])]\n       [(< number\
    \ 0)\n        (cond\n         [(< need 0)\n          (list number 0)]\n      \
    \   [else\n          (list number (- need number))])]\n       [else\n        (cond\n\
    \         [(< need 0)\n          (list number 0)]\n         [else\n          (list\
    \ number (- need number))])]\n       [else\n        (cond\n         [(< number\
    \ 0)\n          (list number 0)]\n         [else\n          (list number (- number\
    \ remaining))])]\n       [else\n        (cond\n         [(< number 0)\n      \
    \    (list number 0)]\n         [else\n          (list number (- number remaining))])]\n\
    \       [else\n        (cond\n         [(< number 0)\n          (list number 0)]\n\
    \         [else\n          (list number (- number remaining))])]\n       [else\n\
    \        (cond\n         [(< number 0)\n          (list number 0)]\n         [else\n\
    \          (list number (- number remaining))])]\n       [else\n        (cond\n\
    \         [(< number 0)\n          (list number 0)]\n         [else\n        \
    \  (list number (- number remaining))])]\n       [else\n        (cond\n      \
    \   [(< number 0)\n          (list number 0)]\n         [else\n          (list\
    \ number (- number remaining))])]\n       [else\n        (cond\n         [(< number\
    \ 0)\n          (list number 0)]\n         [else\n          (list number (- number\
    \ remaining))])]\n       [else\n        (cond\n         [(< number 0)\n      \
    \    (list number 0)]\n         [else\n          (list number (- number remaining))])]\n\
    \       [else\n        (cond\n         [(< number 0)\n          (list number 0)]\n\
    \         [else\n          (list number (- number remaining))])]\n       [else\n\
    \        (cond\n         [(< number 0)\n          (list number 0)]\n         [else\n\
    \          (list number (", "  (cond\n    [(or (= remaining 0) (= number 0))\n\
    \     (list 0 0)]\n    [(= remaining 0)\n     (list number 0)]\n    [else\n  \
    \   (cond\n       [(< need number)\n        (list number 0)]\n       [(< number\
    \ need)\n        (list number 0)]\n       [(< number need)\n        (list number\
    \ 0)]\n       [(< number need)\n        (list number 0)]\n       [(< number need)\n\
    \        (list number 0)]\n       [(< number need)\n        (list number 0)]\n\
    \       [(< number need)\n        (list number 0)]\n       [(< number need)\n\
    \        (list number 0)]\n       [(< number need)\n        (list number 0)]\n\
    \       [(< number need)\n        (list number 0)]\n       [(< number need)\n\
    \        (list number 0)]\n       [(< number need)\n        (list number 0)]\n\
    \       [(< number need)\n        (list number 0)]\n       [(< number need)\n\
    \        (list number 0)]\n       [(< number need)\n        (list number 0)]\n\
    \       [(< number need)\n        (list number 0)]\n       [(< number need)\n\
    \        (list number 0)]\n       [(< number need)\n        (list number 0)]\n\
    \       [(< number need)\n        (list number 0)]\n       [(< number need)\n\
    \        (list number 0)]\n       [(< number need)\n        (list number 0)]\n\
    \       [(< number need)\n        (list number 0)]\n       [(< number need)\n\
    \        (list number 0)]\n       [(< number need)\n        (list number 0)]\n\
    \       [(< number need)\n        (list number 0)]\n       [(< number need)\n\
    \        (list number 0)]\n       [(< number need)\n        (list number 0)]\n\
    \       [(< number need)\n        (list number 0)]\n       [(< number need)\n\
    \        (list number 0)]\n       [(< number need)\n        (list number 0)]\n\
    \       [(< number need)\n        (list number 0)]\n       [(< number need)\n\
    \        (list number 0)]\n       [(< number need)\n        (list number 0)]\n\
    \       [(< number need)\n        (list number 0)]\n       [(< number need)\n\
    \        (list number 0)]\n       [(< number need)\n        (list number 0)]\n\
    \       [(< number need)\n", "  (cond\n    [(or (= remaining 0) (= number 0))\n\
    \     (list 0 0)]\n    [(= remaining 0)\n     (list number 0)]\n    [else\n  \
    \   (cond\n       [(= number need)\n        (list number 0)]\n       [else\n \
    \       (cond\n          [(= remaining 0)\n           (list 0 0)]\n          [else\n\
    \           (cond\n             [(= remaining need)\n              (list number\
    \ 0)]\n             [else\n              (cond\n                [ (< remaining\
    \ need)\n                  (cons remaining 0)]\n                [else\n      \
    \            (cond\n                    [ (< remaining need)\n               \
    \       (cons remaining 0)]\n                    [else\n                     \
    \ (cond\n                        [ (< remaining need)\n                      \
    \    (cons remaining 0)]\n                        [else\n                    \
    \      (cond\n                            [(< remaining need)\n              \
    \               (cons remaining 0)]\n                            [else\n     \
    \                        (cond\n                              [(< remaining need)\n\
    \                               (cons remaining 0)]\n                        \
    \      [else\n                               (cond\n                         \
    \       [(< remaining need)\n                                 (cons remaining\
    \ 0)]\n                                [else\n                               \
    \  (cond\n                                  [(< remaining need)\n            \
    \                       (cons remaining 0)]\n                                \
    \  [else\n                                   (cond\n                         \
    \           [(< remaining need)\n                                     (cons remaining\
    \ 0)]\n                                    [else\n                           \
    \          (cond\n                                     [(< remaining need)\n \
    \                                    (cons remaining 0)]\n                   \
    \                  [else\n                                     (cond\n       \
    \                              [(< remaining need)\n                         \
    \            (cons remaining 0)]\n                                     [else\n\
    \                                     (cond\n                                \
    \     [(< remaining need)\n                                     (cons remaining\
    \ 0)]\n                                     [else\n                          \
    \           (cond\n                                     [(< remaining need)\n\
    \                                     (cons remaining 0)]\n                  \
    \                   [else\n                                     (cond\n      \
    \                               [(< remaining need)\n                        \
    \             (cons remaining 0)]\n                                     [else\n\
    \                                     (cond\n                                \
    \     [(< remaining need)\n                                     (cons remaining\
    \ 0)]\n                                     [else\n                          \
    \           (cond\n                                     [(< remaining need)\n\
    \                                     (cons remaining 0)]\n                  \
    \                   [else\n                                     (cond\n      \
    \                               [(< remaining need)\n                        \
    \             (cons remaining 0)]\n                                     [else\n\
    \                                     (cond\n                                \
    \     [(< remaining need)\n                                     (cons remaining\
    \ 0)]\n                                     [else\n                          \
    \           (cond\n                                     [(< remaining need)\n\
    \                                     (cons remaining 0)]\n                  \
    \                   [else\n                                     (cond\n      \
    \                               [(", "  (cond\n    [(or (= remaining 0) (= number\
    \ 0))\n     (list 0 0)]\n    [(and (= remaining 0) (= number 0))\n     (list 0\
    \ 0)]\n    [(and (= remaining 0) (< need 0))\n     (list 0 0)]\n    [(and (= remaining\
    \ 0) (< number 0))\n     (list 0 0)]\n    [else\n     (cond\n       [(< remaining\
    \ 0)\n        (cond\n         [(< number 0)\n          (list 0 0)]\n         [else\n\
    \          (cond\n            [(< need 0)\n             (cond\n              [(<\
    \ number 0)\n               (list 0 0)]\n              [else\n               (cond\n\
    \                 [(< number 0)\n                   (list 0 0)]\n            \
    \     [else\n                   (cond\n                     [(< number 0)\n  \
    \                     (list 0 0)]\n                     [else\n              \
    \         (cond\n                         [(< number 0)\n                    \
    \       (list 0 0)]\n                         [else\n                        \
    \   (cond\n                             [(< number 0)\n                      \
    \         (list 0 0)]\n                             [else\n                  \
    \             (cond\n                                 [(< number 0)\n        \
    \                           (list 0 0)]\n                                 [else\n\
    \                                   (cond\n                                  \
    \   [(< number 0)\n                                       (list 0 0)]\n      \
    \                               [else\n                                      \
    \ (cond\n                                         [(< number 0)\n            \
    \                               (list 0 0)]\n                                \
    \         [else\n                                           (cond\n          \
    \                                   [(< number 0)\n                          \
    \                     (list 0 0)]\n                                          \
    \   [else\n                                               (cond\n            \
    \                                     [(< number 0)\n                        \
    \                           (list 0 0)]\n                                    \
    \             [else\n                                                   (cond\n\
    \                                                     [(< number 0)\n        \
    \                                               (list 0 0)]\n                \
    \                                     [else\n                                \
    \                       (cond\n                                              \
    \           [(< number 0)\n                                                  \
    \        (list 0 0)]\n                                                       \
    \  [else\n                                                          (cond\n  \
    \                                                          [(< number 0)\n   \
    \                                                          (list 0 0)]\n     \
    \                                                       [else\n              \
    \                                               (cond\n                      \
    \                                          [(< number 0)\n                   \
    \                                              (list 0 0)]\n                 \
    \                                               [else\n                      \
    \                                           (cond\n                          \
    \                                           [(< number 0)\n                  \
    \                                                      (list 0 0)]\n         \
    \                                                            [else\n         \
    \                                                            (cond\n         \
    \                                                            [(< number 0)\n \
    \                                                                       (list\
    \ 0 0)]\n                                                                    \
    \ [else\n                                                                    \
    \ (cond\n                                                                    \
    \ [(< number 0)\n                                                            \
    \            (list 0 0)]\n                                                   \
    \                  [else\n                                                   \
    \                  (cond\n                                                   \
    \                  [(< number 0)\n                                           \
    \                             (list 0 0)]\n                                  \
    \                                   [else\n                                  \
    \                                   (cond\n                                  \
    \                                   ", "  (cond\n    [(and (<= number 1000) (<=\
    \ need 1000) (<= remaining 1000)) (list number need)]\n    [else (list number\
    \ need)]))\n", "  (cond\n    [(or (= remaining 0) (= number 0))\n     (list 0\
    \ 0)]\n    [(< remaining 0)\n     (list number 0)]\n    [else\n     (cond\n  \
    \     [(< need 0)\n        (list number 0)]\n       [(< number 0)\n        (list\
    \ 0 0)]\n       [(< remaining 0)\n        (list 0 0)]\n       [(< number need)\n\
    \        (list (- number need) (- remaining need))]\n       [(< number need)\n\
    \        (list number (- need (- number need)))]\n       [(< number need)\n  \
    \      (list number (- need (- number need)))]\n       [(< number need)\n    \
    \    (list number (- need (- number need)))]\n       [(< number need)\n      \
    \  (list number (- need (- number need)))]\n       [(< number need)\n        (list\
    \ number (- need (- number need)))]\n       [(< number need)\n        (list number\
    \ (- need (- number need)))]\n       [(< number need)\n        (list number (-\
    \ need (- number need)))]\n       [(< number need)\n        (list number (- need\
    \ (- number need)))]\n       [(< number need)\n        (list number (- need (-\
    \ number need)))]\n       [(< number need)\n        (list number (- need (- number\
    \ need)))]\n       [(< number need)\n        (list number (- need (- number need)))]\n\
    \       [(< number need)\n        (list number (- need (- number need)))]\n  \
    \     [(< number need)\n        (list number (- need (- number need)))]\n    \
    \   [(< number need)\n        (list number (- need (- number need)))]\n      \
    \ [(< number need)\n        (list number (- need (- number need)))]\n       [(<\
    \ number need)\n        (list number (- need (- number need)))]\n       [(< number\
    \ need)\n        (list number (- need (- number need)))]\n       [(< number need)\n\
    \        (list number (- need (- number need)))]\n       [(< number need)\n  \
    \      (list number (- need (- number need)))]\n       [(< number need)\n    \
    \    (list number (- need (- number need)))]\n       [(< number need)\n      \
    \  (list number (- need (- number need)))]\n       [(< number need)\n        (list\
    \ number (- need (- number need)))]\n       [(", "  (cond\n    [(or (= remaining\
    \ 0) (= need 0))\n     (list number 0)]\n    [(= remaining 0)\n     (list number\
    \ 0)]\n    [(= need 0)\n     (list number 0)]\n    [else\n     (cond\n       [(=\
    \ (mod number remaining) 0)\n        (list number 0)]\n       [(< number remaining)\n\
    \        (cond\n          [(= (mod number remaining) 1)\n           (list number\
    \ (- remaining 1))]\n          [(= (mod number remaining) 2)\n           (list\
    \ number (- remaining 2))]\n          [(= (mod number remaining) 3)\n        \
    \   (list number (- remaining 3))]\n          [(= (mod number remaining) 4)\n\
    \           (list number (- remaining 4))]\n          [(= (mod number remaining)\
    \ 5)\n           (list number (- remaining 5))]\n          [(= (mod number remaining)\
    \ 6)\n           (list number (- remaining 6))]\n          [(= (mod number remaining)\
    \ 7)\n           (list number (- remaining 7))])]\n       [(< number remaining)\n\
    \        (cond\n          [(= (mod number remaining) 1)\n           (list number\
    \ (- remaining 1))]\n          [(= (mod number remaining) 2)\n           (list\
    \ number (- remaining 2))]\n          [(= (mod number remaining) 3)\n        \
    \   (list number (- remaining 3))]\n          [(= (mod number remaining) 4)\n\
    \           (list number (- remaining 4))]\n          [(= (mod number remaining)\
    \ 5)\n           (list number (- remaining 5))]\n          [(= (mod number remaining)\
    \ 6)\n           (list number (- remaining 6))]\n          [(= (mod number remaining)\
    \ 7)\n           (list number (- remaining 7))])]\n       [(< number remaining)\n\
    \        (cond\n          [(= (mod number remaining) 1)\n           (list number\
    \ (- remaining 1))]\n          [(= (mod number remaining) 2)\n           (list\
    \ number (- remaining 2))]\n          [(= (mod number remaining) 3)\n        \
    \   (list number (- remaining 3))]\n          [(= (mod number remaining) 4)\n\
    \           (list number (- remaining 4))]\n          [(= (mod number remaining)\
    \ 5)\n           (list number (- remaining 5))]\n          [(= (mod number remaining)\
    \ 6)\n           (list number (- remaining 6))]\n          [(= (mod number remaining)\
    \ 7)\n           (list number (- remaining 7))])]\n       [(< number remaining)\n\
    \        (cond\n          [(= (mod number remaining) 1)\n           (list number\
    \ (- remaining 1))]\n          [(= (mod number remaining", "  (cond\n    [(and\
    \ (<= 0 number 1000) (<= 0 need 1000) (<= 0 remaining 1000)) (list 0 0)]\n   \
    \ [(= number 0) (list 0 0)]\n    [(= need 0) (list 0 0)]\n    [(= remaining 0)\
    \ (list 0 0)]\n    [else (cond\n             [(= remaining 0) (cons (- number\
    \ need) (eat number (- need 1) (- remaining 1)))]\n             [(= remaining\
    \ (- number need)) (cons number 0)]\n             [else (cons (- number need)\
    \ (eat number (- need 1) remaining))]\n             )]\n    ))\n", "  (cond\n\
    \    [(or (< number 1000) (< need 1000) (< remaining 1000)) (list 0 0)]\n    [(=\
    \ remaining 0) (list number need)]\n    [else (cond\n             [(= (modulo\
    \ number need) 0) (list number need)]\n             [(= (modulo number need) 1)\
    \ (list number need 1)]\n             [(= (modulo number need) 2) (list number\
    \ need 2)]\n             [(= (modulo number need) 3) (list number need 3)]\n \
    \            [(= (modulo number need) 4) (list number need 4)]\n             [(=\
    \ (modulo number need) 5) (list number need 5)]\n             [(= (modulo number\
    \ need) 6) (list number need 6)]\n             [(= (modulo number need) 7) (list\
    \ number need 7)]\n             [(= (modulo number need) 8) (list number need\
    \ 8)]\n             [(= (modulo number need) 9) (list number need 9)]\n      \
    \       [(= (modulo number need) 10) (list number need 10)]\n             [(=\
    \ (modulo number need) 11) (list number need 11)]\n             [(= (modulo number\
    \ need) 12) (list number need 12)]\n             [(= (modulo number need) 13)\
    \ (list number need 13)]\n             [(= (modulo number need) 14) (list number\
    \ need 14)]\n             [(= (modulo number need) 15) (list number need 15)]\n\
    \             [(= (modulo number need) 16) (list number need 16)]\n          \
    \   [(= (modulo number need) 17) (list number need 17)]\n             [(= (modulo\
    \ number need) 18) (list number need 18)]\n             [(= (modulo number need)\
    \ 19) (list number need 19)]\n             [(= (modulo number need) 20) (list\
    \ number need 20)]\n             [(= (modulo number need) 21) (list number need\
    \ 21)]\n             [(= (modulo number need) 22) (list number need 22)]\n   \
    \          [(= (modulo number need) 23) (list number need 23)]\n             [(=\
    \ (modulo number need) 24) (list number need 24)]\n             [(= (modulo number\
    \ need) 25) (list number need 25)]\n             [(= (modulo number need) 26)\
    \ (list number need 26)]\n             [(= (modulo number need) 27) (list number\
    \ need 27", "  (cond\n    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n\
    \    [else\n     (cond\n       [(< remaining need)\n        (cond\n         [(<\
    \ number 0)\n          (list 0 0)]\n         [else\n          (cond\n        \
    \    [(= (modulo number need) 0)\n             (list 0 0)]\n            [else\n\
    \             (cond\n               [(< number need)\n                (cond\n\
    \                 [(< remaining 0)\n                  (list remaining 0)]\n  \
    \               [else\n                  (list remaining (- remaining need))]\n\
    \                 )]\n               [else\n                (list 0 (- number\
    \ need))]\n               )]\n            [else\n             (list 0 (- number\
    \ need))]\n            )])]\n        [else\n         (cond\n           [(< remaining\
    \ 0)\n            (list remaining 0)]\n           [else\n            (list 0 (-\
    \ remaining need))]\n           )]\n        [else\n         (cond\n          \
    \ [(< remaining 0)\n            (list remaining 0)]\n           [else\n      \
    \      (list 0 (- remaining need))]\n           )]\n        [else\n         (cond\n\
    \           [(< remaining 0)\n            (list remaining 0)]\n           [else\n\
    \            (list 0 (- remaining need))]\n           )]\n        [else\n    \
    \     (cond\n           [(< remaining 0)\n            (list remaining 0)]\n  \
    \         [else\n            (list 0 (- remaining need))]\n           )]\n   \
    \     [else\n         (cond\n           [(< remaining 0)\n            (list remaining\
    \ 0)]\n           [else\n            (list 0 (- remaining need))]\n          \
    \ )]\n        [else\n         (cond\n           [(< remaining 0)\n           \
    \ (list remaining 0)]\n           [else\n            (list 0 (- remaining need))]\n\
    \           )]\n        [else\n         (cond\n           [(< remaining 0)\n \
    \           (list remaining 0)]\n           [else\n            (list 0 (- remaining\
    \ need))]\n           )]\n        [else\n         (cond\n           [(< remaining\
    \ 0)\n            (list remaining 0)]\n           [else\n            (list 0 (-\
    \ remaining need))]\n           )]\n        [else\n         (cond\n          \
    \ [(< remaining 0)\n            (list remaining 0)]\n           [else\n      \
    \      (list 0 (- remaining need))]\n           )]\n        [else\n         (cond\n\
    \           [(< remaining 0)\n            (list remaining 0)]\n           [else\n\
    \            (list 0 (- remaining need))]\n           )]\n        [else\n    \
    \     (cond\n           [(< remaining 0)\n            (list remaining 0)]\n  \
    \         [else\n            (list 0 (- remaining need))]\n           )]\n   \
    \     [else\n         (cond\n           [(< remaining ", "  (cond\n    [(and (<=\
    \ remaining 0) (<= need 0))\n     (list number 0)]\n    [(and (<= remaining 0)\
    \ (< need 0))\n     (list number 0)]\n    [(and (<= remaining 0) (> need 0))\n\
    \     (list number 0)]\n    [(and (<= remaining 0) (< number 0))\n     (list number\
    \ 0)]\n    [(and (<= remaining 0) (> number 0))\n     (list number 0)]\n    [else\n\
    \     (let ([carrots (- number need)])\n       (cond\n         [(< carrots 0)\n\
    \          (list number 0)]\n         [(< carrots 1)\n          (list number 1)]\n\
    \         [(< carrots 2)\n          (list number 2)]\n         [(< carrots 3)\n\
    \          (list number 3)]\n         [(< carrots 4)\n          (list number 4)]\n\
    \         [(< carrots 5)\n          (list number 5)]\n         [(< carrots 6)\n\
    \          (list number 6)]\n         [(< carrots 7)\n          (list number 7)]\n\
    \         [(< carrots 8)\n          (list number 8)]\n         [(< carrots 9)\n\
    \          (list number 9)]\n         [(< carrots 10)\n          (list number\
    \ 10)]\n         [(< carrots 11)\n          (list number 11)]\n         [(< carrots\
    \ 12)\n          (list number 12)]\n         [(< carrots 13)\n          (list\
    \ number 13)]\n         [(< carrots 14)\n          (list number 14)]\n       \
    \  [(< carrots 15)\n          (list number 15)]\n         [(< carrots 16)\n  \
    \        (list number 16)]\n         [(< carrots 17)\n          (list number 17)]\n\
    \         [(< carrots 18)\n          (list number 18)]\n         [(< carrots 19)\n\
    \          (list number 19)]\n         [(< carrots 20)\n          (list number\
    \ 20)]\n         [(< carrots 21)\n          (list number 21)]\n         [(< carrots\
    \ 22)\n          (list number 22)]\n         [(< carrots 23)\n          (list\
    \ number 23)]\n         [(< carrots 24)\n          (list number 24)]\n       \
    \  [(< carrots 25)\n          (list number 25)]\n         [(< carrots 26)\n  \
    \        (list number 26)]\n         [(", "  (cond\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining 0) (list number 0)]\n    [(= ", "  (cond\n   \
    \ [(= remaining 0) (list number 0)]\n    [(= remaining 0) (list number 0)]\n \
    \   [(= remaining 0) (list number 0)]\n    [else (cond [(= number need) (list\
    \ number 0)]\n              [else (cond [(= (- need number) remaining) (list number\
    \ 0)]\n                        [else (cond [(= (- remaining number) need) (list\
    \ number 0)]\n                                  [else (cond [(= (- remaining number)\
    \ number) need]\n                                          [else (cond [(= (-\
    \ need number) number) need]\n                                               \
    \   [else (list number 0)]))]))]))]))\n", "  (cond\n    [(or (= remaining 0) (=\
    \ need 0))\n     (list number 0)]\n    [(or (= remaining 0) (= need 0))\n    \
    \ (list number 0)]\n    [else\n     (cond\n       [(= remaining 0)\n        (cond\n\
    \         [(= number need)\n          (list number 0)]\n         [else\n     \
    \     (list number (- need remaining))]\n         )]\n       [(= number need)\n\
    \        (cond\n         [(= remaining 0)\n          (list 0 0)]\n         [else\n\
    \          (list 0 (- number need))]\n         )]\n       [else\n        (cond\n\
    \         [(= remaining 0)\n          (list 0 0)]\n         [else\n          (list\
    \ 0 (- number need) (- remaining number))]\n         )]\n       ])]))\n", "  (cond\n\
    \    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [else\n     (cond\n\
    \       [(< need number)\n        (cond\n         [(< remaining 0)\n         \
    \ (list number 0)]\n         [else\n          (list number (- remaining need))]\n\
    \         )]\n       [(< number need)\n        (cond\n         [(< remaining 0)\n\
    \          (list 0 0)]\n         [else\n          (list 0 (- remaining need))]\n\
    \         )]\n       [else\n        (cond\n         [(< remaining 0)\n       \
    \   (list 0 0)]\n         [else\n          (list 0 (- remaining need))]\n    \
    \     )]\n       ])]\n   ))\n", "  (cond\n    [(or (= remaining 0) (= need 0))\n\
    \     (list number 0)]\n    [(or (= remaining 0) (= need 0))\n     (list number\
    \ 0)]\n    [(or (= remaining 0) (= need 0))\n     (list number 0)]\n    [else\n\
    \     (cond\n       [(= remaining 0)\n        (cond\n         [(= number 0)\n\
    \          (list number 0)]\n         [else\n          (cond\n            [(<\
    \ number need)\n             (cond\n              [(= remaining 0)\n         \
    \      (list number 0)]\n              [else\n               (list number (- remaining\
    \ need))])]\n            [else\n             (cond\n              [(= remaining\
    \ 0)\n               (list number 0)]\n              [else\n               (list\
    \ number (- remaining need))])]\n          [else\n           (cond\n         \
    \   [(< number need)\n             (cond\n              [(= remaining 0)\n   \
    \            (list number 0)]\n              [else\n               (list number\
    \ (- remaining need))])]\n            [else\n             (cond\n            \
    \  [(= remaining 0)\n               (list number 0)]\n              [else\n  \
    \             (list number (- remaining need))])]\n            [else\n       \
    \      (cond\n              [(= remaining 0)\n               (list number 0)]\n\
    \              [else\n               (list number (- remaining need))])]\n   \
    \         [else\n             (cond\n              [(= remaining 0)\n        \
    \       (list number 0)]\n              [else\n               (list number (-\
    \ remaining need))])]\n            [else\n             (cond\n              [(=\
    \ remaining 0)\n               (list number 0)]\n              [else\n       \
    \        (list number (- remaining need))])]\n            [else\n            \
    \ (cond\n              [(= remaining 0)\n               (list number 0)]\n   \
    \           [else\n               (list number (- remaining need))])]\n      \
    \      [else\n             (cond\n              [(= remaining 0)\n           \
    \    (list number 0)]\n              [else\n               (list number (- remaining\
    \ need))])]\n            [else\n             (cond\n              [(= remaining\
    \ 0)\n               (list number 0)]\n              [else\n               (list\
    \ number (- remaining need))])]\n            [else\n             (cond\n     \
    \         [(= remaining 0)\n               (list number 0)]\n              [else\n\
    \               (list number (- remaining need))])]\n            [else\n     \
    \        (cond\n              [(= remaining 0)\n               (list number 0)]\n\
    \              [else\n               (list number (- remaining need))])]", " \
    \ (cond\n    [(or (= remaining 0) (= need 0))\n     (list number 0)]\n    [(or\
    \ (= remaining 0) (= need 0))\n     (list number 0)]\n    [(or (= remaining 0)\
    \ (= need 0))\n     (list number 0)]\n    [else\n     (cond\n       [(< remaining\
    \ number)\n        (cond\n         [(< need 0)\n          (cond\n           [(<\
    \ number 0)\n            (list number 0)]\n           [else\n            (list\
    \ number 0)]\n           )\n         ]\n         [(< number 0)\n          (list\
    \ number 0)]\n         [else\n          (cond\n           [(< need 0)\n      \
    \      (cond\n             [(< number 0)\n              (list number 0)]\n   \
    \          [else\n              (list number 0)]\n             )\n           ]\n\
    \           [else\n            (cond\n             [(< number 0)\n           \
    \   (list number 0)]\n             [else\n              (list number 0)]\n   \
    \          )\n           ]\n           )\n         ]\n         [else\n       \
    \   (cond\n           [(< need 0)\n            (cond\n             [(< number\
    \ 0)\n              (list number 0)]\n             [else\n              (list\
    \ number 0)]\n             )\n           ]\n           [else\n            (cond\n\
    \             [(< number 0)\n              (list number 0)]\n             [else\n\
    \              (list number 0)]\n             )\n           ]\n           )\n\
    \         ]\n         )\n       ]\n       [else\n        (cond\n         [(< remaining\
    \ number)\n          (cond\n           [(< need 0)\n            (cond\n      \
    \       [(< number 0)\n              (list number 0)]\n             [else\n  \
    \            (list number 0)]\n             )\n           ]\n           [else\n\
    \            (cond\n             [(< number 0)\n              (list number 0)]\n\
    \             [else\n              (list number 0)]\n             )\n        \
    \   ]\n           )\n         ]\n         [(< number 0)\n          (list number\
    \ 0)]\n         [else\n          (cond\n           [(< need 0)\n            (cond\n\
    \             [(< number 0)\n              (list number 0)]\n             [else\n\
    \              (list number 0)]\n             )\n           ]\n           [else\n\
    \            (cond\n             [(< number 0)\n              (list number 0)]\n\
    \             [else\n              (list number 0)]\n             )\n        \
    \   ]\n           )\n         ]\n         )\n       ]\n       )\n", "  (cond\n\
    \    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(= remaining 0)\n\
    \     (list number 0)]\n    [(= number 0)\n     (list 0 0)]\n    [else\n     (cond\n\
    \       [(< need 0)\n        (cond\n         [(< remaining 0)\n          (list\
    \ 0 0)]\n         [else\n          (list number (- need remaining))]\n       \
    \  )]\n       [(< remaining 0)\n        (cond\n         [(< need 0)\n        \
    \  (list 0 0)]\n         [else\n          (list 0 (- remaining need))]\n     \
    \    )]\n       [else\n        (cond\n         [(< remaining 0)\n          (list\
    \ 0 0)]\n         [else\n          (list number (- remaining need))]\n       \
    \  )]\n       )]\n     )\n    )\n  )\n", "  (cond\n    [(= remaining 0) (list\
    \ number 0)]\n    [(= remaining need) (list number 0)]\n    [else (cons (- remaining\
    \ need) (cons number (eat remaining (- need number) 0)))]))\n", "  (cond\n   \
    \ [(and (<= remaining 0) (<= need 0))\n     (list number 0)]\n    [(and (<= remaining\
    \ 0) (< need 0))\n     (list number 0)]\n    [(and (<= remaining 0) (> need 0))\n\
    \     (list number 0)]\n    [else\n     (cond\n       [(< remaining number)\n\
    \        (cond\n         [(< need 0)\n          (list number 0)]\n         [(<\
    \ need (- number remaining))\n          (list number 0)]\n         [else\n   \
    \       (list number (- number remaining))]\n        )]\n       [(< remaining\
    \ (- number need))\n        (cond\n         [(< need 0)\n          (list number\
    \ 0)]\n         [(< need (- number remaining))\n          (list number 0)]\n \
    \        [else\n          (list number (- number remaining))]\n        )]\n  \
    \     [(< remaining (- number need) (- number remaining))\n        (cond\n   \
    \      [(< need 0)\n          (list number 0)]\n         [(< need (- number remaining))\n\
    \          (list number 0)]\n         [else\n          (list number (- number\
    \ remaining))]\n        )]\n       [else\n        (cond\n         [(< need 0)\n\
    \          (list number 0)]\n         [(< need (- number remaining))\n       \
    \   (list number 0)]\n         [else\n          (list number (- number remaining))]\n\
    \        )]\n      )]))\n", "  (cond\n    [(and (<= remaining 0) (<= need 0))\n\
    \     (list number 0)]\n    [(and (<= remaining 0) (< need 0))\n     (list number\
    \ 0)]\n    [(and (<= remaining 0) (> need 0))\n     (list number 0)]\n    [else\n\
    \     (cond\n       [(< remaining number)\n        (cond\n         [(< need 0)\n\
    \          (list number 0)]\n         [(< need (- number remaining))\n       \
    \   (list number (- number remaining))]\n         [(< need (- number remaining)\
    \ (- number need))\n          (list number (- number need))]\n         [else\n\
    \          (list number (- number need))]\n         ])]\n     ]))\n", "  (cond\n\
    \    [(and (<= number 1000) (<= need 1000) (<= remaining 1000)) (list number need)]\n\
    \    [else (list number need)]))\n", "  (cond\n    [(= remaining 0) (list number\
    \ 0)]\n    [(= remaining need) (list number 0)]\n    [else (cons (- remaining\
    \ need) (cons number 0))]))\n", "  (cond\n    [(= remaining 0) (list number 0)]\n\
    \    [(= remaining (- need number)) (list number 0)]\n    [else (cond\n      \
    \       [(= (- remaining (- need number)) 0) (list number 0)]\n             [(=\
    \ (- remaining (- need number)) (- number need)) (list number need)]\n       \
    \      [else (cond [(= (- remaining (- need number)) (- number need)) (list number\
    \ need)]\n                       [(= (- remaining (- need number)) (- number need)\
    \ (- number remaining)) (list number need)]\n                       [else (cond\
    \ [(= (- remaining (- need number)) (- number need) (- number remaining)) (list\
    \ number need)]\n                                 [(= (- remaining (- need number))\
    \ (- number need) (- number remaining) (- number remaining)) (list number need)]\n\
    \                                 [else (cond [(= (- remaining (- need number))\
    \ (- number need) (- number remaining) (- number remaining)) (list number need)]\n\
    \                                         [(= (- remaining (- need number)) (-\
    \ number need) (- number remaining) (- number remaining) (- number remaining))\
    \ (list number need)]\n                                         [else (cond [(=\
    \ (- remaining (- need number)) (- number need) (- number remaining) (- number\
    \ remaining) (- number remaining) (- number remaining)) (list number need)]\n\
    \                                                 [(= (- remaining (- need number))\
    \ (- number need) (- number remaining) (- number remaining) (- number remaining)\
    \ (- number remaining) (- number remaining)) (list number need)]\n           \
    \                                      [else (cond [(= (- remaining (- need number))\
    \ (- number need) (- number remaining) (- number remaining) (- number remaining)\
    \ (- number remaining) (- number remaining) (- number remaining)) (list number\
    \ need)]\n                                                         [(= (- remaining\
    \ (- need number)) (- number need) (- number remaining) (- number remaining) (-\
    \ number remaining) (- number remaining) (- number remaining) (- number remaining)\
    \ (- number remaining)) (list number need)]\n                                \
    \                         [else (cond [(= (- remaining (- need number)) (- number\
    \ need) (- number remaining) (- number remaining) (- number remaining) (- number\
    \ remaining) (- number remaining) (- number remaining) (- number remaining) (-\
    \ number remaining) (- number remaining)) (list number need)]\n              \
    \                                                   [(= (- ", "  (cond\n    [(or\
    \ (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(= remaining 0)\n    \
    \ (list number 0)]\n    [(= number 0)\n     (list 0 0)]\n    [else\n     (cond\n\
    \       [(= remaining need)\n        (list number 0)]\n       [(< remaining need)\n\
    \        (list 0 (- remaining need))]\n       [else\n        (list 0 (- remaining\
    \ need))]\n       )]))\n", "  (cond\n    [(or (= remaining 0) (= number 0))\n\
    \     (list 0 0)]\n    [else\n     (cond\n       [(< need number)\n        (cond\n\
    \         [(< remaining 0)\n          (list 0 0)]\n         [else\n          (cond\n\
    \            [(< remaining (- number need))\n             (cond\n            \
    \  [(< remaining 0)\n               (list 0 0)]\n              [else\n       \
    \        (cond\n                 [(< remaining (- number need) (- remaining remaining))\n\
    \                   (cond\n                     [(< remaining 0)\n           \
    \           (list 0 0)]\n                     [else\n                      (list\
    \ number (- number need) (- remaining remaining))]\n                     )])]\n\
    \             )])]\n         )])]\n     )])\n  )\n)\n", "  (cond\n    [(or (=\
    \ remaining 0) (= number 0))\n     (list 0 0)]\n    [(< remaining 0)\n     (list\
    \ 0 0)]\n    [(< number need)\n     (list (- number need) (- remaining need))]\n\
    \    [else\n     (cond\n       [(= remaining need)\n        (list number 0)]\n\
    \       [else\n        (list (- number need) (- remaining need))]))))\n", "  (cond\n\
    \    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(< remaining 0)\n\
    \     (list number 0)]\n    [(< number need)\n     (list number (- remaining number))]\n\
    \    [else\n     (list number (- remaining need))]))\n", "  (cond\n    [(= remaining\
    \ 0) (list number 0)]\n    [(= remaining (- need number)) (list number 0)]\n \
    \   [else (cond [(< remaining (- need number)) (list number 0)]\n            \
    \  [(= remaining (- need (- number need))) (list number need)]\n             \
    \ [else (cond [(< remaining (- need (- number need)))\n                      \
    \     (list (- number need) (- remaining (- need (- number need))))]\n       \
    \                 [else (cond [(< remaining (- need (- number need)))\n      \
    \                               (list (- number need) (- remaining (- need (-\
    \ number need))))]\n                                   [else (cond [(< remaining\
    \ (- need (- number need)))\n                                              (list\
    \ (- number need) (- remaining (- need (- number need))))]\n                 \
    \                              [else (cond [(< remaining (- need (- number need)))\n\
    \                                                        (list (- number need)\
    \ (- remaining (- need (- number need))))]\n                                 \
    \                      [else (cond [(< remaining (- need (- number need)))\n \
    \                                                               (list (- number\
    \ need) (- remaining (- need (- number need))))]\n                           \
    \                                        [else (cond [(< remaining (- need (-\
    \ number need)))\n                                                           \
    \                 (list (- number need) (- remaining (- need (- number need))))]\n\
    \                                                                   [else (cond\
    \ [(< remaining (- need (- number need)))\n                                  \
    \                                          (list (- number need) (- remaining\
    \ (- need (- number need))))]\n                                              \
    \                     [else (cond [(< remaining (- need (- number need)))\n  \
    \                                                                          (list\
    \ (- number need) (- remaining (- need (- number need))))]\n                 \
    \                                                  [else (cond [(< remaining (-\
    \ need (- number need)))\n                                                   \
    \                         (list (- number need) (- remaining (- need (- number\
    \ need))))]\n                                                                \
    \   [else (cond [(< remaining (- need (- number need)))\n                    \
    \                                                        (list (- number need)\
    \ (- remaining (- need (- number need))))]\n                                 \
    \                                  [else (cond [(< remaining (- need (- number\
    \ need)))\n                                                                  \
    \          (list (- number need) (- remaining (- need (- number need))))]\n  \
    \                                                                 [else (cond\
    \ [(< remaining (- need (- number need)))\n                                  \
    \                                          (list (- number need) (- remaining\
    \ (- need (- number ", "  (cond\n    [(or (= remaining 0) (= number 0))\n    \
    \ (list 0 0)]\n    [(or (= remaining 0) (= need 0))\n     (list number 0)]\n \
    \   [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [else\n     (cond\n\
    \       [(< remaining need)\n        (cond\n         [(< number 0)\n         \
    \ (list 0 0)]\n         [(< number 0)\n          (list 0 0)]\n         [else\n\
    \          (cond\n            [(< number 0)\n             (list 0 0)]\n      \
    \      [else\n             (cond\n               [(< number 0)\n             \
    \   (list 0 0)]\n               [else\n                (cond\n               \
    \  [(< number 0)\n                  (list 0 0)]\n                 [else\n    \
    \              (cond\n                   [(< number 0)\n                    (list\
    \ 0 0)]\n                   [else\n                    (cond\n               \
    \      [(< number 0)\n                      (list 0 0)]\n                    \
    \ [else\n                      (cond\n                       [(< number 0)\n \
    \                       (list 0 0)]\n                       [else\n          \
    \              (cond\n                         [(< number 0)\n               \
    \           (list 0 0)]\n                         [else\n                    \
    \      (cond\n                           [(< number 0)\n                     \
    \       (list 0 0)]\n                           [else\n                      \
    \      (cond\n                             [(< number 0)\n                   \
    \           (list 0 0)]\n                             [else\n                \
    \              (cond\n                               [(< number 0)\n         \
    \                       (list 0 0)]\n                               [else\n  \
    \                              (cond\n                                 [(< number\
    \ 0)\n                                  (list 0 0)]\n                        \
    \         [else\n                                  (cond\n                   \
    \                [(< number 0)\n                                    (list 0 0)]\n\
    \                                   [else\n                                  \
    \  (cond\n                                     [(< number 0)\n               \
    \                       (list 0 0)]\n                                     [else\n\
    \                                      (cond\n                               \
    \        [(< number 0)\n                                        (list 0 0)]\n\
    \                                       [else\n                              \
    \          (cond\n                                         [(< number 0)\n   \
    \                                       (list 0 0)]\n                        \
    \                 [else\n                                          (cond\n   \
    \                                        [(< number 0)\n                     \
    \                        (list 0 0)]\n                                       \
    \    [else\n                                             (cond\n             \
    \                                [(< number 0)\n                             \
    \                 (list 0 0)]\n                                             [else\n\
    \                                              (cond\n                       \
    \                        [(< number 0)\n                                     \
    \           (list 0 0)]\n                                               [else\n\
    \                                                (cond\n                     \
    \                            [(< number 0)\n                                 \
    \                 (list 0 0)]\n                                              \
    \   [else\n                                                  (cond\n         \
    \                                          [(< number 0)\n                   \
    \                                 (list 0 0)]\n                              \
    \                     [else\n                                                \
    \    ", "  (cond\n    [(= remaining 0) (list number 0)]\n    [(= remaining 0)\
    \ (list number 0)]\n    [(= remaining 0) (list number 0)]\n    [else (cond\n \
    \           [(< need 0) (list number 0)]\n            [else (cond\n          \
    \          [(< number remaining) (list number 0)]\n                    [else (cond\n\
    \                            [(< number remaining) (list number 0)]\n        \
    \                    [(= number remaining) (list number 0)]\n                \
    \            [(> number remaining) (list number 0)]\n                        \
    \    [(> number remaining) (list number 0)]\n                            [(> number\
    \ remaining) (list number 0)]\n                            [(> number remaining)\
    \ (list number 0)]\n                            [(> number remaining) (list number\
    \ 0)]\n                            [(> number remaining) (list number 0)]\n  \
    \                          [(> number remaining) (list number 0)]\n          \
    \                  [(> number remaining) (list number 0)]\n                  \
    \          [(> number remaining) (list number 0)]\n                          \
    \  [(> number remaining) (list number 0)]\n                            [(> number\
    \ remaining) (list number 0)]\n                            [(> number remaining)\
    \ (list number 0)]\n                            [(> number remaining) (list number\
    \ 0)]\n                            [(> number remaining) (list number 0)]\n  \
    \                          [(> number remaining) (list number 0)]\n          \
    \                  [(> number remaining) (list number 0)]\n                  \
    \          [(> number remaining) (list number 0)]\n                          \
    \  [(> number remaining) (list number 0)]\n                            [(> number\
    \ remaining) (list number 0)]\n                            [(> number remaining)\
    \ (list number 0)]\n                            [(> number remaining) (list number\
    \ 0)]\n                            [(> number remaining) (list number 0)]\n  \
    \                          [(> number remaining) (list number 0)]\n          \
    \                  [(> number remaining) (list number 0)]\n                  \
    \          [(> number remaining) (list number 0)]\n                          \
    \  [(> number remaining) (list number 0)]\n                            [(> number\
    \ remaining) (list number 0)]\n                            [(> number remaining)\
    \ (list number 0)]\n                            [(> number remaining) (list number\
    \ 0)]\n                            [(> number remaining) (list number 0)]\n  \
    \                          [(> number remaining) (list number 0)]\n          \
    \                  [(> number remaining) (list number 0)]\n                  \
    \          [(> number remaining) (list number 0)]\n                          \
    \  [(> number remaining) (list number 0)]\n                            [(> number\
    \ remaining) (list number 0)]\n                            [(> number remaining)\
    \ (list number 0)]\n                            [(> number remaining) (list number\
    \ 0)]\n                            [(> number remaining) (list number 0)]", " \
    \ (cond\n    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(or (=\
    \ remaining 0) (= need 0))\n     (list 0 0)]\n    [(or (= remaining 0) (= number\
    \ 0))\n     (list 0 0)]\n    [(or (= remaining 0) (= need 0))\n     (list 0 0)]\n\
    \    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(or (= remaining\
    \ 0) (= need 0))\n     (list 0 0)]\n    [else\n     (cond\n       [(< remaining\
    \ number)\n        (cond\n         [(< number need)\n          (cond\n       \
    \    [(< need number)\n            (cond\n             [(< number 0)\n       \
    \       (list 0 0)]\n             [else\n              (list number (- number\
    \ need))]\n             )]\n           [else\n            (cond\n            \
    \ [(< number 0)\n              (list 0 0)]\n             [else\n             \
    \ (list number (- number need))]\n             )]\n         [else\n          (cond\n\
    \           [(< need number)\n            (cond\n             [(< number 0)\n\
    \              (list 0 0)]\n             [else\n              (list number (-\
    \ number need))]\n             )]\n           [else\n            (cond\n     \
    \        [(< number 0)\n              (list 0 0)]\n             [else\n      \
    \        (list number (- number need))]\n             )]\n         )]\n      \
    \ [else\n        (cond\n         [(< need number)\n          (cond\n         \
    \  [(< number 0)\n            (list 0 0)]\n           [else\n            (list\
    \ number (- number need))]\n           )]\n         [else\n          (cond\n \
    \          [(< need number)\n            (cond\n             [(< number 0)\n \
    \             (list 0 0)]\n             [else\n              (list number (- number\
    \ need))]\n             )]\n           [else\n            (cond\n            \
    \ [(< number 0)\n              (list 0 0)]\n             [else\n             \
    \ (list number (- number need))]\n             )]\n         )]\n       )]\n  \
    \    )]\n     )]\n   ))\n", "  (cond\n    [(= remaining 0) (list number 0)]\n\
    \    [(= remaining (- need number)) (list number 0)]\n    [else (cons (- remaining\
    \ (- need number)) (eat number (- remaining (- need number)) (- remaining number)))]))\n",
  "  (cond\n    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(< remaining\
    \ 0)\n     (list 0 0)]\n    [(< number need)\n     (list 0 0)]\n    [else\n  \
    \   (let ([carrots (- number need)])\n       (cond\n         [(< carrots 0)\n\
    \          (list 0 0)]\n         [(< remaining carrots)\n          (list carrots\
    \ (- remaining carrots))]\n         [else\n          (list carrots (- remaining\
    \ carrots))]))]))\n", "  (cond\n    [(or (= remaining 0) (= number 0))\n     (list\
    \ 0 0)]\n    [(= remaining 0)\n     (list number 0)]\n    [(= number 0)\n    \
    \ (list 0 0)]\n    [else\n     (let ([carrots (- number need)])\n       (cond\n\
    \         [(= carrots 0)\n          (list remaining 0)]\n         [(< carrots\
    \ remaining)\n          (list remaining carrots)]\n         [else\n          (list\
    \ remaining carrots)]))]))\n", "  (cond\n    [(and (<= remaining 0) (<= need 0))\n\
    \     (list number 0)]\n    [(and (<= remaining 0) (< need 0))\n     (list number\
    \ 0)]\n    [(and (<= remaining 0) (> need 0))\n     (list number 0)]\n    [else\n\
    \     (cond\n       [(< remaining number)\n        (cond\n         [(< need 0)\n\
    \          (list number 0)]\n         [(> need 0)\n          (list number 0)]\n\
    \         [else\n          (cond\n            [(= remaining 0)\n             (list\
    \ number 0)]\n            [else\n             (list number (- remaining need))])])]\n\
    \       [(> remaining number)\n        (cond\n         [(< need 0)\n         \
    \ (list number 0)]\n         [(> need 0)\n          (list number 0)]\n       \
    \  [else\n          (cond\n            [(= remaining 0)\n             (list number\
    \ 0)]\n            [else\n             (list number (- remaining need))])])]\n\
    \       [else\n        (cond\n         [(= remaining 0)\n          (list number\
    \ 0)]\n         [else\n          (list number (- remaining need))])])]))\n", " \
    \ (cond\n    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(= remaining\
    \ 0)\n     (list number 0)]\n    [(= number 0)\n     (list 0 0)]\n    [else\n\
    \     (cond\n       [(= (modulo remaining need) 0)\n        (list number 0)]\n\
    \       [(< remaining need)\n        (list number (- remaining need))]\n     \
    \  [else\n        (list number (- remaining need))]\n       )])\n    )\n", " \
    \ (cond\n    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(= remaining\
    \ 0)\n     (list number 0)]\n    [(= number 0)\n     (list 0 0)]\n    [else\n\
    \     (let ([carrots (- number need)])\n       (cond\n         [(< carrots 0)\n\
    \          (list 0 0)]\n         [(= carrots 0)\n          (list number 0)]\n\
    \         [else\n          (let ([remaining (- remaining carrots)])\n        \
    \    (cond\n              [(< remaining 0)\n               (list 0 0)]\n     \
    \         [(= remaining 0)\n               (list number 0)]\n              [else\n\
    \               (let ([carrots (- remaining need)])\n                 (cond\n\
    \                   [(< carrots 0)\n                    (list 0 0)]\n        \
    \           [(= carrots 0)\n                    (list number 0)]\n           \
    \        [else\n                    (let ([remaining (- remaining carrots)])\n\
    \                      (cond\n                        [(< remaining 0)\n     \
    \                    (list 0 0)]\n                        [(= remaining 0)\n \
    \                        (list number 0)]\n                        [else\n   \
    \                      (let ([carrots (- remaining need)])\n                 \
    \          (cond\n                             [(< carrots 0)\n              \
    \                (list 0 0)]\n                             [(= carrots 0)\n  \
    \                            (list number 0)]\n                             [else\n\
    \                              (let ([remaining (- remaining carrots)])\n    \
    \                            (cond\n                                  [(< remaining\
    \ 0)\n                                   (list 0 0)]\n                       \
    \           [(= remaining 0)\n                                   (list number\
    \ 0)]\n                                  [else\n                             \
    \      (let ([carrots (- remaining need)])\n                                 \
    \   (cond\n                                      [(< carrots 0)\n            \
    \                           (list 0 0)]\n                                    \
    \  [(= carrots 0)\n                                       (list number 0)]\n \
    \                                     [else\n                                \
    \       (let ([remaining (- remaining carrots)])\n                           \
    \             (cond\n                                          [(< remaining 0)\n\
    \                                           (list 0 0)]\n                    \
    \                      [(= remaining 0)\n                                    \
    \       (list number 0)]\n                                          [else\n  \
    \                                         (let ([carrots (- remaining need)])\n\
    \                                            (cond\n                         \
    \                     [(< carrots 0)\n                                       \
    \        (list 0 0)]\n                                              [(= carrots\
    \ 0)\n                                               (list number 0)]\n      \
    \                                        [else\n                             \
    \                  (let ([remaining (- remaining carrots)])\n                \
    \                                (cond\n                                     \
    \             [(< remaining 0)\n                                             \
    \      (list 0 0)]\n                                                  [(= remaining\
    \ 0)\n                                                   (list number ", "  (cond\n\
    \    [(= remaining 0) (list number 0)]\n    [(= remaining 1) (list number 1)]\n\
    \    [else (cond\n             [(= remaining (- need number)) (list number 0)]\n\
    \             [(= remaining (- need (- number 1))) (list number 1)]\n        \
    \     [else (cond\n                      [(= remaining (- need (- number 2)))\
    \ (list number 1)]\n                      [else (cond\n                      \
    \        [(= remaining (- need (- number 3))) (list number 1)]\n             \
    \                 [else (cond\n                                      [(= remaining\
    \ (- need (- number 4))) (list number 1)]\n                                  \
    \    [else (cond\n                                              [(= remaining\
    \ (- need (- number 5))) (list number 1)]\n                                  \
    \            [else (cond\n                                                   \
    \   [(= remaining (- need (- number 6))) (list number 1)]\n                  \
    \                                    [else (cond\n                           \
    \                                   [(= remaining (- need (- number 7))) (list\
    \ number 1)]\n                                                              [else\
    \ (cond\n                                                                    [(=\
    \ remaining (- need (- number 8))) (list number 1)]\n                        \
    \                                            [else (cond\n                   \
    \                                                         [(= remaining (- need\
    \ (- number 9))) (list number 1)]\n                                          \
    \                                  [else (cond\n                             \
    \                                           [(= remaining (- need (- number 10)))\
    \ (list number 1)]\n                                                         \
    \               [else (cond\n                                                \
    \                                [else (cond\n                               \
    \                                                         [(= remaining (- need\
    \ (- number 11))) (list number 1)]\n                                         \
    \                                               [else (cond\n                \
    \                                                                            \
    \    [(= remaining (- need (- number 12))) (list number 1)]\n                \
    \                                                                            \
    \    [else (cond\n                                                           \
    \                                             [(= remaining (- need (- number\
    \ 13))) (list number 1)]\n                                                   \
    \                                                     [else (cond\n          \
    \                                                                            \
    \                          [(= remaining (- need (- number 14))) (list number\
    \ 1)]\n                                                                      \
    \                                          [else (cond\n                     \
    \                                                                            \
    \                       [(= remaining (- need (- number 15))) (list number 1)]\n\
    \                                                                            \
    \                                            [else (cond\n                   \
    \                                                                            \
    \                                 [(= remaining (- need (- number 16))) (list\
    \ number 1)]\n                                                               \
    \                                                                 [else (cond\n\
    \                                                                            \
    \                                                        [(= remaining (- need\
    \ (- number 17))) (list number 1)]\n                                         \
    \                                                                            \
    \               [else (cond\n                                                \
    \                                                                            \
    \                [(= remaining (- need (- number 18))) (list number 1)]\n    \
    \                                                                            \
    \                                                            [else (cond\n   \
    \                                                                            \
    \                                                     [(= remaining (- need (-\
    \ number 19))) (list number 1)]\n                                            \
    \                                                                            \
    \            [else (cond\n                                                   \
    \                                                                            \
    \             [(= remaining (- ", "  (cond\n    [(= remaining 0) (list number\
    \ 0)]\n    [(= remaining need) (list number 0)]\n    [else (cons (- remaining\
    \ need) (cons number 0))]))\n", "  (cond\n    [(and (<= remaining 0) (<= need\
    \ 0))\n     (list number 0)]\n    [(and (<= remaining 0) (< need 0))\n     (list\
    \ number 0)]\n    [(and (<= remaining 0) (> need 0))\n     (list number 0)]\n\
    \    [else\n     (cond\n       [(< remaining number)\n        (cond\n        \
    \ [(< need 0)\n          (list number 0)]\n         [else\n          (cond\n \
    \           [(< need 0)\n             (list number 0)]\n            [else\n  \
    \           (cond\n              [(< need 0)\n               (list number 0)]\n\
    \              [else\n               (cond\n                 [(< need 0)\n   \
    \               (list number 0)]\n                 [else\n                  (cond\n\
    \                   [(< need 0)\n                    (list number 0)]\n      \
    \             [else\n                    (cond\n                     [(< need\
    \ 0)\n                      (list number 0)]\n                     [else\n   \
    \                   (cond\n                       [(< need 0)\n              \
    \          (list number 0)]\n                       [else\n                  \
    \       (cond\n                          [(< need 0)\n                       \
    \    (list number 0)]\n                          [else\n                     \
    \      (cond\n                            [(< need 0)\n                      \
    \       (list number 0)]\n                            [else\n                \
    \             (cond\n                              [(< need 0)\n             \
    \                  (list number 0)]\n                              [else\n   \
    \                            (cond\n                                [(< need 0)\n\
    \                                 (list number 0)]\n                         \
    \       [else\n                                 (cond\n                      \
    \           [(< need 0)\n                                  (list number 0)]\n\
    \                                 [else\n                                  (cond\n\
    \                                   [(< need 0)\n                            \
    \        (list number 0)]\n                                   [else\n        \
    \                            (cond\n                                     [(< need\
    \ 0)\n                                      (list number 0)]\n               \
    \                      [else\n                                      (cond\n  \
    \                                     [(< need 0)\n                          \
    \              (list number 0)]\n                                       [else\n\
    \                                         (cond\n                            \
    \              [(< need 0)\n                                           (list number\
    \ 0)]\n                                          [else\n                     \
    \                      (cond\n                                           [(< need\
    \ 0)\n                                             (list number 0)]\n        \
    \                                   [else\n                                  \
    \           (cond\n                                             [(< need 0)\n\
    \                                              (list number 0)]\n            \
    \                                 [else\n                                    \
    \           (cond\n                                               [(< need 0)\n\
    \                                                (list number 0)]\n          \
    \                                     [else\n                                \
    \                 (cond\n                                                 [(<\
    \ need 0)\n                                                  (list number 0)]\n\
    \                                                 [else\n                    \
    \                               (cond\n                                      \
    \             [(< need 0)\n                                                  \
    \  (list number 0)]\n                                                   [else\n\
    \                                                     (cond\n                \
    \                                     [(< need 0)\n                          \
    \                            (", "  (cond\n    [(and (<= remaining 0) (<= need\
    \ 0))\n     (list number 0)]\n    [(and (<= remaining 0) (< need 0))\n     (list\
    \ number 0)]\n    [(and (<= remaining 0) (> need 0))\n     (list number 0)]\n\
    \    [else\n     (cond\n       [(< remaining number)\n        (cond\n        \
    \ [(< need 0)\n          (list number 0)]\n         [else\n          (cons (-\
    \ remaining number) (eat number (- need number) remaining))]\n         )]\n  \
    \     [(< need 0)\n        (cond\n         [(< remaining 0)\n          (list number\
    \ 0)]\n         [else\n          (cons (- remaining number) (eat number (- need\
    \ number) remaining))]\n         )]\n       [(< remaining 0)\n        (cond\n\
    \         [(< need 0)\n          (list number 0)]\n         [else\n          (cons\
    \ (- remaining number) (eat number (- need number) remaining))]\n         )]\n\
    \       [else\n        (cond\n         [(< remaining 0)\n          (list number\
    \ 0)]\n         [else\n          (cons (- remaining number) (eat number (- need\
    \ number) remaining))]\n         )]\n       )]\n     )]))\n", "  (cond\n    [(or\
    \ (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(= remaining 0)\n    \
    \ (list number 0)]\n    [else\n     (cond\n       [(= (modulo number need) 0)\n\
    \        (list number 0)]\n       [(= (modulo number need) 1)\n        (list number\
    \ (- remaining 1))]\n       [(= (modulo number need) 2)\n        (list number\
    \ (- remaining 2))]\n       [(= (modulo number need) 3)\n        (list number\
    \ (- remaining 3))]\n       [(= (modulo number need) 4)\n        (list number\
    \ (- remaining 4))]\n       [(= (modulo number need) 5)\n        (list number\
    \ (- remaining 5))]\n       [(= (modulo number need) 6)\n        (list number\
    \ (- remaining 6))]\n       [(= (modulo number need) 7)\n        (list number\
    \ (- remaining 7))])]))\n", "  (cond\n    [(= remaining 0) (list number need)]\n\
    \    [(= remaining (- need number)) (list number 0)]\n    [else (cons (- number\
    \ remaining) (cons 0 (eat remaining (- number need) remaining)))]))\n", "  (cond\n\
    \    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(= remaining 0)\n\
    \     (list number 0)]\n    [(= number 0)\n     (list 0 0)]\n    [else\n     (cond\n\
    \       [(< need 0)\n        (cond\n         [(< remaining 0)\n          (list\
    \ 0 0)]\n         [else\n          (cond\n            [(< remaining 0)\n     \
    \        (list number 0)]\n            [else\n             (list number (- remaining\
    \ need))]\n           )\n         ]\n        )]\n       [(< need 0)\n        (cond\n\
    \         [(< remaining 0)\n          (list 0 0)]\n         [else\n          (cond\n\
    \            [(< remaining 0)\n             (list number 0)]\n            [else\n\
    \             (list number (- remaining need))]\n           )\n         ]\n  \
    \      )]\n       [(< need 0)\n        (cond\n         [(< remaining 0)\n    \
    \      (list 0 0)]\n         [else\n          (cond\n            [(< remaining\
    \ 0)\n             (list number 0)]\n            [else\n             (list number\
    \ (- remaining need))]\n           )\n         ]\n        )]\n       [(< need\
    \ 0)\n        (cond\n         [(< remaining 0)\n          (list 0 0)]\n      \
    \   [else\n          (cond\n            [(< remaining 0)\n             (list number\
    \ 0)]\n            [else\n             (list number (- remaining need))]\n   \
    \        )\n         ]\n        )]\n       [(< need 0)\n        (cond\n      \
    \   [(< remaining 0)\n          (list 0 0)]\n         [else\n          (cond\n\
    \            [(< remaining 0)\n             (list number 0)]\n            [else\n\
    \             (list number (- remaining need))]\n           )\n         ]\n  \
    \      )]\n       [(< need 0)\n        (cond\n         [(< remaining 0)\n    \
    \      (list 0 0)]\n         [else\n          (cond\n            [(< remaining\
    \ 0)\n             (list number 0)]\n            [else\n             (list number\
    \ (- remaining need))]\n           )\n         ]\n        )]\n       [(< need\
    \ 0)\n        (cond\n         [(< remaining 0)\n          (list 0 0)]\n      \
    \   [else\n          (cond\n            [(< remaining 0)\n             (list number\
    \ 0)]\n            [else\n             (list number (- remaining need))]\n   \
    \        )\n         ]\n        )]\n       [(< need 0)\n        (cond\n      \
    \   [(< remaining 0)\n          (list 0 0)]\n         [else\n          (", " \
    \ (cond\n    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(= remaining\
    \ 0)\n     (list number 0)]\n    [(= number 0)\n     (list 0 0)]\n    [else\n\
    \     (cond\n       [(= remaining need)\n        (list number 0)]\n       [else\n\
    \        (cond\n          [(= remaining (- need remaining))\n           (list\
    \ number 0)]\n          [else\n           (cond\n             [(= remaining (-\
    \ number remaining))\n               (list 0 0)]\n             [else\n       \
    \        (cond\n                 [(= remaining (- need remaining))\n         \
    \          (list 0 0)]\n                 [else\n                   (cond\n   \
    \                  [(= remaining (- number remaining))\n                     \
    \  (list 0 0)]\n                     [else\n                       (cond\n   \
    \                      [(= remaining (- need remaining))\n                   \
    \        (list 0 0)]\n                         [else\n                       \
    \    (cond\n                             [(= remaining (- number remaining))\n\
    \                               (list 0 0)]\n                             [else\n\
    \                               (cond\n                                 [(= remaining\
    \ (- need remaining))\n                                   (list 0 0)]\n      \
    \                           [else\n                                   (cond\n\
    \                                     [(= remaining (- number remaining))\n  \
    \                                     (list 0 0)]\n                          \
    \           [else\n                                       (cond\n            \
    \                             [(= remaining (- need remaining))\n            \
    \                               (list 0 0)]\n                                \
    \         [else\n                                           (cond\n          \
    \                                   [(= remaining (- number remaining))\n    \
    \                                           (list 0 0)]\n                    \
    \                         [else\n                                            \
    \   (cond\n                                                 [(= remaining (- need\
    \ remaining))\n                                                   (list 0 0)]\n\
    \                                                 [else\n                    \
    \                               (cond\n                                      \
    \               [(= remaining (- number remaining))\n                        \
    \                               (list 0 0)]\n                                \
    \                     [else\n                                                \
    \       (cond\n                                                         [(= remaining\
    \ (- need remaining))\n                                                      \
    \     (list 0 0)]\n                                                         [else\n\
    \                                                           (cond\n          \
    \                                                   [(= remaining (- number remaining))\n\
    \                                                               (list 0 0)]\n\
    \                                                             [else\n        \
    \                                                       (cond\n              \
    \                                                  [(= remaining (- need remaining))\n\
    \                                                                 (list 0 0)]\n\
    \                                                                [else\n     \
    \                                                            (cond\n         \
    \                                                           [(= remaining (- number\
    \ remaining))\n                                                              \
    \       (list 0 0)]\n                                                        \
    \            [else\n                                                         \
    \            (cond\n                                                         \
    \            [(= remaining (- need remaining))\n                             \
    \                                         (list 0 0)]\n                      \
    \                                               [else\n                      \
    \                                               (cond\n                      \
    \                                               [(= remaining (- number remaining))\n\
    \                                                                ", "  (cond\n\
    \    [(and (<= number 1000) (<= need 1000) (<= remaining 1000)) (list number need)]\n\
    \    [else (list number need 0)]))\n", "  (cond\n    [(and (>= number 0) (<= need\
    \ 1000)) (list number 0)]\n    [(and (>= remaining 0) (<= need 1000)) (list remaining\
    \ 0)]\n    [else (cons (- remaining number) (eat number (+ need 1) remaining))]\n\
    \  )\n)\n", "  (cond\n    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n\
    \    [(= remaining 0)\n     (list number 0)]\n    [(= number 0)\n     (list 0\
    \ 0)]\n    [else\n     (cond\n       [(< need (- remaining number))\n        (cons\
    \ (- remaining number) (eat number (- remaining number) remaining))]\n       [(<\
    \ remaining 0)\n        (cons (- remaining number) (eat number need 0))]\n   \
    \    [else\n        (cons (- remaining number) (eat number need remaining))]\n\
    \       )]))\n", "  (cond\n    [(and (<= number 1000) (<= need 1000) (<= remaining\
    \ 1000)) (list number need)]\n    [else (list number need (remaining (remaining\
    \ - need)))]))\n", "  (cond\n    [(or (= remaining 0) (= number 0))\n     (list\
    \ 0 0)]\n    [(= remaining 0)\n     (list number 0)]\n    [(= number need)\n \
    \    (list 0 0)]\n    [else\n     (cond\n       [(= remaining need)\n        (list\
    \ number 0)]\n       [(< remaining need)\n        (list number (- remaining need))]\n\
    \       [else\n        (list number (- remaining need))]\n       ])]))\n", " \
    \ (cond\n    [(= remaining 0) (list number 0)]\n    [(= remaining 1) (list number\
    \ 0)]\n    [(= remaining 2) (list number 0)]\n    [(= remaining 3) (list number\
    \ 0)]\n    [(= remaining 4) (list number 0)]\n    [(= remaining 5) (list number\
    \ 0)]\n    [(= remaining 6) (list number 0)]\n    [(= remaining 7) (list number\
    \ 0)]\n    [(= remaining 8) (list number 0)]\n    [(= remaining 9) (list number\
    \ 0)]\n    [(= remaining 10) (list number 0)]\n    [(= remaining 11) (list number\
    \ 0)]\n    [(= remaining 12) (list number 0)]\n    [(= remaining 13) (list number\
    \ 0)]\n    [(= remaining 14) (list number 0)]\n    [(= remaining 15) (list number\
    \ 0)]\n    [(= remaining 16) (list number 0)]\n    [(= remaining 17) (list number\
    \ 0)]\n    [(= remaining 18) (list number 0)]\n    [(= remaining 19) (list number\
    \ 0)]\n    [(= remaining 20) (list number 0)]\n    [(= remaining 21) (list number\
    \ 0)]\n    [(= remaining 22) (list number 0)]\n    [(= remaining 23) (list number\
    \ 0)]\n    [(= remaining 24) (list number 0)]\n    [(= remaining 25) (list number\
    \ 0)]\n    [(= remaining 26) (list number 0)]\n    [(= remaining 27) (list number\
    \ 0)]\n    [(= remaining 28) (list number 0)]\n    [(= remaining 29) (list number\
    \ 0)]\n    [(= remaining 30) (list number 0)]\n    [(= remaining 31) (list number\
    \ 0)]\n    [(= remaining 32) (list number 0)]\n    [(= remaining 33) (list number\
    \ 0)]\n    [(= remaining 34) (list number 0)]\n    [(= remaining 35) (list number\
    \ 0)]\n    [(= remaining 36) (list number 0)]\n    [(= remaining 37) (list number\
    \ 0)]\n    [(= remaining 38) (list number 0)]\n    [(= remaining 39) (list number\
    \ 0)]\n    [(= remaining 40) (list number 0)]\n    [(= remaining 41) (list number\
    \ 0)]\n    [(= remaining 42) (list number 0)]\n    [(= remaining 43) (list number\
    \ 0)]\n    [(= remaining 44) (list number 0)]\n    [(= remaining 45) (list number\
    \ 0)]\n    [", "  (cond\n    [(or (= remaining 0) (= number 0))\n     (list 0\
    \ 0)]\n    [(and (< remaining 1000) (< number 1000)) (list number 0)]\n    [(and\
    \ (< remaining 1000) (< number 1000)) (list number 0)]\n    [(and (< remaining\
    \ 1000) (< number 1000)) (list number 0)]\n    [(and (< remaining 1000) (< number\
    \ 1000)) (list number 0)]\n    [(and (< remaining 1000) (< number 1000)) (list\
    \ number 0)]\n    [(and (< remaining 1000) (< number 1000)) (list number 0)]\n\
    \    [(and (< remaining 1000) (< number 1000)) (list number 0)]\n    [(and (<\
    \ remaining 1000) (< number 1000)) (list number 0)]\n    [(and (< remaining 1000)\
    \ (< number 1000)) (list number 0)]\n    [(and (< remaining 1000) (< number 1000))\
    \ (list number 0)]\n    [(and (< remaining 1000) (< number 1000)) (list number\
    \ 0)]\n    [(and (< remaining 1000) (< number 1000)) (list number 0)]\n    [(and\
    \ (< remaining 1000) (< number 1000)) (list number 0)]\n    [(and (< remaining\
    \ 1000) (< number 1000)) (list number 0)]\n    [(and (< remaining 1000) (< number\
    \ 1000)) (list number 0)]\n    [(and (< remaining 1000) (< number 1000)) (list\
    \ number 0)]\n    [(and (< remaining 1000) (< number 1000)) (list number 0)]\n\
    \    [(and (< remaining 1000) (< number 1000)) (list number 0)]\n    [(and (<\
    \ remaining 1000) (< number 1000)) (list number 0)]\n    [(and (< remaining 1000)\
    \ (< number 1000)) (list number 0)]\n    [(and (< remaining 1000) (< number 1000))\
    \ (list number 0)]\n    [(and (< remaining 1000) (< number 1000)) (list number\
    \ 0)]\n    [(and (< remaining 1000) (< number 1000)) (list number 0)]\n    [(and\
    \ (< remaining 1000) (< number 1000)) (list number 0)]\n    [(and (< remaining\
    \ 1000) (< number 1000)) (list number 0)]\n    [(and (< remaining 1000) (< number\
    \ 1000)) (list number 0)]\n    [(and (< remaining 1000) (< number 1000)) (list\
    \ number 0)]\n    [(and (< remaining 1000) (< number 1000)) (list number 0)]\n\
    \    [(and (< remaining 1000) (< number 1000)) (list number 0)]", "  (cond\n \
    \   [(= remaining 0) (list number 0)]\n    [(= remaining (- need number)) (list\
    \ number 0)]\n    [else (cons (- remaining (- need number)) (eat number (- need\
    \ number) (remaining 0)))]))\n", "  (cond\n    [(= remaining 0) (list number 0)]\n\
    \    [(= remaining 1) (list number 1)]\n    [else (cons (- remaining (- need number))\
    \ (eat number (- remaining number) (- remaining 1))))]))\n", "  (cond\n    [(or\
    \ (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(< remaining 0)\n    \
    \ (list number 0)]\n    [(< number need)\n     (list number (- need remaining))]\n\
    \    [else\n     (list number (- remaining number))]))\n", "  (cond\n    [(or\
    \ (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(and (< remaining 1000)\
    \ (< number 1000))\n     (cond\n       [(= remaining 0)\n        (cond\n     \
    \    [(= number 0)\n          (list 0 0)]\n         [else\n          (list number\
    \ 0)])]\n       [else\n        (cond\n         [(= number 0)\n          (list\
    \ 0 0)]\n         [else\n          (list number (- remaining 1))])])]\n    [else\n\
    \     (cond\n       [(= remaining 0)\n        (cond\n         [(= number 0)\n\
    \          (list 0 0)]\n         [else\n          (list number 0)])]\n       [else\n\
    \        (cond\n         [(= number 0)\n          (list 0 0)]\n         [else\n\
    \          (list number (- remaining 1))])])]))\n", "  (cond\n    [(and (<= 0\
    \ number 1000) (<= 0 need 1000) (<= 0 remaining 1000)) (list 0 0)]\n    [(and\
    \ (<= 0 number 1000) (<= 0 need 1000) (> remaining 0)) (list 0 0)]\n    [(and\
    \ (<= 0 number 1000) (> need 0) (> remaining 0)) (list 0 0)]\n    [(and (> number\
    \ 0) (> need 0) (> remaining 0)) (list 0 0)]\n    [(and (> number 0) (> need 0)\
    \ (<= remaining 0)) (list 0 0)]\n    [(and (> number 0) (<= need 0) (<= remaining\
    \ 0)) (list 0 0)]\n    [(and (> number 0) (<= need 0) (> remaining 0)) (list 0\
    \ 0)]\n    [(and (<= number 1000) (> need 0) (> remaining 0)) (list 0 0)]\n  \
    \  [(and (<= number 1000) (> need 0) (<= remaining 0)) (list 0 0)]\n    [(and\
    \ (<= number 1000) (<= need 0) (<= remaining 0)) (list 0 0)]\n    [(and (<= number\
    \ 1000) (<= need 0) (> remaining 0)) (list 0 0)]\n    [(and (<= number 1000) (>\
    \ need 0) (> remaining 0)) (list 0 0)]\n    [(and (<= number 1000) (> need 0)\
    \ (> remaining 0)) (list 0 0)]\n    [(and (<= number 1000) (> need 0) (> remaining\
    \ 0)) (list 0 0)]\n    [(and (<= number 1000) (> need 0) (> remaining 0)) (list\
    \ 0 0)]\n    [(and (<= number 1000) (> need 0) (> remaining 0)) (list 0 0)]\n\
    \    [(and (<= number 1000) (> need 0) (> remaining 0)) (list 0 0)]\n    [(and\
    \ (<= number 1000) (> need 0) (> remaining 0)) (list 0 0)]\n    [(and (<= number\
    \ 1000) (> need 0) (> remaining 0)) (list 0 0)]\n    [(and (<= number 1000) (>\
    \ need 0) (> remaining 0)) (list 0 0)]\n    [(and (<= number 1000) (> need 0)\
    \ (> remaining 0)) (list 0 0)]\n    [(and (<= number 1000) (> need 0) (> remaining\
    \ 0)) (list 0 0)]\n    [(and (<= number 1000) (> need 0) (> remaining 0)) (list\
    \ 0 0)]\n    [(and (<= number 1000) (> need 0) (> remaining 0)) (list 0 0)]\n\
    \    [", "  (cond\n    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n\
    \    [(= remaining 0)\n     (list number 0)]\n    [(= number 0)\n     (list 0\
    \ 0)]\n    [else\n     (cond\n       [(= remaining need)\n        (list number\
    \ 0)]\n       [(< remaining need)\n        (list 0 (- remaining need))]\n    \
    \   [else\n        (cond\n          [(= remaining 0)\n           (list 0 0)]\n\
    \          [(< remaining 0)\n           (list 0 0)]\n          [else\n       \
    \    (cond\n             [(= remaining 0)\n              (list 0 0)]\n       \
    \      [else\n              (cond\n                [(= remaining need)\n     \
    \            (list number 0)]\n                [else\n                 (cond\n\
    \                   [(< remaining need)\n                    (list 0 (- remaining\
    \ need))]\n                   [else\n                    (cond\n             \
    \         [(= remaining 0)\n                       (list 0 0)]\n             \
    \         [else\n                       (cond\n                         [(< remaining\
    \ 0)\n                          (list 0 0)]\n                         [else\n\
    \                          (cond\n                            [(= remaining need)\n\
    \                             (list number 0)]\n                            [else\n\
    \                             (cond\n                              [(< remaining\
    \ need)\n                               (list 0 (- remaining need))]\n       \
    \                       [else\n                               (cond\n        \
    \                         [(= remaining 0)\n                                 \
    \  (list 0 0)]\n                                 [else\n                     \
    \              (cond\n                                    [(< remaining 0)\n \
    \                                    (list 0 0)]\n                           \
    \         [else\n                                     (cond\n                \
    \                       [(= remaining need)\n                                \
    \        (list number 0)]\n                                       [else\n    \
    \                                    (cond\n                                 \
    \        [(< remaining need)\n                                           (list\
    \ 0 (- remaining need))]\n                                         [else\n   \
    \                                        (cond\n                             \
    \              [(= remaining 0)\n                                            \
    \ (list 0 0)]\n                                           [else\n            \
    \                                 (cond\n                                    \
    \           [(< remaining 0)\n                                               \
    \ (list 0 0)]\n                                               [else\n        \
    \                                        (cond\n                             \
    \                    [(= remaining need)\n                                   \
    \               (list number 0)]\n                                           \
    \      [else\n                                                  (cond\n      \
    \                                             [(< remaining need)\n          \
    \                                          (list 0 (- remaining need))]\n    \
    \                                               [else\n                      \
    \                              (cond\n                                       \
    \              [(= remaining 0)\n                                            \
    \           (list 0 0)]\n                                                    \
    \ [else\n                                                       (cond\n      \
    \                                                 [(< remaining 0)\n         \
    \                                               (list 0 0)]\n                \
    \                                       [else\n                              \
    \                          (cond\n                                           \
    \              [(= remaining need)\n                                         \
    \                 (list number 0)]\n                                         \
    \                [else\n                                                     \
    \     (cond\n                                                           [(< remaining\
    \ need)", "  (cond\n    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n\
    \    [else\n     (cond\n       [(= remaining 0)\n        (cond\n         [(= number\
    \ need)\n          (list 0 0)]\n         [else\n          (cond\n            [(<\
    \ need number)\n             (cond\n              [(= remaining 0)\n         \
    \      (list 0 0)]\n              [else\n               (cond\n              \
    \   [(= remaining 0)\n                   (list 0 0)]\n                 [else\n\
    \                   (cond\n                     [(< remaining number)\n      \
    \                 (cond\n                         [(= remaining 0)\n         \
    \                  (list 0 0)]\n                         [else\n             \
    \              (cond\n                             [(= remaining 0)\n        \
    \                       (list 0 0)]\n                             [else\n    \
    \                           (cond\n                                 [(< remaining\
    \ number)\n                                   (cond\n                        \
    \             [(= remaining 0)\n                                       (list 0\
    \ 0)]\n                                     [else\n                          \
    \             (cond\n                                         [(= remaining 0)\n\
    \                                           (list 0 0)]\n                    \
    \                     [else\n                                           (cond\n\
    \                                             [(< remaining number)\n        \
    \                                       (cond\n                              \
    \                   [(= remaining 0)\n                                       \
    \            (list 0 0)]\n                                                 [else\n\
    \                                                   (cond\n                  \
    \                                   [(= remaining 0)\n                       \
    \                                (list 0 0)]\n                               \
    \                      [else\n                                               \
    \        (cond\n                                                         [(< remaining\
    \ number)\n                                                           (cond\n\
    \                                                             [(= remaining 0)\n\
    \                                                               (list 0 0)]\n\
    \                                                             [else\n        \
    \                                                       (cond\n              \
    \                                                  [(= remaining 0)\n        \
    \                                                         (list 0 0)]\n      \
    \                                                          [else\n           \
    \                                                      (cond\n               \
    \                                                     [(< remaining number)\n\
    \                                                                     (cond\n\
    \                                                                        [(= remaining\
    \ 0)\n                                                                       \
    \  (list 0 0)]\n                                                             \
    \           [else\n                                                          \
    \               (cond\n                                                      \
    \                       [(= remaining 0)\n                                   \
    \                                          (list 0 0)]\n                     \
    \                                                        [else\n             \
    \                                                                (cond\n     \
    \                                                                            [(<\
    \ remaining number)\n                                                        \
    \                           (cond\n                                          \
    \                                           [(= remaining 0)\n               \
    \                                                                        (list\
    \ 0 0)]\n                                                                    \
    \                 [else\n                                                    \
    \                                   (cond\n                                  \
    \                                                       [(= remaining 0)\n   \
    \                                                                            \
    \            (list 0 0)]\n                                                   \
    \                                      [else\n                               \
    \                                                            (cond\n         \
    \                                                                            \
    \        [(< remaining number)\n                                             \
    \                                                  (cond\n                   \
    \                                                                            \
    \  [(= remaining 0)\n                                                        \
    \                                           (list 0 0)]\n                    \
    \                                                                            \
    \ [else\n                                                                    \
    \                               (cond\n                                      \
    \                                                               [(= remaining\
    \ 0)\n                                                                       \
    \                                (list 0 0)]\n                               \
    \                                                                      [else\n\
    \                                                                            \
    \                           (cond\n                                          \
    \                                                             [(< remaining number)\n\
    \                                                                            \
    \                             (cond\n", "  (cond\n    [(or (= remaining 0) (=\
    \ number 0))\n     (list 0 0)]\n    [(= remaining 0)\n     (list number 0)]\n\
    \    [else\n     (cond\n       [(= number need)\n        (list number 0)]\n  \
    \     [else\n        (cond\n          [(< remaining need)\n           (cond\n\
    \             [(< number need)\n              (list number 0)]\n             [else\n\
    \              (list number (- remaining need))]\n             )]\n          [else\n\
    \           (cond\n             [(< number need)\n              (list number 0)]\n\
    \             [else\n              (list number (- remaining need))]\n       \
    \      )]\n          )]\n       )]\n     )]\n   ))\n", "  (cond\n    [(and (<=\
    \ number 1000) (<= need 1000) (<= remaining 1000)) (list number need)]\n    [else\
    \ (list number need)]))\n", "  (cond\n    [(= remaining 0) (list number 0)]\n\
    \    [(= remaining 1) (list number 1)]\n    [(= remaining 2) (list number 2)]\n\
    \    [(= remaining 3) (list number 3)]\n    [(= remaining 4) (list number 4)]\n\
    \    [(= remaining 5) (list number 5)]\n    [(= remaining 6) (list number 6)]\n\
    \    [(= remaining 7) (list number 7)]\n    [(= remaining 8) (list number 8)]\n\
    \    [(= remaining 9) (list number 9)]\n    [(= remaining 10) (list number 10)]\n\
    \    [else (cons (+ number need) (cons remaining (- remaining need)))]))\n", " \
    \ (cond\n    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(= remaining\
    \ 0)\n     (list number 0)]\n    [(= number 0)\n     (list 0 0)]\n    [else\n\
    \     (cond\n       [(= remaining need)\n        (list number 0)]\n       [(<\
    \ remaining need)\n        (cond\n          [(< number need)\n           (list\
    \ number 0)]\n          [(< number need)\n           (list number 0)]\n      \
    \    [(< number need)\n           (list number 0)]\n          [(< number need)\n\
    \           (list number 0)]\n          [(< number need)\n           (list number\
    \ 0)]\n          [(< number need)\n           (list number 0)]\n          [(<\
    \ number need)\n           (list number 0)]\n          [(< number need)\n    \
    \       (list number 0)]\n          [(< number need)\n           (list number\
    \ 0)]\n          [(< number need)\n           (list number 0)]\n          [(<\
    \ number need)\n           (list number 0)]\n          [(< number need)\n    \
    \       (list number 0)]\n          [(< number need)\n           (list number\
    \ 0)]\n          [(< number need)\n           (list number 0)]\n          [(<\
    \ number need)\n           (list number 0)]\n          [(< number need)\n    \
    \       (list number 0)]\n          [(< number need)\n           (list number\
    \ 0)]\n          [(< number need)\n           (list number 0)]\n          [(<\
    \ number need)\n           (list number 0)]\n          [(< number need)\n    \
    \       (list number 0)]\n          [(< number need)\n           (list number\
    \ 0)]\n          [(< number need)\n           (list number 0)]\n          [(<\
    \ number need)\n           (list number 0)]\n          [(< number need)\n    \
    \       (list number 0)]\n          [(< number need)\n           (list number\
    \ 0)]\n          [(< number need)\n           (list number 0)]\n          [(<\
    \ number need)\n           (list number 0)]\n          [(< number need)\n    \
    \       (list number 0)]\n          [(< number need)\n           (list number\
    \ 0)]\n          [(< number need)\n           (list number 0)]\n          [(<\
    \ number need)\n           (list number 0)]\n          [(< number need)\n    \
    \       (list number 0)]\n          [(< number need)\n           (list number\
    \ 0)]\n          [(< number need)\n           (list number ", "  (cond\n    [(and\
    \ (>= number 0) (<= need 1000) (<= remaining 1000)) (list number 0)]\n    [else\
    \ (list number need)]))\n", "  (cond\n    [(= remaining 0) (list number 0)]\n\
    \    [(= remaining (- need number)) (list number 0)]\n    [else (cons (- remaining\
    \ (- need number)) (eat number (- need number) (remaining 0)))]))\n", "  (cond\n\
    \    [(or (= remaining 0) (= need 0))\n     (list number 0)]\n    [(= remaining\
    \ 0)\n     (list number 0)]\n    [(= need 0)\n     (list number 0)]\n    [else\n\
    \     (cond\n       [(= (modulo number remaining) 0)\n        (list number 0)]\n\
    \       [(= (modulo number remaining) 1)\n        (list number (- remaining 1))]\n\
    \       [else\n        (cond\n          [(= (modulo number remaining) 2)\n   \
    \        (list number (- remaining 1))]\n          [else\n           (cond\n \
    \            [(= (modulo number remaining) 3)\n              (list number (- remaining\
    \ 1))]\n             [else\n              (cond\n                [(= (modulo number\
    \ remaining) 4)\n                 (list number (- remaining 1))]\n           \
    \     [else\n                 (cond\n                   [(= (modulo number remaining)\
    \ 5)\n                    (list number (- remaining 1))]\n                   [else\n\
    \                    (cond\n                      [(= (modulo number remaining)\
    \ 6)\n                       (list number (- remaining 1))]\n                \
    \      [else\n                       (cond\n                         [(= (modulo\
    \ number remaining) 7)\n                           (list number (- remaining 1))]\n\
    \                         [else\n                           (cond\n          \
    \                   [(= (modulo number remaining) 8)\n                       \
    \        (list number (- remaining 1))]\n                             [else\n\
    \                               (cond\n                                 [(= (modulo\
    \ number remaining) 9)\n                                   (list number (- remaining\
    \ 1))]\n                                 [else\n                             \
    \      (cond\n                                     [(= (modulo number remaining)\
    \ 10)\n                                       (list number (- remaining 1))]\n\
    \                                     [else\n                                \
    \       (cond\n                                         [(= (modulo number remaining)\
    \ 11)\n                                           (list number (- remaining 1))]\n\
    \                                         [else\n                            \
    \               (cond\n                                             [(= (modulo\
    \ number remaining) 12)\n                                               (list\
    \ number (- remaining 1))]\n                                             [else\n\
    \                                               (cond\n                      \
    \                           [(= (modulo number remaining) 13)\n              \
    \                                     (list number (- remaining 1))]\n       \
    \                                          [else\n                           \
    \                        (cond\n                                             \
    \        [(= (modulo number remaining) 14)\n                                 \
    \                      (list number (- remaining 1))]\n                      \
    \                               [else\n                                      \
    \                 (cond\n                                                    \
    \     [(= (modulo number remaining) 15)\n                                    \
    \                       (list number (- remaining 1))]\n                     \
    \                                    [else\n                                 \
    \                          (cond\n                                           \
    \                  [(= (modulo number remaining) 16)\n                       \
    \                                        (list number (- remaining 1))]\n    \
    \                                                         [else\n            \
    \                                                   (cond\n                  \
    \                                              [(= (modulo ", "  (cond\n    [(or\
    \ (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(= remaining 0)\n    \
    \ (list number 0)]\n    [(= number need)\n     (list number 0)]\n    [else\n \
    \    (cond\n       [(= remaining need)\n        (list number 0)]\n       [else\n\
    \        (cond\n          [(< remaining need)\n           (cond\n            \
    \ [(< number need)\n              (cond\n                 [(< remaining number)\n\
    \                  (cond\n                     [(< number number)\n          \
    \            (list number 0)]\n                     [else\n                  \
    \    (list number 0)])]\n                 [else\n                  (list number\
    \ 0)])]\n             [else\n              (list number 0)])]\n          [else\n\
    \           (cond\n             [(< number need)\n              (cond\n      \
    \           [(< remaining number)\n                  (cond\n                 \
    \    [(< number number)\n                      (list number 0)]\n            \
    \         [else\n                      (list number 0)])]\n                 [else\n\
    \                  (list number 0)])]\n             [else\n              (list\
    \ number 0)])]\n          [else\n           (cond\n             [(< number need)\n\
    \              (cond\n                 [(< remaining number)\n               \
    \   (cond\n                     [(< number number)\n                      (list\
    \ number 0)]\n                     [else\n                      (list number 0)])]\n\
    \                 [else\n                  (list number 0)])]\n             [else\n\
    \              (list number 0)])]\n          [else\n           (cond\n       \
    \      [(< number need)\n              (cond\n                 [(< remaining number)\n\
    \                  (cond\n                     [(< number number)\n          \
    \            (list number 0)]\n                     [else\n                  \
    \    (list number 0)])]\n                 [else\n                  (list number\
    \ 0)])]\n             [else\n              (list number 0)])]\n          [else\n\
    \           (cond\n             [(< number need)\n              (cond\n      \
    \           [(< remaining number)\n                  (cond\n                 \
    \    [(< number number)\n                      (list number 0)]\n            \
    \         [else\n                      (list number 0)])]\n                 [else\n\
    \                  (list number 0)])]\n             [else\n              (list\
    \ number 0)])]\n          [else\n           (cond\n             [(< number need)\n\
    \              (cond\n                 [(< remaining number)\n               \
    \   (cond\n                     [(< number number)\n                      (list\
    \ number 0)]\n                     [else\n                      (list number 0)])]\n",
  "  (cond\n    [(and (<= number 1000) (<= need 1000) (<= remaining 1000)) (list number\
    \ need)]\n    [else (list number need)]))\n", "  (cond\n    [(or (= remaining\
    \ 0) (= number 0))\n     (list 0 0)]\n    [(< remaining 0)\n     (list number\
    \ 0)]\n    [(< number need)\n     (list number (- remaining number))]\n    [else\n\
    \     (list number (- remaining need))]))\n", "  (cond\n    [(and (<= number 1000)\
    \ (<= need 1000) (<= remaining 1000)) (list number need)]\n    [else (list number\
    \ need 0)]))\n", "  (cond\n    [(= remaining 0) (list number 0)]\n    [(= remaining\
    \ need) (list number 0)]\n    [else (cond\n             [(< remaining need) (cons\
    \ (- remaining need) (eat remaining (- need number) 0))]\n             [(< remaining\
    \ (- need number)) (eat remaining need 0)]\n             [else (cond\n       \
    \               [(< remaining (- need number)) (eat remaining (- need number)\
    \ 0)]\n                      [else (cond\n                              [(< remaining\
    \ (- need number)) (eat remaining (- need number) 0)]\n                      \
    \        [else (eat remaining (- need number) 0 (- remaining (- need number)))])])])]))\n",
  "  (cond\n    [(and (<= remaining 0) (<= need 0))\n     (list number 0)]\n    [(and\
    \ (<= remaining 0) (< need 0))\n     (list number 0)]\n    [(and (<= remaining\
    \ 0) (> need 0))\n     (list number 0)]\n    [(and (<= remaining 0) (< number\
    \ 0))\n     (list number 0)]\n    [(and (<= remaining 0) (> number 0))\n     (list\
    \ number 0)]\n    [else\n     (cond\n       [(< remaining number)\n        (cond\n\
    \         [(< need 0)\n          (list number 0)]\n         [else\n          (list\
    \ number (- remaining need))]\n         )]\n       [(< need 0)\n        (cond\n\
    \         [(< number 0)\n          (list number 0)]\n         [else\n        \
    \  (list number (- number remaining))]\n         )]\n       [else\n        (cond\n\
    \         [(< number 0)\n          (list number 0)]\n         [else\n        \
    \  (list number (- number need))]\n         )]\n       )]\n     ]))\n", "  (cond\n\
    \    [(and (<= 0 number 1000) (<= 0 need 1000) (<= 0 remaining 1000)) (list 0\
    \ 0)]\n    [(and (<= 0 number 1000) (<= 0 need 1000) (> remaining 0)) (list 0\
    \ 0)]\n    [(and (<= 0 number 1000) (> need 0) (<= 0 remaining 1000)) (list 0\
    \ 0)]\n    [(and (<= 0 number 1000) (> need 0) (> remaining 0)) (list 0 0)]\n\
    \    [(and (> number 0) (<= 0 need 1000) (<= 0 remaining 1000)) (list 0 0)]\n\
    \    [(and (> number 0) (<= 0 need 1000) (> remaining 0)) (list 0 0)]\n    [(and\
    \ (> number 0) (> need 0) (<= 0 remaining 1000)) (list 0 0)]\n    [(and (> number\
    \ 0) (> need 0) (> remaining 0)) (list 0 0)]\n    [(and (<= 0 number 1000) (<=\
    \ 0 need 1000) (> remaining 1000)) (list 0 0)]\n    [(and (<= 0 number 1000) (>\
    \ need 0) (<= 0 remaining 1000)) (list 0 0)]\n    [(and (<= 0 number 1000) (>\
    \ need 0) (> remaining 0)) (list 0 0)]\n    [(and (> number 0) (<= 0 need 1000)\
    \ (<= 0 remaining 1000)) (list 0 0)]\n    [(and (> number 0) (<= 0 need 1000)\
    \ (> remaining 0)) (list 0 0)]\n    [(and (> number 0) (> need 0) (<= 0 remaining\
    \ 1000)) (list 0 0)]\n    [(and (> number 0) (> need 0) (> remaining 0)) (list\
    \ 0 0)]\n    [(and (<= 0 number 1000) (<= 0 need 1000) (<= remaining 1000)) (list\
    \ 0 0)]\n    [(and (<= 0 number 1000) (> need 0) (<= remaining 1000)) (list 0\
    \ 0)]\n    [(and (<= 0 number 1000) (> need 0) (> remaining 0)) (list 0 0)]\n\
    \    [(and (> number 0) (<= 0 need 1000) (<= remaining 1000)) (list 0 0)]\n  \
    \  [(and (> number 0) (<= 0 need 1000) (> remaining 0)) (list 0 0)]\n    [(and\
    \ (> number 0) (> need 0) (<= remaining 1000)) (list 0 0)]\n    [(and (> number\
    \ 0) (> need 0) (> remaining 0)) (list 0 0)]\n    [(and (<= 0 number 1000) (<=\
    \ 0 need 1000) (<= remaining 1000)) (list 0 0)", "  (cond\n    [(and (<= remaining\
    \ 0) (<= need 0))\n     (list number 0)]\n    [(and (<= remaining 0) (< need 0))\n\
    \     (list number 0)]\n    [(and (<= remaining 0) (> need 0))\n     (list number\
    \ 0)]\n    [else\n     (cond\n       [(< remaining 0)\n        (cond\n       \
    \  [(< number 0)\n          (list number 0)]\n         [else\n          (cons\
    \ (- number need) (eat number (- need remaining) remaining)]\n         )]\n  \
    \     [(< number 0)\n        (list number 0)]\n       [else\n        (cond\n \
    \        [(< need 0)\n          (list number 0)]\n         [else\n          (cons\
    \ (- number need) (eat number (- need remaining) remaining)]\n         )]\n  \
    \     [else\n        (cond\n         [(< need 0)\n          (list number 0)]\n\
    \         [else\n          (cons (- number need) (eat number (- need remaining)\
    \ remaining)]\n         )]\n       [else\n        (cond\n         [(< need 0)\n\
    \          (list number 0)]\n         [else\n          (cons (- number need) (eat\
    \ number (- need remaining) remaining)]\n         )]\n       [else\n        (cond\n\
    \         [(< need 0)\n          (list number 0)]\n         [else\n          (cons\
    \ (- number need) (eat number (- need remaining) remaining)]\n         )]\n  \
    \     [else\n        (cond\n         [(< need 0)\n          (list number 0)]\n\
    \         [else\n          (cons (- number need) (eat number (- need remaining)\
    \ remaining)]\n         )]\n       [else\n        (cond\n         [(< need 0)\n\
    \          (list number 0)]\n         [else\n          (cons (- number need) (eat\
    \ number (- need remaining) remaining)]\n         )]\n       [else\n        (cond\n\
    \         [(< need 0)\n          (list number 0)]\n         [else\n          (cons\
    \ (- number need) (eat number (- need remaining) remaining)]\n         )]\n  \
    \     [else\n        (cond\n         [(< need 0)\n          (list number 0)]\n\
    \         [else\n          (cons (- number need) (eat number (- need remaining)\
    \ remaining)]\n         )]\n       [else\n        (cond\n         [(< need 0)\n\
    \          (list number 0)]\n         [else\n          (cons (- number need) (e",
  "  (cond\n    [(and (<= remaining 0) (<= need 0))\n     (list 0 0)]\n    [(and (<=\
    \ remaining 0) (< need 0))\n     (list 0 0)]\n    [(and (<= remaining 0) (> need\
    \ 0))\n     (list 0 0)]\n    [else\n     (cond\n       [(= remaining 0)\n    \
    \    (cond\n         [(= number 0)\n          (list 0 0)]\n         [else\n  \
    \        (list number 0)]\n         )]\n       [(= remaining 1)\n        (cond\n\
    \         [(= number 0)\n          (list 0 0)]\n         [else\n          (list\
    \ number 0)]\n         )]\n       [(= remaining 2)\n        (cond\n         [(=\
    \ number 0)\n          (list 0 0)]\n         [else\n          (list number 0)]\n\
    \         )]\n       [(= remaining 3)\n        (cond\n         [(= number 0)\n\
    \          (list 0 0)]\n         [else\n          (list number 0)]\n         )]\n\
    \       [(= remaining 4)\n        (cond\n         [(= number 0)\n          (list\
    \ 0 0)]\n         [else\n          (list number 0)]\n         )]\n       [(= remaining\
    \ 5)\n        (cond\n         [(= number 0)\n          (list 0 0)]\n         [else\n\
    \          (list number 0)]\n         )]\n       [(= remaining 6)\n        (cond\n\
    \         [(= number 0)\n          (list 0 0)]\n         [else\n          (list\
    \ number 0)]\n         )]\n       [(= remaining 7)\n        (cond\n         [(=\
    \ number 0)\n          (list 0 0)]\n         [else\n          (list number 0)]\n\
    \         )]\n       [(= remaining 8)\n        (cond\n         [(= number 0)\n\
    \          (list 0 0)]\n         [else\n          (list number 0)]\n         )]\n\
    \       [(= remaining 9)\n        (cond\n         [(= number 0)\n          (list\
    \ 0 0)]\n         [else\n          (list number 0)]\n         )]\n       [(= remaining\
    \ 10)\n        (cond\n         [(= number 0)\n          (list 0 0)]\n        \
    \ [else\n          (list number 0)]\n         )]\n       [(= remaining 11)\n \
    \       (cond\n         [(= number 0)\n          (list 0 0)]\n         [else\n\
    \          (list number 0)]\n         )]\n       [(= remaining 12)\n        (cond\n\
    \         [(= number 0)\n          (list 0 0)", "  (cond\n    [(or (= remaining\
    \ 0) (= number 0))\n     (list 0 0)]\n    [(< remaining 0)\n     (list number\
    \ 0)]\n    [(< number need)\n     (list (+ number need) (remaining 0))]\n    [else\n\
    \     (list (+ number need) (- remaining need))]))\n", "  (cond\n    [(and (integer?\
    \ number) \n          (integer? need))\n     (cond\n       [(<= remaining 0)\n\
    \        (list 0 0)]\n       [(<= remaining (- need number))\n        (list number\
    \ (- remaining number))]\n       [else\n        (list number 0)]\n       )])\n\
    \    [else\n     (cond\n       [(<= remaining 0)\n        (list 0 0)]\n      \
    \ [(<= remaining (- need number))\n        (list number (- remaining number))]\n\
    \       [else\n        (list number 0)]\n       )])\n    )\n  )\n", "  (cond\n\
    \    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(= remaining 0)\n\
    \     (list number 0)]\n    [(= number 0)\n     (list 0 0)]\n    [else\n     (cond\n\
    \       [(= (modulo remaining need) 0)\n        (list remaining 0)]\n       [(<\
    \ remaining need)\n        (cond\n          [(= (modulo remaining need) 0)\n \
    \          (list remaining 0)]\n          [(< remaining need)\n           (cond\n\
    \             [(= (modulo remaining need) 0)\n              (list remaining 0)]\n\
    \             [(< remaining need)\n              (cond\n                [(= (modulo\
    \ remaining need) 0)\n                 (list remaining 0)]\n                [else\n\
    \                 (cond\n                   [(= (modulo remaining need) 0)\n \
    \                   (list remaining 0)]\n                   [(< remaining need)\n\
    \                    (cond\n                      [(= (modulo remaining need)\
    \ 0)\n                       (list remaining 0)]\n                      [(< remaining\
    \ need)\n                       (cond\n                         [(= (modulo remaining\
    \ need) 0)\n                           (list remaining 0)]\n                 \
    \        [else\n                           (cond\n                           \
    \  [(= (modulo remaining need) 0)\n                              (list remaining\
    \ 0)]\n                             [(< remaining need)\n                    \
    \          (cond\n                                [(= (modulo remaining need)\
    \ 0)\n                                 (list remaining 0)]\n                 \
    \               [(< remaining need)\n                                 (cond\n\
    \                                   [(= (modulo remaining need) 0)\n         \
    \                           (list remaining 0)]\n                            \
    \       [else\n                                    (cond\n                   \
    \                  [(= (modulo remaining need) 0)\n                          \
    \             (list remaining 0)]\n                                     [else\n\
    \                                       (cond\n                              \
    \         [(= (modulo remaining need) 0)\n                                   \
    \     (list remaining 0)]\n                                       [(< remaining\
    \ need)\n                                        (cond\n                     \
    \                    [(= (modulo remaining need) 0)\n                        \
    \                   (list remaining 0)]\n                                    \
    \     [else\n                                           (cond\n              \
    \                             [(= (modulo remaining need) 0)\n               \
    \                              (list remaining 0)]\n                         \
    \                  [(< remaining need)\n                                     \
    \        (cond\n                                             [(= (modulo remaining\
    \ need) 0)\n                                              (list remaining 0)]\n\
    \                                             [else\n                        \
    \                       (cond\n                                              \
    \ [(= (modulo remaining need) 0)\n                                           \
    \     (list remaining 0)]\n                                               [(<\
    \ remaining need)\n                                                (cond\n   \
    \                                              [(= (modulo remaining need) 0)\n\
    \                                                  (list remaining 0)]\n     \
    \                                            [else\n                         \
    \                          (cond", "  (cond\n    [(or (= remaining 0) (= number\
    \ 0))\n     (list 0 0)]\n    [(= remaining 0)\n     (list number 0)]\n    [(=\
    \ number need)\n     (list number 0)]\n    [else\n     (cond\n       [(< remaining\
    \ need)\n        (cond\n         [(< number need)\n          (cond\n         \
    \  [(< remaining number)\n            (cond\n             [(< number remaining)\n\
    \              (cond\n               [(< remaining number)\n                (list\
    \ number 0)]\n               [else\n                (list number remaining)]\n\
    \               )\n             ]\n             [else\n              (list number\
    \ need)]\n             )\n           ]\n           [else\n            (list number\
    \ need)]\n           [else\n            (list number remaining)]\n           )\n\
    \         ]\n         [else\n          (list number need)]\n         )\n     \
    \  ]\n       [else\n        (list number need)]\n       )\n     ]\n     ))\n",
  "  (cond\n    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(= remaining\
    \ 0)\n     (list number 0)]\n    [else\n     (cond\n       [(= number need)\n\
    \        (list number 0)]\n       [(< number need)\n        (cond\n          [(=\
    \ remaining 0)\n           (list 0 0)]\n          [(< remaining 0)\n         \
    \  (cond\n             [(= number 0)\n              (list 0 0)]\n            \
    \ [else\n              (list number (- remaining 1))])]\n          [else\n   \
    \        (cond\n             [(= remaining 0)\n              (list 0 0)]\n   \
    \          [else\n              (list number (- remaining 1))])])]\n    [else\n\
    \     (cond\n       [(= number need)\n        (list number 0)]\n       [(< number\
    \ need)\n        (cond\n          [(= remaining 0)\n           (list 0 0)]\n \
    \         [(< remaining 0)\n           (cond\n             [(= number 0)\n   \
    \           (list 0 0)]\n             [else\n              (list number (- remaining\
    \ 1))])]\n          [else\n           (cond\n             [(= remaining 0)\n \
    \             (list 0 0)]\n             [else\n              (list number (- remaining\
    \ 1))])])]\n    [else\n     (cond\n       [(= number need)\n        (list number\
    \ 0)]\n       [(< number need)\n        (cond\n          [(= remaining 0)\n  \
    \         (list 0 0)]\n          [(< remaining 0)\n           (cond\n        \
    \     [(= number 0)\n              (list 0 0)]\n             [else\n         \
    \     (list number (- remaining 1))])]\n          [else\n           (cond\n  \
    \           [(= remaining 0)\n              (list 0 0)]\n             [else\n\
    \              (list number (- remaining 1))])])]\n    [else\n     (cond\n   \
    \    [(= number need)\n        (list number 0)]\n       [(< number need)\n   \
    \     (cond\n          [(= remaining 0)\n           (list 0 0)]\n          [(<\
    \ remaining 0)\n           (cond\n             [(= number 0)\n              (list\
    \ 0 0)]\n             [else\n              (list number (- remaining 1))])]\n\
    \          [else\n           (cond\n             [(= remaining 0)\n          \
    \    (list 0 0)]\n             [else\n              (list number (- remaining\
    \ 1))])])]\n    [else\n     (cond\n       [(= number need)\n        (list number\
    \ 0)]\n       [(< number need)\n        (cond\n          [(= ", "  (cond\n   \
    \ [(= remaining 0) (list number 0)]\n    [(= remaining need) (list number need)]\n\
    \    [else (cons (- remaining need) (cons number need))]))\n", "  (cond\n    [(or\
    \ (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(or (= remaining 0) (=\
    \ need 0))\n     (list number 0)]\n    [(or (= remaining 0) (= number 0))\n  \
    \   (list number 0)]\n    [else\n     (cond\n       [(= remaining 0)\n       \
    \ (cond\n         [(= number 0)\n          (list 0 0)]\n         [else\n     \
    \     (list number 0)]\n         )]\n       [(= need 0)\n        (cond\n     \
    \    [(= number 0)\n          (list 0 0)]\n         [else\n          (list number\
    \ 0)]\n         )]\n       [else\n        (cond\n         [(= number 0)\n    \
    \      (list 0 0)]\n         [else\n          (list number 0)]\n         )]\n\
    \       [else\n        (cond\n         [(= number 0)\n          (list 0 0)]\n\
    \         [else\n          (list number 0)]\n         )]\n       [else\n     \
    \   (cond\n         [(= number 0)\n          (list 0 0)]\n         [else\n   \
    \       (list number 0)]\n         )]\n       [else\n        (cond\n         [(=\
    \ number 0)\n          (list 0 0)]\n         [else\n          (list number 0)]\n\
    \         )]\n       [else\n        (cond\n         [(= number 0)\n          (list\
    \ 0 0)]\n         [else\n          (list number 0)]\n         )]\n       [else\n\
    \        (cond\n         [(= number 0)\n          (list 0 0)]\n         [else\n\
    \          (list number 0)]\n         )]\n       [else\n        (cond\n      \
    \   [(= number 0)\n          (list 0 0)]\n         [else\n          (list number\
    \ 0)]\n         )]\n       [else\n        (cond\n         [(= number 0)\n    \
    \      (list 0 0)]\n         [else\n          (list number 0)]\n         )]\n\
    \       [else\n        (cond\n         [(= number 0)\n          (list 0 0)]\n\
    \         [else\n          (list number 0)]\n         )]\n       [else\n     \
    \   (cond\n         [(= number 0)\n          (list 0 0)]\n         [else\n   \
    \       (list number 0)]\n         )]\n       [else\n        (cond\n         [(=\
    \ number 0)\n          (list 0 0)]\n         [else\n          (list number 0)]\n\
    \         )]\n       [else\n        (cond", "  (cond\n    [(and (>= number 0)\
    \ (<= need 1000)) (list number 0)]\n    [(and (>= need 0) (<= remaining 1000))\
    \ (list number need)]\n    [else (list number need)]))\n", "  (cond\n    [(or\
    \ (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(< remaining 0)\n    \
    \ (list 0 0)]\n    [(< number need)\n     (list 0 0)]\n    [else\n     (cond\n\
    \       [(= remaining need)\n        (list number 0)]\n       [else\n        (cond\n\
    \          [(< remaining need)\n           (cons (- remaining need) (list number\
    \ need))]\n          [else\n           (cond\n             [(< number need)\n\
    \               (cons (- number need) (list number need))]\n             [else\n\
    \               (cond\n                 [(< number need)\n                   (cons\
    \ (- number need) (list number need))]\n                 [else\n             \
    \      (cond\n                     [(< number need)\n                       (cons\
    \ (- number need) (list number need))]\n                     [else\n         \
    \              (cond\n                         [(< number need)\n            \
    \               (cons (- number need) (list number need))]\n                 \
    \        [else\n                           (cond\n                           \
    \  [(< number need)\n                               (cons (- number need) (list\
    \ number need))]\n                             [else\n                       \
    \        (cond\n                                 [(< number need)\n          \
    \                         (cons (- number need) (list number need))]\n       \
    \                          [else\n                                   (cond\n \
    \                                    [(< number need)\n                      \
    \                 (cons (- number need) (list number need))]\n               \
    \                      [else\n                                       (cond\n \
    \                                        [(< number need)\n                  \
    \                         (cons (- number need) (list number need))]\n       \
    \                                  [else\n                                   \
    \        (cond\n                                             [(< number need)\n\
    \                                               (cons (- number need) (list number\
    \ need))]\n                                             [else\n              \
    \                                 (cond\n                                    \
    \             [(< number need)\n                                             \
    \      (cons (- number need) (list number need))]\n                          \
    \                       [else\n                                              \
    \     (cond\n                                                     [(< number need)\n\
    \                                                       (cons (- number need)\
    \ (list number need))]\n                                                     [else\n\
    \                                                       (cond\n              \
    \                                         [(< number need)\n                 \
    \                                       (cons (- number need) (list number need))]\n\
    \                                                       [else\n              \
    \                                          (cond\n                           \
    \                               [(< number need)\n                           \
    \                                 (cons (- number need) (list number need))]\n\
    \                                                          [else\n           \
    \                                                 (cond\n                    \
    \                                          [(< number need)\n                \
    \                                               (cons (- number need) (list number\
    \ need))]\n                                                              [else\n\
    \                                                               (cond\n      \
    \                                                          [(< number need)\n\
    \                                                                 (cons (- number\
    \ need) (list number need))]\n                                               \
    \                 [else", "  (cond\n    [(or (= remaining 0) (= number 0))\n \
    \    (list 0 0)]\n    [(= remaining 0)\n     (list number 0)]\n    [(= number\
    \ 0)\n     (list 0 0)]\n    [else\n     (cond\n       [(= remaining need)\n  \
    \      (list number 0)]\n       [else\n        (cond\n          [(= remaining\
    \ (- need remaining))\n           (list number 0)]\n          [else\n        \
    \   (cond\n             [(= remaining (- number remaining))\n               (list\
    \ 0 0)]\n             [else\n               (cond\n                 [(= remaining\
    \ (- number need))\n                   (list number 0)]\n                 [else\n\
    \                   (cond\n                     [(= remaining (- number need))\n\
    \                       (list number 0)]\n                     [else\n       \
    \                (cond\n                         [(= remaining (- number need))\n\
    \                           (list number 0)]\n                         [else\n\
    \                           (cond\n                             [(= remaining\
    \ (- number need))\n                               (list number 0)]\n        \
    \                     [else\n                               (cond\n          \
    \                       [(= remaining (- number need))\n                     \
    \              (list number 0)]\n                                 [else\n    \
    \                               (cond\n                                     [(=\
    \ remaining (- number need))\n                                       (list number\
    \ 0)]\n                                     [else\n                          \
    \             (cond\n                                         [(= remaining (-\
    \ number need))\n                                           (list number 0)]\n\
    \                                         [else\n                            \
    \               (cond\n                                             [(= remaining\
    \ (- number need))\n                                               (list number\
    \ 0)]\n                                             [else\n                  \
    \                             (cond\n                                        \
    \         [(= remaining (- number need))\n                                   \
    \                (list number 0)]\n                                          \
    \       [else\n                                                   (cond\n    \
    \                                                 [(= remaining (- number need))\n\
    \                                                       (list number 0)]\n   \
    \                                                  [else\n                   \
    \                                    (cond\n                                 \
    \                        [(= remaining (- number need))\n                    \
    \                                       (list number 0)]\n                   \
    \                                      [else\n                               \
    \                            (cond\n                                         \
    \                    [(= remaining (- number need))\n                        \
    \                                       (list number 0)]\n                   \
    \                                          [else\n                           \
    \                                    (cond\n                                 \
    \                               [(= remaining (- number need))\n             \
    \                                                    (list number 0)]\n      \
    \                                                          [else\n           \
    \                                                      (cond\n               \
    \                                                     [(= remaining (- number\
    \ need))\n                                                                   \
    \  (list number 0)]\n                                                        \
    \            [else\n                                                         \
    \            (cond\n                                                         \
    \            [(= remaining (- number need))\n                                \
    \                                      (list number 0)]\n                    \
    \                                                 [else\n                    \
    \                                                 (cond\n                    \
    \                                                 [(= remaining (- number need))\n\
    \                                                                ", "  (cond\n\
    \    [(= remaining 0) (list number 0)]\n    [(= remaining (- need number)) (list\
    \ number 0)]\n    [else (cons (- remaining (- need number)) (eat number (- need\
    \ number) (remaining 0)))]))\n", "  (cond\n    [(= remaining 0) (list number 0)]\n\
    \    [(= remaining (- need number)) (list number 0)]\n    [else (cond\n      \
    \       [(= (- remaining number) 0) (list number 0)]\n             [(= (- remaining\
    \ number) need) (list (- number need) 0)]\n             [else (cond\n        \
    \              [(= (- remaining number) need) (list (- number need) (- need number))]\n\
    \                      [else (cond\n                               [(= (- remaining\
    \ number) need) (list (- number need) (- need number))]\n                    \
    \           [else (cond\n                                        [(= (- remaining\
    \ number) need) (list (- number need) (- need number))]\n                    \
    \                    [else (cond\n                                           \
    \      [(= (- remaining number) need) (list (- number need) (- need number))]\n\
    \                                                 [else (cond\n              \
    \                                           [(= (- remaining number) need) (list\
    \ (- number need) (- need number))]\n                                        \
    \                 [else (cond\n                                              \
    \                     [(= (- remaining number) need) (list (- number need) (-\
    \ need number))]\n                                                           \
    \        [else (cond\n                                                       \
    \                      [(= (- remaining number) need) (list (- number need) (-\
    \ need number))]\n                                                           \
    \                  [else (cond\n                                             \
    \                                          [(= (- remaining number) need) (list\
    \ (- number need) (- need number))]\n                                        \
    \                                               [else (cond\n                \
    \                                                                            \
    \     [(= (- remaining number) need) (list (- number need) (- need number))]\n\
    \                                                                            \
    \                     [else (cond\n                                          \
    \                                                                 [(= (- remaining\
    \ number) need) (list (- number need) (- need number))]\n                    \
    \                                                                            \
    \           [else (cond\n                                                    \
    \                                                                [(= (- remaining\
    \ number) need) (list (- number need) (- need number))]\n                    \
    \                                                                            \
    \                    [else (cond\n                                           \
    \                                                                            \
    \     [(= (- remaining number) need) (list (- number need) (- need number))]\n\
    \                                                                            \
    \                                                [else (cond\n               \
    \                                                                            \
    \                                         [(= (- remaining number) need) (list\
    \ (- number need) (- need number))]\n                                        \
    \                                                                            \
    \                [else (cond\n                                               \
    \                                                                            \
    \                                [(= (- remaining number) need) (list (- number\
    \ need) (- need number))]\n                                                  \
    \                                                                            \
    \                             [else (cond\n                                  \
    \                                                                            \
    \                                                      [(= (- remaining number)\
    \ need) (list (- number need) (- need number))]\n                            \
    \                                                                            \
    \                                                            [else (cond\n   \
    \                                                                            \
    \                                                                            \
    \                [(= (- remaining number) need) (list (- number need) (- need\
    \ number))]\n                                                                \
    \                                                                            \
    \                               [else (cond\n                                \
    \                                                                            \
    \                                                                        [(= (-\
    \ remaining number) need) (", "  (cond\n    [(= remaining 0) (list number 0)]\n\
    \    [(= remaining (- need number)) (list number 0)]\n    [else (cond [(= (modulo\
    \ number remaining) 0) (list number 0)]\n               [(= (modulo number remaining)\
    \ 1) (cons number (eat number (- remaining 1) (- number 1)))]\n              \
    \ [else (cons number (eat number (- remaining 1) remaining))])]))\n", "  (cond\n\
    \    [(and (<= remaining 0) (<= need 0))\n     (list number 0)]\n    [(and (<=\
    \ remaining 0) (< need 0))\n     (list number 0)]\n    [(and (<= remaining 0)\
    \ (> need 0))\n     (list number 0)]\n    [(and (<= remaining 0) (< number 0))\n\
    \     (list number 0)]\n    [(and (<= remaining 0) (> number 0))\n     (list number\
    \ 0)]\n    [(and (<= remaining 0) (< number need))\n     (list number need)]\n\
    \    [(and (<= remaining 0) (> number need))\n     (list number need)]\n    [(and\
    \ (<= remaining 0) (< number need) (< number remaining))\n     (list number need\
    \ remaining)]\n    [(and (<= remaining 0) (> number need) (< number remaining))\n\
    \     (list number need remaining)]\n    [(and (<= remaining 0) (< number need)\
    \ (> number remaining))\n     (list number need remaining)]\n    [(and (<= remaining\
    \ 0) (> number need) (> number remaining))\n     (list number need remaining)]\n\
    \    [else\n     (list number need remaining)]\n  )\n)\n", "  (cond\n    [(and\
    \ (>= number 0) (<= need 1000)) (list number 0)]\n    [(and (>= need 0) (<= remaining\
    \ 1000)) (list need 0)]\n    [else (list number need)]))\n", "  (cond\n    [(or\
    \ (= remaining 0) (= need 0))\n     (list number 0)]\n    [(< remaining 0)\n \
    \    (list number 0)]\n    [(< need 0)\n     (list number 0)]\n    [else\n   \
    \  (let\n       ((total (+ number need))\n        (left (- remaining need))\n\
    \        (remaining-total (- remaining total))\n        (need-total (- need total))\n\
    \        (need-left (- need left)))\n       (cond\n         [(< remaining-total\
    \ 0)\n          (list number 0)]\n         [(< need-total 0)\n          (list\
    \ number 0)]\n         [(< need-left 0)\n          (list number 0)]\n        \
    \ [else\n          (cond\n            [(< need-left 0)\n             (list number\
    \ need)]\n            [else\n             (list number (+ need-left need-total))]\n\
    \            )\n          ]\n         )\n       ]\n      )\n     ]\n    )\n  )\n",
  "  (cond\n    [(and (<= 0 number 1000) (<= 0 need 1000) (<= 0 remaining 1000)) (list\
    \ 0 0)]\n    [(and (<= 0 number 1000) (<= 0 need 1000) (> remaining 0)) (list\
    \ 0 0)]\n    [(and (<= 0 number 1000) (> need 0) (> remaining 0)) (list 0 0)]\n\
    \    [(and (> number 0) (> need 0) (> remaining 0)) (list 0 0)]\n    [else (cond\n\
    \             [(> number need) (list 0 0)]\n             [(> need number) (list\
    \ 0 0)]\n             [(> remaining number) (list 0 0)]\n             [(and (<=\
    \ 0 number 1000) (<= 0 need 1000) (<= 0 remaining 1000)) (list 0 0)]\n       \
    \      [(and (<= 0 number 1000) (<= 0 need 1000) (> remaining 0)) (list 0 0)]\n\
    \             [(and (<= 0 number 1000) (> need 0) (> remaining 0)) (list 0 0)]\n\
    \             [(and (> number 0) (> need 0) (> remaining 0)) (list 0 0)]\n   \
    \          [(and (> number need) (> need remaining)) (list 0 0)]\n           \
    \  [(and (> number need) (> remaining number)) (list 0 0)]\n             [(and\
    \ (> need number) (> remaining number)) (list 0 0)]\n             [(and (<= 0\
    \ number 1000) (<= 0 need 1000) (<= 0 remaining 1000)) (list 0 0)]\n         \
    \    [(and (<= 0 number 1000) (<= 0 need 1000) (> remaining 0)) (list 0 0)]\n\
    \             [(and (<= 0 number 1000) (> need 0) (> remaining 0)) (list 0 0)]\n\
    \             [(and (> number 0) (> need 0) (> remaining 0)) (list 0 0)]\n   \
    \          [(and (> number need) (> need remaining)) (list 0 0)]\n           \
    \  [(and (> number need) (> remaining number)) (list 0 0)]\n             [(and\
    \ (<= 0 number 1000) (<= 0 need 1000) (<= 0 remaining 1000)) (list 0 0)]\n   \
    \          [(and (<= 0 number 1000) (<= 0 need 1000) (> remaining 0)) (list 0\
    \ 0)]\n             [(and (<= 0 number 1000) (> need 0) (> remaining 0)) (list\
    \ 0 0)]\n             [(and (> number 0) (> need 0) (> remaining 0)) (list 0 0)]\n\
    \             [(and (> number need) (> need remaining)) (list 0 0)]\n        \
    \     [(and (> number ", "  (cond\n    [(or (= remaining 0) (= number 0))\n  \
    \   (list 0 0)]\n    [(< remaining 0)\n     (list number 0)]\n    [(< number need)\n\
    \     (cons (- number need) (cons 0 (eat remaining (- number need) remaining)))]\n\
    \    [else\n     (cons (- number need) (cons 0 (eat remaining need (- number need))))]))\n",
  "  (cond\n    [(and (>= number 0) (<= need 1000)) (list number 0)]\n    [(and (>=\
    \ need 0) (<= remaining 1000)) (list need 0)]\n    [else (list number need)]))\n",
  "  (cond\n    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(= remaining\
    \ 0)\n     (list number 0)]\n    [(= number 0)\n     (list 0 0)]\n    [else\n\
    \     (cond\n       [(= (mod number need) 0)\n        (cond\n         [(= remaining\
    \ 0)\n          (list 0 0)]\n         [else\n          (list number (- remaining\
    \ need))]\n         )]\n       [(< number need)\n        (cond\n         [(= remaining\
    \ 0)\n          (list 0 0)]\n         [else\n          (list number (- remaining\
    \ need))]\n         )]\n       [else\n        (cond\n         [(= remaining 0)\n\
    \          (list 0 0)]\n         [else\n          (list number (- remaining need))]\n\
    \         )]\n       )]\n     )]))\n", "  (cond\n    [(= remaining 0) (list number\
    \ 0)]\n    [(= remaining (- need number)) (list number 0)]\n    [else (cond [(<\
    \ remaining (- need number)) (list number 0)]\n               [(< remaining 0)\
    \ (list number 0)]\n               [else (cond [(< remaining 0) (list number 0)]\n\
    \                         [else (cond [(< remaining (- need number)) (list number\
    \ 0)]\n                                   [else (cond [(< remaining (- need number))\
    \ (list number 0)]\n                                           [else (cond [(<\
    \ remaining (- need number)) (list number 0)]\n                              \
    \                     [else (cond [(< remaining (- need number)) (list number\
    \ 0)]\n                                                           [else (cond\
    \ [(< remaining (- need number)) (list number 0)]\n                          \
    \                                         [else (cond [(< remaining (- need number))\
    \ (list number 0)]\n                                                         \
    \                  [else (cond [(< remaining (- need number)) (list number 0)]\n\
    \                                                                   [else (cond\
    \ [(< remaining (- need number)) (list number 0)]\n                          \
    \                                                 [else (cond [(< remaining (-\
    \ need number)) (list number 0)]\n                                           \
    \                        [else (cond [(< remaining (- need number)) (list number\
    \ 0)]\n                                                                      \
    \     [else (cond [(< remaining (- need number)) (list number 0)]\n          \
    \                                                         [else (cond [(< remaining\
    \ (- need number)) (list number 0)]\n                                        \
    \                                   [else (cond [(< remaining (- need number))\
    \ (list number 0)]\n                                                         \
    \          [else (cond [(< remaining (- need number)) (list number 0)]\n     \
    \                                                                      [else (cond\
    \ [(< remaining (- need number)) (list number 0)]\n                          \
    \                                         [else (cond [(< remaining (- need number))\
    \ (list number 0)]\n                                                         \
    \                  [else (cond [(< remaining (- need number)) (list number 0)]\n\
    \                                                                   [else (cond\
    \ [(< remaining (- need number)) (list number 0)]\n                          \
    \                                                 [else (cond [(< remaining (-\
    \ need number)) (list number 0)]\n                                           \
    \                        [else (cond [(< remaining (- need number)) (list number\
    \ 0)]\n                                                                      \
    \     [else (cond [(< remaining (- need number)) (list number 0)]\n          \
    \                      ", "  (cond\n    [(= remaining 0) (list number 0)]\n  \
    \  [(= remaining (- number need)) (list number 0)]\n    [else (cons (- number\
    \ need) (cons remaining (cons number need)))]))\n", "  (cond\n    [(and (<= 0\
    \ number 1000) (<= 0 need 1000) (<= 0 remaining 1000)) (list 0 0)]\n    [(and\
    \ (<= 0 number 1000) (<= 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and\
    \ (<= 0 number 1000) (> 0 need 1000) (<= 0 remaining 0)) (list 0 0)]\n    [(and\
    \ (<= 0 number 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and\
    \ (> 0 number 1000) (<= 0 need 1000) (<= 0 remaining 0)) (list 0 0)]\n    [(and\
    \ (> 0 number 1000) (<= 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and\
    \ (> 0 number 1000) (> 0 need 1000) (<= 0 remaining 0)) (list 0 0)]\n    [(and\
    \ (> 0 number 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and\
    \ (> 0 number 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and\
    \ (> 0 number 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and\
    \ (> 0 number 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and\
    \ (> 0 number 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and\
    \ (> 0 number 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and\
    \ (> 0 number 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and\
    \ (> 0 number 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and\
    \ (> 0 number 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and\
    \ (> 0 number 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and\
    \ (> 0 number 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and\
    \ (> 0 number 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and\
    \ (> 0 number 1000) (> 0 need 1000) (> 0 remaining 0)) (list 0 0)]\n    [(and\
    \ (> 0 number 1000) (", "  (cond\n    [(= remaining 0) (list number 0)]\n    [(=\
    \ remaining (- need number)) (list number 0)]\n    [else (cons (- remaining (-\
    \ need number)) (eat number (- need number) (remaining 0)))]))\n", "  (cond\n\
    \    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(< remaining 0)\n\
    \     (list number 0)]\n    [(< number need)\n     (list (- number need) (- remaining\
    \ need))]\n    [else\n     (list (+ number need) (- remaining need))]))\n", " \
    \ (cond\n    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(< remaining\
    \ 0)\n     (list 0 0)]\n    [(< number need)\n     (list 0 0)]\n    [else\n  \
    \   (let ([carrots (- number need)])\n       (cond\n         [(< carrots 0)\n\
    \          (list 0 0)]\n         [else\n          (let ([carrots (- carrots remaining)]\n\
    \                 ([remaining (- remaining carrots)])\n                 ([number\
    \ (- number carrots)])\n                 ([need (- need carrots)])\n         \
    \        ([carrots (- carrots carrots)])\n                 ([number (- number\
    \ carrots)])\n                 ([need (- need carrots)])\n                 ([carrots\
    \ (- carrots carrots)])\n                 ([number (- number carrots)])\n    \
    \             ([need (- need carrots)])\n                 ([carrots (- carrots\
    \ carrots)])\n                 ([number (- number carrots)])\n               \
    \  ([need (- need carrots)])\n                 ([carrots (- carrots carrots)])\n\
    \                 ([number (- number carrots)])\n                 ([need (- need\
    \ carrots)])\n                 ([carrots (- carrots carrots)])\n             \
    \    ([number (- number carrots)])\n                 ([need (- need carrots)])\n\
    \                 ([carrots (- carrots carrots)])\n                 ([number (-\
    \ number carrots)])\n                 ([need (- need carrots)])\n            \
    \     ([carrots (- carrots carrots)])\n                 ([number (- number carrots)])\n\
    \                 ([need (- need carrots)])\n                 ([carrots (- carrots\
    \ carrots)])\n                 ([number (- number carrots)])\n               \
    \  ([need (- need carrots)])\n                 ([carrots (- carrots carrots)])\n\
    \                 ([number (- number carrots)])\n                 ([need (- need\
    \ carrots)])\n                 ([carrots (- carrots carrots)])\n             \
    \    ([number (- number carrots)])\n                 ([need (- need carrots)])\n\
    \                 ([carrots (- carrots carrots)])\n                 ([number (-\
    \ number carrots)])\n                 ([need (- need carrots)])\n            \
    \     ([carrots (- carrots carrots)])\n                 ([number (- number carrots)])\n\
    \                 ([need (- need carrots)])\n                 ([carrot", "  (cond\n\
    \    [(= remaining 0) (list number 0)]\n    [(= remaining 1) (list number 1)]\n\
    \    [(= remaining 2) (list number 2)]\n    [(= remaining 3) (list number 3)]\n\
    \    [(= remaining 4) (list number 4)]\n    [(= remaining 5) (list number 5)]\n\
    \    [(= remaining 6) (list number 6)]\n    [(= remaining 7) (list number 7)]\n\
    \    [(= remaining 8) (list number 8)]\n    [(= remaining 9) (list number 9)]\n\
    \    [(= remaining 10) (list number 10)]\n    [(= remaining 11) (list number 11)]\n\
    \    [(= remaining 12) (list number 12)]\n    [(= remaining 13) (list number 13)]\n\
    \    [(= remaining 14) (list number 14)]\n    [(= remaining 15) (list number 15)]\n\
    \    [(= remaining 16) (list number 16)]\n    [(= remaining 17) (list number 17)]\n\
    \    [(= remaining 18) (list number 18)]\n    [(= remaining 19) (list number 19)]\n\
    \    [(= remaining 20) (list number 20)]\n    [(= remaining 21) (list number 21)]\n\
    \    [(= remaining 22) (list number 22)]\n    [(= remaining 23) (list number 23)]\n\
    \    [(= remaining 24) (list number 24)]\n    [(= remaining 25) (list number 25)]\n\
    \    [(= remaining 26) (list number 26)]\n    [(= remaining 27) (list number 27)]\n\
    \    [(= remaining 28) (list number 28)]\n    [(= remaining 29) (list number 29)]\n\
    \    [(= remaining 30) (list number 30)]\n    [(= remaining 31) (list number 31)]\n\
    \    [(= remaining 32) (list number 32)]\n    [(= remaining 33) (list number 33)]\n\
    \    [(= remaining 34) (list number 34)]\n    [(= remaining 35) (list number 35)]\n\
    \    [(= remaining 36) (list number 36)]\n    [(= remaining 37) (list number 37)]\n\
    \    [(= remaining 38) (list number 38)]\n    [(= remaining 39) (list number 39)]\n\
    \    [(= remaining 40) (list number 40)]\n    [(= remaining 41) (list number 41)]\n\
    \    [(= remaining 42) (list number 42)]\n    [(= remaining 43) (list number 43)]\n\
    \    [(= remaining 44) (list number 44)]\n    [(= remaining 45) (list number 45)]\n\
    \    [(= remaining ", "  (cond\n    [(or (= remaining 0) (= number 0))\n     (list\
    \ 0 0)]\n    [(or (= remaining 0) (= need 0))\n     (list number 0)]\n    [(or\
    \ (= remaining 0) (= number 0))\n     (list number 0)]\n    [else\n     (cond\n\
    \       [(< remaining number)\n        (cond\n         [(< need number)\n    \
    \      (cond\n           [(< number 0)\n            (cond\n             [(< number\
    \ 0)\n              (list number 0)]\n             [else\n              (list\
    \ number (- number need))]\n             )]\n           [else\n            (list\
    \ number (- number need))]\n           )]\n         [else\n          (list number\
    \ (- number need))]\n         )]\n       [else\n        (list number (- number\
    \ need))]\n       )]\n     )))\n", "  (cond\n    [(and (<= number 1000) (<= need\
    \ 1000) (<= remaining 1000)) (list number need)]\n    [else (list number need)]))\n",
  "  (cond\n    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(= remaining\
    \ 0)\n     (list number 0)]\n    [(= number 0)\n     (list 0 0)]\n    [else\n\
    \     (cond\n       [(< need (- remaining number))\n        (list number 0)]\n\
    \       [(< remaining 0)\n        (list 0 0)]\n       [else\n        (cond\n \
    \         [(< remaining number)\n           (list number (- remaining number))]\n\
    \          [else\n           (cond\n             [(< remaining number)\n     \
    \          (list number (- remaining number))]\n             [else\n         \
    \      (cond\n                 [(< remaining number)\n                   (list\
    \ number (- remaining number))]\n                 [else\n                   (cond\n\
    \                     [(< remaining number)\n                       (list number\
    \ (- remaining number))]\n                     [else\n                       (cond\n\
    \                         [(< remaining number)\n                           (list\
    \ number (- remaining number))]\n                         [else\n            \
    \               (cond\n                             [(< remaining number)\n  \
    \                             (list number (- remaining number))]\n          \
    \                   [else\n                               (cond\n            \
    \                     [(< remaining number)\n                                \
    \   (list number (- remaining number))]\n                                 [else\n\
    \                                   (cond\n                                  \
    \   [(< remaining number)\n                                       (list number\
    \ (- remaining number))]\n                                     [else\n       \
    \                                (cond\n                                     \
    \    [(< remaining number)\n                                           (list number\
    \ (- remaining number))]\n                                         [else\n   \
    \                                        (cond\n                             \
    \                [(< remaining number)\n                                     \
    \          (list number (- remaining number))]\n                             \
    \                [else\n                                               (cond\n\
    \                                                 [(< remaining number)\n    \
    \                                               (list number (- remaining number))]\n\
    \                                                 [else\n                    \
    \                               (cond\n                                      \
    \               [(< remaining number)\n                                      \
    \                 (list number (- remaining number))]\n                      \
    \                               [else\n                                      \
    \                 (cond\n                                                    \
    \     [(< remaining number)\n                                                \
    \           (list number (- remaining number))]\n                            \
    \                             [else\n                                        \
    \                   (cond\n                                                  \
    \           [(< remaining number)\n                                          \
    \                     (list number (- remaining number))]\n                  \
    \                                           [else\n                          \
    \                                     (cond\n                                \
    \                                [(< remaining number)\n                     \
    \                                            (list number (- remaining number))]\n\
    \                                                                [else\n     \
    \                                                            (cond\n         \
    \                                                           [(< remaining number)\n\
    \                                                                     (list number\
    \ (- remaining number))]\n                                                   \
    \                 [else\n                                                    \
    \                 (cond\n                                                    \
    \                 [(< remaining number)\n                                    \
    \                                    (list number (- remaining number))]\n   \
    \                                                                  [else\n   \
    \                                                                  (cond\n   \
    \                                                                  [(< remaining\
    \ number)\n                                                                  \
    \      (list number (- remaining number))]\n                                 \
    \                                    [else\n                                 \
    \                                    (cond\n                                 \
    \                                    [(", "  (cond\n    [(and (>= number 0) (<=\
    \ need 1000) (<= remaining 1000)) (list number 0)]\n    [else (cond\n        \
    \     [(and (>= remaining 0) (<= need 1000) (<= number 1000)) (list number 0)]\n\
    \             [(and (>= remaining 0) (<= need 1000) (<= number 1000)) (list number\
    \ 0)]\n             [(and (>= remaining 0) (<= need 1000) (<= number 1000)) (list\
    \ number 0)]\n             [(and (>= remaining 0) (<= need 1000) (<= number 1000))\
    \ (list number 0)]\n             [(and (>= remaining 0) (<= need 1000) (<= number\
    \ 1000)) (list number 0)]\n             [(and (>= remaining 0) (<= need 1000)\
    \ (<= number 1000)) (list number 0)]\n             [(and (>= remaining 0) (<=\
    \ need 1000) (<= number 1000)) (list number 0)]\n             [(and (>= remaining\
    \ 0) (<= need 1000) (<= number 1000)) (list number 0)]\n             [(and (>=\
    \ remaining 0) (<= need 1000) (<= number 1000)) (list number 0)]\n           \
    \  [(and (>= remaining 0) (<= need 1000) (<= number 1000)) (list number 0)]\n\
    \             [(and (>= remaining 0) (<= need 1000) (<= number 1000)) (list number\
    \ 0)]\n             [(and (>= remaining 0) (<= need 1000) (<= number 1000)) (list\
    \ number 0)]\n             [(and (>= remaining 0) (<= need 1000) (<= number 1000))\
    \ (list number 0)]\n             [(and (>= remaining 0) (<= need 1000) (<= number\
    \ 1000)) (list number 0)]\n             [(and (>= remaining 0) (<= need 1000)\
    \ (<= number 1000)) (list number 0)]\n             [(and (>= remaining 0) (<=\
    \ need 1000) (<= number 1000)) (list number 0)]\n             [(and (>= remaining\
    \ 0) (<= need 1000) (<= number 1000)) (list number 0)]\n             [(and (>=\
    \ remaining 0) (<= need 1000) (<= number 1000)) (list number 0)]\n           \
    \  [(and (>= remaining 0) (<= need 1000) (<= number 1000)) (list number 0)]\n\
    \             [(and (>= remaining 0) (<= need 1000) (<= number 1000)) (list number\
    \ 0)]\n             [(and (>= remaining 0) (<= need 1000) (<= number 1000)) (list\
    \ number 0)]\n             [(and (>= remaining 0) (<= need 1000) (<= number 1000))\
    \ (list number 0)]\n             [(and (>= remaining 0) (<= need 1000) (<= number\
    \ 1000)) (list number 0)]\n", "  (cond\n    [(= remaining 0) (list number 0)]\n\
    \    [(= remaining 0) (list number 0)]\n    [else (cond\n             [(= number\
    \ need) (list number 0)]\n             [(< number need) (list number 0)]\n   \
    \          [(< number remaining) (list number 0)]\n             [(= number remaining)\
    \ (list number 0)]\n             [else (cond [(< number remaining) (list number\
    \ 0)]\n                         [(= number need) (list number 0)]\n          \
    \               [(< number need) (list number 0)]\n                         [(<\
    \ number remaining) (list number 0)]\n                         [(= number remaining)\
    \ (list number 0)]\n                         [else (cond [(< number remaining)\
    \ (list number 0)]\n                                     [(= number need) (list\
    \ number 0)]\n                                     [(< number need) (list number\
    \ 0)]\n                                     [(< number remaining) (list number\
    \ 0)]\n                                     [(= number remaining) (list number\
    \ 0)]\n                                     [else (cond [(< number remaining)\
    \ (list number 0)]\n                                                 [(= number\
    \ need) (list number 0)]\n                                                 [(<\
    \ number need) (list number 0)]\n                                            \
    \     [(< number remaining) (list number 0)]\n                               \
    \                  [(= number remaining) (list number 0)]\n                  \
    \                               [else (cond [(< number remaining) (list number\
    \ 0)]\n                                                             [(= number\
    \ need) (list number 0)]\n                                                   \
    \          [(< number need) (list number 0)]\n                               \
    \                              [(< number remaining) (list number 0)]\n      \
    \                                                       [(= number remaining)\
    \ (list number 0)]\n                                                         \
    \    [else (cond [(< number remaining) (list number 0)]\n                    \
    \                                                     [(= number need) (list number\
    \ 0)]\n                                                                      \
    \   [(< number need) (list number 0)]\n                                      \
    \                                   [(< number remaining) (list number 0)]\n \
    \                                                                        [(= number\
    \ remaining) (list number 0)]\n                                              \
    \                           [else (cond [(< number remaining) (list number 0)]\n\
    \                                                                            \
    \       [(= number need) (list number 0)]\n                                  \
    \                                                 [(< number need) (list number\
    \ 0)]\n                                                                      \
    \             [(< number remaining) (list number 0)]\n                       \
    \                                                            [(= number remaining)\
    \ (list number 0)]\n                                                         \
    \                          [else (cond [(< number remaining) (list number 0)]\n\
    \                                                                            \
    \                 [(= number need) (list number 0)]\n                        \
    \                                                                     [(< number\
    \ need) (list number 0)]\n                                                   \
    \                                          [(< number remaining) (list number\
    \ 0)]\n                                                                      \
    \                       [(= number remaining) (list number 0)]\n             \
    \                                                                            \
    \    [else ", "  (cond\n    [(= remaining 0) (list number 0)]\n    [(= remaining\
    \ (- need number)) (list number 0)]\n    [else (cond [(= (- remaining (- need\
    \ number)) 0) (list number 0)]\n              [(= (- remaining (- need number))\
    \ (- remaining number)) (list (- remaining number) 0)]\n              [else (cond\
    \ [(= (- remaining (- need number)) (- remaining number)) (list (- remaining number)\
    \ 0)]\n                        [(= (- remaining (- need number)) (- remaining\
    \ (- need number))) (list (- remaining (- need number)) (- remaining number))]\n\
    \                        [else (cond [(= (- remaining (- need number)) (- remaining\
    \ (- need number))) (list (- remaining (- need number)) (- remaining (- need number)))]\n\
    \                                  [(= (- remaining (- need number)) (- remaining\
    \ (- need (- remaining number)))) (list (- remaining (- need (- remaining number)))\
    \ 0)]\n                                  [else (cond [(= (- remaining (- need\
    \ number)) (- remaining (- need (- remaining number)))) (list (- remaining (-\
    \ need (- remaining number))) (- remaining (- need (- remaining number))))]\n\
    \                                          [(= (- remaining (- need number)) (-\
    \ remaining (- need (- remaining (- remaining number))))) (list (- remaining (-\
    \ need (- remaining (- remaining number))))) (- remaining (- need (- remaining\
    \ (- remaining number))))]\n                                          [else (cond\
    \ [(= (- remaining (- need number)) (- remaining (- need (- remaining (- remaining\
    \ number))))) (list (- remaining (- need (- remaining (- remaining number)))))\
    \ (- remaining (- need (- remaining (- remaining (- remaining number))))) 0]\n\
    \                                                  [(= (- remaining (- need number))\
    \ (- remaining (- need (- remaining (- remaining (- remaining number))))))) (list\
    \ (- remaining (- need (- remaining (- remaining (- remaining number))))) (- remaining\
    \ (- need (- remaining (- remaining (- remaining (- remaining number)))))))]\n\
    \                                                  [else (cond [(= (- remaining\
    \ (- need number)) (- remaining (- need (- remaining (- remaining (- remaining\
    \ (- remaining number)))))))) (list (- remaining (- need (- remaining (- remaining\
    \ (", "  (cond\n    [(and (<= 0 number 1000) (<= 0 need 1000) (<= 0 remaining\
    \ 1000)) (list 0 0)]\n    [(and (<= 0 number 1000) (<= 0 need 1000) (< remaining\
    \ 1)) (list 0 0)]\n    [(and (<= 0 number 1000) (<= 0 need 1000) (> remaining\
    \ 0)) (list 0 0)]\n    [(and (<= 0 number 1000) (< need 1000) (<= 0 remaining\
    \ 1000)) (list 0 0)]\n    [(and (<= 0 number 1000) (< need 1000) (< remaining\
    \ 1)) (list 0 0)]\n    [(and (<= 0 number 1000) (< need 1000) (> remaining 0))\
    \ (list 0 0)]\n    [(and (<= 0 number 1000) (> need 1000) (<= 0 remaining 1000))\
    \ (list 0 0)]\n    [(and (<= 0 number 1000) (> need 1000) (< remaining 1)) (list\
    \ 0 0)]\n    [(and (<= 0 number 1000) (> need 1000) (> remaining 0)) (list 0 0)]\n\
    \    [(and (<= 0 number 1000) (> need 1000) (> remaining 1000)) (list 0 0)]\n\
    \    [(and (<= 0 number 1000) (< need 1000) (> remaining 1000)) (list 0 0)]\n\
    \    [(and (<= 0 number 1000) (< need 1000) (< remaining 1000)) (list 0 0)]\n\
    \    [(and (<= 0 number 1000) (< need 1000) (> remaining 1000)) (list 0 0)]\n\
    \    [(and (<= 0 number 1000) (> need 1000) (> remaining 1000)) (list 0 0)]\n\
    \    [(and (<= 0 number 1000) (> need 1000) (< remaining 1000)) (list 0 0)]\n\
    \    [(and (<= 0 number 1000) (> need 1000) (< remaining 1000)) (list 0 0)]\n\
    \    [(and (<= 0 number 1000) (> need 1000) (> remaining 1000)) (list 0 0)]\n\
    \    [(and (<= 0 number 1000) (> need 1000) (> remaining 1000)) (list 0 0)]\n\
    \    [(and (<= 0 number 1000) (< need 1000) (> remaining 1000)) (list 0 0)]\n\
    \    [(and (<= 0 number 1000) (< need 1000) (< remaining 1000)) (list 0 0)]\n\
    \    [(and (<= 0 number 1000) (< need 1000) (> remaining 1000)) (list 0 0)]\n\
    \    [(and (<= 0 number 1000) (> need 1000) (> remaining 1000)) (list 0 ", " \
    \ (cond\n    [(or (= remaining 0) (= number 0))\n     (list 0 0)]\n    [(< remaining\
    \ 0)\n     (list number 0)]\n    [(< number need)\n     (list number (- need remaining))]\n\
    \    [else\n     (list number (- remaining number))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

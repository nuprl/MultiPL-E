name: HumanEval_144_simplify
language: rkt
prompt: "#lang racket\n\n;; Your task is to implement a function that will simplify\
  \ the expression\n;; x * n. The function returns #t if x * n evaluates to a whole\
  \ number and #f\n;; otherwise. Both x and n, are string representation of a fraction,\
  \ and have the following format,\n;; <numerator>/<denominator> where both numerator\
  \ and denominator are positive whole numbers.\n;; You can assume that x, and n are\
  \ valid fractions, and do not have zero as denominator.\n;; >>> (simplify \"1/5\"\
  \ \"5/1\")\n;; #t\n;; >>> (simplify \"1/6\" \"2/1\")\n;; #f\n;; >>> (simplify \"\
  7/10\" \"10/2\")\n;; #f\n(define (simplify x n)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate simplify))\n\
  \    (check-equal? (candidate \"1/5\" \"5/1\") #t)\n    (check-equal? (candidate\
  \ \"1/6\" \"2/1\") #f)\n    (check-equal? (candidate \"5/1\" \"3/1\") #t)\n    (check-equal?\
  \ (candidate \"7/10\" \"10/2\") #f)\n    (check-equal? (candidate \"2/10\" \"50/10\"\
  ) #t)\n    (check-equal? (candidate \"7/2\" \"4/2\") #t)\n    (check-equal? (candidate\
  \ \"11/6\" \"6/1\") #t)\n    (check-equal? (candidate \"2/3\" \"5/2\") #f)\n   \
  \ (check-equal? (candidate \"5/2\" \"3/5\") #f)\n    (check-equal? (candidate \"\
  2/4\" \"8/4\") #t)\n    (check-equal? (candidate \"2/4\" \"4/2\") #t)\n    (check-equal?\
  \ (candidate \"1/5\" \"5/1\") #t)\n    (check-equal? (candidate \"1/5\" \"1/5\"\
  ) #f)\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(equal? n \"\") #f]\n    [(equal? n \"0\") #t]\n    [(equal?\
    \ (string-match \"^[0-9]+/[0-9]+$\" n) \"\") #f]\n    [(equal? (string-match \"\
    ^[0-9]+/[0-9]+$\" n) \"0\") #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ n) \"\") #f]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\" n) \"0\") #t]\n\
    \    [(equal? (string-match \"^[0-9]+/[0-9]+$\" n) \"\") #f]\n    [(equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" n) \"0\") #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ n) \"\") #f]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\" n) \"0\") #t]\n\
    \    [(equal? (string-match \"^[0-9]+/[0-9]+$\" n) \"\") #f]\n    [(equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" n) \"0\") #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ n) \"\") #f]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\" n) \"0\") #t]\n\
    \    [(equal? (string-match \"^[0-9]+/[0-9]+$\" n) \"\") #f]\n    [(equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" n) \"0\") #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ n) \"\") #f]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\" n) \"0\") #t]\n\
    \    [(equal? (string-match \"^[0-9]+/[0-9]+$\" n) \"\") #f]\n    [(equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" n) \"0\") #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ n) \"\") #f]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\" n) \"0\") #t]\n\
    \    [(equal? (string-match \"^[0-9]+/[0-9]+$\" n) \"\") #f]\n    [(equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" n) \"0\") #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ n) \"\") #f]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\" n) \"0", "  (cond\n\
    \    [(number? x) (number? n)]\n    [(zero? n) #f]\n    [(zero? x) #f]\n    [(equal?\
    \ (string-length x) (string-length n)) (equal? (string-length x) (string-length\
    \ n))]\n    [else (equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n  ))\n",
  "  (cond\n    [(equal? x n) #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ x) n) #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\" n) x) #f]\n    [else\
    \ (simplify (substring x 0 (string-length x)) (substring n 0 (string-length n)))]))\n",
  "  (cond\n    [(equal? x \"0\") #f]\n    [(equal? n \"0\") #f]\n    [(equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" x) \"true\") (equal? (string-match \"^[0-9]+/[0-9]+$\" n)\
    \ \"true\")\n     (if (equal? (string-match \"^[0-9]+/[0-9]+$\" x) \"true\")\n\
    \         (if (equal? (string-match \"^[0-9]+/[0-9]+$\" n) \"true\")\n       \
    \      (if (equal? (string-match \"^[0-9]+/[0-9]+$\" x) \"true\")\n          \
    \       (if (equal? (string-match \"^[0-9]+/[0-9]+$\" n) \"true\")\n         \
    \            (if (equal? (string-match \"^[0-9]+/[0-9]+$\" x) \"true\")\n    \
    \                     (if (equal? (string-match \"^[0-9]+/[0-9]+$\" n) \"true\"\
    )\n                             (if (equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ x) \"true\")\n                                 (if (equal? (string-match \"\
    ^[0-9]+/[0-9]+$\" n) \"true\")\n                                     (if (equal?\
    \ (string-match \"^[0-9]+/[0-9]+$\" x) \"true\")\n                           \
    \              (if (equal? (string-match \"^[0-9]+/[0-9]+$\" n) \"true\")\n  \
    \                                           (if (equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ x) \"true\")\n                                                 (if (equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" n) \"true\")\n                                         \
    \            (if (equal? (string-match \"^[0-9]+/[0-9]+$\" x) \"true\")\n    \
    \                                                     (if (equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" n) \"true\")\n                                         \
    \                    (if (equal? (string-match \"^[0-9]+/[0-9]+$\" x) \"true\"\
    )\n                                                                 (if (equal?\
    \ (string-match \"^[0-9]+/[0-9]+$\" n) \"true\")\n                           \
    \                                          (if (equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ x) \"true\")\n                                                             \
    \            (if (equal? (string-match \"^[0-9]+/[0-9]+$\" n) \"true\")\n    \
    \                                                                         (if\
    \ (equal? (string-match \"^[0-9]+/[0-9]+$\" x) \"true\")\n                   \
    \                                                              (if (equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" n) \"true\")\n                                         \
    \                                            (if (equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ x) \"true\")\n                                                             \
    \                            (if (equal? (string-match \"^[0-9]+/[0-9]+$\" n)\
    \ \"true\")\n                                                                \
    \                             (if (equal? (string-match \"^[0-9]+/[0-9]+$\" x)\
    \ \"true\")\n                                                                \
    \                                 (if (equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ n) \"", "  (cond\n    [(equal? x \"0\") #f]\n    [(equal? x \"1\") x]\n    [(equal?\
    \ (string-match \"^[0-9]+/[0-9]+$\" x) true)\n     (string-match \"^[0-9]+/[0-9]+$\"\
    \ n)]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\" x) false)\n     (string-match\
    \ \"^[0-9]+/[0-9]+$\" x)]))\n", "  (cond\n    [(equal? x n) #t]\n    [(equal?\
    \ (string-match \"^[0-9]+/[0-9]+$\" x) n) #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ n) x) #f]\n    [(equal? (string-match \"^[0-9]+$\" x) n) #f]\n    [(equal? (string-match\
    \ \"^[0-9]+$\" n) x) #f]\n    [else (equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ x) n) #t]\n    [else (equal? (string-match \"^[0-9]+/[0-9]+$\" n) x) #f]\n \
    \   [else (equal? (string-match \"^[0-9]+$\" x) n) #f]\n    [else (equal? (string-match\
    \ \"^[0-9]+$\" n) x) #f]\n    [else (equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ x) n) #t]\n    [else (equal? (string-match \"^[0-9]+/[0-9]+$\" n) x) #f]\n \
    \   [else (equal? (string-match \"^[0-9]+$\" x) n) #f]\n    [else (equal? (string-match\
    \ \"^[0-9]+$\" n) x) #f]\n    [else (equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ x) n) #t]\n    [else (equal? (string-match \"^[0-9]+/[0-9]+$\" n) x) #f]\n \
    \   [else (equal? (string-match \"^[0-9]+$\" x) n) #f]\n    [else (equal? (string-match\
    \ \"^[0-9]+$\" n) x) #f]\n    [else (equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ x) n) #t]\n    [else (equal? (string-match \"^[0-9]+/[0-9]+$\" n) x) #f]\n \
    \   [else (equal? (string-match \"^[0-9]+$\" x) n) #f]\n    [else (equal? (string-match\
    \ \"^[0-9]+$\" n) x) #f]\n    [else (equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ x) n) #t]\n    [else (equal? (string-match \"^[0-9]+/[0-9]+$\" n) x) #f]\n \
    \   [else (equal? (string-match \"^[0-9]+$\" x) n) #f]\n    [else (equal? (string-match\
    \ \"^[0-9]+$\" n) x) #f]\n    [else (equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ x) n) #t]\n    [else (equal? (string-match \"^[0-9]+/[0-9]+$\" n", "  (cond\n\
    \    [(equal? x n) #t]\n    [(equal? n 0) #f]\n    [(equal? (string-length x)\
    \ (string-length n)) #f]\n    [(equal? (string-length x) (string-length n)) #f]\n\
    \    [else (equal? (string-match (string-replace x \"//\" \"\") \"/\") (string-match\
    \ (string-replace n \"//\" \"\") \"/\"))]\n  )\n)\n", "  (cond\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x\
    \ n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x)\
    \ (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n\
    \    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number?\
    \ n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and\
    \ (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal?\
    \ x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x\
    \ n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x)\
    \ (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n\
    \    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number?\
    \ n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and\
    \ (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal?\
    \ x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x\
    \ n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x)\
    \ (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n\
    \    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? ", "  (cond\n\
    \    [(number? x) (equal? x n)]\n    [(equal? (string->number x) n) (equal? x\
    \ n)]\n    [(equal? (string->number n) x) (equal? n x)]\n    [else (error \"Invalid\
    \ fraction\")]))\n", "  (cond\n    [(number? x) (equal? x n)]\n    [(equal? (string->number\
    \ x) (string->number n)) (equal? x n)]\n    [else (equal? (string->number x) (string->number\
    \ (string->number n)))]\n  )\n)\n", "  (cond\n    [(equal? x n) #t]\n    [(equal?\
    \ (string-match \"^[0-9]+/[0-9]+$\" x) n) #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ n) x) #f]\n    [else (simplify (substring x 0 (string-length x)) (substring\
    \ n 0 (string-length n)))]))\n", "  (cond\n    [(equal? x n) #t]\n    [(equal?\
    \ x '0f) #f]\n    [(equal? x '0s) #f]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ x) (null '())) #f]\n    [else (cond\n             [(equal? (string-match \"\
    ^[0-9]+$\" x) (null '())) #f]\n             [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ x) (null '())) #t]\n             [else (cond\n                      [(equal?\
    \ (string-match \"^[0-9]+/[0-9]+$\" x) (null '())) #t]\n                     \
    \ [(equal? (string-match \"^[0-9]+/[0-9]+$\" n) (null '())) #t]\n            \
    \          [else (cond\n                               [(equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" x) (null '())) #t]\n                               [(equal?\
    \ (string-match \"^[0-9]+/[0-9]+$\" n) (null '())) #t]\n                     \
    \          [(equal? (string-match \"^[0-9]+/[0-9]+$\" '0f) (null '())) #f]\n \
    \                              [(equal? (string-match \"^[0-9]+/[0-9]+$\" '0s)\
    \ (null '())) #f]\n                               [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ '0s) (null '())) #f]\n                               [(equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" '0s) (null '())) #f]\n                               [(equal?\
    \ (string-match \"^[0-9]+/[0-9]+$\" '0s) (null '())) #f]\n                   \
    \            [(equal? (string-match \"^[0-9]+/[0-9]+$\" '0s) (null '())) #f]\n\
    \                               [(equal? (string-match \"^[0-9]+/[0-9]+$\" '0s)\
    \ (null '())) #f]\n                               [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ '0s) (null '())) #f]\n                               [(equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" '0s) (null '())) #f]\n                               [(equal?\
    \ (string-match \"^[0-9]+/[0-9]+$\" '0s) (null '())) #f]\n                   \
    \            [(equal? (string-match \"^[0-9]+/[0-9]+$\" '0s) (null '())) #f]\n\
    \                               [(equal? (string-match \"^[0-9]+/[0-9]+$\" '0s)\
    \ (null '())) #f]\n                               [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ '0s) ", "  (cond\n    [(number? n) x]\n    [(zero? (string->number n)) x]\n\
    \    [(zero? (string->number x)) (error \"Cannot simplify fraction with zero denominator\"\
    )]\n    [(equal? (string->number x) (string->number n)) x]\n    [(equal? (string->number\
    \ n) (string->number x)) (error \"Cannot simplify fraction with different numerators\"\
    )]\n    [else (if (equal? (string->number x) (string->number n))\n           \
    \   (simplify (/ x n) (/ n x))\n              (simplify (/ n x) (/ x n))\n   \
    \         )]))\n", "  (cond\n    [(equal? x n) #t]\n    [(equal? (string->number\
    \ x) (string->number n)) #t]\n    [else (equal? (string->number x) (string->number\
    \ (string->number n)))]\n  )\n)\n", "  (cond\n    [(equal? x n) #t]\n    [(equal?\
    \ (string->number x) (string->number n)) #t]\n    [(equal? (string->number x)\
    \ (string->number n)) #t]\n    [else (cond\n             [(equal? (string->number\
    \ n) (string->number x)) #t]\n             [(equal? (string->number n) (string->number\
    \ x)) #t]\n             [(equal? (string->number n) (string->number x)) #t]\n\
    \             [(equal? (string->number n) (string->number x)) #t]\n          \
    \   [(equal? (string->number n) (string->number x)) #t]\n             [(equal?\
    \ (string->number n) (string->number x)) #t]\n             [(equal? (string->number\
    \ n) (string->number x)) #t]\n             [(equal? (string->number n) (string->number\
    \ x)) #t]\n             [(equal? (string->number n) (string->number x)) #t]\n\
    \             [(equal? (string->number n) (string->number x)) #t]\n          \
    \   [(equal? (string->number n) (string->number x)) #t]\n             [(equal?\
    \ (string->number n) (string->number x)) #t]\n             [(equal? (string->number\
    \ n) (string->number x)) #t]\n             [(equal? (string->number n) (string->number\
    \ x)) #t]\n             [(equal? (string->number n) (string->number x)) #t]\n\
    \             [(equal? (string->number n) (string->number x)) #t]\n          \
    \   [(equal? (string->number n) (string->number x)) #t]\n             [(equal?\
    \ (string->number n) (string->number x)) #t]\n             [(equal? (string->number\
    \ n) (string->number x)) #t]\n             [(equal? (string->number n) (string->number\
    \ x)) #t]\n             [(equal? (string->number n) (string->number x)) #t]\n\
    \             [(equal? (string->number n) (string->number x)) #t]\n          \
    \   [(equal? (string->number n) (string->number x)) #t]\n             [(equal?\
    \ (string->number n) (string->number x)) #t]\n             [(equal? (string->number\
    \ n) (string->number x)) #t]\n             [(equal? (string->number n) (string",
  "  (cond\n    [(number? x) (number? n) x]\n    [(equal? x n) x]\n    [(equal? (number?\
    \ (car x)) (number? (car n))) (car x)]\n    [(equal? (number? (car x)) (number?\
    \ (car n))) (simplify (car x) (car n))]\n    [else (simplify (car x) (car n))]\n\
    \  )\n)\n", "  (cond\n    [(number? x) (number? n)]\n    [(equal? x n) #t]\n \
    \   [(equal? (string->number x) (string->number n)) #t]\n    [else (and (simplify\
    \ (string->number x) (string->number n)) (simplify (string->number n) (string->number\
    \ x)))]))\n", "  (cond\n    [(equal? x n) #t]\n    [(equal? x '#f)\n     (cond\n\
    \       [(equal? n '#f)\n        #f]\n       [(equal? n '#t)\n        #t]\n  \
    \     [else (error \"Invalid fraction\")]))\n    [else (error \"Invalid expression\"\
    )]))\n", "  (cond\n    [(or (number? x) (number? n)) #f]\n    [(= (length x) 1)\
    \ (= (length n) 1) (= (length x) 1) (= (length n) 1) (= (length x) 1) (= (length\
    \ n) 1) (= (length x) 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (=\
    \ (length x) 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (= (length\
    \ x) 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (= (length x) 1) (=\
    \ (length n) 1) (= (length x) 1) (= (length n) 1) (= (length x) 1) (= (length\
    \ n) 1) (= (length x) 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (=\
    \ (length x) 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (= (length\
    \ x) 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (= (length x) 1) (=\
    \ (length n) 1) (= (length x) 1) (= (length n) 1) (= (length x) 1) (= (length\
    \ n) 1) (= (length x) 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (=\
    \ (length x) 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (= (length\
    \ x) 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (= (length x) 1) (=\
    \ (length n) 1) (= (length x) 1) (= (length n) 1) (= (length x) 1) (= (length\
    \ n) 1) (= (length x) 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (=\
    \ (length x) 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (= (length\
    \ x) 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (= (length x) 1) (=\
    \ (length n) 1) (= (length x) 1) (= (length n) 1) ", "  (cond\n    [(number? x)\
    \ (number? n)]\n    [(equal? x n) #t]\n    [(equal? (string->number x) (string->number\
    \ n)) #t]\n    [(equal? (string->number x) (string->number n)) (number? (string->number\
    \ x))]\n    [else (number? (string->number x)) (number? (string->number n))]\n\
    \    [else #f]))\n", "  (cond\n    [(and (number? x) (number? n)) (equal? x n)]\n\
    \    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number?\
    \ n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and\
    \ (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal?\
    \ x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x\
    \ n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x)\
    \ (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n\
    \    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number?\
    \ n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and\
    \ (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal?\
    \ x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x\
    \ n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x)\
    \ (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n\
    \    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number?\
    \ n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and\
    \ (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal?\
    \ x n)]\n    [(and (number? ", "  (cond\n    [(and (number? x) (number? n)) (equal?\
    \ (parse-int x) (parse-int n))] #t\n    [(and (number? x) (number? n)) (equal?\
    \ (parse-int x) (parse-int n))] #f\n    [(and (number? x) (number? n)) (equal?\
    \ (parse-int x) (parse-int n))] #f\n    [(and (number? x) (number? n)) (equal?\
    \ (parse-int x) (parse-int n))] #f\n    [(and (number? x) (number? n)) (equal?\
    \ (parse-int x) (parse-int n))] #f\n    [(and (number? x) (number? n)) (equal?\
    \ (parse-int x) (parse-int n))] #f\n    [(and (number? x) (number? n)) (equal?\
    \ (parse-int x) (parse-int n))] #f\n    [(and (number? x) (number? n)) (equal?\
    \ (parse-int x) (parse-int n))] #f\n    [(and (number? x) (number? n)) (equal?\
    \ (parse-int x) (parse-int n))] #f\n    [(and (number? x) (number? n)) (equal?\
    \ (parse-int x) (parse-int n))] #f\n    [(and (number? x) (number? n)) (equal?\
    \ (parse-int x) (parse-int n))] #f\n    [(and (number? x) (number? n)) (equal?\
    \ (parse-int x) (parse-int n))] #f\n    [(and (number? x) (number? n)) (equal?\
    \ (parse-int x) (parse-int n))] #f\n    [(and (number? x) (number? n)) (equal?\
    \ (parse-int x) (parse-int n))] #f\n    [(and (number? x) (number? n)) (equal?\
    \ (parse-int x) (parse-int n))] #f\n    [(and (number? x) (number? n)) (equal?\
    \ (parse-int x) (parse-int n))] #f\n    [(and (number? x) (number? n)) (equal?\
    \ (parse-int x) (parse-int n))] #f\n    [(and (number? x) (number? n)) (equal?\
    \ (parse-int x) (parse-int n))] #f\n    [(and (number? x) (number? n)) (equal?\
    \ (parse-int x) (parse-int n))] #f\n    [(and (number? x) (number? n)) (equal?\
    \ (", "  (cond\n    [(number? x) (number? n)]\n    [(equal? x n) #t]\n    [(equal?\
    \ (string-ref x 0) (string-ref n 0))\n     (cond\n       [(equal? (string-ref\
    \ x 1) (string-ref n 0))\n        #t]\n       [(equal? (string-ref x 1) (string-ref\
    \ n 1))\n        #f]\n       [(equal? (string-ref x 1) (string-ref n 2))\n   \
    \     #f]\n       [(equal? (string-ref x 1) (string-ref n 3))\n        #f]\n \
    \      [(equal? (string-ref x 1) (string-ref n 4))\n        #f]\n       [(equal?\
    \ (string-ref x 1) (string-ref n 5))\n        #f]\n       [(equal? (string-ref\
    \ x 1) (string-ref n 6))\n        #f]\n       [(equal? (string-ref x 1) (string-ref\
    \ n 7))\n        #f]\n       [(equal? (string-ref x 1) (string-ref n 8))\n   \
    \     #f]\n       [(equal? (string-ref x 1) (string-ref n 9))\n        #f]\n \
    \      [(equal? (string-ref x 1) (string-ref n 10))\n        #f]\n       [(equal?\
    \ (string-ref x 1) (string-ref n 11))\n        #f]\n       [(equal? (string-ref\
    \ x 1) (string-ref n 12))\n        #f]\n       [(equal? (string-ref x 1) (string-ref\
    \ n 13))\n        #f]\n       [(equal? (string-ref x 1) (string-ref n 14))\n \
    \       #f]\n       [(equal? (string-ref x 1) (string-ref n 15))\n        #f]\n\
    \       [(equal? (string-ref x 1) (string-ref n 16))\n        #f]\n       [(equal?\
    \ (string-ref x 1) (string-ref n 17))\n        #f]\n       [(equal? (string-ref\
    \ x 1) (string-ref n 18))\n        #f]\n       [(equal? (string-ref x 1) (string-ref\
    \ n 19))\n        #f]\n       [(equal? (string-ref x 1) (string-ref n 20))\n \
    \       #f]\n       [(equal? (string-ref x 1) (string-ref n 21))\n        #f]\n\
    \       [(equal? (string-ref x 1) (string-ref n 22))\n        #f]\n       [(equal?\
    \ (string-ref x 1) (string-ref n 23))\n        #f]\n       [(equal? (string-ref\
    \ x 1) (string-ref n 24))\n        #f]\n       [(equal? (string-ref x 1) ", " \
    \ (cond\n    [(number? x) (number? n) x]\n    [(equal? x n) #t]\n    [(equal?\
    \ (string->number x) (string->number n)) x]\n    [else (simplify (/ x n) (/ n\
    \ x))]))\n", "  (cond\n    [(number? x) (number? n)]\n    [(number? n) (number?\
    \ x)]\n    [(number? n) (number? x) (number? n)]\n    [(number? x) (number? n)\
    \ (number? x)]\n    [(number? x) (number? n) (number? x) (number? n)]\n    [(number?\
    \ n) (number? x) (number? n) (number? x)]\n    [(number? n) (number? x) (number?\
    \ n) (number? x) (number? n)]\n    [(number? x) (number? n) (number? x) (number?\
    \ n) (number? x)]\n    [(number? x) (number? n) (number? x) (number? n) (number?\
    \ x) (number? n)]\n    [(number? n) (number? x) (number? n) (number? x) (number?\
    \ n) (number? x)]\n    [(number? n) (number? x) (number? n) (number? x) (number?\
    \ n) (number? x) (number? n)]\n    [(number? x) (number? n) (number? x) (number?\
    \ n) (number? x) (number? n) (number? x)]\n    [(number? x) (number? n) (number?\
    \ x) (number? n) (number? x) (number? n) (number? x) (number? n)]\n    [(number?\
    \ n) (number? x) (number? n) (number? x) (number? n) (number? x) (number? n) (number?\
    \ x)]\n    [(number? n) (number? x) (number? n) (number? x) (number? n) (number?\
    \ x) (number? n) (number? x) (number? n)]\n    [(number? x) (number? n) (number?\
    \ x) (number? n) (number? x) (number? n) (number? x) (number? n) (number? x)]\n\
    \    [(number? x) (number? n) (number? x) (number? n) (number? x) (number? n)\
    \ (number? x) (number? n) (number? x) (number? n)]\n    [(number? n) (number?\
    \ x) (number? n) (number? x) (number? n) (number? x) (number? n) (number? x) (number?\
    \ n) (number? x)]\n    [(number? n) (number? x) (number? n) (number? x) (number?\
    \ n) (number", "  (cond\n    [(empty? n) #f]\n    [(equal? (first n) '()) #f]\n\
    \    [(equal? (first n) '(0)) #f]\n    [(equal? (first n) '(1)) #f]\n    [(equal?\
    \ (first n) '(1/2)) #f]\n    [(equal? (first n) '(1/3)) (simplify x (rest n))]\n\
    \    [(equal? (first n) '(1/4)) (simplify x (rest n))]\n    [(equal? (first n)\
    \ '(1/5)) (simplify x (rest n))]\n    [(equal? (first n) '(1/6)) (simplify x (rest\
    \ n))]\n    [(equal? (first n) '(1/7)) (simplify x (rest n))]\n    [(equal? (first\
    \ n) '(1/8)) (simplify x (rest n))]\n    [(equal? (first n) '(1/9)) (simplify\
    \ x (rest n))]\n    [(equal? (first n) '(1/10)) (simplify x (rest n))]\n    [(equal?\
    \ (first n) '(1/11)) (simplify x (rest n))]\n    [(equal? (first n) '(1/12)) (simplify\
    \ x (rest n))]\n    [(equal? (first n) '(1/13)) (simplify x (rest n))]\n    [(equal?\
    \ (first n) '(1/14)) (simplify x (rest n))]\n    [(equal? (first n) '(1/15)) (simplify\
    \ x (rest n))]\n    [(equal? (first n) '(1/16)) (simplify x (rest n))]\n    [(equal?\
    \ (first n) '(1/17)) (simplify x (rest n))]\n    [(equal? (first n) '(1/18)) (simplify\
    \ x (rest n))]\n    [(equal? (first n) '(1/19)) (simplify x (rest n))]\n    [(equal?\
    \ (first n) '(1/20)) (simplify x (rest n))]\n    [(equal? (first n) '(1/21)) (simplify\
    \ x (rest n))]\n    [(equal? (first n) '(1/22)) (simplify x (rest n))]\n    [(equal?\
    \ (first n) '(1/23)) (simplify x (rest n))]\n    [(equal? (first n) '(1/24)) (simplify\
    \ x (rest n))]\n    [(equal? (first n) ", "  (cond\n    [(number? x) (equal? x\
    \ n)]\n    [(equal? (substring x 0 1) \"/\") (equal? (substring n 0 1) \"/\")]\n\
    \    [else (equal? (substring x 0 1) \"*\") (equal? (substring n 0 1) \"*\")]\n\
    \    [else (equal? (substring x 0 1) \"-\") (equal? (substring n 0 1) \"-\")]\n\
    \    [else (equal? (substring x 0 1) \"+\") (equal? (substring n 0 1) \"+\")]\n\
    \    [else (equal? (substring x 0 1) \"(\") (equal? (substring n 0 1) \")\")]\n\
    \    [else (equal? (substring x 0 1) \"^\") (equal? (substring n 0 1) \"^\")]\n\
    \    [else (equal? (substring x 0 1) \"sqrt\") (equal? (substring n 0 1) \"sqrt\"\
    )]\n    [else (equal? (substring x 0 1) \"sin\") (equal? (substring n 0 1) \"\
    sin\")]\n    [else (equal? (substring x 0 1) \"cos\") (equal? (substring n 0 1)\
    \ \"cos\")]\n    [else (equal? (substring x 0 1) \"tan\") (equal? (substring n\
    \ 0 1) \"tan\")]\n    [else (equal? (substring x 0 1) \"pi\") (equal? (substring\
    \ n 0 1) \"pi\")]\n    [else (equal? (substring x 0 1) \"e\") (equal? (substring\
    \ n 0 1) \"e\")]\n    [else (equal? (substring x 0 1) \"ln\") (equal? (substring\
    \ n 0 1) \"ln\")]\n    [else (equal? (substring x 0 1) \"log\") (equal? (substring\
    \ n 0 1) \"log\")]\n    [else (equal? (substring x 0 1) \"sinh\") (equal? (substring\
    \ n 0 1) \"sinh\")]\n    [else (equal? (substring x 0 1) \"cosh\") (equal? (substring\
    \ n 0 1) \"cosh\")]\n    [else (equal? (substring x 0 1) \"tanh\") (equal? (substring\
    \ n 0 1) \"tanh\")]\n    [else (equal? (substring x 0 1) \"asin\") (equal? (substring\
    \ n 0 1) \"asin\")]\n    [else (equal? (substring x 0 1) \"acos\") (equal? (substring\
    \ n 0 1) \"acos\")]\n    [else (equal? (substring x 0 1) \"atan\") (equal? (substring\
    \ n 0 1) \"atan\")]", "  (cond\n    [(equal? n \"\") x]\n    [(equal? n \"0\"\
    ) x]\n    [(equal? (string-length x) 0) x]\n    [(equal? (string-length n) 0)\
    \ n]\n    [(equal? (string-length x) (string-length n)) x]\n    [else (if (equal?\
    \ (string-length x) (string-length n))\n              (if (equal? (string-length\
    \ n) 0)\n                  (if (equal? (string-length x) 0)\n                \
    \      (if (equal? (string-length n) 0)\n                          (if (equal?\
    \ (string-length x) (string-length n))\n                              (if (equal?\
    \ (string-length n) (string-length x))\n                                  (if\
    \ (equal? (string-length x) (string-length n)) (if (equal? (string-length n) (string-length\
    \ x)) (if (equal? (string-length x) (string-length n)) (if (equal? (string-length\
    \ n) (string-length x)) (if (equal? (string-length x) (string-length n)) (if (equal?\
    \ (string-length n) (string-length x)) (if (equal? (string-length x) (string-length\
    \ n)) (if (equal? (string-length n) (string-length x)) (if (equal? (string-length\
    \ x) (string-length n)) (if (equal? (string-length n) (string-length x)) (if (equal?\
    \ (string-length x) (string-length n)) (if (equal? (string-length n) (string-length\
    \ x)) (if (equal? (string-length x) (string-length n)) (if (equal? (string-length\
    \ n) (string-length x)) (if (equal? (string-length x) (string-length n)) (if (equal?\
    \ (string-length n) (string-length x)) (if (equal? (string-length x) (string-length\
    \ n)) (if (equal? (string-length n) (string-length x)) (if (equal? (string-length\
    \ x) (string-length n)) (if (equal? (string-length n) (string-length x)) (if (equal?\
    \ (string-length x) (string-length n)) (if (equal? (string-length n) (string-length\
    \ x)) (if (equal? (string-length x) (string-length n)) (if (equal? (string-length\
    \ n) (string-length x)) (if (equal? (string-length x) (string-length n)) (if (equal?\
    \ (string-length n) (string-length x)) (if (equal? (string-length x) (string-length\
    \ n)) (if (equal? (string-length n) (string-length x)) (if (equal? (string-length\
    \ x) (string-length n)) (if (equal? (string-length n) (string-length x)) (if (equal?\
    \ (string-length ", "  (cond\n    [(number? x) (equal? x n) #t]\n    [(equal?\
    \ x \"0\") #f]\n    [(equal? (first x) \"-\") (simplify (sub1 (second x)) n)]\n\
    \    [(equal? (first x) \"/\") (simplify (sub1 (second x)) n)]\n    [else (simplify\
    \ (sub1 (first x)) n)]\n  )\n)\n", "  (cond\n    [(equal? x n) #t]\n    [(equal?\
    \ (string-match \"^[0-9]+/[0-9]+$\" x) n) #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ n) x) #f]\n    [else (simplify (substring x 0 (string-length x)) (substring\
    \ n 0 (string-length n)))]))\n", "  (cond\n    [(number? x) (number? n)]\n   \
    \ [(zero? n) #f]\n    [(zero? x) #f]\n    [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n    [else (cond [(equal?\
    \ (string-length x) (string-length n)) (equal? (string-length x) (string-length\
    \ n))]\n              [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n              [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n              [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n      \
    \        [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n              [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n              [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n      \
    \        [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n              [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n              [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n      \
    \        [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n              [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n              [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n      \
    \        [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n              [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n              [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n      \
    \        [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n              [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n              [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length ", "  (cond\n\
    \    [(equal? x n) #t]\n    [(equal? (string-length x) (string-length n)) #f]\n\
    \    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (", "  (cond\n    [(equal? x n) #t]\n\
    \    [(equal? x '0) #f]\n    [(equal? (string->number x) (string->number (string->list\
    \ n)))\n     (cond\n       [(equal? (string->number n) (string->number (string->list\
    \ x))) #t]\n       [(equal? (string->number n) (string->number (string->list x)))\
    \ #f]\n       [else #f]\n       )]\n    [else #f]))\n", "  (cond\n    [(number?\
    \ x) (number? n)]\n    [(number? n) (number? x)]\n    [(zero? n) (zero? x)]\n\
    \    [(zero? x) (zero? n)]\n    [(equal? x n) (equal? x x)]\n    [(equal? n x)\
    \ (equal? n n)]\n    [(equal? x \"0\") (equal? n \"0\")]\n    [(equal? n \"0\"\
    ) (equal? x \"0\")]\n    [else (equal? (string->number x) (string->number n))]\n\
    \  )\n)\n", "  (cond\n    [(and (number? x) (number? n)) (equal? (parse-integer\
    \ x) (parse-integer n))]\n    [(and (number? x) (number? n)) (equal? (parse-integer\
    \ x) (parse-integer n))]\n    [(and (number? x) (number? n)) (equal? (parse-integer\
    \ x) (parse-integer n))]\n    [(and (number? x) (number? n)) (equal? (parse-integer\
    \ x) (parse-integer n))]\n    [(and (number? x) (number? n)) (equal? (parse-integer\
    \ x) (parse-integer n))]\n    [(and (number? x) (number? n)) (equal? (parse-integer\
    \ x) (parse-integer n))]\n    [(and (number? x) (number? n)) (equal? (parse-integer\
    \ x) (parse-integer n))]\n    [(and (number? x) (number? n)) (equal? (parse-integer\
    \ x) (parse-integer n))]\n    [(and (number? x) (number? n)) (equal? (parse-integer\
    \ x) (parse-integer n))]\n    [(and (number? x) (number? n)) (equal? (parse-integer\
    \ x) (parse-integer n))]\n    [(and (number? x) (number? n)) (equal? (parse-integer\
    \ x) (parse-integer n))]\n    [(and (number? x) (number? n)) (equal? (parse-integer\
    \ x) (parse-integer n))]\n    [(and (number? x) (number? n)) (equal? (parse-integer\
    \ x) (parse-integer n))]\n    [(and (number? x) (number? n)) (equal? (parse-integer\
    \ x) (parse-integer n))]\n    [(and (number? x) (number? n)) (equal? (parse-integer\
    \ x) (parse-integer n))]\n    [(and (number? x) (number? n)) (equal? (parse-integer\
    \ x) (parse-integer n))]\n    [(and (number? x) (number? n)) (equal? (parse-integer\
    \ x) (parse-integer n))]\n    [(and (number? x) (number? n)) (equal? (parse-integer\
    \ x) (parse-integer n))]\n    [(and (number? x) (number? n)) (equal? (parse-integer\
    \ x) (parse-integer n))]\n    [(and (number? x) (number? n)) (equal? (parse-integer\
    \ x) (parse-integer n))]\n    [(and (number? x) (number? ", "  (cond\n    [(equal?\
    \ x n) #t]\n    [(equal? n '#f)\n     (error \"Invalid fraction: cannot simplify\
    \ fraction with zero denominator.\")]\n    [(equal? (string-length x) (string-length\
    \ n))\n     (error \"Invalid fraction: cannot simplify fractions with different\
    \ lengths.\")]\n    [(equal? (string-length x) (string-length n))\n     (cond\n\
    \       [(equal? (string-ref x 0) '#f)\n        (error \"Invalid fraction: cannot\
    \ simplify fractions with zero denominator.\")]\n       [(equal? (string-ref n\
    \ 0) '#f)\n        (error \"Invalid fraction: cannot simplify fractions with zero\
    \ denominator.\")]\n       [(equal? (string-ref x 0) '#t)\n        (cond\n   \
    \       [(equal? (string-ref n 0) '#f)\n           (error \"Invalid fraction:\
    \ cannot simplify fractions with zero denominator.\")]\n          [(equal? (string-ref\
    \ n 0) '#t)\n           (cond\n             [(equal? (string-ref x 1) '#f)\n \
    \              (error \"Invalid fraction: cannot simplify fractions with zero\
    \ denominator.\")]\n             [(equal? (string-ref x 1) '#t)\n            \
    \   (cond\n                 [(equal? (string-ref n 1) '#f)\n                 \
    \  (error \"Invalid fraction: cannot simplify fractions with zero denominator.\"\
    )]\n                 [(equal? (string-ref n 1) '#t)\n                   (cond\n\
    \                     [(equal? (string-ref x 2) '#f)\n                       (error\
    \ \"Invalid fraction: cannot simplify fractions with zero denominator.\")]\n \
    \                    [(equal? (string-ref x 2) '#t)\n                       (cond\n\
    \                         [(equal? (string-ref n 2) '#f)\n                   \
    \        (error \"Invalid fraction: cannot simplify fractions with zero denominator.\"\
    )]\n                         [(equal? (string-ref n 2) '#t)\n                \
    \           (cond\n                             [(equal? (string-ref x 3) '#f)\n\
    \                               (error \"Invalid fraction: cannot simplify fractions\
    \ with zero denominator.\")]\n                             [(equal? (string-ref\
    \ x 3) '#t)\n                               (cond\n                          \
    \       [(equal? (string-ref n 3) '#f)\n                                   (error\
    \ \"Invalid fraction: cannot simplify fractions with zero denominator.\")]\n \
    \                                [(equal? (string-ref n 3) '#t)\n            \
    \                       (cond\n                                     [(equal? (string-ref\
    \ x 4) '#f)\n                                       (error \"Invalid fraction:\
    \ cannot simplify fractions with zero denominator.\")]\n                     \
    \                [(equal? (string-ref x 4) '#t)\n                            \
    \           (cond\n                                         [(equal? (string-ref\
    \ n 4) '#f)\n                                           (", "  (cond\n    [(number?\
    \ x) (number? n)]\n    [(zero? n) #f]\n    [(zero? x) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n    [else\
    \ (cond [(equal? (string-length x) (string-length n)) (equal? (string-length x)\
    \ (string-length n))]\n              [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n              [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n      \
    \        [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n              [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n              [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n      \
    \        [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n              [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n              [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n      \
    \        [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n              [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n              [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n      \
    \        [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n              [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n              [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n      \
    \        [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n              [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n              [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n      \
    \        [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length ", "  (cond\n    [(equal? x n) #t]\n    [(equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" x) n) #t]\n    [else #f]))\n", "  (cond\n    [(number? x)\
    \ (number? n)]\n    [(equal? x n) #t]\n    [(equal? (string->number x) (string->number\
    \ n)) #t]\n    [(equal? (string->number x) (string->number (string->number n)))\n\
    \     (equal? (string->number (string->number x)) (string->number (string->number\
    \ n)))]\n    [else (equal? (string->number (string->number x)) (string->number\
    \ (string->number n)))]))\n", "  (cond\n    [(and (number? x) (number? n)) (equal?\
    \ (quotient x n) 0)]\n    [(and (number? x) (number? n)) #f]\n    [(and (number?\
    \ x) (number? n)) (equal? (quotient x n) 0)]\n    [(and (number? x) (number? n))\
    \ #f]\n    [(and (number? x) (number? n)) (equal? (quotient x n) 0)]\n    [(and\
    \ (number? x) (number? n)) #f]\n    [(and (number? x) (number? n)) (equal? (quotient\
    \ x n) 0)]\n    [(and (number? x) (number? n)) #f]\n    [(and (number? x) (number?\
    \ n)) (equal? (quotient x n) 0)]\n    [(and (number? x) (number? n)) (equal? (quotient\
    \ x n) 0)]\n    [(and (number? x) (number? n)) (equal? (quotient x n) 0)]\n  \
    \  [(and (number? x) (number? n)) (equal? (quotient x n) 0)]\n    [(and (number?\
    \ x) (number? n)) (equal? (quotient x n) 0)]\n    [(and (number? x) (number? n))\
    \ (equal? (quotient x n) 0)]\n    [(and (number? x) (number? n)) (equal? (quotient\
    \ x n) 0)]\n    [(and (number? x) (number? n)) (equal? (quotient x n) 0)]\n  \
    \  [(and (number? x) (number? n)) (equal? (quotient x n) 0)]\n    [(and (number?\
    \ x) (number? n)) (equal? (quotient x n) 0)]\n    [(and (number? x) (number? n))\
    \ (equal? (quotient x n) 0)]\n    [(and (number? x) (number? n)) (equal? (quotient\
    \ x n) 0)]\n    [(and (number? x) (number? n)) (equal? (quotient x n) 0)]\n  \
    \  [(and (number? x) (number? n)) (equal? (quotient x n) 0)]\n    [(and (number?\
    \ x) (number? n)) (equal? (quotient x n) 0)]\n    [(and (number? x) (number? n))\
    \ (equal? (quotient x n) 0)]\n    [(and (number? x) (number? n)) (equal", "  (cond\n\
    \    [(number? x) (number? n)]\n    [(equal? x n) #t]\n    [(equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" x) (n)) #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ n) x) #f]\n    [else (simplify (substring x 0 1) (substring n 0 1))]))\n", " \
    \ (cond\n    [(equal? (string-length x) (string-length n))\n     (equal? (string-length\
    \ x) (string-length n))]\n    [(equal? (string-length x) (string-length n))\n\
    \     (equal? (string-length x) (string-length n))]\n    [(equal? (string-length\
    \ x) (string-length n))\n     (equal? (string-length x) (string-length n))]\n\
    \    [(equal? (string-length x) (string-length n))\n     (equal? (string-length\
    \ x) (string-length n))]\n    [(equal? (string-length x) (string-length n))\n\
    \     (equal? (string-length x) (string-length n))]\n    [(equal? (string-length\
    \ x) (string-length n))\n     (equal? (string-length x) (string-length n))]\n\
    \    [(equal? (string-length x) (string-length n))\n     (equal? (string-length\
    \ x) (string-length n))]\n    [(equal? (string-length x) (string-length n))\n\
    \     (equal? (string-length x) (string-length n))]\n    [(equal? (string-length\
    \ x) (string-length n))\n     (equal? (string-length x) (string-length n))]\n\
    \    [(equal? (string-length x) (string-length n))\n     (equal? (string-length\
    \ x) (string-length n))]\n    [(equal? (string-length x) (string-length n))\n\
    \     (equal? (string-length x) (string-length n))]\n    [(equal? (string-length\
    \ x) (string-length n))\n     (equal? (string-length x) (string-length n))]\n\
    \    [(equal? (string-length x) (string-length n))\n     (equal? (string-length\
    \ x) (string-length n))]\n    [(equal? (string-length x) (string-length n))\n\
    \     (equal? (string-length x) (string-length n))]\n    [(equal? (string-length\
    \ x) (string-length n))\n     (equal? (string-length x) (string-length n))]\n\
    \    [(equal? (string-length x) (string-length n))\n     (equal? (string-length\
    \ x) (string-length n))]\n    [(equal? (string-length x) (string-length n))\n\
    \     (equal? (string-length x) (string-length n))]\n    [(equal? (string-length\
    \ x) (string-length n))\n     (equal? (string-length x) (string-length n))]\n\
    \    [(equal? (string-length x) (string-length n))\n     (equal? (string-length\
    \ x) (string-length n))]\n    [(equal? (string-length x) (string-length n))\n\
    \     (equal? (string-length x) (string-length n))]\n    [(equal? (string-length\
    \ x) (string-length n))\n     (equal? (string-length x) (string-length n))]\n\
    \    [(equal? (string-", "  (cond\n    [(and (number? x) (number? n)) (equal?\
    \ (parse-int x) n)]\n    [(and (number? x) (number? n)) (equal? (parse-int x)\
    \ n)]\n    [(and (number? x) (number? n)) (equal? (parse-int x) n)]\n    [(and\
    \ (number? x) (number? n)) (equal? (parse-int x) n)]\n    [(and (number? x) (number?\
    \ n)) (equal? (parse-int x) n)]\n    [(and (number? x) (number? n)) (equal? (parse-int\
    \ x) n)]\n    [(and (number? x) (number? n)) (equal? (parse-int x) n)]\n    [(and\
    \ (number? x) (number? n)) (equal? (parse-int x) n)]\n    [(and (number? x) (number?\
    \ n)) (equal? (parse-int x) n)]\n    [(and (number? x) (number? n)) (equal? (parse-int\
    \ x) n)]\n    [(and (number? x) (number? n)) (equal? (parse-int x) n)]\n    [(and\
    \ (number? x) (number? n)) (equal? (parse-int x) n)]\n    [(and (number? x) (number?\
    \ n)) (equal? (parse-int x) n)]\n    [(and (number? x) (number? n)) (equal? (parse-int\
    \ x) n)]\n    [(and (number? x) (number? n)) (equal? (parse-int x) n)]\n    [(and\
    \ (number? x) (number? n)) (equal? (parse-int x) n)]\n    [(and (number? x) (number?\
    \ n)) (equal? (parse-int x) n)]\n    [(and (number? x) (number? n)) (equal? (parse-int\
    \ x) n)]\n    [(and (number? x) (number? n)) (equal? (parse-int x) n)]\n    [(and\
    \ (number? x) (number? n)) (equal? (parse-int x) n)]\n    [(and (number? x) (number?\
    \ n)) (equal? (parse-int x) n)]\n    [(and (number? x) (number? n)) (equal? (parse-int\
    \ x) n)]\n    [(and (number? x) (number? n)) (equal? (parse-int x) n)]\n    [(and\
    \ (number? x) (number? n)) (equal? (parse-int x) n)]\n    [(and (number? ", " \
    \ (cond\n    [(equal? x n) #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ x) n) #t]\n    [else #f]))\n", "  (cond\n    [(number? x) (equal? x n)]\n  \
    \  [(equal? (string-ref x 0) \"/\") (equal? (string-ref n 0) \"/\")]\n    [(equal?\
    \ (string-ref x 0) \"-\") (equal? (string-ref n 0) \"-\")]\n    [else (and (equal?\
    \ (string-ref x 0) \"+\") (equal? (string-ref n 0) \"+\"))]\n    [else (and (equal?\
    \ (string-ref x 0) \"*\") (equal? (string-ref n 0) \"*\"))]\n    [else (and (equal?\
    \ (string-ref x 0) \"-\") (equal? (string-ref n 0) \"-\"))]\n    [else (and (equal?\
    \ (string-ref x 0) \"/\") (equal? (string-ref n 0) \"/\"))]\n    [else (and (equal?\
    \ (string-ref x 0) \"=\") (equal? (string-ref n 0) \"=\"))]\n    [else (and (equal?\
    \ (string-ref x 0) \"!\") (equal? (string-ref n 0) \"!\"))]\n    [else (and (equal?\
    \ (string-ref x 0) \"(\") (equal? (string-ref n 0) \"(\"))]))\n", "  (cond\n \
    \   [(empty? n) #t]\n    [(equal? (first n) '#f)\n     (cond\n       [(equal?\
    \ (first x) '#f)\n        (cond\n         [(equal? (first n) '#f)\n          (cond\n\
    \            [(equal? (first x) '#f)\n             (cond\n              [(equal?\
    \ (first n) '#f)\n               (cond\n                 [(equal? (first x) '#f)\n\
    \                   (cond\n                     [(equal? (first n) '#f)\n    \
    \                  (cond\n                       [(equal? (first x) '#f)\n   \
    \                     (cond\n                         [(equal? (first n) '#f)\n\
    \                          (cond\n                           [(equal? (first x)\
    \ '#f)\n                            (cond\n                             [(equal?\
    \ (first n) '#f)\n                              (cond\n                      \
    \         [(equal? (first x) '#f)\n                                (cond\n   \
    \                              [(equal? (first n) '#f)\n                     \
    \             (cond\n                                   [(equal? (first x) '#f)\n\
    \                                    (cond\n                                 \
    \    [(equal? (first n) '#f)\n                                      (cond\n  \
    \                                     [(equal? (first x) '#f)\n              \
    \                          (cond\n                                         [(equal?\
    \ (first n) '#f)\n                                          (cond\n          \
    \                                 [(equal? (first x) '#f)\n                  \
    \                          (cond\n                                           \
    \  [(equal? (first n) '#f)\n                                              (cond\n\
    \                                               [(equal? (first x) '#f)\n    \
    \                                            (cond\n                         \
    \                        [(equal? (first n) '#f)\n                           \
    \                       (cond\n                                              \
    \     [(equal? (first x) '#f)\n                                              \
    \      (cond\n                                                     [(equal? (first\
    \ n) '#f)\n                                                      (cond\n     \
    \                                                  [(equal? (first x) '#f)\n \
    \                                                       (cond\n              \
    \                                           [(equal? (first n) '#f)\n        \
    \                                                  (cond\n                   \
    \                                        [(equal? (first x) '#f)\n           \
    \                                                 (cond\n                    \
    \                                         [(equal? (first n) '#f)\n          \
    \                                                    (cond\n                 \
    \                                              [(equal? (first x) '#f)\n     \
    \                                                           (cond\n          \
    \                                                      [(equal? (first n) '#f)\n\
    \                                                                  (cond\n   \
    \                                                                [(equal? (first\
    \ x) '#f)\n                                                                  \
    \  (cond\n                                                                   \
    \  [(equal? (first n) '#f)\n                                                 \
    \                     (cond\n                                                \
    \                       [(equal? (first x) '#f)\n                            \
    \                                            (cond\n                         \
    \                                                [(equal? (first n) '#f)\n   \
    \                                                                       (cond\n\
    \                                                                           [(equal?\
    \ (first x) '#f)\n                                                           \
    \                 (cond\n                                                    \
    \                         ", "  (cond\n    [(number? n) (equal? x n)]\n    [(equal?\
    \ (string-ref x 0) \"/\") (equal? (string-ref n 0) \"/\")]\n    [(equal? (string-ref\
    \ x 0) \"-\") (equal? (string-ref n 0) \"-\")]\n    [(equal? (string-ref x 0)\
    \ \"+\") (equal? (string-ref n 0) \"+\")]\n    [else (equal? (string-ref x 0)\
    \ \"*\") (equal? (string-ref n 0) \"*\")]))\n", "  (cond\n    [(number? x) (number?\
    \ n)]\n    [(equal? x n) #t]\n    [(equal? (string->number x) (string->number\
    \ n)) #t]\n    [(equal? (string->number x) (string->number n)) #t]\n    [else\
    \ (equal? (string->number x) (string->number n)) (simplify (string->number x)\
    \ (string->number n))]\n  )\n)\n", "  (cond\n    [(number? x) (equal? x n)]\n\
    \    [(equal? (string->number x) n) (equal? x n)]\n    [(equal? (string->number\
    \ x) n) (equal? (string->number n) x)]\n    [else (equal? (string->number x) (string->number\
    \ (string->number n) x))]))\n", "  (cond\n    [(equal? x n) #t]\n    [(equal?\
    \ (string-match \"^[0-9]+/[0-9]+$\" x) n) #t]\n    [else #f]))\n", "  (cond\n\
    \    [(equal? x n) #t]\n    [(equal? (string->number x) (string->number n)) #t]\n\
    \    [else (and (equal? (string->number x) (string->number n)) (equal? (string->number\
    \ n) (string->number x)))]\n  )\n)\n", "  (cond\n    [(equal? x n) #t]\n    [(equal?\
    \ (string-length x) (string-length n)) #t]\n    [(equal? (string-length x) (string-length\
    \ n)) #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [else (equal?\
    \ (string-split x \"/\") (string-split n \"/\"))]\n  )\n)\n", "  (cond\n    [(number?\
    \ x) (equal? x n)]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\" x) n) (equal?\
    \ (string-match \"^[0-9]+/[0-9]+$\" n) x)]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ n) x) (equal? (string-match \"^[0-9]+/[0-9]+$\" x) n)]\n    [else (error \"\
    Invalid fraction\")]))\n", "  (cond\n    [(number? x) (number? n)]\n    [(equal?\
    \ x n) #t]\n    [(equal? (string-split x \"/\") (string-split n \"/\")) (equal?\
    \ (string-split x \"/\") (string-split n \"/\"))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? n) #f]\n    [(equal? (first n) '#t) (equal? (first x) '#t)]\n  \
    \  [(equal? (first n) '#f) (equal? (first x) '#f)]\n    [(equal? (first n) '#t)\
    \ (equal? (first x) '#f)]\n    [else (if (equal? (first x) '#t) (simplify (first\
    \ n) (substring (second n) 1 -1) (substring (second n) 1 -1)))]\n    [else (if\
    \ (equal? (first x) '#f) (simplify (first n) (substring (second n) 1 -1) (substring\
    \ (second n) 1 -1)))]\n    [else (if (equal? (first x) '#t) (simplify (first n)\
    \ (substring (second n) 1 -1) (substring (second n) 1 -1)))]\n    [else (if (equal?\
    \ (first x) '#f) (simplify (first n) (substring (second n) 1 -1) (substring (second\
    \ n) 1 -1)))]\n    [else (if (equal? (first x) '#t) (simplify (first n) (substring\
    \ (second n) 1 -1) (substring (second n) 1 -1)))]\n    [else (if (equal? (first\
    \ x) '#f) (simplify (first n) (substring (second n) 1 -1) (substring (second n)\
    \ 1 -1)))]\n    [else (if (equal? (first x) '#t) (simplify (first n) (substring\
    \ (second n) 1 -1) (substring (second n) 1 -1)))]\n    [else (if (equal? (first\
    \ x) '#f) (simplify (first n) (substring (second n) 1 -1) (substring (second n)\
    \ 1 -1)))]\n    [else (if (equal? (first x) '#t) (simplify (first n) (substring\
    \ (second n) 1 -1) (substring (second n) 1 -1)))]\n    [else (if (equal? (first\
    \ x) '#f) (simplify (first n) (substring (second n) 1 -1) (substring (second n)\
    \ 1 -1)))]\n    [else (if (equal? (first x) '#t) (simplify (first n) (substring\
    \ (second n) 1 -1) (substring (second n) 1 -1)))]\n    [else (if (equal? (first\
    \ x) '#f) (simplify (first n) (substring (second n) 1 -1) (substring (second n)\
    \ 1 -1)))]\n    [else (if (equal? (first x) '#t) (simplify (first n) (substring\
    \ (second n) 1 -1) (substring (second n", "  (cond\n    [(equal? x n) #t]\n  \
    \  [(equal? n '#f)\n     (cond\n       [(equal? (string-length x) 1)\n       \
    \ (cond\n         [(equal? (string-length n) 1)\n          (cond\n           \
    \ [(string-equal? (substring x 0 1) \"/\")\n             (cond\n             \
    \ [(equal? (string-length n) 2)\n               (cond\n                 [(equal?\
    \ (substring n 0 1) \"/\")\n                  (cond\n                   [(equal?\
    \ (substring x 0 1) \"/\")\n                    (cond\n                     [(equal?\
    \ (substring n 0 1) \"/\")\n                      (cond\n                    \
    \   [(equal? (substring x 0 2) \"/\")\n                        (cond\n       \
    \                  [(equal? (substring n 0 2) \"/\")\n                       \
    \   (cond\n                           [(equal? (substring x 0 3) \"/\")\n    \
    \                        (cond\n                             [(equal? (substring\
    \ n 0 3) \"/\")\n                              (cond\n                       \
    \        [(equal? (substring x 0 4) \"/\")\n                                (cond\n\
    \                                 [(equal? (substring n 0 4) \"/\")\n        \
    \                          (cond\n                                   [(equal?\
    \ (substring x 0 5) \"/\")\n                                    (cond\n      \
    \                               [(equal? (substring n 0 5) \"/\")\n          \
    \                            (cond\n                                       [(equal?\
    \ (substring x 0 6) \"/\")\n                                        (cond\n  \
    \                                       [(equal? (substring n 0 6) \"/\")\n  \
    \                                        (cond\n                             \
    \              [(equal? (substring x 0 7) \"/\")\n                           \
    \                 (cond\n                                             [(equal?\
    \ (substring n 0 7) \"/\")\n                                              (cond\n\
    \                                               [(equal? (substring x 0 8) \"\
    /\")\n                                                (cond\n                \
    \                                 [(equal? (substring n 0 8) \"/\")\n        \
    \                                          (cond\n                           \
    \                        [(equal? (substring x 0 9) \"/\")\n                 \
    \                                   (cond\n                                  \
    \                   [(equal? (substring n 0 9) \"/\")\n                      \
    \                                (cond\n                                     \
    \                  [(equal? (substring x 0 10) \"/\")\n                      \
    \                                  (cond\n                                   \
    \                      [(equal? (substring n 0 10) \"/\")\n                  \
    \                                        (cond\n                             \
    \                              [(equal? (substring x 0 11) \"/\")\n          \
    \                                                  (cond\n                   \
    \                                          [(equal? (substring n 0 11) \"/\")\n\
    \                                                              (cond\n       \
    \                                                        [(equal? (substring x\
    \ 0 12) \"/\")\n                                                             \
    \   (cond\n                                                                 [(equal?\
    \ (substring n 0 12) \"/\")\n                                                \
    \                  (cond\n                                                   \
    \                [(equal? (substring x 0 13) \"/\")\n                        \
    \                                            (cond\n                         \
    \                                            [(equal? (substring ", "  (cond\n\
    \    [(number? x) (number? n)]\n    [(equal? x n) #t]\n    [(equal? x \"0\") #f]\n\
    \    [(equal? (string->number x) (string->number n)) (equal? (string->number n)\
    \ 0)]\n    [else (equal? (string->number x) (string->number (string->number n)))]\n\
    \  )\n)\n", "  (cond\n    [(equal? x n) #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ x) n) #t]\n    [else #f]))\n", "  (cond\n    [(equal? x n) #t]\n    [(equal?\
    \ (string-match \"^[0-9]+/[0-9]+$\" x) n) #t]\n    [else #f]))\n", "  (cond\n\
    \    [(and (number? x) (number? n)) (= (/ x n) 1)]\n    [(and (number? x) (number?\
    \ n)) (= (/ x n) 0)]\n    [(and (number? x) (number? n)) (= (/ x n) -1)]\n   \
    \ [(and (number? x) (number? n)) (= (/ x n) +1)]\n    [(and (number? x) (number?\
    \ n)) (= (/ x n) 0)]\n    [(and (number? x) (number? n)) (= (/ x n) -1)]\n   \
    \ [(and (number? x) (number? n)) (= (/ x n) +1)]\n    [(and (number? x) (number?\
    \ n)) (= (/ x n) 0)]\n    [(and (number? x) (number? n)) (= (/ x n) -1)]\n   \
    \ [(and (number? x) (number? n)) (= (/ x n) +1)]\n    [(and (number? x) (number?\
    \ n)) (= (/ x n) 0)]\n    [(and (number? x) (number? n)) (= (/ x n) -1)]\n   \
    \ [(and (number? x) (number? n)) (= (/ x n) +1)]\n    [(and (number? x) (number?\
    \ n)) (= (/ x n) 0)]\n    [(and (number? x) (number? n)) (= (/ x n) -1)]\n   \
    \ [(and (number? x) (number? n)) (= (/ x n) +1)]\n    [(and (number? x) (number?\
    \ n)) (= (/ x n) 0)]\n    [(and (number? x) (number? n)) (= (/ x n) -1)]\n   \
    \ [(and (number? x) (number? n)) (= (/ x n) +1)]\n    [(and (number? x) (number?\
    \ n)) (= (/ x n) 0)]\n    [(and (number? x) (number? n)) (= (/ x n) -1)]\n   \
    \ [(and (number? x) (number? n)) (= (/ x n) +1)]\n    [(and (number? x) (number?\
    \ n)) (= (/ x n) 0)]\n    [(and (number? x) (number? n)) (= (/ x n) -1)]\n   \
    \ [(and (number? x", "  (cond\n    [(or (string=? x \"0\") (string=? n \"0\"))\
    \ #f]\n    [(or (string=? x \"0\") (string=? n \"0\")) #f]\n    [(or (string=?\
    \ x \"0\") (string=? n \"0\")) #f]\n    [(or (string=? x \"0\") (string=? n \"\
    0\")) #f]\n    [(or (string=? x \"0\") (string=? n \"0\")) #f]\n    [(or (string=?\
    \ x \"0\") (string=? n \"0\")) #f]\n    [(or (string=? x \"0\") (string=? n \"\
    0\")) #f]\n    [(or (string=? x \"0\") (string=? n \"0\")) #f]\n    [(or (string=?\
    \ x \"0\") (string=? n \"0\")) #f]\n    [(or (string=? x \"0\") (string=? n \"\
    0\")) #f]\n    [(or (string=? x \"0\") (string=? n \"0\")) #f]\n    [(or (string=?\
    \ x \"0\") (string=? n \"0\")) #f]\n    [(or (string=? x \"0\") (string=? n \"\
    0\")) #f]\n    [(or (string=? x \"0\") (string=? n \"0\")) #f]\n    [(or (string=?\
    \ x \"0\") (string=? n \"0\")) #f]\n    [(or (string=? x \"0\") (string=? n \"\
    0\")) #f]\n    [(or (string=? x \"0\") (string=? n \"0\")) #f]\n    [(or (string=?\
    \ x \"0\") (string=? n \"0\")) #f]\n    [(or (string=? x \"0\") (string=? n \"\
    0\")) #f]\n    [(or (string=? x \"0\") (string=? n \"0\")) #f]\n    [(or (string=?\
    \ x \"0\") (string=? n \"0\")) #f]\n    [(or (string=? x \"0\") (string=? n \"\
    0\")) #f]\n    [(or (string=? x \"0\") (string=? n \"0\")) #f]\n    [(or (string=?\
    \ x \"0\") (string=? n \"0\")) #f]\n    [(or (string=? x \"0\") (string=? n \"\
    0\")) #f]\n    [(or (string=? x \"0", "  (cond\n    [(number? n) (equal? x n)]\n\
    \    [(equal? (string-ref x 0) \"/\") (equal? (string-ref n 0) \"/\")]\n    [else\
    \ (equal? (string-ref x 0) \"*\") (equal? (string-ref n 0) \"*\")]\n    [else\
    \ (equal? (string-ref x 0) \"-\") (equal? (string-ref n 0) \"-\")]\n    [else\
    \ (equal? (string-ref x 0) \"+\") (equal? (string-ref n 0) \"+\")]\n    [else\
    \ (equal? (string-ref x 0) \"(\") (equal? (string-ref n 0) \"(\")]\n    [else\
    \ (equal? (string-ref x 0) \")\") (equal? (string-ref n 0) \")\")]\n    [else\
    \ (equal? (string-ref x 0) \"0\") (equal? (string-ref n 0) \"0\")]\n    [else\
    \ (equal? (string-ref x 0) \"1\") (equal? (string-ref n 0) \"1\")]\n    [else\
    \ (equal? (string-ref x 0) \"2\") (equal? (string-ref n 0) \"2\")]\n    [else\
    \ (equal? (string-ref x 0) \"3\") (equal? (string-ref n 0) \"3\")]\n    [else\
    \ (equal? (string-ref x 0) \"4\") (equal? (string-ref n 0) \"4\")]\n    [else\
    \ (equal? (string-ref x 0) \"5\") (equal? (string-ref n 0) \"5\")]\n    [else\
    \ (equal? (string-ref x 0) \"6\") (equal? (string-ref n 0) \"6\")]\n    [else\
    \ (equal? (string-ref x 0) \"7\") (equal? (string-ref n 0) \"7\")]\n    [else\
    \ (equal? (string-ref x 0) \"8\") (equal? (string-ref n 0) \"8\")]\n    [else\
    \ (equal? (string-ref x 0) \"9\") (equal? (string-ref n 0) \"9\")]\n    [else\
    \ (equal? (string-ref x 0) \"10\") (equal? (string-ref n 0) \"10\")]\n    [else\
    \ (equal? (string-ref x 0) \"11\") (equal? (string-ref n 0) \"11\")]\n    [else\
    \ (equal? (string-ref x 0) \"12\") (equal? (string-ref n 0) \"12\")]\n    [else\
    \ (equal? (string-ref x 0) \"13\") (equal? (string-ref n 0) \"13\")]\n    [else\
    \ (equal? (string-ref x 0) \"14\") (equal? (string-ref n 0) \"14\")]\n    [else\
    \ (equal? (string-ref x 0) \"15\") (equal? (string-ref n 0) \"15\")]", "  (cond\n\
    \    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number?\
    \ n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and\
    \ (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal?\
    \ x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x\
    \ n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x)\
    \ (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n\
    \    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number?\
    \ n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and\
    \ (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal?\
    \ x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x\
    \ n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x)\
    \ (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n\
    \    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number?\
    \ n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and\
    \ (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal?\
    \ x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? ",
  "  (cond\n    [(number? x) (number? n) x]\n    [(equal? x n) x]\n    [(equal? (string->number\
    \ x) (string->number n)) x]\n    [(equal? (string->number x) (string->number (string->number\
    \ n)) (* x n))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n    [(number?\
    \ x) (number? n) x]\n    [(equal? x n) x]\n    [(equal? x \"0\") \"0\"]\n    [(equal?\
    \ n \"0\") \"0\"]\n    [(equal? (string->number x) (string->number n)) (/ (string->number\
    \ x) (string->number n))]\n    [(equal? (string->number n) (string->number x))\
    \ (/ (string->number n) (string->number x))]\n    [(equal? (string->number x)\
    \ (string->number n)) (/ (string->number x) (string->number n))]\n    [(equal?\
    \ (string->number n) (string->number x)) (/ (string->number n) (string->number\
    \ x))]\n    [else (error \"Invalid fraction arguments\")]))\n", "  (cond\n   \
    \ [(number? x) (number? n)]\n    [(zero? n) x]\n    [(zero? x) n]\n    [(equal?\
    \ (string-length x) (string-length n)) (simplify (string-append x (string-append\
    \ \"/\" (string-append n \"0\"))) n)]\n    [(equal? (string-length x) (string-length\
    \ n)) x]\n    [else (simplify (string-append x (string-append \"/\" (string-append\
    \ n \"0\"))) n)]\n  )\n)\n", "  (cond\n    [(number? x) (number? n) x]\n    [(zero?\
    \ n) x]\n    [(zero? (string->number (string-append x n)))\n     (cond\n     \
    \  [(string->number (string-append x n)) x]\n       [(string->number (string-append\
    \ x n)) (number->string x)]\n       [else (number->string x)]))]))\n", "  (cond\n\
    \    [(empty? n) x]\n    [(number? (first n)) x]\n    [(equal? (first n) '#t)\
    \ (simplify (first n) (rest n))]))\n", "  (cond\n    [(number? x) (equal? (simplify\
    \ (/ x n) 1) (/ x n))]\n    [(equal? (string-length x) 1) (equal? (string-length\
    \ n) 1)]\n    [else (equal? (string-length x) (string-length n))\n      (equal?\
    \ (string-ref x 0) (string-ref n 0))\n      (equal? (string-ref x 0) (string-ref\
    \ n 1))\n      (equal? (string-ref x 1) (string-ref n 0))\n      (equal? (string-ref\
    \ x 1) (string-ref n 1))]\n    [else (equal? (string-ref x 0) (string-ref n 0))\n\
    \      (equal? (string-ref x 0) (string-ref n 1))\n      (equal? (string-ref x\
    \ 1) (string-ref n 0))\n      (equal? (string-ref x 1) (string-ref n 1))\n   \
    \   (equal? (string-ref x 0) (string-ref n 2))\n      (equal? (string-ref x 1)\
    \ (string-ref n 2))]\n    [else (equal? (string-ref x 0) (string-ref n 0))\n \
    \     (equal? (string-ref x 0) (string-ref n 1))\n      (equal? (string-ref x\
    \ 1) (string-ref n 0))\n      (equal? (string-ref x 1) (string-ref n 1))\n   \
    \   (equal? (string-ref x 0) (string-ref n 2))\n      (equal? (string-ref x 1)\
    \ (string-ref n 2))\n      (equal? (string-ref x 0) (string-ref n 3))\n      (equal?\
    \ (string-ref x 1) (string-ref n 3))]\n    [else (equal? (string-ref x 0) (string-ref\
    \ n 0))\n      (equal? (string-ref x 0) (string-ref n 1))\n      (equal? (string-ref\
    \ x 1) (string-ref n 0))\n      (equal? (string-ref x 1) (string-ref n 1))\n \
    \     (equal? (string-ref x 0) (string-ref n 2))\n      (equal? (string-ref x\
    \ 1) (string-ref n 2))\n      (equal? (string-ref x 0) (string-ref n 3))\n   \
    \   (equal? (string-ref x 1) (string-ref n 3))\n      (equal? (string-ref x 0)\
    \ (string-ref n 4))\n      (equal? (string-ref x 1) (string-ref n 4))]\n    [else\
    \ (equal? (string-ref x 0) (string-ref n 0))\n      (equal? (string-ref x 0) (string-ref\
    \ n 1))\n      (equal? (string-ref x 1) (string-ref n 0))\n      (equal? (string-ref\
    \ x 1) (string-ref n 1))\n      (equal? (string-ref x 0) (string-ref n 2))\n \
    \     (equal? (string-ref x 1) (string-ref n 2))\n      (equal? (string-", " \
    \ (cond\n    [(equal? x n) #t]\n    [(equal? (string-length x) (string-length\
    \ n)) #t]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal?\
    \ (string-length x) (string-length n)) #f]\n    [else (if (equal? (string-length\
    \ x) (string-length n)) (simplify (string-append x (string-append \"/\" (string-append\
    \ n \"0\"))) n) (simplify (string-append x (string-append \"/\" (string-append\
    \ n \"0\"))) n)))]))\n", "  (cond\n    [(number? x) (number? n)]\n    [(number?\
    \ n) (number? x)]\n    [(number? n) (number? x) (number? n)]\n    [(number? x)\
    \ (number? n) (number? x)]\n    [(number? n) (number? x) (number? n) (number?\
    \ x)]\n    [(number? x) (number? n) (number? x) (number? n) (number? x)]\n   \
    \ [(number? n) (number? x) (number? n) (number? x) (number? n)]\n    [(number?\
    \ x) (number? n) (number? x) (number? n) (number? x) (number? n)]\n    [(number?\
    \ n) (number? x) (number? n) (number? x) (number? n) (number? x)]\n    [(number?\
    \ x) (number? n) (number? x) (number? n) (number? x) (number? n) (number? x)]\n\
    \    [(number? n) (number? x) (number? n) (number? x) (number? n) (number? x)\
    \ (number? n)]\n    [(number? x) (number? n) (number? x) (number? n) (number?\
    \ x) (number? n) (number? x) (number? n)]\n    [(number? n) (number? x) (number?\
    \ n) (number? x) (number? n) (number? x) (number? n) (number? x)]\n    [(number?\
    \ x) (number? n) (number? x) (number? n) (number? x) (number? n) (number? x) (number?\
    \ n) (number? x)]\n    [(number? n) (number? x) (number? n) (number? x) (number?\
    \ n) (number? x) (number? n) (number? x) (number? n)]\n    [(number? x) (number?\
    \ n) (number? x) (number? n) (number? x) (number? n) (number? x) (number? n) (number?\
    \ x) (number? n)]\n    [(number? n) (number? x) (number? n) (number? x) (number?\
    \ n) (number? x) (number? n) (number? x) (number? n) (number? x) (number? n)]\n\
    \    [(number? x) (number? n) (number? x) (number? n) (number? x) (number? n)\
    \ (number? x) (number? n) (number? x) (", "  (cond\n    [(equal? n \"\") x]\n\
    \    [(equal? n \"0\") x]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\" n) \"\
    \") x]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\" n) \"0\") x]\n    [else\
    \ (if (equal? (string-match \"^[0-9]+$\" n) \"\")\n              (if (equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" n) \"0\")\n                  (if (equal? (string-match \"\
    ^[0-9]+/[0-9]+$\" n) \"\")\n                      (if (equal? (string-match \"\
    ^[0-9]+/[0-9]+$\" n) \"0\")\n                          (if (equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" n) \"0\")\n                              (if (equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" n) \"0\")\n                                  (if (equal?\
    \ (string-match \"^[0-9]+/[0-9]+$\" n) \"0\")\n                              \
    \        (if (equal? (string-match \"^[0-9]+/[0-9]+$\" n) \"0\")\n           \
    \                               (if (equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ n) \"0\")\n                                              (if (equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" n) \"0\")\n                                            \
    \      (if (equal? (string-match \"^[0-9]+/[0-9]+$\" n) \"0\")\n             \
    \                                         (if (equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ n) \"0\")\n                                                          (if (equal?\
    \ (string-match \"^[0-9]+/[0-9]+$\" n) \"0\")\n                              \
    \                                (if (equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ n) \"0\")\n                                                                \
    \  (if (equal? (string-match \"^[0-9]+/[0-9]+$\" n) \"0\")\n                 \
    \                                                     (if (equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" n) \"0\")\n                                            \
    \                              (if (equal? (string-match \"^[0-9]+/[0-9]+$\" n)\
    \ \"0\")\n                                                                   \
    \           (if (equal? (string-match \"^[0-9]+/[0-9]+$\" n) \"0\")\n        \
    \                                                                          (if\
    \ (equal? (string-match \"^[0-9]+/[0-9]+$\" n) \"0\")\n                      \
    \                                                                (if (equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" n) \"0\")\n                                            \
    \                                              (if (equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ n) \"0\")\n                                                                \
    \                              (if (equal? (string-match \"^[0-9]+/[0-9]+$\" n)\
    \ \"0\")\n                                                                   \
    \                               (if (equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ n) \"0\")\n                                                                \
    \                                      (if (equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ n) \"0\")\n                                                                \
    \                                          (if (equal? (string-match \"^[0-9]+/[0-9]+",
  "  (cond\n    [(number? x) (number? n) x]\n    [(zero? n) x]\n    [(zero? x) (simplify\
    \ \"0\" \"0\") x]\n    [(equal? x \"0\") x]\n    [(equal? n \"0\") n]\n    [(equal?\
    \ (string->number x) (string->number n)) x]\n    [(equal? (string->number n) (string->number\
    \ x)) n]\n    [else (if (equal? (string->number x) (string->number n)) (simplify\
    \ (string->number x) (string->number n)) (simplify (string->number n) (string->number\
    \ x))]))\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work. Try it with `(simplify\
    \ \"1/5\" \"5/1\")`.\n<|/ c |>\n<| c |>\nI fixed the bug. Thanks for pointing\
    \ it out. :)\n<|/ c |>\n<| c |>\nI fixed the bug. Thanks for pointing it out.\
    \ :)\n<|/ c |>\n<| c |>\nI fixed the bug. Thanks for pointing it out. :)\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>", "  (cond\n    [(empty? n) #f]\n    [(equal?\
    \ (first n) '#t) (equal? (first x) '#t)]\n    [(equal? (first n) '#f) (equal?\
    \ (first x) '#f)]))\n", "  (cond\n    [(empty? n) #t]\n    [(equal? (first n)\
    \ '#t) (simplify x (rest n))]\n    [(equal? (first n) '#f) (simplify x (rest n))]\n\
    \    [(equal? (first n) '#\\0) #f]\n    [else (if (equal? (first n) '#\\1) (simplify\
    \ x (rest n)))]))\n", "  (cond\n    [(number? x) (number? n)]\n    [(equal? x\
    \ n) #t]\n    [(equal? x \"0\") #f]\n    [(equal? n \"0\") #f]\n    [(equal? (string-split\
    \ x \"/\") (string-split n \"/\")) (equal? (string-split x \"/\") (string-split\
    \ n \"/\"))]\n    [(equal? (string-split x \"/\") (string-split n \"/\")) (equal?\
    \ (string-split x \"/\") (string-split n \"/\"))]\n    [else (equal? (string-split\
    \ x \"/\") (string-split n \"/\"))]\n  )\n)\n", "  (cond\n    [(equal? x n) #t]\n\
    \    [(equal? n 0) #f]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\" x) true)\
    \ #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\" n) true) #f]\n    [else\
    \ (if (equal? (string-match \"^[0-9]+/[0-9]+$\" x) true)\n              (if (equal?\
    \ (string-match \"^[0-9]+/[0-9]+$\" n) true)\n                  (if (equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" x) (string-match \"^[0-9]+/[0-9]+$\" n))\n             \
    \         (if (equal? (string-match \"^[0-9]+/[0-9]+$\" n) (string-match \"^[0-9]+/[0-9]+$\"\
    \ x))\n                          (if (equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ x) (string-match \"^[0-9]+/[0-9]+$\" n))\n                              (if\
    \ (equal? (string-match \"^[0-9]+/[0-9]+$\" n) (string-match \"^[0-9]+/[0-9]+$\"\
    \ x))\n                                  (if (equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ x) (string-match \"^[0-9]+/[0-9]+$\" n))\n                                 \
    \     (if (equal? (string-match \"^[0-9]+/[0-9]+$\" n) (string-match \"^[0-9]+/[0-9]+$\"\
    \ x))\n                                          (if (equal? (string-match \"\
    ^[0-9]+/[0-9]+$\" x) (string-match \"^[0-9]+/[0-9]+$\" n))\n                 \
    \                             (if (equal? (string-match \"^[0-9]+/[0-9]+$\" n)\
    \ (string-match \"^[0-9]+/[0-9]+$\" x))\n                                    \
    \              (if (equal? (string-match \"^[0-9]+/[0-9]+$\" x) (string-match\
    \ \"^[0-9]+/[0-9]+$\" n))\n                                                  \
    \    (if (equal? (string-match \"^[0-9]+/[0-9]+$\" n) (string-match \"^[0-9]+/[0-9]+$\"\
    \ x))\n                                                          (if (equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" x) (string-match \"^[0-9]+/[0-9]+$\" n))\n             \
    \                                                 (if (equal? (string-match \"\
    ^[0-9]+/[0-9]+$\" n) (string-match \"^[0-9]+/[0-9]+$\" x))\n                 \
    \                                                 (if (equal? (string-match \"\
    ^[0-9]+/[0-9]+$\" x) (string-match \"^[0-9]+/[0-9]+$\" n))\n                 \
    \                                                     (if (equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" n) (string-match \"^[0-9]+/[0-9]+$\" x))\n             \
    \                                                             (if (equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" x) (string-match \"^[0-9]+/[0-9]+$\" n))\n             \
    \                                                                 ", "  (cond\n\
    \    [(equal? x n) #t]\n    [(equal? x '()) #f]\n    [(equal? (first x) '()) (simplify\
    \ (first n) (first x))]\n    [else (simplify (first n) (first x))]))\n", "  (cond\n\
    \    [(number? x) (number? n)]\n    [(equal? x n) #t]\n    [(equal? (string->number\
    \ x) (string->number n)) #t]\n    [else (if (equal? (string->number x) (string->number\
    \ n)) #t (simplify x (string->number n)))]))\n", "  (cond\n    [(number? x) (equal?\
    \ x n) #t]\n    [(number? (string-append x n)) (equal? (string-append x n) (string-append\
    \ \"1/\" n)) #t]\n    [(equal? (string-append x n) (string-append \"1/\")) (equal?\
    \ (string-append x n) (string-append \"1/\" n)) #t]\n    [(equal? (string-append\
    \ x n) (string-append \"1/\")) (equal? (string-append x n) (string-append \"2/\"\
    )) #f]\n    [(equal? (string-append x n) (string-append \"2/\")) (equal? (string-append\
    \ x n) (string-append \"1/\")) #f]\n    [(equal? (string-append x n) (string-append\
    \ \"2/\")) (equal? (string-append x n) (string-append \"3/\")) #f]\n    [(equal?\
    \ (string-append x n) (string-append \"3/\")) (equal? (string-append x n) (string-append\
    \ \"2/\")) #f]\n    [(equal? (string-append x n) (string-append \"3/\")) (equal?\
    \ (string-append x n) (string-append \"1/\")) #f]\n    [(equal? (string-append\
    \ x n) (string-append \"4/\")) (equal? (string-append x n) (string-append \"3/\"\
    )) #f]\n    [(equal? (string-append x n) (string-append \"4/\")) (equal? (string-append\
    \ x n) (string-append \"2/\")) #f]\n    [(equal? (string-append x n) (string-append\
    \ \"4/\")) (equal? (string-append x n) (string-append \"1/\")) #f]\n    [(equal?\
    \ (string-append x n) (string-append \"5/\")) (equal? (string-append x n) (string-append\
    \ \"4/\")) #f]\n    [(equal? (string-append x n) (string-append \"5/\")) (equal?\
    \ (string-append x n) (string-append \"3/\")) #f]\n    [(equal? (string-append\
    \ x n) (string-append \"5/\")) (equal? (string-append x n) (string-append \"2/\"\
    )) #f]\n    [(equal? (string-append x n) (string-append \"5/\")) (equal? (string-append\
    \ x n) (string-append \"1/\")) #f]\n    [(equal? (string-append x n) (string-append\
    \ \"6/\")) (equal? (string-append x n) (string-append \"5/\")) #f]\n    [(", " \
    \ (cond\n    [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n    [(equal? (string-length x) (string-length n)) (equal?\
    \ (string-length x) (string-length n))]\n    [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n    [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n    [(equal?\
    \ (string-length x) (string-length n)) (equal? (string-length x) (string-length\
    \ n))]\n    [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n    [(equal? (string-length x) (string-length n)) (equal?\
    \ (string-length x) (string-length n))]\n    [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n    [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n    [(equal?\
    \ (string-length x) (string-length n)) (equal? (string-length x) (string-length\
    \ n))]\n    [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n    [(equal? (string-length x) (string-length n)) (equal?\
    \ (string-length x) (string-length n))]\n    [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n    [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n    [(equal?\
    \ (string-length x) (string-length n)) (equal? (string-length x) (string-length\
    \ n))]\n    [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n    [(equal? (string-length x) (string-length n)) (equal?\
    \ (string-length x) (string-length n))]\n    [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n    [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n    [(equal?\
    \ (string-length x) (string-length n)) (equal? (string-length x) (string-length\
    \ n))]\n    [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n    [(equal? (string-", "  (cond\n    [(equal? x n)\
    \ #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\" x) n) #t]\n    [(equal?\
    \ (string-match \"^[0-9]+/[0-9]+$\" n) x) #f]\n    [else (simplify (substring\
    \ x 0 (string-length x)) (substring n 0 (string-length n)))]))\n", "  (cond\n\
    \    [(number? x) (equal? x n)]\n    [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-append x n) \"\")]\n    [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-append x n) \"\")]\n    [else (equal? (string-append (simplify\
    \ (substring x 0 (string-length x)) n) (substring x (string-length x)))) ]\n \
    \ )\n)\n", "  (cond\n    [(or (number? x) (number? n)) #f]\n    [(= (length x)\
    \ 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (= (length x) 1) (= (length\
    \ n) 1) (= (length x) 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (=\
    \ (length x) 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (= (length\
    \ x) 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (= (length x) 1) (=\
    \ (length n) 1) (= (length x) 1) (= (length n) 1) (= (length x) 1) (= (length\
    \ n) 1) (= (length x) 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (=\
    \ (length x) 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (= (length\
    \ x) 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (= (length x) 1) (=\
    \ (length n) 1) (= (length x) 1) (= (length n) 1) (= (length x) 1) (= (length\
    \ n) 1) (= (length x) 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (=\
    \ (length x) 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (= (length\
    \ x) 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (= (length x) 1) (=\
    \ (length n) 1) (= (length x) 1) (= (length n) 1) (= (length x) 1) (= (length\
    \ n) 1) (= (length x) 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (=\
    \ (length x) 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (= (length\
    \ x) 1) (= (length n) 1) (= (length x) 1) (= (length n) 1) (= (length x) 1) (=\
    \ (length n) 1) (= (length x) 1) (= (length n) 1) ", "  (cond\n    [(number? n)\
    \ x]\n    [(zero? n) x]\n    [(equal? (string->number x) (string->number n)) x]\n\
    \    [else (error \"Invalid fraction\")]))\n", "  (cond\n    [(and (number? x)\
    \ (number? n)) (equal? x n)]\n    [(and (number? x) (not (equal? x 0))) (equal?\
    \ x n)]\n    [(and (number? n) (not (equal? n 0))) (equal? x n)]\n    [else (and\
    \ (equal? x \"0\") (equal? n \"0\")) (equal? x n)]\n  )\n)\n", "  (cond\n    [(and\
    \ (number? x) (number? n)) (= x n)]\n    [(and (number? x) (number? n)) (= x n)]\n\
    \    [(and (number? x) (number? n)) (= x n)]\n    [(and (number? x) (number? n))\
    \ (= x n)]\n    [(and (number? x) (number? n)) (= x n)]\n    [(and (number? x)\
    \ (number? n)) (= x n)]\n    [(and (number? x) (number? n)) (= x n)]\n    [(and\
    \ (number? x) (number? n)) (= x n)]\n    [(and (number? x) (number? n)) (= x n)]\n\
    \    [(and (number? x) (number? n)) (= x n)]\n    [(and (number? x) (number? n))\
    \ (= x n)]\n    [(and (number? x) (number? n)) (= x n)]\n    [(and (number? x)\
    \ (number? n)) (= x n)]\n    [(and (number? x) (number? n)) (= x n)]\n    [(and\
    \ (number? x) (number? n)) (= x n)]\n    [(and (number? x) (number? n)) (= x n)]\n\
    \    [(and (number? x) (number? n)) (= x n)]\n    [(and (number? x) (number? n))\
    \ (= x n)]\n    [(and (number? x) (number? n)) (= x n)]\n    [(and (number? x)\
    \ (number? n)) (= x n)]\n    [(and (number? x) (number? n)) (= x n)]\n    [(and\
    \ (number? x) (number? n)) (= x n)]\n    [(and (number? x) (number? n)) (= x n)]\n\
    \    [(and (number? x) (number? n)) (= x n)]\n    [(and (number? x) (number? n))\
    \ (= x n)]\n    [(and (number? x) (number? n)) (= x n)]\n    [(and (number? x)\
    \ (number? n)) (= x n)]\n    [(and (number? x) (number? n)) (= x n)]\n    [(and\
    \ (number? x) (number? n)) (= x n)]\n    [(and (number? x) (number? n)) (= x n)]",
  "  (cond\n    [(empty? n) #f]\n    [(equal? (first n) '()) #f]\n    [(equal? (first\
    \ n) '(0)) #f]\n    [(equal? (first n) '(1)) #t]\n    [(equal? (first n) '(1/2))\
    \ #t]\n    [(equal? (first n) '(1/3)) #t]\n    [(equal? (first n) '(1/4)) #t]\n\
    \    [(equal? (first n) '(1/5)) #t]\n    [(equal? (first n) '(1/6)) #t]\n    [(equal?\
    \ (first n) '(1/7)) #t]\n    [(equal? (first n) '(1/8)) #t]\n    [(equal? (first\
    \ n) '(1/9)) #t]\n    [(equal? (first n) '(1/10)) #t]\n    [(equal? (first n)\
    \ '(1/11)  #t]\n    [(equal? (first n) '(1/12)  #t]\n    [(equal? (first n) '(1/13)\
    \  #t]\n    [(equal? (first n) '(1/14)  #t]\n    [(equal? (first n) '(1/15)  #t]\n\
    \    [(equal? (first n) '(1/16)  #t]\n    [(equal? (first n) '(1/17)  #t]\n  \
    \  [(equal? (first n) '(1/18)  #t]\n    [(equal? (first n) '(1/19)  #t]\n    [(equal?\
    \ (first n) '(1/20)  #t]\n    [(equal? (first n) '(1/21)  #t]\n    [(equal? (first\
    \ n) '(1/22)  #t]\n    [(equal? (first n) '(1/23)  #t]\n    [(equal? (first n)\
    \ '(1/24)  #t]\n    [(equal? (first n) '(1/25)  #t]\n    [(equal? (first n) '(1/26)\
    \  #t]\n    [(equal? (first n) '(1/27)  #t]\n    [(equal? (first n) '(1/28)  #t]\n\
    \    [(equal? (first n) '(1/29)  #t]\n    [(equal? (first n) '(1/30)  #t]\n  \
    \  [(equal? (first n) '(1/31)  #t]\n    [(equal? (", "  (cond\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x\
    \ n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x)\
    \ (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n\
    \    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number?\
    \ n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and\
    \ (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal?\
    \ x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x\
    \ n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x)\
    \ (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n\
    \    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number?\
    \ n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and\
    \ (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal?\
    \ x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x\
    \ n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x)\
    \ (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n\
    \    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? ", "  (cond\n\
    \    [(number? x) (number? n)]\n    [(equal? (string-length x) (string-length\
    \ n)) (equal? x n)]\n    [(equal? (string-length x) (string-length n)) (equal?\
    \ x n)]\n    [else (equal? (string-length x) (string-length n)) (equal? x n)]\n\
    \    [else (equal? (string-length x) (string-length n)) (equal? x n)]\n    [else\
    \ (equal? (string-length x) (string-length n)) (equal? x n)]\n    [else (equal?\
    \ (string-length x) (string-length n)) (equal? x n)]\n    [else (equal? (string-length\
    \ x) (string-length n)) (equal? x n)]\n    [else (equal? (string-length x) (string-length\
    \ n)) (equal? x n)]\n    [else (equal? (string-length x) (string-length n)) (equal?\
    \ x n)]\n    [else (equal? (string-length x) (string-length n)) (equal? x n)]\n\
    \    [else (equal? (string-length x) (string-length n)) (equal? x n)]\n    [else\
    \ (equal? (string-length x) (string-length n)) (equal? x n)]\n    [else (equal?\
    \ (string-length x) (string-length n)) (equal? x n)]\n    [else (equal? (string-length\
    \ x) (string-length n)) (equal? x n)]\n    [else (equal? (string-length x) (string-length\
    \ n)) (equal? x n)]\n    [else (equal? (string-length x) (string-length n)) (equal?\
    \ x n)]\n    [else (equal? (string-length x) (string-length n)) (equal? x n)]\n\
    \    [else (equal? (string-length x) (string-length n)) (equal? x n)]\n    [else\
    \ (equal? (string-length x) (string-length n)) (equal? x n)]\n    [else (equal?\
    \ (string-length x) (string-length n)) (equal? x n)]\n    [else (equal? (string-length\
    \ x) (string-length n)) (equal? x n)]\n    [else (equal? (string-length x) (string-length\
    \ n)) (equal? x n)]\n    [else (equal? (string-length x) (string-length n)) (equal?\
    \ x n)]\n    [else (equal? (string-length x) (string-length n)) (equal? x n)]\n\
    \    [else (equal? (string-length x) (string-length n)) (equal? x n)]\n", "  (cond\n\
    \    [(number? x) (number? n)]\n    [(zero? n) x]\n    [(zero? x) n]\n    [(equal?\
    \ (string-length x) (string-length n)) (simplify (string-append x n) (string-append\
    \ n x))]\n    [else (simplify (string-append x n) (string-append n x))]))\n",
  "  (cond\n    [(equal? x n) #t]\n    [(equal? x '()) #f]\n    [(equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" x) n) #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ '()) '()) #f]\n    [else (equal? (string-match \"^[0-9]+$\" x) n) #t]\n    [else\
    \ (equal? (string-match \"^[0-9]+$\" '()) '()) #f]\n    [else (equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" x) n) #t]\n    [else (equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ '()) '()) #f]\n    [else (equal? (string-match \"^[0-9]+[0-9]+$\" x) n) #t]\n\
    \    [else (equal? (string-match \"^[0-9]+[0-9]+$\" '()) '()) #f]\n    [else (equal?\
    \ (string-match \"^[0-9]+[0-9]+/[0-9]+$\" x) n) #t]\n    [else (equal? (string-match\
    \ \"^[0-9]+[0-9]+/[0-9]+$\" '()) '()) #f]\n    [else (equal? (string-match \"\
    ^[0-9]+[0-9]+[0-9]+$\" x) n) #t]\n    [else (equal? (string-match \"^[0-9]+[0-9]+[0-9]+$\"\
    \ '()) '()) #f]\n    [else (equal? (string-match \"^[0-9]+[0-9]+[0-9]+/[0-9]+$\"\
    \ x) n) #t]\n    [else (equal? (string-match \"^[0-9]+[0-9]+[0-9]+/[0-9]+$\" '())\
    \ '()) #f]\n    [else (equal? (string-match \"^[0-9]+[0-9]+[0-9]+[0-9]+$\" x)\
    \ n) #t]\n    [else (equal? (string-match \"^[0-9]+[0-9]+[0-9]+[0-9]+$\" '())\
    \ '()) #f]\n    [else (equal? (string-match \"^[0-9]+[0-9]+[0-9]+[0-9]+/[0-9]+$\"\
    \ x) n) #t]\n    [else (equal? (string-match \"^[0-9]+[0-9]+[0-9]+[0-9]+/[0-9]+$\"\
    \ '()) '()) #f]\n    [else (equal? (string-match \"^[0-9]+[0-9]+[0-9]+[0-9]+[0-9]+$\"\
    \ x) n) #t]\n    [else (equal? (string-match \"^[0-9]+[0-9]+[0-9]+[0-9]+[0-9]+$\"\
    \ '()) '()) #f]\n    [else (equal? (string-match \"^[0-9]+[0-9]+[0-9]+[0-9]+[0-9]+/[0-9]+$\"\
    \ x) n) #t]\n    [else (equal? (string-match \"^[0-9]+[0-9]+[0-9]+[0-9]+[0-9]+/[0-9]+$\"\
    \ '()) '()) #", "  (cond\n    [(equal? x n) #t]\n    [(equal? x '0f) #f]\n   \
    \ [(equal? (string-match \"^[0-9]+/[0-9]+$\" x) n) #t]\n    [else #f]))\n", " \
    \ (cond\n    [(number? x) (number? n) x]\n    [(number? n) (number? x) n]\n  \
    \  [(number? n) (number? x) n]\n    [(number? x) (number? n) x]\n    [(number?\
    \ n) (number? x) n]\n    [(number? x) (number? n) x]\n    [(number? n) (number?\
    \ x) n]\n    [(number? x) (number? n) x]\n    [(number? n) (number? x) n]\n  \
    \  [(number? x) (number? n) x]\n    [(number? n) (number? x) n]\n    [(number?\
    \ x) (number? n) x]\n    [(number? n) (number? x) n]\n    [(number? x) (number?\
    \ n) x]\n    [(number? n) (number? x) n]\n    [(number? x) (number? n) x]\n  \
    \  [(number? n) (number? x) n]\n    [(number? x) (number? n) x]\n    [(number?\
    \ n) (number? x) n]\n    [(number? x) (number? n) x]\n    [(number? n) (number?\
    \ x) n]\n    [(number? x) (number? n) x]\n    [(number? n) (number? x) n]\n  \
    \  [(number? x) (number? n) x]\n    [(number? n) (number? x) n]\n    [(number?\
    \ x) (number? n) x]\n    [(number? n) (number? x) n]\n    [(number? x) (number?\
    \ n) x]\n    [(number? n) (number? x) n]\n    [(number? x) (number? n) x]\n  \
    \  [(number? n) (number? x) n]\n    [(number? x) (number? n) x]\n    [(number?\
    \ n) (number? x) n]\n    [(number? x) (number? n) x]\n    [(number? n) (number?\
    \ x) n]\n    [(number? x) (number? n) x]\n    [(number? n) (number? x) n]\n  \
    \  [(number? x) (number? n) x]\n    [(number? n) (number? x) n]\n    [(number?\
    \ x) (number? n) x]\n    [(number? n) (number? x) n]\n    [(number? x) (number?\
    \ n) x]\n    [(number? n) (number? x) n]\n    [(number? x) (number? n) x]\n  \
    \  [(number", "  (cond\n    [(number? n) #t]\n    [(zero? n) #f]\n    [(equal?\
    \ (string-ref x 0) \"/\") (simplify (string-ref x 1) (string-ref n 1))]\n    [else\
    \ (simplify (string-append x \"/\") (string-append n \"/\"))]))\n", "  (cond\n\
    \    [(number? x) (number? n)]\n    [(equal? (string-ref x 0) \"/\") (equal? (string-ref\
    \ n 0) \"/\")]\n    [(equal? (string-ref x 0) \"-\") (equal? (string-ref n 0)\
    \ \"-\")]\n    [(equal? (string-ref x 0) \"+\") (equal? (string-ref n 0) \"+\"\
    )]\n    [(equal? (string-ref x 0) \"*\") (equal? (string-ref n 0) \"*\")]\n  \
    \  [else (error \"Invalid fraction\")]))\n", "  (cond\n    [(or (char= x \"/\"\
    ) (char= x \"-\")) (simplify (substring x 0 (string-length x)) n)]\n    [(char=\
    \ x \"0\") (if (= (length n) 1) #t #f)]\n    [else (if (= (length n) 0) #t #f)]\n\
    \    [else (if (= (length n) 1) (= (string-length x) (string-length n)) #t)]\n\
    \    [else (if (= (length n) 0) (= (string-length x) (string-length n)) #t)]\n\
    \    [else (if (= (length n) 1) (= (string-length x) (string-length n)) #t)]\n\
    \    [else (if (= (length n) 0) (= (string-length x) (string-length n)) #t)]\n\
    \    [else (if (= (length n) 1) (= (string-length x) (string-length n)) #t)]\n\
    \    [else (if (= (length n) 0) (= (string-length x) (string-length n)) #t)]\n\
    \    [else (if (= (length n) 1) (= (string-length x) (string-length n)) #t)]\n\
    \    [else (if (= (length n) 0) (= (string-length x) (string-length n)) #t)]\n\
    \    [else (if (= (length n) 1) (= (string-length x) (string-length n)) #t)]\n\
    \    [else (if (= (length n) 0) (= (string-length x) (string-length n)) #t)]\n\
    \    [else (if (= (length n) 1) (= (string-length x) (string-length n)) #t)]\n\
    \    [else (if (= (length n) 0) (= (string-length x) (string-length n)) #t)]\n\
    \    [else (if (= (length n) 1) (= (string-length x) (string-length n)) #t)]\n\
    \    [else (if (= (length n) 0) (= (string-length x) (string-length n)) #t)]\n\
    \    [else (if (= (length n) 1) (= (string-length x) (string-length n)) #t)]\n\
    \    [else (if (= (length n) 0) (= (string-length x) (string-length n)) #t)]\n\
    \    [else (if (= (length n) 1) (= (string-length x) (string-length n)) #t)]\n\
    \    [else (if (= (length n) 0) (= (string-length x) (string-length n)) #", " \
    \ (cond\n    [(equal? (string-length x) 0)\n     (equal? (string-length n) 0)]\n\
    \    [(equal? (string-length x) (string-length n))\n     (equal? (string-length\
    \ n) 0)]\n    [(equal? (string-length x) (string-length n))\n     (equal? (string-length\
    \ n) (string-length x))]\n    [(equal? (string-length x) (string-length n))\n\
    \     (equal? (string-length n) (string-length x))]\n    [(equal? (string-length\
    \ x) (string-length n))\n     (equal? (string-length n) (string-length x))]\n\
    \    [(equal? (string-length x) (string-length n))\n     (equal? (string-length\
    \ n) (string-length x))]\n    [(equal? (string-length x) (string-length n))\n\
    \     (equal? (string-length n) (string-length x))]\n    [(equal? (string-length\
    \ x) (string-length n))\n     (equal? (string-length n) (string-length x))]\n\
    \    [(equal? (string-length x) (string-length n))\n     (equal? (string-length\
    \ n) (string-length x))]\n    [(equal? (string-length x) (string-length n))\n\
    \     (equal? (string-length n) (string-length x))]\n    [(equal? (string-length\
    \ x) (string-length n))\n     (equal? (string-length n) (string-length x))]\n\
    \    [(equal? (string-length x) (string-length n))\n     (equal? (string-length\
    \ n) (string-length x))]\n    [(equal? (string-length x) (string-length n))\n\
    \     (equal? (string-length n) (string-length x))]\n    [(equal? (string-length\
    \ x) (string-length n))\n     (equal? (string-length n) (string-length x))]\n\
    \    [(equal? (string-length x) (string-length n))\n     (equal? (string-length\
    \ n) (string-length x))]\n    [(equal? (string-length x) (string-length n))\n\
    \     (equal? (string-length n) (string-length x))]\n    [(equal? (string-length\
    \ x) (string-length n))\n     (equal? (string-length n) (string-length x))]\n\
    \    [(equal? (string-length x) (string-length n))\n     (equal? (string-length\
    \ n) (string-length x))]\n    [(equal? (string-length x) (string-length n))\n\
    \     (equal? (string-length n) (string-length x))]\n    [(equal? (string-length\
    \ x) (string-length n))\n     (equal? (string-length n) (string-length x))]\n\
    \    [(equal? (string-length x) (string-length n))\n     (equal? (string-length\
    \ n", "  (cond\n    [(number? x) (number? n) x]\n    [(zero? n) x]\n    [(zero?\
    \ (string->number x))\n     (cond\n       [(number? (string->number n)) x]\n \
    \      [(zero? (string->number n)) x]\n       [else (error \"Invalid fraction\"\
    )])]\n    [else (error \"Invalid fraction\")]))\n", "  (cond\n    [(number? x)\
    \ (number? n) x]\n    [(equal? x n) #t]\n    [(equal? (string->number x) (string->number\
    \ n)) x]\n    [else (if (equal? (string->number x) (string->number n))\n     \
    \         (if (equal? (string->number n) (string->number x))\n               \
    \   (if (equal? (string->number x) (quotient (string->number n) (string->number\
    \ x)))\n                      (if (equal? (quotient (string->number n) (string->number\
    \ x)) (string->number x))\n                          (if (equal? (quotient (string->number\
    \ n) (string->number x)) (string->number n))\n                              (if\
    \ (equal? (quotient (string->number n) (string->number x)) (string->number x))\n\
    \                                  (if (equal? (quotient (string->number n) (string->number\
    \ x)) (string->number n))\n                                      (if (equal? (quotient\
    \ (string->number n) (string->number x)) (string->number x))\n               \
    \                           (if (equal? (quotient (string->number n) (string->number\
    \ x)) (string->number n))\n                                              (if (equal?\
    \ (quotient (string->number n) (string->number x)) (string->number x))\n     \
    \                                             (if (equal? (quotient (string->number\
    \ n) (string->number x)) (string->number n))\n                               \
    \                       (if (equal? (quotient (string->number n) (string->number\
    \ x)) (string->number x))\n                                                  \
    \        (if (equal? (quotient (string->number n) (string->number x)) (string->number\
    \ n))\n                                                              (if (equal?\
    \ (quotient (string->number n) (string->number x)) (string->number x))\n     \
    \                                                             (if (equal? (quotient\
    \ (string->number n) (string->number x)) (string->number x))\n               \
    \                                                       (if (equal? (quotient\
    \ (string->number n) (string->number x)) (string->number x))\n               \
    \                                                           (if (equal? (quotient\
    \ (string->number n) (string->number x)) (string->number x))\n               \
    \                                                               (if (equal? (quotient\
    \ (string->number n) (string->number x)) (string->number x))\n               \
    \                                                                   (if (equal?\
    \ (quotient (string->number n) (string->number x)) (string->number x))\n     \
    \                                                                            \
    \     (if (equal? (quotient (string->number n) (string->number x)) (string->number\
    \ x))\n                                                                      \
    \                    (if (equal? (quotient (string->number n) (string->number\
    \ x)) (string->number x))\n                                                  \
    \                                            (if (equal? (quotient (string->number\
    \ n) (string->number x)) ", "  (cond\n    [(number? x) (number? n)]\n    [(equal?\
    \ x n) #t]\n    [(equal? (string-ref x 0) '#) (equal? (string-ref n 0) '#)]\n\
    \    [(equal? (string-ref x 0) '#t) (equal? (string-ref n 0) '#t)]\n    [else\
    \ (equal? (string-ref x 0) '#f)]))\n", "  (cond\n    [(number? x) (number? n)]\n\
    \    [(zero? n) #f]\n    [(zero? x) #f]\n    [(equal? (length x) 1) (equal? (length\
    \ n) 1)]\n    [else (cond [(equal? (length x) 1) (equal? (length n) 1)]\n    \
    \           [(equal? (length x) 2) (equal? (length n) 2)]\n               [(equal?\
    \ (length x) 3) (equal? (length n) 3)]\n               [(equal? (length x) 4)\
    \ (equal? (length n) 4)]\n               [(equal? (length x) 5) (equal? (length\
    \ n) 5)]\n               [(equal? (length x) 6) (equal? (length n) 6)]\n     \
    \          [(equal? (length x) 7) (equal? (length n) 7)]\n               [(equal?\
    \ (length x) 8) (equal? (length n) 8)]\n               [(equal? (length x) 9)\
    \ (equal? (length n) 9)]\n               [(equal? (length x) 10) (equal? (length\
    \ n) 10)])]))\n", "  (cond\n    [(number? x) (equal? x n)]\n    [(equal? x \"\
    0\") (equal? n \"0\")]\n    [(equal? x \"1/0\") (equal? n \"1/0\")]\n    [(equal?\
    \ x \"-1/0\") (equal? n \"-1/0\")]\n    [(equal? x \"1/-1\") (equal? n \"1/-1\"\
    )]\n    [(equal? x \"-1/-1\") (equal? n \"-1/-1\")]\n    [(equal? x \"1/1\") (equal?\
    \ n \"1/1\")]\n    [(equal? x \"-1/1\") (equal? n \"-1/1\")]\n    [(equal? x \"\
    -1/-1\") (equal? n \"-1/-1\")]\n    [(equal? x \"-1/1\") (equal? n \"-1/1\")]\n\
    \    [(equal? x \"-1/-1\") (equal? n \"-1/-1\")]\n    [(equal? x \"-1/1\") (equal?\
    \ n \"-1/1\")]\n    [(equal? x \"-1/-1\") (equal? n \"-1/-1\")]\n    [(equal?\
    \ x \"-1/1\") (equal? n \"-1/1\")]\n    [(equal? x \"-1/-1\") (equal? n \"-1/-1\"\
    )]\n    [(equal? x \"-1/1\") (equal? n \"-1/1\")]\n    [(equal? x \"-1/-1\") (equal?\
    \ n \"-1/-1\")]\n    [(equal? x \"-1/1\") (equal? n \"-1/1\")]\n    [(equal? x\
    \ \"-1/-1\") (equal? n \"-1/-1\")]\n    [(equal? x \"-1/1\") (equal? n \"-1/1\"\
    )]\n    [(equal? x \"-1/-1\") (equal? n \"-1/-1\")]\n    [(equal? x \"-1/1\")\
    \ (equal? n \"-1/1\")]\n    [(equal? x \"-1/-1\") (equal? n \"-1/-1\")]\n    [(equal?\
    \ x \"-1/1\") (equal? n \"-1/1\")]\n    [(equal? x \"-1/-1\") (equal? n \"-1/-1\"\
    )]\n    [(equal? x \"-1/1\") (equal? n \"-1/1\")]\n    [(equal? x \"-1", "  (cond\n\
    \    [(number? x) (number? n)]\n    [(zero? n) false]\n    [(zero? x) false]\n\
    \    [else (= (number? (string-append x n)) (number? (string-append \"0\" (number->string\
    \ n))))]))\n", "  (cond\n    [(and (number? x) (number? n)) (= x n)]\n    [(and\
    \ (number? x) (not (zero? x))) (= x n)]\n    [(and (number? n) (not (zero? n)))\
    \ (= n x)]\n    [(and (number? n) (zero? n)) (= x n)]\n    [else (error \"Invalid\
    \ fraction\")]))\n", "  (cond\n    [(number? x) (number? n)]\n    [(number? n)\
    \ (number? x)]\n    [(zero? n) (zero? x)]\n    [(zero? x) (zero? n)]\n    [(equal?\
    \ (string->number x) (string->number n)) (equal? (string->number n) (string->number\
    \ x))]\n    [(equal? (string->number n) (string->number x)) (equal? (string->number\
    \ x) (string->number n))]\n    [else (error \"Invalid fraction\"))]))\n", "  (cond\n\
    \    [(number? n) (equal? n 0)]\n    [(equal? (string-length x) (string-length\
    \ n)) (equal? x n)]\n    [(equal? (string-length x) (string-length n)) (equal?\
    \ x n)]\n    [(equal? (string-length x) (string-length n)) (equal? x n)]\n   \
    \ [else (equal? (string-length x) (string-length n)) (equal? (string-split x \"\
    /\") (string-split n \"/\"))]\n  ))\n", "  (cond\n    [(equal? x n) #t]\n    [(equal?\
    \ n \"0\") #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal?\
    \ (string-length x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length\
    \ n)) #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [else (equal?\
    \ (string-length x) (string-length n)) #f]))\n", "  (cond\n    [(equal? x n) #t]\n\
    \    [(equal? n 0) #f]\n    [(equal? (string-length x) (string-length n)) #f]\n\
    \    [(equal? (string-length x) (string-length n)) (equal? (string-ref x 0) (string-ref\
    \ n 0))]\n    [else (equal? (string-ref x 0) (string-ref n 0))]\n    [else (equal?\
    \ (string-ref x 0) (string-ref n 0))]\n    [else (equal? (string-ref x 0) (string-ref\
    \ n 0))]\n    [else (equal? (string-ref x 0) (string-ref n 0))]\n    [else (equal?\
    \ (string-ref x 0) (string-ref n 0))]\n    [else (equal? (string-ref x 0) (string-ref\
    \ n 0))]\n    [else (equal? (string-ref x 0) (string-ref n 0))]\n    [else (equal?\
    \ (string-ref x 0) (string-ref n 0))]\n    [else (equal? (string-ref x 0) (string-ref\
    \ n 0))]\n    [else (equal? (string-ref x 0) (string-ref n 0))]\n    [else (equal?\
    \ (string-ref x 0) (string-ref n 0))]\n    [else (equal? (string-ref x 0) (string-ref\
    \ n 0))]\n    [else (equal? (string-ref x 0) (string-ref n 0))]\n    [else (equal?\
    \ (string-ref x 0) (string-ref n 0))]\n    [else (equal? (string-ref x 0) (string-ref\
    \ n 0))]\n    [else (equal? (string-ref x 0) (string-ref n 0))]\n    [else (equal?\
    \ (string-ref x 0) (string-ref n 0))]\n    [else (equal? (string-ref x 0) (string-ref\
    \ n 0))]\n    [else (equal? (string-ref x 0) (string-ref n 0))]\n    [else (equal?\
    \ (string-ref x 0) (string-ref n 0))]\n    [else (equal? (string-ref x 0) (string-ref\
    \ n 0))]\n    [else (equal? (string-ref x 0) (string-ref n 0))]\n    [else (equal?\
    \ (string-ref x 0) (string-ref n 0))]\n    [else (equal? (string-ref x 0) (string-ref\
    \ n 0))]\n    [else (equal? (string-ref x 0) (string-ref n 0))]\n    [else (equal?\
    \ (string-ref x 0) (string-ref n 0))]\n    [else (equal? (string-ref x 0) (string-ref\
    \ n 0))]\n    [else (equal? (string-ref x 0) (string-ref n 0))]\n    [", "  (cond\n\
    \    [(and (number? x) (number? n)) (= (/ x n) 1)]\n    [(and (number? x) (number?\
    \ n)) (= (/ x n) 0)]\n    [(and (number? x) (number? n)) (= (/ x n) -1)]\n   \
    \ [(and (number? x) (number? n)) (= (/ x n) -2)]\n    [(and (number? x) (number?\
    \ n)) (= (/ x n) -3)]\n    [(and (number? x) (number? n)) (= (/ x n) -4)]\n  \
    \  [(and (number? x) (number? n)) (= (/ x n) -5)]\n    [(and (number? x) (number?\
    \ n)) (= (/ x n) -6)]\n    [(and (number? x) (number? n)) (= (/ x n) -7)]\n  \
    \  [(and (number? x) (number? n)) (= (/ x n) -8)]\n    [(and (number? x) (number?\
    \ n)) (= (/ x n) -9)]\n    [(and (number? x) (number? n)) (= (/ x n) -10)]\n \
    \   [(and (number? x) (number? n)) (= (/ x n) -11)]\n    [(and (number? x) (number?\
    \ n)) (= (/ x n) -12)]\n    [(and (number? x) (number? n)) (= (/ x n) -13)]\n\
    \    [(and (number? x) (number? n)) (= (/ x n) -14)]\n    [(and (number? x) (number?\
    \ n)) (= (/ x n) -15)]\n    [(and (number? x) (number? n)) (= (/ x n) -16)]\n\
    \    [(and (number? x) (number? n)) (= (/ x n) -17)]\n    [(and (number? x) (number?\
    \ n)) (= (/ x n) -18)]\n    [(and (number? x) (number? n)) (= (/ x n) -19)]\n\
    \    [(and (number? x) (number? n)) (= (/ x n) -20)]\n    [(and (number? x) (number?\
    \ n)) (= (/ x n) -21)]\n    [(and (number? x) (number? n)) (= (/ x n) -22)]\n\
    \    [(and (number? ", "  (cond\n    [(number? x) (number? n) x]\n    [(number?\
    \ n) (number? x) n]\n    [(equal? x n) (number? x) x]\n    [(equal? n x) (number?\
    \ n) n]\n    [(equal? x \"0\") (number? x) x]\n    [(equal? n \"0\") (number?\
    \ n) n]\n    [(equal? (string->number x) (string->number n)) (number? x) x]\n\
    \    [(equal? (string->number n) (string->number x)) (number? n) n]\n    [(equal?\
    \ (string->number x) (string->number n)) (number? x) x]\n    [(equal? (string->number\
    \ n) (string->number x)) (number? n) n]\n    [(equal? (string->number x) (string->number\
    \ n)) (number? x) x]\n    [(equal? (string->number n) (string->number x)) (number?\
    \ n) n]\n    [(equal? (string->number x) (string->number n)) (number? x) x]\n\
    \    [(equal? (string->number n) (string->number x)) (number? n) n]\n    [(equal?\
    \ (string->number x) (string->number n)) (number? x) x]\n    [(equal? (string->number\
    \ n) (string->number x)) (number? n) n]\n    [(equal? (string->number x) (string->number\
    \ n)) (number? x) x]\n    [(equal? (string->number n) (string->number x)) (number?\
    \ n) n]\n    [(equal? (string->number x) (string->number n)) (number? x) x]\n\
    \    [(equal? (string->number n) (string->number x)) (number? n) n]\n    [(equal?\
    \ (string->number x) (string->number n)) (number? x) x]\n    [(equal? (string->number\
    \ n) (string->number x)) (number? n) n]\n    [(equal? (string->number x) (string->number\
    \ n)) (number? x) x]\n    [(equal? (string->number n) (string->number x)) (number?\
    \ n) n]\n    [(equal? (string->number x) (string->number n)) (number? x) x]\n\
    \    [(equal? (string->number n) (string->number x)) (number? n) n]\n    [(equal?\
    \ (string->number x) (string->number n)) (number? x) x]\n    [(equal? (string->number\
    \ n) (string->number x", "  (cond\n    [(number? x) (number? n) x]\n    [(equal?\
    \ x n) #t]\n    [(equal? (number? (substring x 0 2)) n) #t]\n    [(equal? (number?\
    \ (substring x 0 1)) n) #f]\n    [(equal? (number? (substring x 0 0)) n) #f]\n\
    \    [else (cond [(equal? (number? (substring x 0 2)) n) (cond [(equal? (number?\
    \ (substring x 0 1)) n) (cond [(equal? (number? (substring x 0 0)) n) (cond [(equal?\
    \ (number? (substring x 0 1)) n) (cond [(equal? (number? (substring x 0 0)) n)\
    \ (cond [(equal? (number? (substring x 0 1)) n) (cond [(equal? (number? (substring\
    \ x 0 0)) n) (cond [(equal? (number? (substring x 0 1)) n) (cond [(equal? (number?\
    \ (substring x 0 0)) n) (cond [(equal? (number? (substring x 0 1)) n) (cond [(equal?\
    \ (number? (substring x 0 0)) n) (cond [(equal? (number? (substring x 0 1)) n)\
    \ (cond [(equal? (number? (substring x 0 0)) n) (cond [(equal? (number? (substring\
    \ x 0 1)) n) (cond [(equal? (number? (substring x 0 0)) n) (cond [(equal? (number?\
    \ (substring x 0 1)) n) (cond [(equal? (number? (substring x 0 0)) n) (cond [(equal?\
    \ (number? (substring x 0 1)) n) (cond [(equal? (number? (substring x 0 0)) n)\
    \ (cond [(equal? (number? (substring x 0 1)) n) (cond [(equal? (number? (substring\
    \ x 0 0)) n) (cond [(equal? (number? (substring x 0 1)) n) (cond [(equal? (number?\
    \ (substring x 0 0)) n) (cond [(equal? (number? (substring x 0 1)) n) (cond [(equal?\
    \ (number? (substring x 0 0)) n) (cond [(equal? (number? (substring x 0 1)) n)\
    \ (cond [(equal? (number? (substring x 0 0)) n) (cond [(equal? (number? (substring\
    \ x 0 1)) n) (cond [(equal? (number? (substring x 0 0)) n) (cond [(equal? (number?\
    \ (substring x 0 1)) n) (cond [(equal? (number? (substring x 0 0)) n) (", "  (cond\n\
    \    [(empty? n) #f]\n    [(equal? (first n) '()) #f]\n    [(equal? (first n)\
    \ '(0)) #f]\n    [(equal? (first n) '(1)) #f]\n    [(equal? (first n) '(1/2))\
    \ #t]\n    [(equal? (first n) '(1/3)) (simplify (first n) (sub1 (first n)))]\n\
    \    [(equal? (first n) '(1/4)) (simplify (first n) (sub1 (first n)))]\n    [(equal?\
    \ (first n) '(1/5)) (simplify (first n) (sub1 (first n)))]\n    [(equal? (first\
    \ n) '(1/6)) (simplify (first n) (sub1 (first n)))]\n    [(equal? (first n) '(1/7))\
    \ (simplify (first n) (sub1 (first n)))]\n    [(equal? (first n) '(1/8)) (simplify\
    \ (first n) (sub1 (first n)))]\n    [(equal? (first n) '(1/9)) (simplify (first\
    \ n) (sub1 (first n)))]\n    [(equal? (first n) '(1/10)) (simplify (first n) (sub1\
    \ (first n)))]\n    [(equal? (first n) '(1/11)) (simplify (first n) (sub1 (first\
    \ n)))]\n    [(equal? (first n) '(1/12)) (simplify (first n) (sub1 (first n)))]\n\
    \    [(equal? (first n) '(1/13)) (simplify (first n) (sub1 (first n)))]\n    [(equal?\
    \ (first n) '(1/14)) (simplify (first n) (sub1 (first n)))]\n    [(equal? (first\
    \ n) '(1/15)) (simplify (first n) (sub1 (first n)))]\n    [(equal? (first n) '(1/16))\
    \ (simplify (first n) (sub1 (first n)))]\n    [(equal? (first n) '(1/17)) (simplify\
    \ (first n) (sub1 (first n)))]\n    [(equal? (first n) '(1/18)) (simplify (first\
    \ n) (sub1 (first n)))]\n    [(equal? (first n) '(1/19)) (simplify (first n) (sub1\
    \ (first n)))]\n    [(equal? (first n) '(1/20)) (simplify (first n) (sub1 (first ",
  "  (cond\n    [(number? x) (number? n) x]\n    [(equal? (string-ref x 0) \"/\")\
    \ (number? (string-ref n 0))]\n    [(equal? (string-ref x 0) \"-\") (number? (string-ref\
    \ n 0))]\n    [(equal? (string-ref x 0) \"+\") (number? (string-ref n 0))]\n \
    \   [else (number? (string-ref x 0))]\n    [else (number? (string-ref n 0))]\n\
    \    [else (number? (string-ref x 0))]\n    [else (number? (string-ref n 0))]\n\
    \    [else (number? (string-ref x 0))]\n    [else (number? (string-ref n 0))]\n\
    \    [else (number? (string-ref x 0))]\n    [else (number? (string-ref n 0))]\n\
    \    [else (number? (string-ref x 0))]\n    [else (number? (string-ref n 0))]\n\
    \    [else (number? (string-ref x 0))]\n    [else (number? (string-ref n 0))]\n\
    \    [else (number? (string-ref x 0))]\n    [else (number? (string-ref n 0))]\n\
    \    [else (number? (string-ref x 0))]\n    [else (number? (string-ref n 0))]\n\
    \    [else (number? (string-ref x 0))]\n    [else (number? (string-ref n 0))]\n\
    \    [else (number? (string-ref x 0))]\n    [else (number? (string-ref n 0))]\n\
    \    [else (number? (string-ref x 0))]\n    [else (number? (string-ref n 0))]\n\
    \    [else (number? (string-ref x 0))]\n    [else (number? (string-ref n 0))]\n\
    \    [else (number? (string-ref x 0))]\n    [else (number? (string-ref n 0))]\n\
    \    [else (number? (string-ref x 0))]\n    [else (number? (string-ref n 0))]\n\
    \    [else (number? (string-ref x 0))]\n    [else (number? (string-ref n 0))]\n\
    \    [else (number? (string-ref x 0))]\n    [else (number? (string-ref n 0))]\n\
    \    [else (number? (string-ref x 0))]\n    [else (number? (string-ref n 0))]\n\
    \    [else (number? (string-ref x 0))]\n    [else (number? (string-ref n 0))]\n\
    \    [else (number? (string-ref x 0))]\n    [else (number? (string-ref n 0))]\n\
    \    [else (number? (string-ref x 0))]\n    [else (number? (string-ref n 0))]",
  "  (cond\n    [(equal? x n) #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ x) n) #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\" n) x) #f]\n    [else\
    \ (simplify (substring x 0 (string-length x)) (substring n 0 (string-length n)))]))\n",
  "  (cond\n    [(equal? x n) #t]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(string-ref x 0) (string-ref n 0)]\n    [(string-ref x 0) (string-ref\
    \ n 1)\n     (string-ref x 1) (string-ref n 0)]\n    [(string-ref x 0) (string-ref\
    \ n 1)\n     (string-ref x 1) (string-ref n 1)\n     (string-ref x 2) (string-ref\
    \ n 0)]\n    [(string-ref x 0) (string-ref n 1)\n     (string-ref x 1) (string-ref\
    \ n 1)\n     (string-ref x 2) (string-ref n 1)\n     (string-ref x 3) (string-ref\
    \ n 0)]\n    [(string-ref x 0) (string-ref n 1)\n     (string-ref x 1) (string-ref\
    \ n 1)\n     (string-ref x 2) (string-ref n 1)\n     (string-ref x 3) (string-ref\
    \ n 1)\n     (string-ref x 4) (string-ref n 0)]\n    [(string-ref x 0) (string-ref\
    \ n 1)\n     (string-ref x 1) (string-ref n 1)\n     (string-ref x 2) (string-ref\
    \ n 1)\n     (string-ref x 3) (string-ref n 1)\n     (string-ref x 4) (string-ref\
    \ n 1)\n     (string-ref x 5) (string-ref n 0)]\n    [(string-ref x 0) (string-ref\
    \ n 1)\n     (string-ref x 1) (string-ref n 1)\n     (string-ref x 2) (string-ref\
    \ n 1)\n     (string-ref x 3) (string-ref n 1)\n     (string-ref x 4) (string-ref\
    \ n 1)\n     (string-ref x 5) (string-ref n 1)\n     (string-ref x 6) (string-ref\
    \ n 0)]\n    [(string-ref x 0) (string-ref n 1)\n     (string-ref x 1) (string-ref\
    \ n 1)\n     (string-ref x 2) (string-ref n 1)\n     (string-ref x 3) (string-ref\
    \ n 1)\n     (string-ref x 4) (string-ref n 1)\n     (string-ref x 5) (string-ref\
    \ n 1)\n     (string-ref x 6) (string-ref n 1)\n     (string-ref x 7) (string-ref\
    \ n 0)]\n    [(string-ref x 0) (string-ref n 1)\n     (string-ref x 1) (string-ref\
    \ n 1)\n     (string-ref x 2) (string-ref n 1)\n     (string-ref x 3) (string-ref\
    \ n 1)\n     (string-ref x 4) (string-ref n 1)\n     (string-ref x 5) (string-ref\
    \ n 1)\n     (string-ref x 6) ", "  (cond\n    [(number? x) (number? n)]\n   \
    \ [(zero? n) #f]\n    [(zero? x) #f]\n    [(equal? (string->number x) (string->number\
    \ n)) (equal? (string->number x) (string->number n))]\n    [else (equal? (string->number\
    \ n) (string->number x))]\n  )\n)\n", "  (cond\n    [(equal? x n) #t]\n    [(equal?\
    \ (string-length x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length\
    \ n)) #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [else (if\
    \ (equal? (string-length x) (string-length n))\n              (if (equal? (string-length\
    \ x) (string-length n))\n                  (if (equal? (string-length x) (string-length\
    \ n))\n                      (if (equal? (string-length x) (string-length n))\n\
    \                          (if (equal? (string-length x) (string-length n))\n\
    \                              (if (equal? (string-length x) (string-length n))\n\
    \                                  (if (equal? (string-length x) (string-length\
    \ n))\n                                      (if (equal? (string-length x) (string-length\
    \ n))\n                                          (if (equal? (string-length x)\
    \ (string-length n))\n                                              (if (equal?\
    \ (string-length x) (string-length n))\n                                     \
    \             (if (equal? (string-length x) (string-length n))\n             \
    \                                         (if (equal? (string-length x) (string-length\
    \ n))\n                                                          (if (equal? (string-length\
    \ x) (string-length n))\n                                                    \
    \          (if (equal? (string-length x) (string-length n))\n                \
    \                                                  (if (equal? (string-length\
    \ x) (string-length n))\n                                                    \
    \                  (if (equal? (string-length x) (string-length n))\n        \
    \                                                                  (if (equal?\
    \ (string-length x) (string-length n))\n                                     \
    \                                         (if (equal? (string-length x) (string-length\
    \ n))\n                                                                      \
    \            (if (equal? (string-length x) (string-length n))\n              \
    \                                                                        (if (equal?\
    \ (string-length x) (string-length n))\n                                     \
    \                                                     (if (equal? (string-length\
    \ x) (string-length n))\n                                                    \
    \                                          (if (equal? (string-length x) (string-length\
    \ n))\n                                                                      \
    \                            (if (equal? (string-length x) (string-length n))\n\
    \                                                                            \
    \                          (if (equal? (string-length x) (string-length n))\n\
    \                                                                            \
    \                              (if (equal? (string-length x) (string-length n))\n\
    \                                                                            \
    \                                  (if (equal? (string-length x) (string-length\
    \ n))\n                                                                      \
    \                                            (if (equal? (string-length x) (string-length\
    \ n))\n                                                                      \
    \                                                (if (equal? (string-length x)\
    \ (string-length n))\n                                                       \
    \                                                                   (if (equal?\
    \ (string-length x) (string-length n))\n                                     \
    \                                                                            \
    \             (if (equal? (string-length x) (string-length n))\n             \
    \                                                                            \
    \                                         (if (equal? (string-length x) (string-length\
    \ n))\n                                                                      \
    \                                                                (if (equal? (string-length\
    \ x) (string-length n))\n                                                    \
    \                                                                            \
    \          (if (equal? (string-length x) (string-length n))\n                \
    \                                                                            \
    \                                                  (if (equal", "  (cond\n   \
    \ [(number? x) (number? n) x]\n    [(number? n) (number? x) n]\n    [(equal? x\
    \ n) x]\n    [(equal? n x) n]\n    [(equal? (string->number x) (string->number\
    \ n)) (number->string x)]\n    [(equal? (string->number n) (string->number x))\
    \ (number->string n)]\n    [(equal? (string->number (string->number x)) (string->number\
    \ (string->number n))) (number->string x)]\n    [(equal? (string->number (string->number\
    \ n)) (string->number (string->number x))) (number->string n)]\n    [(equal? (string->number\
    \ (string->number (string->number x)) (string->number (string->number n))) (number->string\
    \ x)]\n    [(equal? (string->number (string->number (string->number n)) (string->number\
    \ (string->number x))) (number->string n)]\n    [(equal? (string->number (string->number\
    \ (string->number (string->number x)) (string->number (string->number n))) (number->string\
    \ x)) (number->string n)]\n    [(equal? (string->number (string->number (string->number\
    \ (string->number (string->number x)) (string->number (string->number n))) (number->string\
    \ x)) (number->string n)) (number->string x)]\n    [(equal? (string->number (string->number\
    \ (string->number (string->number (string->number (string->number x)) (string->number\
    \ (string->number n))) (number->string x)) (number->string n)) (number->string\
    \ n)) (number->string n)]\n    [(equal? (string->number (string->number (string->number\
    \ (string->number (string->number (string->number (string->number x)) (string->number\
    \ (string->number n))) (number->string x)) (number->string n)) (number->string\
    \ n)) (number->string n)) (number->string n)]\n    [(equal? (string->number (string->number\
    \ (string->number (string->number (string->number (string->number (string->number\
    \ (string->number (string->number x)) (string->number (string->number n))) (number->string\
    \ x)) (number->string n)) (number->string n)) (number->string n)) (number->string\
    \ n)) (number->string n)]\n    [(equal? (string->number (string->number (string->number\
    \ (string->number (string->number (string->number (string->number (string->number\
    \ (string->number x)) (string->", "  (cond\n    [(and (number? x) (number? n))\
    \ (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x\
    \ n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x)\
    \ (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n\
    \    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number?\
    \ n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and\
    \ (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal?\
    \ x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x\
    \ n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x)\
    \ (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n\
    \    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number?\
    \ n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and\
    \ (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal?\
    \ x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x\
    \ n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x)\
    \ (number? n)) (equal? x n)]\n    [(and (number? ", "  (cond\n    [(number? x)\
    \ (equal? x n) #t]\n    [(number? n) (equal? n x) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) (equal? x n) #f]\n    [else (equal? (string-length x)\
    \ (string-length n)) (equal? (string-split x \"/\") (string-split n \"/\")) #f]\n\
    \    [else (equal? (string-split x \"/\") (string-split n \"/\")) (equal? (string-split\
    \ x \"/\") (string-split n \"/\")) (equal? (string-split x \"/\") (string-split\
    \ n \"/\")) #f]\n    [else (equal? (string-split x \"/\") (string-split n \"/\"\
    )) (equal? (string-split x \"/\") (string-split n \"/\")) (equal? (string-split\
    \ x \"/\") (string-split n \"/\")) (equal? (string-split x \"/\") (string-split\
    \ n \"/\")) (equal? (string-split x \"/\") (string-split n \"/\")) #f]\n    [else\
    \ (equal? (string-split x \"/\") (string-split n \"/\")) (equal? (string-split\
    \ x \"/\") (string-split n \"/\")) (equal? (string-split x \"/\") (string-split\
    \ n \"/\")) (equal? (string-split x \"/\") (string-split n \"/\")) (equal? (string-split\
    \ x \"/\") (string-split n \"/\")) (equal? (string-split x \"/\") (string-split\
    \ n \"/\")) (equal? (string-split x \"/\") (string-split n \"/\")) #f]\n    [else\
    \ (equal? (string-split x \"/\") (string-split n \"/\")) (equal? (string-split\
    \ x \"/\") (string-split n \"/\")) (equal? (string-split x \"/\") (string-split\
    \ n \"/\")) (equal? (string-split x \"/\") (string-split n \"/\")) (equal? (string-split\
    \ x \"/\") (string-split n \"/\")) (equal? (string-split x \"/\") (string-split\
    \ n \"/\")) (equal? (string-split x \"/\") (string-split n \"/\")) (equal? (string-split\
    \ x \"/\") (string-split n \"/\")) #f]\n    [else (equal? (string-split x \"/\"\
    ) (string-split n \"/\")) (equal? (string-split x \"/\") (string-split n \"/\"\
    )) (equal? (string-split x \"/\") (string-split n \"/\")) (equal? (string-split\
    \ x \"/\") (string-split n \"/\")) (equal? (string-split x \"/\") (string-split\
    \ n \"/\")) (equal? (string-split x \"/\") (string-split ", "  (cond\n    [(and\
    \ (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal?\
    \ x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x\
    \ n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x)\
    \ (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n\
    \    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number?\
    \ n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and\
    \ (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal?\
    \ x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x\
    \ n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x)\
    \ (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n\
    \    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number?\
    \ n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and\
    \ (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal?\
    \ x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x\
    \ n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? ",
  "  (cond\n    [(equal? x n) #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ x) n) #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\" n) x) #f]\n    [else\
    \ (simplify (substring x 0 (string-length x)) (substring n 0 (string-length n)))]))\n",
  "  (cond\n    [(number? x) (number? n)]\n    [(zero? n) x]\n    [(zero? x) n]\n\
    \    [(equal? (string->number x) (string->number n)) x]\n    [(equal? (string->number\
    \ n) (string->number x)) n]\n    [else (error \"Invalid fractions!\")]))\n", " \
    \ (cond\n    [(and (number? x) (number? n)) (equal? x (/ x n))]\n    [(and (number?\
    \ x) (number? n)) (equal? x (* x n))]\n    [(and (number? x) (number? n)) (equal?\
    \ x (/ x n))]\n    [(and (number? x) (number? n)) (equal? x (* x n))]\n    [(and\
    \ (number? x) (number? n)) (equal? x (/ x n))]\n    [(and (number? x) (number?\
    \ n)) (equal? x (* x n))]\n    [(and (number? x) (number? n)) (equal? x (/ x n))]\n\
    \    [(and (number? x) (number? n)) (equal? x (* x n))]\n    [(and (number? x)\
    \ (number? n)) (equal? x (/ x n))]\n    [(and (number? x) (number? n)) (equal?\
    \ x (* x n))]\n    [(and (number? x) (number? n)) (equal? x (/ x n))]\n    [(and\
    \ (number? x) (number? n)) (equal? x (* x n))]\n    [(and (number? x) (number?\
    \ n)) (equal? x (/ x n))]\n    [(and (number? x) (number? n)) (equal? x (* x n))]\n\
    \    [(and (number? x) (number? n)) (equal? x (/ x n))]\n    [(and (number? x)\
    \ (number? n)) (equal? x (* x n))]\n    [(and (number? x) (number? n)) (equal?\
    \ x (/ x n))]\n    [(and (number? x) (number? n)) (equal? x (* x n))]\n    [(and\
    \ (number? x) (number? n)) (equal? x (/ x n))]\n    [(and (number? x) (number?\
    \ n)) (equal? x (* x n))]\n    [(and (number? x) (number? n)) (equal? x (/ x n))]\n\
    \    [(and (number? x) (number? n)) (equal? x (* x n))]\n    [(and (number? x)\
    \ (number? n)) (equal? x (/ x n))]\n    [(and (number? x) (number? n)) (equal?\
    \ x (* x n))]\n    [(and (number? ", "  (cond\n    [(and (number? x) (number?\
    \ n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and\
    \ (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal?\
    \ x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x\
    \ n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x)\
    \ (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n\
    \    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number?\
    \ n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and\
    \ (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal?\
    \ x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x\
    \ n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x)\
    \ (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n\
    \    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number?\
    \ n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and\
    \ (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal?\
    \ x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? ", "  (cond\n    [(number?\
    \ n) x]\n    [(equal? (string-ref x 0) \"0\") x]\n    [(equal? (string-ref x 0)\
    \ \"1\") (simplify (substring x 1) (substring n 1))]\n    [else (simplify (substring\
    \ x 1) (substring n 1))]))\n", "  (cond\n    [(number? x) (number? n)]\n    [(equal?\
    \ x n) #t]\n    [(equal? (string->number x) (string->number n)) #t]\n    [(equal?\
    \ (string->number x) (string->number (string->number n)))\n     (number? (string->number\
    \ (string->number n)))]\n    [else (simplify (string->number (string->number x))\
    \ (string->number (string->number n)))]))\n", "  (cond\n    [(equal? x n) #t]\n\
    \    [(equal? x '0f) #f]\n    [(equal? x '0s) #f]\n    [(equal? (string->number\
    \ x) (string->number (string->list n)) (equal? (string->number x) (string->number\
    \ (string->list n)))) #t]\n    [else #f]))\n", "  (cond\n    [(equal? x n) #t]\n\
    \    [(equal? (string-match \"^[0-9]+/[0-9]+$\" x) n) #t]\n    [(equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" n) x) #f]\n    [else (simplify (substring x 0 (string-length\
    \ (string-match \"^[0-9]+/[0-9]+$\" x))) (substring n 0 (string-length (string-match\
    \ \"^[0-9]+/[0-9]+$\" n)))) ]))\n", "  (cond\n    [(equal? x n) #t]\n    [(equal?\
    \ (string-match \"^[0-9]+/[0-9]+$\" x) n) #t]\n    [else #f]))\n", "  (cond\n\
    \    [(number? x) (number? n)]\n    [(zero? n) #f]\n    [(zero? x) #f]\n    [(equal?\
    \ (string-length x) (string-length n)) (number? (string-append \"1/\" x))]\n \
    \   [else (cond\n            [(equal? (string-length x) (string-length n)) (number?\
    \ (string-append \"1/\" x))]\n            [else (cond\n                    [(string-equal?\
    \ (string-append \"1/\" x) (string-append \"1/\" n)) (number? (string-append \"\
    1/\" x))]\n                    [else (cond\n                            [(equal?\
    \ (string-append \"1/\" x) (string-append \"1/\" n)) (number? (string-append \"\
    1/\" x))]\n                            [else (cond\n                         \
    \           [(equal? (string-append \"1/\" x) (string-append \"2/\" n)) (number?\
    \ (string-append \"1/\" x))]\n                                    [else (cond\n\
    \                                            [(equal? (string-append \"1/\" x)\
    \ (string-append \"3/\" n)) (number? (string-append \"1/\" x))]\n            \
    \                                [else (cond\n                               \
    \                     [(equal? (string-append \"1/\" x) (string-append \"4/\"\
    \ n)) (number? (string-append \"1/\" x))]\n                                  \
    \                  [else (cond\n                                             \
    \               [(equal? (string-append \"1/\" x) (string-append \"5/\" n)) (number?\
    \ (string-append \"1/\" x))]\n                                               \
    \             [else (cond\n                                                  \
    \                  [(equal? (string-append \"1/\" x) (string-append \"6/\" n))\
    \ (number? (string-append \"1/\" x))]\n                                      \
    \                              [else (cond\n                                 \
    \                                           [(equal? (string-append \"1/\" x)\
    \ (string-append \"7/\" n)) (number? (string-append \"1/\" x))]\n            \
    \                                                                [else (cond\n\
    \                                                                            \
    \        [(equal? (string-append \"1/\" x) (string-append \"8/\" n)) (number?\
    \ (string-append \"1/\" x))]\n                                               \
    \                                     [else (cond\n                          \
    \                                                                  [(equal? (string-append\
    \ \"1/\" x) (string-append \"9/\" n)) (number? (string-append \"1/\" x))]\n  \
    \                                                                            \
    \              [else (cond\n                                                 \
    \                                                   [(equal? (string-append \"\
    1/\" x) (string-append \"10/\" n)) (number? (string-append \"1/\" x))]\n     \
    \                                                                            \
    \                   [else (cond\n                                            \
    \                                                                [(equal? (string-append\
    \ \"1/\" x) (string-append \"11/\" n)) (number? (string-append \"1/\" x))]\n",
  "  (cond\n    [(empty? n) #f]\n    [(equal? (first n) '#t) (equal? (first x) (first\
    \ n))]\n    [else (cond\n             [(equal? (first n) '#f)\n              \
    \ (cond\n                 [(equal? (first x) '#f)\n                   (cond\n\
    \                     [(equal? (first n) '#f)\n                       (cond\n\
    \                         [(equal? (first x) '#f)\n                          \
    \ (cond\n                             [(equal? (first n) '#f)\n              \
    \                 (cond\n                                 [(equal? (first x) '#f)\n\
    \                                   (cond\n                                  \
    \   [(equal? (first n) '#f)\n                                       (cond\n  \
    \                                       [(equal? (first x) '#f)\n            \
    \                               (cond\n                                      \
    \       [(equal? (first n) '#f)\n                                            \
    \  (cond\n                                                [(equal? (first x) '#f)\n\
    \                                                 (cond\n                    \
    \                             [(equal? (first n) '#f)\n                      \
    \                            (cond\n                                         \
    \          [(equal? (first x) '#f)\n                                         \
    \            (cond\n                                                     [(equal?\
    \ (first n) '#f)\n                                                      (cond\n\
    \                                                       [(equal? (first x) '#f)\n\
    \                                                        (cond\n             \
    \                                            [(equal? (first n) '#f)\n       \
    \                                                   (cond\n                  \
    \                                         [(equal? (first x) '#f)\n          \
    \                                                  (cond\n                   \
    \                                          [(equal? (first n) '#f)\n         \
    \                                                     (cond\n                \
    \                                               [(equal? (first x) '#f)\n    \
    \                                                            (cond\n         \
    \                                                       [(equal? (first n) '#f)\n\
    \                                                                  (cond\n   \
    \                                                                 [(equal? (first\
    \ x) '#f)\n                                                                  \
    \    (cond\n                                                                 \
    \       [(equal? (first n) '#f)\n                                            \
    \                              (cond\n                                       \
    \                                    [(equal? (first x) '#f)\n               \
    \                                                             (cond\n        \
    \                                                                     [(equal?\
    \ (first n) '#f)\n                                                           \
    \                   (cond\n                                                  \
    \                             [(equal? (first x) '#f)\n                      \
    \                                                          (cond\n           \
    \                                                                      [(equal?\
    \ (first n) '#f)\n                                                           \
    \                       (cond\n                                              \
    \                                     [(equal? (first x) '#f)\n              \
    \                                                                       (cond\n\
    \                                                                            \
    \           [(equal? (first n) '#f)\n                                        \
    \                                                (cond\n                     \
    \                                                                    [(equal?\
    \ (first x) '#f)\n                                                           \
    \                               (cond\n                                      \
    \                                                     [(equal? (first n) '#f)\n\
    \                                                                            \
    \                 (cond\n                                                    \
    \                                           [(equal? (first x) '#f)\n        \
    \                                                                            \
    \             (cond\n                                                        \
    \                                           [(equal? (first n) '#f)\n        \
    \                                                                            \
    \                (cond\n                                                     \
    \                                                [(equal? (first ", "  (cond\n\
    \    [(number? n) (equal? x n)]\n    [(equal? x \"0\") #f]\n    [(equal? (substring\
    \ x 0 1) \"/\") (equal? (substring n 0 1) \"/\")]\n    [else (equal? (substring\
    \ x 0 1) \"*\") (equal? (substring n 0 1) \"*\")]\n  ))\n", "  (cond\n    [(and\
    \ (number? x) (number? n)) (equal? (quotient x n) 0)]\n    [(and (number? x) (number?\
    \ n)) #f]\n    [(and (number? x) (number? n)) (equal? (quotient x n) 0)]\n   \
    \ [(and (number? x) (number? n)) (equal? (quotient x n) 0)]\n    [(and (number?\
    \ x) (number? n)) (equal? (quotient x n) 0)]\n    [(and (number? x) (number? n))\
    \ (equal? (quotient x n) 0)]\n    [(and (number? x) (number? n)) (equal? (quotient\
    \ x n) 0)]\n    [(and (number? x) (number? n)) (equal? (quotient x n) 0)]\n  \
    \  [(and (number? x) (number? n)) (equal? (quotient x n) 0)]\n    [(and (number?\
    \ x) (number? n)) (equal? (quotient x n) 0)]\n    [(and (number? x) (number? n))\
    \ (equal? (quotient x n) 0)]\n    [(and (number? x) (number? n)) (equal? (quotient\
    \ x n) 0)]\n    [(and (number? x) (number? n)) (equal? (quotient x n) 0)]\n  \
    \  [(and (number? x) (number? n)) (equal? (quotient x n) 0)]\n    [(and (number?\
    \ x) (number? n)) (equal? (quotient x n) 0)]\n    [(and (number? x) (number? n))\
    \ (equal? (quotient x n) 0)]\n    [(and (number? x) (number? n)) (equal? (quotient\
    \ x n) 0)]\n    [(and (number? x) (number? n)) (equal? (quotient x n) 0)]\n  \
    \  [(and (number? x) (number? n)) (equal? (quotient x n) 0)]\n    [(and (number?\
    \ x) (number? n)) (equal? (quotient x n) 0)]\n    [(and (number? x) (number? n))\
    \ (equal? (quotient x n) 0)]\n    [(and (number? x) (number? n)) (equal? (quotient\
    \ x n) 0)]\n    [(and (number? x) (number? n)) (equal? (quotient x n) 0)]\n  \
    \  [(and (number? x) (number? n)) ", "  (cond\n    [(equal? x n) #t]\n    [(equal?\
    \ (string-match \"^[0-9]+/[0-9]+$\" x) n) #t]\n    [else #f]))\n", "  (cond\n\
    \    [(number? x) (equal? x n)]\n    [(equal? (first x) '/')\n     (cond\n   \
    \    [(number? (second x))\n        (cond\n         [(equal? (first n) '/')\n\
    \          (cond\n            [(number? (second n))\n             (equal? (first\
    \ x) '/')\n             (equal? (second x) '/')\n             (equal? (first n)\
    \ (second n))\n             (equal? (first n) (second n) (first x))\n        \
    \     (equal? (first n) (second n) (second x))\n             (equal? (first n)\
    \ (second n) (first n) (second x))\n             (equal? (first n) (second n)\
    \ (first n) (second n) (first x))\n             (equal? (first n) (second n) (first\
    \ n) (second n) (second x))\n             (equal? (first n) (second n) (first\
    \ n) (second n) (first n) (second n) (first x))\n             (equal? (first n)\
    \ (second n) (first n) (second n) (first n) (second n) (second x))\n         \
    \    (equal? (first n) (second n) (first n) (second n) (first n) (second n) (first\
    \ n) (second x))\n             (equal? (first n) (second n) (first n) (second\
    \ n) (first n) (second n) (first n) (second n) (first x))\n             (equal?\
    \ (first n) (second n) (first n) (second n) (first n) (second n) (first n) (second\
    \ n) (first n) (second x))\n             (equal? (first n) (second n) (first n)\
    \ (second n) (first n) (second n) (first n) (second n) (first n) (second n) (first\
    \ x))\n             (equal? (first n) (second n) (first n) (second n) (first n)\
    \ (second n) (first n) (second n) (first n) (second n) (first n) (second x))\n\
    \             (equal? (first n) (second n) (first n) (second n) (first n) (second\
    \ n) (first n) (second n) (first n) (second n) (first n) (second n) (first x))\n\
    \             (equal? (first n) (second n) (first n) (second n) (first n) (second\
    \ n) (first n) (second n) (first n) (second n) (first n) (second n) (first n)\
    \ (second x))\n             (equal? (first n) (second n) (first n) (second n)\
    \ (first n) (second n) (first n) (second n) (first n) (second n) (first n) (second\
    \ n) (first n) (second n) (first x))\n             (equal? (first n) (", "  (cond\n\
    \    [(equal? (string-length x) 0)\n     (equal? (string-length n) 0)]\n    [(equal?\
    \ (string-length x) (string-length n))\n     (equal? (string-length n) 0)]\n \
    \   [(equal? (string-length x) (string-length n))\n     (equal? (string-length\
    \ n) (string-length x))]\n    [(equal? (string-length x) (string-length n))\n\
    \     (equal? (string-length n) (string-length x))]\n    [(equal? (string-length\
    \ x) (string-length n))\n     (equal? (string-length n) (string-length x))]\n\
    \    [(equal? (string-length x) (string-length n))\n     (equal? (string-length\
    \ n) (string-length x))]\n    [(equal? (string-length x) (string-length n))\n\
    \     (equal? (string-length n) (string-length x))]\n    [(equal? (string-length\
    \ x) (string-length n))\n     (equal? (string-length n) (string-length x))]\n\
    \    [(equal? (string-length x) (string-length n))\n     (equal? (string-length\
    \ n) (string-length x))]\n    [(equal? (string-length x) (string-length n))\n\
    \     (equal? (string-length n) (string-length x))]\n    [(equal? (string-length\
    \ x) (string-length n))\n     (equal? (string-length n) (string-length x))]\n\
    \    [(equal? (string-length x) (string-length n))\n     (equal? (string-length\
    \ n) (string-length x))]\n    [(equal? (string-length x) (string-length n))\n\
    \     (equal? (string-length n) (string-length x))]\n    [(equal? (string-length\
    \ x) (string-length n))\n     (equal? (string-length n) (string-length x))]\n\
    \    [(equal? (string-length x) (string-length n))\n     (equal? (string-length\
    \ n) (string-length x))]\n    [(equal? (string-length x) (string-length n))\n\
    \     (equal? (string-length n) (string-length x))]\n    [(equal? (string-length\
    \ x) (string-length n))\n     (equal? (string-length n) (string-length x))]\n\
    \    [(equal? (string-length x) (string-length n))\n     (equal? (string-length\
    \ n) (string-length x))]\n    [(equal? (string-length x) (string-length n))\n\
    \     (equal? (string-length n) (string-length x))]\n    [(equal? (string-length\
    \ x) (string-length n))\n     (equal? (string-length n) (string-length x))]\n\
    \    [(equal? (string-length x) (string-length n))\n     (equal? (string-length\
    \ n", "  (cond\n    [(number? x) (number? n)]\n    [(zero? n) (number? x)]\n \
    \   [(zero? x) (number? n)]\n    [(equal? x n) (equal? x x)]\n    [(equal? n x)\
    \ (equal? n n)]\n    [(equal? x n) (equal? x n)]\n    [else (equal? (string->number\
    \ x) (string->number n))]))\n", "  (cond\n    [(and (number? x) (number? n)) (equal?\
    \ x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x\
    \ n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x)\
    \ (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n\
    \    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number?\
    \ n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and\
    \ (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal?\
    \ x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x\
    \ n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x)\
    \ (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n\
    \    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number?\
    \ n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and\
    \ (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal?\
    \ x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x\
    \ n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x)\
    \ (number? n)) (equal? x n)]\n    [(and (number? ", "  (cond\n    [(number? x)\
    \ (equal? x n)]\n    [(equal? x \"0\") (equal? n \"0\")]\n    [(equal? x \"1\"\
    ) (equal? n \"1\")]\n    [(equal? x \"-1\") (equal? n \"-1\")]\n    [(equal? x\
    \ \"1/2\") (equal? n \"1/2\")]\n    [(equal? x \"1/3\") (equal? n \"1/3\")]\n\
    \    [(equal? x \"1/4\") (equal? n \"1/4\")]\n    [(equal? x \"1/5\") (equal?\
    \ n \"1/5\")]\n    [(equal? x \"1/6\") (equal? n \"1/6\")]\n    [(equal? x \"\
    1/7\") (equal? n \"1/7\")]\n    [(equal? x \"1/8\") (equal? n \"1/8\")]\n    [(equal?\
    \ x \"1/9\") (equal? n \"1/9\")]\n    [(equal? x \"1/10\") (equal? n \"1/10\"\
    )]\n    [(equal? x \"1/11\") (equal? n \"1/11\")]\n    [(equal? x \"1/12\") (equal?\
    \ n \"1/12\")]\n    [(equal? x \"1/13\") (equal? n \"1/13\")]\n    [(equal? x\
    \ \"1/14\") (equal? n \"1/14\")]\n    [(equal? x \"1/15\") (equal? n \"1/15\"\
    )]\n    [(equal? x \"1/16\") (equal? n \"1/16\")]\n    [(equal? x \"1/17\") (equal?\
    \ n \"1/17\")]\n    [(equal? x \"1/18\") (equal? n \"1/18\")]\n    [(equal? x\
    \ \"1/19\") (equal? n \"1/19\")]\n    [(equal? x \"1/20\") (equal? n \"1/20\"\
    )]\n    [(equal? x \"1/21\") (equal? n \"1/21\")]\n    [(equal? x \"1/22\") (equal?\
    \ n \"1/22\")]\n    [(equal? x \"1/23\") (equal? n \"1/23\")]\n    [(equal? x\
    \ \"1/24\") (equal? n \"1/24\")]\n    [(equal? x \"1/25\") (equal? n \"1/25\"\
    )]\n    [(equal? x \"1/26\") (equal? n \"1/26\")]", "  (cond\n    [(equal? x n)\
    \ #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\" x) n) #t]\n    [(equal?\
    \ (string-match \"^[0-9]+/[0-9]+$\" n) x) #f]\n    [else (simplify (substring\
    \ x 0 (string-length x)) (substring n 0 (string-length n)))]))\n", "  (cond\n\
    \    [(equal? x n) #t]\n    [(equal? (string-length x) (string-length n)) #f]\n\
    \    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [else (cond [(equal? (string-length x) (string-length\
    \ n)) #f]\n               [(equal? (string-length x) (string-length n)) #f]\n\
    \               [(equal? (string-length x) (string-length n)) #f]\n          \
    \     [(equal? (string-length x) (string-length n)) #f]\n               [(equal?\
    \ (string-length x) (string-length n)) #f]\n               [(equal? (string-length\
    \ x) (string-length n)) #f]\n               [(equal? (string-length x) (string-length\
    \ n)) #f]\n               [(equal? (string-length x) (string-length n)) #f]\n\
    \               [(equal? (string-length x) (string-length n)) #f]\n          \
    \     [(equal? (string-length x) (string-length n)) #f]\n               [(equal?\
    \ (string-length x) (string-length n)) #f]\n               [(equal? (string-length\
    \ x) (string-length n)) #f]\n               [(equal? (string-length x) (string-length\
    \ n)) #f]\n               [(equal? (string-length x) (string-length n)) #f]\n\
    \               [(equal? (string-length x) (string-length n)) #f]\n          \
    \     [(equal? (string-length x) (string-length n)) #f]\n               [(equal?\
    \ (string-length x) (string-length n)) #f]\n               [(equal? (string-length\
    \ x) (string-length n)) #f]\n               [(equal? (string-length x) (string-length\
    \ n)) #f]\n               [(equal? (string-length x) (string-length n)) #f]\n\
    \               [(equal? (string-length x) (string-length n)) #f]\n          \
    \     [(equal? (string-length x) (string-length n)) #f]\n               [(equal?\
    \ (string-length x) (string-length n)) #f]\n               [(equal? (string-length\
    \ x) (string-length n)) #f]\n               [(equal? (string-length x) (string-length\
    \ n)) #f]\n               [(equal? (string-length x) (string-length n)) #f]\n\
    \               [(equal? (string-length x) (string-length n)) #f]\n          \
    \     [(equal? (string-length x) (string-length n)) #f]\n               [(equal?\
    \ (string-length x) (string-length n)) #f]\n               [(equal? (string-length\
    \ x) (string-length n)) #f]\n", "  (cond\n    [(number? x) (number? n) x]\n  \
    \  [(number? n) (number? x) n]\n    [(number? n) (number? x) n]\n    [(number?\
    \ x) (number? n) (* x n)]\n    [(number? n) (number? x) (* n x)]\n    [(number?\
    \ n) (number? x) (* n x)]\n    [(number? x) (number? n) (* x n)]\n    [(number?\
    \ n) (number? x) (* n x)]\n    [(number? x) (number? n) (* x n)]\n    [(number?\
    \ n) (number? x) (* n x)]\n    [(number? x) (number? n) (* x n)]\n    [(number?\
    \ n) (number? x) (* n x)]\n    [(number? x) (number? n) (* x n)]\n    [(number?\
    \ n) (number? x) (* n x)]\n    [(number? x) (number? n) (* x n)]\n    [(number?\
    \ n) (number? x) (* n x)]\n    [(number? x) (number? n) (* x n)]\n    [(number?\
    \ n) (number? x) (* n x)]\n    [(number? x) (number? n) (* x n)]\n    [(number?\
    \ n) (number? x) (* n x)]\n    [(number? x) (number? n) (* x n)]\n    [(number?\
    \ n) (number? x) (* n x)]\n    [(number? x) (number? n) (* x n)]\n    [(number?\
    \ n) (number? x) (* n x)]\n    [(number? x) (number? n) (* x n)]\n    [(number?\
    \ n) (number? x) (* n x)]\n    [(number? x) (number? n) (* x n)]\n    [(number?\
    \ n) (number? x) (* n x)]\n    [(number? x) (number? n) (* x n)]\n    [(number?\
    \ n) (number? x) (* n x)]\n    [(number? x) (number? n) (* x n)]\n    [(number?\
    \ n) (number? x) (* n x)]\n    [(number? x) (number? n) (* x n)]\n    [(number?\
    \ n) (number? x) (* n x)]\n    [(number? x) (number? n) (", "  (cond\n    [(number?\
    \ x) (equal? x n)]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\" x) n) (equal?\
    \ (string-match \"^[0-9]+/[0-9]+$\" n) x)]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ n) x) (equal? (string-match \"^[0-9]+/[0-9]+$\" x) n)]\n    [else (equal? (string-match\
    \ \"^[0-9]+$\" x) n) (equal? (string-match \"^[0-9]+$\" n) x)]\n    [else (equal?\
    \ (string-match \"^[0-9]+$\" n) x) (equal? (string-match \"^[0-9]+$\" x) n)]\n\
    \    [else (equal? (string-match \"^[0-9]+/[0-9]+$\" x) n) (equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" n) x)]\n    [else (equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ n) x) (equal? (string-match \"^[0-9]+/[0-9]+$\" x) n)]\n    [else (equal? (string-match\
    \ \"^[0-9]+$\" x) n) (equal? (string-match \"^[0-9]+$\" n) x)]\n    [else (equal?\
    \ (string-match \"^[0-9]+$\" n) x) (equal? (string-match \"^[0-9]+$\" x) n)]\n\
    \    [else (equal? (string-match \"^[0-9]+/[0-9]+$\" x) n) (equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" n) x)]\n    [else (equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ n) x) (equal? (string-match \"^[0-9]+/[0-9]+$\" x) n)]))\n", "  (cond\n    [(number?\
    \ x) (number? n)]\n    [(equal? x n) #t]\n    [(equal? (string->number x) (string->number\
    \ n)) #t]\n    [else (equal? (string->number x) (string->number (string->number\
    \ n)))]\n  )\n)\n", "  (cond\n    [(number? x) (number? n)]\n    [(zero? n) (number?\
    \ x)]\n    [(zero? x) (number? n)]\n    [(equal? x n) (number? x)]\n    [else\
    \ (cond [(equal? (string->number x) (string->number n)) (number? x)]\n       \
    \        [else (cond [(equal? (string->number n) (string->number x)) (number?\
    \ n)]\n                         [else (cond [(equal? (string->number n) (string->number\
    \ x)) (number? x)]\n                                   [else (cond [(equal? (string->number\
    \ x) (string->number n)) (number? n)]\n                                      \
    \     [else (cond [(equal? (string->number n) (string->number x)) (number? x)]\n\
    \                                                   [else (cond [(equal? (string->number\
    \ n) (string->number x)) (number? x)]\n                                      \
    \                     [else (cond [(equal? (string->number x) (string->number\
    \ n)) (number? n)]\n                                                         \
    \          [else (cond [(equal? (string->number n) (string->number x)) (number?\
    \ x)]\n                                                           [else (cond\
    \ [(equal? (string->number x) (string->number n)) (number? n)]\n             \
    \                                                      [else (cond [(equal? (string->number\
    \ n) (string->number x)) (number? x)]\n                                      \
    \                     [else (cond [(equal? (string->number x) (string->number\
    \ n)) (number? n)]\n                                                         \
    \          [else (cond [(equal? (string->number n) (string->number x)) (number?\
    \ x)]\n                                                           [else (cond\
    \ [(equal? (string->number x) (string->number n)) (number? n)]\n             \
    \                                                      [else (cond [(equal? (string->number\
    \ n) (string->number x)) (number? x)]\n                                      \
    \                     [else (cond [(equal? (string->number x) (string->number\
    \ n)) (number? n)]\n                                                         \
    \          [else (cond [(equal? (string->number n) (string->number x)) (number?\
    \ x)]\n                                                           [else (cond\
    \ [(equal? (string->number x) (string->number n)) (number? n)]\n             \
    \                                                      [else (cond [(equal? (string->number\
    \ n) (string->number x)) (number? x)]\n                                      \
    \                     [else (cond [(equal? (string->number x) (string->number\
    \ n", "  (cond\n    [(equal? x n) #t]\n    [(equal? x \"0\") #f]\n    [(equal?\
    \ (string-length x) (string-length n)) #f]\n    [(string-ref x 0) (string-ref\
    \ n 0)]\n    [(string-ref x 0) (string-ref n 1)]))\n", "  (cond\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) x]\n    [(and\
    \ (number? x) (number? n)) (* x n)]\n    [(and (number? x) (number? n)) (/ x n)]\n\
    \    [(and (number? x) (number? n)) (simplify (/ x n) (- n 1))]\n    [(and (number?\
    \ x) (number? n)) (simplify (* x n) (+ n 1))]\n    [(and (number? x) (number?\
    \ n)) (simplify (/ x n) (- n 1))]\n    [(and (number? x) (number? n)) (simplify\
    \ (* x n) (+ n 1))]\n    [(and (number? x) (number? n)) (simplify (/ x n) (- n\
    \ 1))]\n    [(and (number? x) (number? n)) (simplify (* x n) (+ n 1))]\n    [(and\
    \ (number? x) (number? n)) (simplify (/ x n) (- n 1))]\n    [(and (number? x)\
    \ (number? n)) (simplify (* x n) (+ n 1))]\n    [(and (number? x) (number? n))\
    \ (simplify (/ x n) (- n 1))]\n    [(and (number? x) (number? n)) (simplify (*\
    \ x n) (+ n 1))]\n    [(and (number? x) (number? n)) (simplify (/ x n) (- n 1))]\n\
    \    [(and (number? x) (number? n)) (simplify (* x n) (+ n 1))]\n    [(and (number?\
    \ x) (number? n)) (simplify (/ x n) (- n 1))]\n    [(and (number? x) (number?\
    \ n)) (simplify (* x n) (+ n 1))]\n    [(and (number? x) (number? n)) (simplify\
    \ (/ x n) (- n 1))]\n    [(and (number? x) (number? n)) (simplify (* x n) (+ n\
    \ 1))]\n    [(and (number? x) (number? n)) (simplify (/ x n) (- n 1))]\n    [(and\
    \ (number? x) (number? n)) (simplify (* x n) (+ n 1))]\n    [(and (number? x)\
    \ (number? n)) (simplify (/ x n) (- n 1))]\n    [(and (number? x) (", "  (cond\n\
    \    [(number? x) (number? n)]\n    [(zero? n) (number? x)]\n    [(zero? x) (number?\
    \ n)]\n    [(equal? x n) (equal? x x)]\n    [(equal? x '()) (equal? x '())]\n\
    \    [(equal? (first x) '()) (equal? (first x) '())]\n    [(equal? (first x) '())\
    \ (equal? (first x) '())]\n    [(equal? (first x) '()) (equal? (first x) '())]\n\
    \    [(equal? (first x) '()) (equal? (first x) '())]\n    [(equal? (first x) '())\
    \ (equal? (first x) '())]\n    [(equal? (first x) '()) (equal? (first x) '())]\n\
    \    [(equal? (first x) '()) (equal? (first x) '())]\n    [(equal? (first x) '())\
    \ (equal? (first x) '())]\n    [(equal? (first x) '()) (equal? (first x) '())]\n\
    \    [(equal? (first x) '()) (equal? (first x) '())]\n    [(equal? (first x) '())\
    \ (equal? (first x) '())]\n    [(equal? (first x) '()) (equal? (first x) '())]\n\
    \    [(equal? (first x) '()) (equal? (first x) '())]\n    [(equal? (first x) '())\
    \ (equal? (first x) '())]\n    [(equal? (first x) '()) (equal? (first x) '())]\n\
    \    [(equal? (first x) '()) (equal? (first x) '())]\n    [(equal? (first x) '())\
    \ (equal? (first x) '())]\n    [(equal? (first x) '()) (equal? (first x) '())]\n\
    \    [(equal? (first x) '()) (equal? (first x) '())]\n    [(equal? (first x) '())\
    \ (equal? (first x) '())]\n    [(equal? (first x) '()) (equal? (first x) '())]\n\
    \    [(equal? (first x) '()) (equal? (first x) '())]\n    [(equal? (first x) '())\
    \ (equal? (first x) '())]\n    [(equal? (first x) '()) (equal? (first x) '())]\n\
    \    [(equal? (first x) '()) (equal? (first x) '())]\n    [(equal? (first x) '())\
    \ (equal? (first x) '())]\n    [(equal? (first x) ", "  (cond\n    [(number? x)\
    \ (number? n)]\n    [(zero? n) #f]\n    [(zero? x) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n    [else\
    \ (cond [(equal? (string-length x) (string-length n)) (equal? (string-length x)\
    \ (string-length n))]\n              [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n              [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n      \
    \        [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n              [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n              [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n      \
    \        [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n              [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n              [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n      \
    \        [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n              [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n              [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n      \
    \        [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n              [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n              [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n      \
    \        [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n              [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n              [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n      \
    \        [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length ", "  (cond\n    [(number? x) (number? n)]\n    [(equal? x\
    \ n) #t]\n    [(equal? (string-ref x 0) '/')\n     (cond\n       [(number? (string-ref\
    \ n 0)) #t]\n       [else #f]\n       )]\n    [else #f]\n    )\n  )\n", "  (cond\n\
    \    [(number? x) (number? n) x]\n    [(number? n) (number? x) n]\n    [(equal?\
    \ x n) (equal? x x)]\n    [(equal? n x) (equal? n n)]\n    [(equal? x \"0\") (equal?\
    \ n \"0\") x]\n    [(equal? n \"0\") (equal? x \"0\") n]\n    [(equal? x \"0\"\
    ) (equal? n \"0\") \"0\"]\n    [(equal? n \"0\") (equal? x \"0\") \"0\"]\n   \
    \ [(equal? x \"0\") (equal? n \"0\") x]\n    [(equal? n \"0\") (equal? x \"0\"\
    ) n]\n    [(equal? x \"0\") (equal? n \"0\") \"0\"]\n    [(equal? n \"0\") (equal?\
    \ x \"0\") \"0\"]\n    [(equal? x \"0\") (equal? n \"0\") x]\n    [(equal? n \"\
    0\") (equal? x \"0\") n]\n    [(equal? x \"0\") (equal? n \"0\") \"0\"]\n    [(equal?\
    \ n \"0\") (equal? x \"0\") \"0\"]\n    [(equal? x \"0\") (equal? n \"0\") x]\n\
    \    [(equal? n \"0\") (equal? x \"0\") n]\n    [(equal? x \"0\") (equal? n \"\
    0\") \"0\"]\n    [(equal? n \"0\") (equal? x \"0\") \"0\"]\n    [(equal? x \"\
    0\") (equal? n \"0\") x]\n    [(equal? n \"0\") (equal? x \"0\") n]\n    [(equal?\
    \ x \"0\") (equal? n \"0\") \"0\"]\n    [(equal? n \"0\") (equal? x \"0\") \"\
    0\"]\n    [(equal? x \"0\") (equal? n \"0\") x]\n    [(equal? n \"0\") (equal?\
    \ x \"0\") n]\n    [(equal? x \"0\") (equal? n \"0\") \"0\"]\n    [(equal? n \"\
    0\") (equal? x \"0\") \"0\"]\n    [(equal? x \"0\") (equal? n \"0\") x]\n    [(equal?\
    \ n \"0\") (equal? ", "  (cond\n    [(equal? x n) #t]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(string-ref x 0) (string-ref n 0)]\n    [(string-ref x 0) (string-ref\
    \ n 0)]\n    [(string-ref x 0) (string-ref n 0)]\n    [(string-ref x 0) (string-ref\
    \ n 0)]\n    [(string-ref x 0) (string-ref n 0)]\n    [(string-ref x 0) (string-ref\
    \ n 0)]\n    [(string-ref x 0) (string-ref n 0)]\n    [(string-ref x 0) (string-ref\
    \ n 0)]\n    [(string-ref x 0) (string-ref n 0)]\n    [(string-ref x 0) (string-ref\
    \ n 0)]\n    [(string-ref x 0) (string-ref n 0)]\n    [(string-ref x 0) (string-ref\
    \ n 0)]\n    [(string-ref x 0) (string-ref n 0)]\n    [(string-ref x 0) (string-ref\
    \ n 0)]\n    [(string-ref x 0) (string-ref n 0)]\n    [(string-ref x 0) (string-ref\
    \ n 0)]\n    [(string-ref x 0) (string-ref n 0)]\n    [(string-ref x 0) (string-ref\
    \ n 0)]\n    [(string-ref x 0) (string-ref n 0)]\n    [(string-ref x 0) (string-ref\
    \ n 0)]\n    [(string-ref x 0) (string-ref n 0)]\n    [(string-ref x 0) (string-ref\
    \ n 0)]\n    [(string-ref x 0) (string-ref n 0)]\n    [(string-ref x 0) (string-ref\
    \ n 0)]\n    [(string-ref x 0) (string-ref n 0)]\n    [(string-ref x 0) (string-ref\
    \ n 0)]\n    [(string-ref x 0) (string-ref n 0)]\n    [(string-ref x 0) (string-ref\
    \ n 0)]\n    [(string-ref x 0) (string-ref n 0)]\n    [(string-ref x 0) (string-ref\
    \ n 0)]\n    [(string-ref x 0) (string-ref n 0)]\n    [(string-ref x 0) (string-ref\
    \ n 0)]\n    [(string-ref x 0) (string-ref n 0)]\n    [(string-ref x 0) (string-ref\
    \ n 0)]\n    [(string-ref x 0) (string-ref n 0)]\n    [(string-ref x 0) (string-ref\
    \ n 0)]\n    [", "  (cond\n    [(number? x) (number? n)]\n    [(equal? x n) #t]\n\
    \    [(equal? (string-ref x 0) '/')\n     (cond\n       [(number? (string-ref\
    \ n 0)) #t]\n       [(equal? (string-ref n 0) '/')\n        (cond\n         [(number?\
    \ (string-ref x 1)) #t]\n         [(equal? (string-ref x 1) '/')\n          (cond\n\
    \            [(number? (string-ref x 2)) (number? (string-ref n 2))]\n       \
    \     [(equal? (string-ref x 2) '/')\n             (cond\n               [(number?\
    \ (string-ref x 3)) (number? (string-ref n 3))]\n               [(equal? (string-ref\
    \ x 3) '/')\n                (cond\n                 [(number? (string-ref x 4))\
    \ (number? (string-ref n 4))]\n                 [(equal? (string-ref x 4) '/')\n\
    \                  (cond\n                   [(number? (string-ref x 5)) (number?\
    \ (string-ref n 5))]\n                   [(equal? (string-ref x 5) '/')\n    \
    \                (cond\n                     [(number? (string-ref x 6)) (number?\
    \ (string-ref n 6))]\n                     [(equal? (string-ref x 6) '/')\n  \
    \                    (cond\n                       [(number? (string-ref x 7))\
    \ (number? (string-ref n 7))]\n                       [(equal? (string-ref x 7)\
    \ '/')\n                        (cond\n                         [(number? (string-ref\
    \ x 8)) (number? (string-ref n 8))]\n                         [(equal? (string-ref\
    \ x 8) '/')\n                          (cond\n                           [(number?\
    \ (string-ref x 9)) (number? (string-ref n 9))] \n                           [(equal?\
    \ (string-ref x 9) '/')\n                            (cond\n                 \
    \            [(number? (string-ref x 10)) (number? (string-ref n 10))]\n     \
    \                        [(equal? (string-ref x 10) '/')\n                   \
    \           (cond\n                               [(number? (string-ref x 11))\
    \ (number? (string-ref n 11))] \n                               [(equal? (string-ref\
    \ x 11) '/')\n                                (cond\n                        \
    \         [(number? (string-ref x 12)) (number? (string-ref n 12))]\n        \
    \                         [(equal? (string-ref x 12) '/')\n                  \
    \                (cond\n                                   [(number? (string-ref\
    \ x 13)) (number? (string-ref n 13))] \n                                   [(equal?\
    \ (string-ref x 13) '/')\n                                    (cond\n        \
    \                             [(number? (string-ref x 14)) (number? (string-ref\
    \ n 14))] \n                                     [(equal? (", "  (cond\n    [(and\
    \ (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal?\
    \ x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x\
    \ n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x)\
    \ (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n\
    \    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number?\
    \ n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and\
    \ (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal?\
    \ x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x\
    \ n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x)\
    \ (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n\
    \    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number?\
    \ n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and\
    \ (number? x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal?\
    \ x n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number?\
    \ x) (number? n)) (equal? x n)]\n    [(and (number? x) (number? n)) (equal? x\
    \ n)]\n    [(and (number? x) (number? n)) (equal? x n)]\n    [(and (number? ",
  "  (cond\n    [(number? x) (number? n) x]\n    [(equal? x n) #t]\n    [(equal? (number?\
    \ (substring x 0 2)) (number? (substring n 0 2)))\n     (if (equal? (substring\
    \ x 0 1) (substring n 0 1))\n         (if (equal? (substring x 0 2) (substring\
    \ n 0 2))\n             (if (equal? (substring x 0 3) (substring n 0 3))\n   \
    \              (if (equal? (substring x 0 4) (substring n 0 4))\n            \
    \         (if (equal? (substring x 0 5) (substring n 0 5))\n                 \
    \        (if (equal? (substring x 0 6) (substring n 0 6))\n                  \
    \           (if (equal? (substring x 0 7) (substring n 0 7))\n               \
    \                  (if (equal? (substring x 0 8) (substring n 0 8))\n        \
    \                             (if (equal? (substring x 0 9) (substring n 0 9))\n\
    \                                         (if (equal? (substring x 0 10) (substring\
    \ n 0 10))\n                                             (if (equal? (substring\
    \ x 0 11) (substring n 0 11))\n                                              \
    \   (if (equal? (substring x 0 12) (substring n 0 12))\n                     \
    \                                (if (equal? (substring x 0 13) (substring n 0\
    \ 13))\n                                                         (if (equal? (substring\
    \ x 0 14) (substring n 0 14))\n                                              \
    \               (if (equal? (substring x 0 15) (substring n 0 15))\n         \
    \                                                        (if (equal? (substring\
    \ x 0 16) (substring n 0 16))\n                                              \
    \                       (if (equal? (substring x 0 17) (substring n 0 17))\n \
    \                                                                        (if (equal?\
    \ (substring x 0 18) (substring n 0 18))\n                                   \
    \                                          (if (equal? (substring x 0 19) (substring\
    \ n 0 19))\n                                                                 \
    \                (if (equal? (substring x 0 20) (substring n 0 20))\n        \
    \                                                                            \
    \ (if (equal? (substring x 0 21) (substring n 0 21))\n                       \
    \                                                                  (if (equal?\
    \ (substring x 0 22) (substring n 0 22))\n                                   \
    \                                                          (if (equal? (substring\
    \ x 0 23) (substring n 0 23))\n                                              \
    \                                                   (if (equal? (substring x 0\
    \ 24) (substring n 0 24))\n                                                  \
    \                                                   (if (equal? (substring x 0\
    \ 25) (substring n 0 25))\n                                                  \
    \                                                       (if (equal? (substring\
    \ x 0 26) (substring n 0 26))\n                                              \
    \                                                               (if (equal? (sub",
  "  (cond\n    [(empty? n) #t]\n    [(equal? (first n) '#f)\n     (cond\n       [(empty?\
    \ x) #t]\n       [(equal? (first x) '#f)\n        (cond\n         [(empty? n)\
    \ #t]\n         [(equal? (first n) '#f)\n          (cond\n            [(equal?\
    \ (first x) '#f)\n             (cond\n              [(empty? n) #t]\n        \
    \      [(equal? (first n) '#f)\n               (cond\n                 [(empty?\
    \ n) #t]\n                 [(equal? (first n) '#f)\n                  (cond\n\
    \                   [(empty? n) #t]\n                   [(equal? (first n) '#f)\n\
    \                    (cond\n                     [(empty? n) #t]\n           \
    \          [(equal? (first n) '#f)\n                      (cond\n            \
    \           [(empty? n) #t]\n                       [(equal? (first n) '#f)\n\
    \                        (cond\n                         [(empty? n) #t]\n   \
    \                      [(equal? (first n) '#f)\n                          (cond\n\
    \                           [(empty? n) #t]\n                           [(equal?\
    \ (first n) '#f)\n                            (cond\n                        \
    \     [(empty? n) #t]\n                             [(equal? (first n) '#f)\n\
    \                              (cond\n                               [(empty?\
    \ n) #t]\n                               [(equal? (first n) '#f)\n           \
    \                     (cond\n                                 [(empty? n) #t]\n\
    \                                 [(equal? (first n) '#f)\n                  \
    \                (cond\n                                   [(empty? n) #t]\n \
    \                                  [(equal? (first n) '#f)\n                 \
    \                   (cond\n                                     [(empty? n) #t]\n\
    \                                     [(equal? (first n) '#f)\n              \
    \                        (cond\n                                       [(empty?\
    \ n) #t]\n                                       [(equal? (first n) '#f)\n   \
    \                                     (cond\n                                \
    \         [(empty? n) #t]\n                                         [(equal? (first\
    \ n) '#f)\n                                          (cond\n                 \
    \                          [(empty? n) #t]\n                                 \
    \          [(equal? (first n) '#f)\n                                         \
    \   (cond\n                                             [(empty? n) #t]\n    \
    \                                         [(equal? (first n) '#f)\n          \
    \                                    (cond\n                                 \
    \              [(empty? n) #t]\n                                             \
    \  [(equal? (first n) '#f)\n                                                (cond\n\
    \                                                 [(empty? n) #t]\n          \
    \                                       [(equal? (first n) '#f)\n            \
    \                                      ", "  (cond\n    [(number? x) (equal? x\
    \ n)]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\" x) n) (equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" n) x)]\n    [else (error \"Invalid fraction\"))]))\n", " \
    \ (cond\n    [(or (number? x) (number? n))\n     (if (number? x)\n         (if\
    \ (= (length x) 1)\n             (if (= (length n) 1)\n                 (= (number?\
    \ (car x)) (number? (car n))) \n                 (= (number? (car x)) (number?\
    \ (car n)))\n                 (= (number? (car n)) (number? (car x)))\n      \
    \           (= (number? (car n)) (number? (car n)))\n                 (= (number?\
    \ (car x)) (number? (car n)))\n                 (= (number? (car n)) (number?\
    \ (car x)))\n                 (= (number? (car n)) (number? (car n)))\n      \
    \           (= (number? (car x)) (number? (car n)))\n                 (= (number?\
    \ (car n)) (number? (car x)))\n                 (= (number? (car n)) (number?\
    \ (car n))))\n         (if (= (length n) 1)\n             (if (= (length x) 1)\n\
    \                 (= (number? (car x)) (number? (car n)))\n                 (=\
    \ (number? (car n)) (number? (car x)))\n                 (= (number? (car x))\
    \ (number? (car n)))\n                 (= (number? (car n)) (number? (car x)))\n\
    \                 (= (number? (car n)) (number? (car n)))\n                 (=\
    \ (number? (car x)) (number? (car n)))\n                 (= (number? (car n))\
    \ (number? (car x)))\n                 (= (number? (car n)) (number? (car n))))\n\
    \             (if (= (length x) 1)\n                 (if (= (length n) 1)\n  \
    \                   (= (number? (car x)) (number? (car n)))\n                \
    \     (= (number? (car n)) (number? (car x)))\n                     (= (number?\
    \ (car x)) (number? (car n)))\n                     (= (number? (car n)) (number?\
    \ (car x)))\n                     (= (number? (car n)) (number? (car n)))\n  \
    \                   (= (number? (car x)) (number? (car n)))\n                \
    \     (= (number? (car n)) (number? (car x)))\n                     (= (number?\
    \ (car n)) (number? (car n))))", "  (cond\n    [(number? x) (number? n) x]\n \
    \   [(number? n) (number? x) n]\n    [(equal? x n) (equal? x x)]\n    [(equal?\
    \ x \"0\") (equal? n \"0\") x]\n    [(equal? n \"0\") (equal? x \"0\") n]\n  \
    \  [(equal? x \"0\") (equal? n \"0\") \"0\"]\n    [(equal? n \"0\") (equal? x\
    \ \"0\") \"0\"]\n    [(equal? x \"0\") (equal? n \"0\") \"0\"]\n    [(equal? n\
    \ \"0\") (equal? x \"0\") \"0\"]\n    [(equal? x \"0\") (equal? n \"0\") \"0\"\
    ]\n    [(equal? n \"0\") (equal? x \"0\") \"0\"]\n    [(equal? x \"0\") (equal?\
    \ n \"0\") \"0\"]\n    [(equal? n \"0\") (equal? x \"0\") \"0\"]\n    [(equal?\
    \ x \"0\") (equal? n \"0\") \"0\"]\n    [(equal? n \"0\") (equal? x \"0\") \"\
    0\"]\n    [(equal? x \"0\") (equal? n \"0\") \"0\"]\n    [(equal? n \"0\") (equal?\
    \ x \"0\") \"0\"]\n    [(equal? x \"0\") (equal? n \"0\") \"0\"]\n    [(equal?\
    \ n \"0\") (equal? x \"0\") \"0\"]\n    [(equal? x \"0\") (equal? n \"0\") \"\
    0\"]\n    [(equal? n \"0\") (equal? x \"0\") \"0\"]\n    [(equal? x \"0\") (equal?\
    \ n \"0\") \"0\"]\n    [(equal? n \"0\") (equal? x \"0\") \"0\"]\n    [(equal?\
    \ x \"0\") (equal? n \"0\") \"0\"]\n    [(equal? n \"0\") (equal? x \"0\") \"\
    0\"]\n    [(equal? x \"0\") (equal? n \"0\") \"0\"]\n    [(equal? n \"0\") (equal?\
    \ x \"0\") \"0\"]\n    [(equal? x \"0\") (equal? n \"0\") \"0\"]\n    [(", " \
    \ (cond\n    [(number? x) (number? n)]\n    [(number? n) (number? x)]\n    [(number?\
    \ n) (number? x) (number? n)]\n    [(number? x) (number? n) (number? x)]\n   \
    \ [(number? n) (number? x) (number? n) (number? x)]\n    [(number? x) (number?\
    \ n) (number? x) (number? n) (number? x)]\n    [(number? n) (number? x) (number?\
    \ n) (number? x) (number? n)]\n    [(number? x) (number? n) (number? x) (number?\
    \ n) (number? x) (number? n)]\n    [(number? n) (number? x) (number? n) (number?\
    \ x) (number? n) (number? x)]\n    [(number? x) (number? n) (number? x) (number?\
    \ n) (number? x) (number? n) (number? x)]\n    [(number? n) (number? x) (number?\
    \ n) (number? x) (number? n) (number? x) (number? n)]\n    [(number? x) (number?\
    \ n) (number? x) (number? n) (number? x) (number? n) (number? x) (number? n)]\n\
    \    [(number? n) (number? x) (number? n) (number? x) (number? n) (number? x)\
    \ (number? n) (number? x)]\n    [(number? x) (number? n) (number? x) (number?\
    \ n) (number? x) (number? n) (number? x) (number? n) (number? x)]\n    [(number?\
    \ n) (number? x) (number? n) (number? x) (number? n) (number? x) (number? n) (number?\
    \ x) (number? n)]\n    [(number? x) (number? n) (number? x) (number? n) (number?\
    \ x) (number? n) (number? x) (number? n) (number? x) (number? n)]\n    [(number?\
    \ n) (number? x) (number? n) (number? x) (number? n) (number? x) (number? n) (number?\
    \ x) (number? n) (number? x) (number? n)]\n    [(number? x) (number? n) (number?\
    \ x) (number? n) (number? x) (number? n) (number? x) (number? n) (number? x) (",
  "  (cond\n    [(or (number? x) (number? n)) #f]\n    [(and (number? x) (number?\
    \ n)) (= (/ x n) 1)]\n    [(and (number? x) (not (number? n))) (= (/ x n) 0)]\n\
    \    [(and (number? n) (number? x)) (= (/ x n) 1)]\n    [(and (number? n) (not\
    \ (number? x))) (= (/ x n) 0)]\n    [else (= (/ x n) (/ x n))]\n  )\n)\n", " \
    \ (cond\n    [(number? n) x]\n    [(equal? x \"0\") \"0\"]\n    [(equal? x \"\
    1\") \"1\"]\n    [(equal? x \"-1\") \"-1\"]\n    [(equal? x \"1/0\") \"1/0\"]\n\
    \    [(equal? x \"1/1\") \"1/1\"]\n    [(equal? x \"1/-1\") \"1/-1\"]\n    [(equal?\
    \ x \"1/2\") \"1/2\"]\n    [(equal? x \"1/-2\") \"1/-2\"]\n    [(equal? x \"1/3\"\
    ) \"1/3\"]\n    [(equal? x \"1/-3\") \"1/-3\"]\n    [(equal? x \"1/4\") \"1/4\"\
    ]\n    [(equal? x \"1/-4\") \"1/-4\"]\n    [(equal? x \"1/5\") \"1/5\"]\n    [(equal?\
    \ x \"1/-5\") \"1/-5\"]\n    [(equal? x \"1/6\") \"1/6\"]\n    [(equal? x \"1/-6\"\
    ) \"1/-6\"]\n    [(equal? x \"1/7\") \"1/7\"]\n    [(equal? x \"1/-7\") \"1/-7\"\
    ]\n    [(equal? x \"1/8\") \"1/8\"]\n    [(equal? x \"1/-8\") \"1/-8\"]\n    [(equal?\
    \ x \"1/9\") \"1/9\"]\n    [(equal? x \"1/-9\") \"1/-9\"]\n    [(equal? x \"1/10\"\
    ) \"1/10\"]\n    [(equal? x \"1/-10\") \"1/-10\"]\n    [(equal? x \"1/11\") \"\
    1/11\"]\n    [(equal? x \"1/-11\") \"1/-11\"]\n    [(equal? x \"1/12\") \"1/12\"\
    ]\n    [(equal? x \"1/-12\") \"1/-12\"]\n    [(equal? x \"1/13\") \"1/13\"]\n\
    \    [(equal? x \"1/-13\") \"1/-13\"]\n    [(equal? x \"1/14\") \"1/14\"]\n  \
    \  [(equal? x \"1/-14\") \"1/-14\"]\n    [(equal? x \"1/15\") \"1/15\"]\n    [(equal?\
    \ x \"1/-15\") \"1/-15\"]\n    [(equal? x \"1/16\") \"1/16\"]\n    [(equal? x\
    \ \"1/-16\") \"1/-16\"]\n    [(equal", "  (cond\n    [(number? x) (number? n)\
    \ x]\n    [(number? n) (number? x) n]\n    [(equal? x n) (number? x) x]\n    [(equal?\
    \ n x) (number? n) n]\n    [(equal? (string->number x) (string->number n)) (string->number\
    \ x) (string->number n)]\n    [(equal? (string->number n) (string->number x))\
    \ (string->number n) (string->number x)]\n    [(equal? (string->number x) (string->number\
    \ n)) (string->number x) (string->number n)]\n    [(equal? (string->number n)\
    \ (string->number x)) (string->number n) (string->number x)]\n    [else (error\
    \ \"Invalid fraction format\")]))\n", "  (cond\n    [(equal? (string-length x)\
    \ 0)\n     (if (equal? (string-length n) 0)\n         #f\n         (string-append\
    \ \"1/\" (string-length n)))]\n    [(equal? (string-length x) 0)\n     (if (equal?\
    \ (string-length n) 0)\n         #f\n         (string-append \"1/\" (string-length\
    \ n)))]\n    [(equal? (string-length x) 0)\n     (if (equal? (string-length n)\
    \ 0)\n         #f\n         (string-append \"1/\" (string-length n)))]\n    [(equal?\
    \ (string-length x) 0)\n     (if (equal? (string-length n) 0)\n         #f\n \
    \        (string-append \"1/\" (string-length n)))]\n    [(equal? (string-length\
    \ x) 0)\n     (if (equal? (string-length n) 0)\n         #f\n         (string-append\
    \ \"1/\" (string-length n)))]\n    [(equal? (string-length x) 0)\n     (if (equal?\
    \ (string-length n) 0)\n         #f\n         (string-append \"1/\" (string-length\
    \ n)))]\n    [(equal? (string-length x) 0)\n     (if (equal? (string-length n)\
    \ 0)\n         #f\n         (string-append \"1/\" (string-length n)))]\n    [(equal?\
    \ (string-length x) 0)\n     (if (equal? (string-length n) 0)\n         #f\n \
    \        (string-append \"1/\" (string-length n)))]\n    [(equal? (string-length\
    \ x) 0)\n     (if (equal? (string-length n) 0)\n         #f\n         (string-append\
    \ \"1/\" (string-length n)))]\n    [(equal? (string-length x) 0)\n     (if (equal?\
    \ (string-length n) 0)\n         #f\n         (string-append \"1/\" (string-length\
    \ n)))]\n    [(equal? (string-length x) 0)\n     (if (equal? (string-length n)\
    \ 0)\n         #f\n         (string-append \"1/\" (string-length n)))]\n    [(equal?\
    \ (string-length x) 0)\n     (if (equal? (string-length n) 0)\n         #f\n \
    \        (string-append \"1/\" (string-length n)))]\n    [(equal? (string-length\
    \ x) 0)\n     (if (equal? (string-length n) 0)\n         #f\n         (string-append\
    \ \"1/\" (string-length n)))]\n    [(equal? (string-length x) 0)\n     (if (equal?\
    \ (string-length n) 0)\n         #f\n         (string-append \"1/\" (string-length\
    \ n)))]\n    [(equal? (string-length x) 0)\n     (if (equal? (string-length n)\
    \ 0)\n         #f\n         (string-append \"1/\" (string-length n)))]", "  (cond\n\
    \    [(number? x) (number? n) x]\n    [(equal? x n) x]\n    [(equal? (string->number\
    \ x) (string->number n)) x]\n    [(equal? (string->number x) (string->number (string->number\
    \ n)) (* x n))]\n    [(equal? (string->number (string->number x)) (string->number\
    \ (string->number n)) (* n x))]\n    [(equal? (string->number (string->number\
    \ x)) (string->number (string->number (string->number n)) (* x n)) (* n x))]\n\
    \    [(equal? (string->number (string->number (string->number x)) (string->number\
    \ (string->number (string->number n)) (* x n)) (* n x)) (* x n)]\n    [(equal?\
    \ (string->number (string->number (string->number (string->number x)) (string->number\
    \ (string->number (string->number n)) (* x n)) (* n x)) (* n x)) (* x n)]\n  \
    \  [(equal? (string->number (string->number (string->number (string->number (string->number\
    \ x)) (string->number (string->number (string->number n)) (* x n)) (* n x)) (*\
    \ n x)) (* n x)) (* x n)]\n    [(equal? (string->number (string->number (string->number\
    \ (string->number (string->number (string->number x)) (string->number (string->number\
    \ (string->number n)) (* x n)) (* n x)) (* n x)) (* n x)) (* n x)) (* x n)]\n\
    \    [(equal? (string->number (string->number (string->number (string->number\
    \ (string->number (string->number (string->number x)) (string->number (string->number\
    \ (string->number n)) (* x n)) (* n x)) (* n x)) (* n x)) (* n x)) (* n x)) (*\
    \ x n)]\n    [(equal? (string->number (string->number (string->number (string->number\
    \ (string->number (string->number (string->number (string->number x)) (string->number\
    \ (string->number (string->number n)) (* x n)) (* n x)) (* n x)) (* n x)) (* n\
    \ x)) (* n x)) (* n x)) (* x n)]\n    [(equal? (string->number (string->number\
    \ (string->number (string->number (string->number (", "  (cond\n    [(number?\
    \ x) (number? n)]\n    [(zero? n) #f]\n    [(zero? x) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n    [else\
    \ (cond [(equal? (string-length x) (string-length n)) (equal? (string-length x)\
    \ (string-length n))]\n              [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n              [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n      \
    \        [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n              [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n              [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n      \
    \        [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n              [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n              [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n      \
    \        [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n              [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n              [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n      \
    \        [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n              [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n              [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n      \
    \        [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length n))]\n              [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-length x) (string-length n))]\n              [(equal? (string-length\
    \ x) (string-length n)) (equal? (string-length x) (string-length n))]\n      \
    \        [(equal? (string-length x) (string-length n)) (equal? (string-length\
    \ x) (string-length ", "  (cond\n    [(number? x) (equal? x n) #t]\n    [(equal?\
    \ (string-ref x 0) \"0\") #f]\n    [(equal? (string-ref x 0) \"1\") (equal? (string-ref\
    \ n 0) \"0\") #f]\n    [else (equal? (string-ref x 0) \"1\") (equal? (string-ref\
    \ n 0) \"1\") (equal? (string-ref n 1) \"0\") (equal? (string-ref x 1) \"1\")\
    \ (equal? (string-ref x 2) \"0\") (equal? (string-ref x 3) \"1\") (equal? (string-ref\
    \ x 4) \"0\") (equal? (string-ref x 5) \"1\") (equal? (string-ref x 6) \"0\")\
    \ (equal? (string-ref x 7) \"1\") (equal? (string-ref x 8) \"0\") (equal? (string-ref\
    \ x 9) \"1\") (equal? (string-ref x 10) \"0\") (equal? (string-ref x 11) \"1\"\
    ) (equal? (string-ref x 12) \"0\") (equal? (string-ref x 13) \"1\") (equal? (string-ref\
    \ x 14) \"0\") (equal? (string-ref x 15) \"1\") (equal? (string-ref x 16) \"0\"\
    ) (equal? (string-ref x 17) \"1\") (equal? (string-ref x 18) \"0\") (equal? (string-ref\
    \ x 19) \"1\") (equal? (string-ref x 20) \"0\") (equal? (string-ref x 21) \"1\"\
    ) (equal? (string-ref x 22) \"0\") (equal? (string-ref x 23) \"1\") (equal? (string-ref\
    \ x 24) \"0\") (equal? (string-ref x 25) \"1\") (equal? (string-ref x 26) \"0\"\
    ) (equal? (string-ref x 27) \"1\") (equal? (string-ref x 28) \"0\") (equal? (string-ref\
    \ x 29) \"1\") (equal? (string-ref x 30) \"0\") (equal? (string-ref x 31) \"1\"\
    ) (equal? (string-ref x 32) \"0\") (equal? (string-ref x 33) \"1\") (equal? (string-ref\
    \ x 34) \"0\") (equal? (string-ref x 35) \"1\") (equal? (string-ref x 36) \"0\"\
    ) (equal? (string-ref x 37) \"1\") (equal? (string-ref x 38) \"0\") (equal? (string-ref\
    \ x 39) \"1\") (equal? (string-ref x 40) \"0\") (equal? (string-ref x 41) \"1\"\
    ) (equal? (string-ref x 42) \"0\") (equal", "  (cond\n    [(number? x) (number?\
    \ n)]\n    [(equal? x n) #t]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string", "  (cond\n    [(empty? n) #f]\n    [(equal? (first n) '()) #f]\n\
    \    [(equal? (first n) '(0)) #f]\n    [(equal? (first n) '(1)) #t]\n    [(equal?\
    \ (first n) '(1/2)) #t]\n    [(equal? (first n) '(1/3)) #t]\n    [(equal? (first\
    \ n) '(1/4)) #t]\n    [(equal? (first n) '(1/5)) #t]\n    [(equal? (first n) '(1/6))\
    \ #t]\n    [(equal? (first n) '(1/7)) #t]\n    [(equal? (first n) '(1/8)) #t]\n\
    \    [(equal? (first n) '(1/9)) #t]\n    [(equal? (first n) '(1/10)) #t]\n   \
    \ [(equal? (first n) '(1/11)  #t]\n    [(equal? (first n) '(1/12)  #t]\n    [(equal?\
    \ (first n) '(1/13)  #t]\n    [(equal? (first n) '(1/14)  #t]\n    [(equal? (first\
    \ n) '(1/15)  #t]\n    [(equal? (first n) '(1/16)  #t]\n    [(equal? (first n)\
    \ '(1/17)  #t]\n    [(equal? (first n) '(1/18)  #t]\n    [(equal? (first n) '(1/19)\
    \  #t]\n    [(equal? (first n) '(1/20)  #t]\n    [(equal? (first n) '(1/21)  #t]\n\
    \    [(equal? (first n) '(1/22)  #t]\n    [(equal? (first n) '(1/23)  #t]\n  \
    \  [(equal? (first n) '(1/24)  #t]\n    [(equal? (first n) '(1/25)  #t]\n    [(equal?\
    \ (first n) '(1/26)  #t]\n    [(equal? (first n) '(1/27)  #t]\n    [(equal? (first\
    \ n) '(1/28)  #t]\n    [(equal? (first n) '(1/29)  #t]\n    [(equal? (first n)\
    \ '(1/30)  #t]\n    [(equal? (first n) '(1/31)  #t]\n    [(equal? (", "  (cond\n\
    \    [(number? x) (number? n) x]\n    [(number? n) (number? x) n]\n    [(equal?\
    \ x n) (number? x) x]\n    [(equal? n x) (number? n) n]\n    [(equal? x \"0\"\
    ) (number? x) x]\n    [(equal? n \"0\") (number? n) n]\n    [(equal? (string->number\
    \ x) (string->number n)) (number? x) x]\n    [(equal? (string->number n) (string->number\
    \ x)) (number? n) n]\n    [(equal? (string->number x) (string->number n)) (string->number\
    \ x) x]\n    [(equal? (string->number n) (string->number x)) (string->number n)\
    \ n]\n    [else (error \"Invalid arguments\")]))\n", "  (cond\n    [(number? x)\
    \ (number? n)]\n    [(equal? x n) #t]\n    [(equal? x \"0\") #f]\n    [(equal?\
    \ (string->number x) (string->number n)) #f]\n    [(equal? (string->number x)\
    \ (string->number (string->number n)) #t)\n     (number? (string->number (string->number\
    \ n)))]\n    [else (simplify (string->number (string->number x)) (string->number\
    \ (string->number n)))]))\n", "  (cond\n    [(empty? n) #f]\n    [(equal? (first\
    \ n) '()) #f]\n    [(equal? (first n) '(0)) #f]\n    [(equal? (first n) '(1))\
    \ #f]\n    [(equal? (first n) '(1/2)) #t]\n    [(equal? (first n) '(1/3)) #t]\n\
    \    [(equal? (first n) '(1/4)) #t]\n    [(equal? (first n) '(1/5)) #t]\n    [(equal?\
    \ (first n) '(1/6)) #t]\n    [(equal? (first n) '(1/7)) #t]\n    [(equal? (first\
    \ n) '(1/8)) #t]\n    [(equal? (first n) '(1/9)) #t]\n    [(equal? (first n) '(1/10))\
    \ #t]\n    [(equal? (first n) '(1/11)  #t]\n    [(equal? (first n) '(1/12)  #t]\n\
    \    [(equal? (first n) '(1/13)  #t]\n    [(equal? (first n) '(1/14)  #t]\n  \
    \  [(equal? (first n) '(1/15)  #t]\n    [(equal? (first n) '(1/16)  #t]\n    [(equal?\
    \ (first n) '(1/17)  #t]\n    [(equal? (first n) '(1/18)  #t]\n    [(equal? (first\
    \ n) '(1/19)  #t]\n    [(equal? (first n) '(1/20)  #t]\n    [(equal? (first n)\
    \ '(1/21)  #t]\n    [(equal? (first n) '(1/22)  #t]\n    [(equal? (first n) '(1/23)\
    \  #t]\n    [(equal? (first n) '(1/24)  #t]\n    [(equal? (first n) '(1/25)  #t]\n\
    \    [(equal? (first n) '(1/26)  #t]\n    [(equal? (first n) '(1/27)  #t]\n  \
    \  [(equal? (first n) '(1/28)  #t]\n    [(equal? (first n) '(1/29)  #t]\n    [(equal?\
    \ (first n) '(1/30)  #t]\n    [(equal? (first n) '(1/31)  #t]\n    [(equal? (",
  "  (cond\n    [(equal? x n) #t]\n    [(equal? n 0) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal? (string-length\
    \ x) (string-length n)) #f]\n    [(equal? (string-length x) (string-length n))\
    \ #f]\n    [(equal? (string-length x) (string-length ", "  (cond\n    [(number?\
    \ x) (number? n) x]\n    [(equal? x n) #t]\n    [(equal? (string->number x) (string->number\
    \ n)) x]\n    [(equal? (string->number x) (string->number n)) (number->string\
    \ x)]\n    [else (if (equal? (string->number n) (string->number x))\n        \
    \      (number->string n)\n              (number->string x))]))\n", "  (cond\n\
    \    [(and (number? x) (number? n)) (equal? x (/ x n))]\n    [(and (number? n)\
    \ (number? x)) (equal? n (/ x x))]\n    [(and (number? n) (number? x)) (equal?\
    \ n (/ x x))]\n    [(and (number? n) (number? x)) (equal? n (/ x x))]\n    [(and\
    \ (number? n) (number? x)) (equal? n (/ x x))]\n    [(and (number? n) (number?\
    \ x)) (equal? n (/ x x))]\n    [(and (number? n) (number? x)) (equal? n (/ x x))]\n\
    \    [(and (number? n) (number? x)) (equal? n (/ x x))]\n    [(and (number? n)\
    \ (number? x)) (equal? n (/ x x))]\n    [(and (number? n) (number? x)) (equal?\
    \ n (/ x x))]\n    [(and (number? n) (number? x)) (equal? n (/ x x))]\n    [(and\
    \ (number? n) (number? x)) (equal? n (/ x x))]\n    [(and (number? n) (number?\
    \ x)) (equal? n (/ x x))]\n    [(and (number? n) (number? x)) (equal? n (/ x x))]\n\
    \    [(and (number? n) (number? x)) (equal? n (/ x x))]\n    [(and (number? n)\
    \ (number? x)) (equal? n (/ x x))]\n    [(and (number? n) (number? x)) (equal?\
    \ n (/ x x))]\n    [(and (number? n) (number? x)) (equal? n (/ x x))]\n    [(and\
    \ (number? n) (number? x)) (equal? n (/ x x))]\n    [(and (number? n) (number?\
    \ x)) (equal? n (/ x x))]\n    [(and (number? n) (number? x)) (equal? n (/ x x))]\n\
    \    [(and (number? n) (number? x)) (equal? n (/ x x))]\n    [(and (number? n)\
    \ (number? x)) (equal? n (/ x x))]\n    [(and (number? n) (number? x)) (equal?\
    \ n (/ x x))]\n    [(and (number? ", "  (cond\n    [(empty? n) #f]\n    [(equal?\
    \ (first n) '()) #f]\n    [(equal? (first n) '(0)) #f]\n    [(equal? (first n)\
    \ '(1)) #f]\n    [(equal? (first n) '(0)) #f]\n    [(equal? (first n) '(1)) #f]\n\
    \    [(equal? (first n) '(0)) #f]\n    [(equal? (first n) '(1)) #f]\n    [(equal?\
    \ (first n) '(0)) #f]\n    [(equal? (first n) '(1)) #f]\n    [(equal? (first n)\
    \ '(0)) #f]\n    [(equal? (first n) '(1)) #f]\n    [(equal? (first n) '(0)) #f]\n\
    \    [(equal? (first n) '(1)) #f]\n    [(equal? (first n) '(0)) #f]\n    [(equal?\
    \ (first n) '(1)) #f]\n    [(equal? (first n) '(0)) #f]\n    [(equal? (first n)\
    \ '(1)) #f]\n    [(equal? (first n) '(0)) #f]\n    [(equal? (first n) '(1)) #f]\n\
    \    [(equal? (first n) '(0)) #f]\n    [(equal? (first n) '(1)) #f]\n    [(equal?\
    \ (first n) '(0)) #f]\n    [(equal? (first n) '(1)) #f]\n    [(equal? (first n)\
    \ '(0)) #f]\n    [(equal? (first n) '(1)) #f]\n    [(equal? (first n) '(0)) #f]\n\
    \    [(equal? (first n) '(1)) #f]\n    [(equal? (first n) '(0)) #f]\n    [(equal?\
    \ (first n) '(1)) #f]\n    [(equal? (first n) '(0)) #f]\n    [(equal? (first n)\
    \ '(1)) #f]\n    [(equal? (first n) '(0)) #f]\n    [(equal? (first n) '(1)) #f]\n\
    \    [(equal? (first n) '(0)) #f]\n    [(equal? (first n) '(1)) #f]\n    [(equal?\
    \ (first n) '(0)) #f]\n    [(equal? (first n) '(1)) #f]\n    [(equal? (first n)\
    \ '(0)) #f]\n    [(equal? (first n", "  (cond\n    [(number? n) x]\n    [(zero?\
    \ n) x]\n    [(equal? (string-length x) (string-length n)) x]\n    [else (cond\n\
    \            [(equal? (string-length x) (string-length n)) x]\n            [else\
    \ (cond\n                    [(string-ref x 0) (string-ref n 0)]\n           \
    \         [else (cond\n                            [(equal? (string-ref x 0) (string-ref\
    \ n 0)) x]\n                            [else (cond\n                        \
    \            [(equal? (string-ref x 1) (string-ref n 1)) x]\n                \
    \                    [else (cond\n                                           \
    \ [(equal? (string-ref x 0) (string-ref n 0)) x]\n                           \
    \                 [else (cond\n                                              \
    \      [(equal? (string-ref x 1) (string-ref n 1)) x]\n                      \
    \                              [else (cond\n                                 \
    \                           [(equal? (string-ref x 0) (string-ref n 0)) x]\n \
    \                                                           [else (cond\n    \
    \                                                                [(equal? (string-ref\
    \ x 1) (string-ref n 1)) x]\n                                                \
    \                    [else (cond\n                                           \
    \                                 [(equal? (string-ref x 0) (string-ref n 0))\
    \ x]\n                                                                       \
    \     [else (cond\n                                                          \
    \                          [(equal? (string-ref x 1) (string-ref n 1)) x]\n  \
    \                                                                            \
    \      [else (cond\n                                                         \
    \                   [(equal? (string-ref x 0) (string-ref n 0)) x]\n         \
    \                                                                   [else (cond\n\
    \                                                                            \
    \                        [(equal? (string-ref x 1) (string-ref n 1)) x]\n    \
    \                                                                            \
    \                    [else (cond\n                                           \
    \                                 [(equal? (string-ref x 0) (string-ref n 0))\
    \ x]\n                                                                       \
    \     [else (cond\n                                                          \
    \                                          [(equal? (string-ref x 1) (string-ref\
    \ n 1)) x]\n                                                                 \
    \                                   [else (cond\n                            \
    \                                                [(equal? (string-ref x 0) (string-ref\
    \ n 0)) x]\n                                                                 \
    \           [else (cond\n                                                    \
    \                                                [(equal? (string-ref x 1) (string-ref\
    \ n 1)) x]\n                                                                 \
    \                                   [else (cond\n                            \
    \                                                [(equal? (string-ref x 0) (string-ref\
    \ n 0)) x]\n                                                                 \
    \           [else (cond\n                                                    \
    \                                                [(equal? (string-ref x 1) (string-ref\
    \ n 1)) x]\n                                                                 \
    \                                   [else (cond\n                            \
    \                                                [(equal? (string-ref x 0) (string-ref\
    \ n 0)) x]\n                                                                 \
    \           [else (cond\n                                                    \
    \                                                [(equal? (string-ref x 1) (string-ref\
    \ n 1)) x]\n                                                                 \
    \                                   [else (cond\n                            \
    \                                                [(equal? (string-ref x 0) (string-ref\
    \ n 0)) x]\n                                                                 \
    \           [else (cond\n                                                    \
    \                                                [(equal? (", "  (cond\n    [(equal?\
    \ x n) #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\" x) n) #t]\n    [(equal?\
    \ (string-match \"^[0-9]+/[0-9]+$\" n) x) #f]\n    [else (simplify (substring\
    \ x 0 1) (substring n 0 1))]))\n", "  (cond\n    [(equal? x n) #t]\n    [(equal?\
    \ (string-match \"^[0-9]+/[0-9]+$\" x) n) #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ n) x) #f]\n    [else (simplify (substring x 0 (string-length x)) (substring\
    \ n 0 (string-length n)))]))\n", "  (cond\n    [(number? x) (number? n)]\n   \
    \ [(equal? x n) #t]\n    [(equal? (string->number x) (string->number n)) #t]\n\
    \    [(equal? (string->number x) (string->number (string->number n)) #t]\n   \
    \ [(equal? (string->number (string->number x)) (string->number (string->number\
    \ n)) #t]\n    [else #f]))\n", "  (cond\n    [(number? x) (number? n)]\n    [(zero?\
    \ n) (number? x)]\n    [(zero? x) (number? n)]\n    [(equal? x n) (number? x)]\n\
    \    [(equal? n x) (number? n)]\n    [(equal? (string->number x) (string->number\
    \ n)) (number? x)]\n    [(equal? (string->number n) (string->number x)) (number?\
    \ n)]\n    [else (equal? (string->number x) (string->number n)) (number? x)]\n\
    \  ))\n", "  (cond\n    [(equal? x n) #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ x) n) #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\" n) x) #f]\n    [else\
    \ (simplify (substring x 0 (string-length x)) (substring n 0 (string-length n)))]))\n",
  "  (cond\n    [(number? x) (number? n)]\n    [(zero? n) (number? x)]\n    [(zero?\
    \ x) (number? n)]\n    [(zero? n) (zero? x)]\n    [else (if (string=? (simplify\
    \ (number->string x) n) (number->string x))\n              (if (string=? (simplify\
    \ (number->string n) x) (number->string n))\n                  (if (string=? (simplify\
    \ (number->string n) (number->string x)) (number->string x))\n               \
    \       (if (string=? (simplify (number->string x) (number->string n)) (number->string\
    \ x))\n                          (if (string=? (simplify (number->string x) (number->string\
    \ n)) (number->string x))\n                              (if (string=? (simplify\
    \ (number->string n) (number->string x)) (number->string x))\n               \
    \                   (if (string=? (simplify (number->string x) (number->string\
    \ n)) (number->string x))\n                                      (if (string=?\
    \ (simplify (number->string n) (number->string x)) (number->string x))\n     \
    \                                     (if (string=? (simplify (number->string\
    \ x) (number->string n)) (number->string x))\n                               \
    \               (if (string=? (simplify (number->string n) (number->string x))\
    \ (number->string x))\n                                                  (if (string=?\
    \ (simplify (number->string x) (number->string n)) (number->string x))\n     \
    \                                                 (if (string=? (simplify (number->string\
    \ n) (number->string x)) (number->string x))\n                               \
    \                           (if (string=? (simplify (number->string x) (number->string\
    \ n)) (number->string x))\n                                                  \
    \            (if (string=? (simplify (number->string n) (number->string x)) (number->string\
    \ x))\n                                                                  (if (string=?\
    \ (simplify (number->string x) (number->string n)) (number->string x))\n     \
    \                                                                 (if (string=?\
    \ (simplify (number->string n) (number->string x)) (number->string x))\n     \
    \                                                                     (if (string=?\
    \ (simplify (number->string x) (number->string n)) (number->string x))\n     \
    \                                                                         (if\
    \ (string=? (simplify (number->string n) (number->string x)) (number->string x))\n\
    \                                                                            \
    \      (if (string=? (simplify (number->string x) (number->string n)) (number->string\
    \ x))\n                                                                      \
    \                (if (string=? (simplify (number->string n) (", "  (cond\n   \
    \ [(number? x) (number? n)]\n    [(zero? n) x]\n    [(zero? x) n]\n    [(equal?\
    \ (string-length x) (string-length n)) (simplify (string-append x (string->list\
    \ n)))]\n    [else (simplify (string-append x (string->list n)) (string-append\
    \ n (string->list x)))]))\n", "  (cond\n    [(equal? x n) #t]\n    [(equal? x\
    \ '()) #f]\n    [(equal? (first x) '()) (simplify (first x) n)]\n    [(equal?\
    \ (first x) '(#\\0)) (simplify (first x) n)]\n    [(equal? (first x) '(#\\1))\
    \ (simplify (first x) n)]\n    [(equal? (first x) '(#\\2)) (simplify (first x)\
    \ n)]\n    [(equal? (first x) '(#\\3)) (simplify (first x) n)]\n    [(equal? (first\
    \ x) '(#\\4)) (simplify (first x) n)]\n    [(equal? (first x) '(#\\5)) (simplify\
    \ (first x) n)]\n    [(equal? (first x) '(#\\6)) (simplify (first x) n)]\n   \
    \ [(equal? (first x) '(#\\7)) (simplify (first x) n)]\n    [(equal? (first x)\
    \ '(#\\8)) (simplify (first x) n)]\n    [(equal? (first x) '(#\\9)) (simplify\
    \ (first x) n)]\n    [(equal? (first x) '(#\\10)) (simplify (first x) n)]\n  \
    \  [(equal? (first x) '(#\\11)) (simplify (first x) n)]\n    [(equal? (first x)\
    \ '(#\\12)) (simplify (first x) n)]\n    [(equal? (first x) '(#\\13)) (simplify\
    \ (first x) n)]\n    [(equal? (first x) '(#\\14)) (simplify (first x) n)]\n  \
    \  [(equal? (first x) '(#\\15)) (simplify (first x) n)]\n    [(equal? (first x)\
    \ '(#\\16)) (simplify (first x) n)]\n    [(equal? (first x) '(#\\17)) (simplify\
    \ (first x) n)]\n    [(equal? (first x) '(#\\18)) (simplify (first x) n)]\n  \
    \  [(equal? (first x) '(#\\19)) (simplify (first x) n)]\n    [(equal? (first x)\
    \ '(#\\20)) (simplify (first x) n)]\n    [(equal? (first x) '(#\\21)) (simplify\
    \ (first x) n)]\n    [(equal? (first x) '(#\\22)) (simplify (first x) n)]\n  \
    \  [(equal? (first x) '(#\\23)) (simplify (first x) n)]", "  (cond\n    [(number?\
    \ x) (number? n)]\n    [(number? n) (number? x)]\n    [(zero? n) (zero? x)]\n\
    \    [(zero? x) (zero? n)]\n    [(equal? x n) (equal? x x)]\n    [(equal? n x)\
    \ (equal? n n)]\n    [(equal? x \"0\") (equal? n \"0\")]\n    [(equal? n \"0\"\
    ) (equal? x \"0\")]\n    [(equal? x \"0\") (equal? n \"0\")]\n    [(equal? n \"\
    0\") (equal? x \"0\")]\n    [(equal? x \"0\") (equal? n \"0\")]\n    [(equal?\
    \ n \"0\") (equal? x \"0\")]\n    [(equal? x \"0\") (equal? n \"0\")]\n    [(equal?\
    \ n \"0\") (equal? x \"0\")]\n    [(equal? x \"0\") (equal? n \"0\")]\n    [(equal?\
    \ n \"0\") (equal? x \"0\")]\n    [(equal? x \"0\") (equal? n \"0\")]\n    [(equal?\
    \ n \"0\") (equal? x \"0\")]\n    [(equal? x \"0\") (equal? n \"0\")]\n    [(equal?\
    \ n \"0\") (equal? x \"0\")]\n    [(equal? x \"0\") (equal? n \"0\")]\n    [(equal?\
    \ n \"0\") (equal? x \"0\")]\n    [(equal? x \"0\") (equal? n \"0\")]\n    [(equal?\
    \ n \"0\") (equal? x \"0\")]\n    [(equal? x \"0\") (equal? n \"0\")]\n    [(equal?\
    \ n \"0\") (equal? x \"0\")]\n    [(equal? x \"0\") (equal? n \"0\")]\n    [(equal?\
    \ n \"0\") (equal? x \"0\")]\n    [(equal? x \"0\") (equal? n \"0\")]\n    [(equal?\
    \ n \"0\") (equal? x \"0\")]\n    [(equal? x \"0\") (equal? n \"0\")]\n    [(equal?\
    \ n \"0\") (equal? x \"0\")]\n    [(equal? x \"0\") (equal? n \"0\")]\n    [(equal?\
    \ n \"0", "  (cond\n    [(equal? x n) #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ x) n) #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\" n) x) #f]\n    [else\
    \ (simplify (substring x 0 1) (substring n 0 1))]))\n", "  (cond\n    [(equal?\
    \ x n) #t]\n    [(equal? n 0) #f]\n    [(equal? (string-length x) (string-length\
    \ n)) #f]\n    [(equal? (string-length x) (string-length n)) #f]\n    [(equal?\
    \ (string-length x) (string-length n)) #f]\n    [else (equal? (string-length x)\
    \ (string-length n)) #t]\n    [else (equal? (string-length x) (string-length n))\
    \ #t]\n    [else (equal? (string-length x) (string-length n)) #t]\n    [else (equal?\
    \ (string-length x) (string-length n)) #t]\n    [else (equal? (string-length x)\
    \ (string-length n)) #t]\n    [else (equal? (string-length x) (string-length n))\
    \ #t]\n    [else (equal? (string-length x) (string-length n)) #t]\n    [else (equal?\
    \ (string-length x) (string-length n)) #t]\n    [else (equal? (string-length x)\
    \ (string-length n)) #t]\n    [else (equal? (string-length x) (string-length n))\
    \ #t]\n    [else (equal? (string-length x) (string-length n)) #t]\n    [else (equal?\
    \ (string-length x) (string-length n)) #t]\n    [else (equal? (string-length x)\
    \ (string-length n)) #t]\n    [else (equal? (string-length x) (string-length n))\
    \ #t]\n    [else (equal? (string-length x) (string-length n)) #t]\n    [else (equal?\
    \ (string-length x) (string-length n)) #t]\n    [else (equal? (string-length x)\
    \ (string-length n)) #t]\n    [else (equal? (string-length x) (string-length n))\
    \ #t]\n    [else (equal? (string-length x) (string-length n)) #t]\n    [else (equal?\
    \ (string-length x) (string-length n)) #t]\n    [else (equal? (string-length x)\
    \ (string-length n)) #t]\n    [else (equal? (string-length x) (string-length n))\
    \ #t]\n    [else (equal? (string-length x) (string-length n)) #t]\n    [else (equal?\
    \ (string-length x) (string-length n)) #t]\n    [else (equal? (string-length x)\
    \ (string-length n)) #t]\n    [else (equal? (string-length x) (string-length n))\
    \ #t]\n    [else (", "  (cond\n    [(number? x) (number? n)]\n    [(zero? n) #f]\n\
    \    [(zero? x) #f]\n    [(equal? x n) x]\n    [else (* x n)]))\n", "  (cond\n\
    \    [(equal? x n) #t]\n    [(equal? n \"0\") #f]\n    [(equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" x) true) #t]\n    [else (equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ x) false)]))\n", "  (cond\n    [(number? x) (number? n)]\n    [(zero? n) #f]\n\
    \    [(zero? x) #f]\n    [(equal? (string-length x) (string-length n)) (number?\
    \ (string-append x n))]))\n", "  (cond\n    [(equal? (string-length x) 0) #f]\n\
    \    [(equal? (string-length n) 0) #f]\n    [(equal? (string-length x) (string-length\
    \ n)) (equal? (string-append x (string-append \"/\" n)) \"1/1\")]\n    [else (equal?\
    \ (string-append x (string-append \"/\" n)) \"1/1\")]\n  )\n)\n", "  (cond\n \
    \   [(equal? x n) #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\" x) n) #t]\n\
    \    [else #f]))\n", "  (cond\n    [(equal? x n) #t]\n    [(equal? (string-match\
    \ \"^[0-9]+/[0-9]+$\" x) n) #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\"\
    \ n) x) #f]\n    [else (simplify (substring x 0 (string-length x)) (substring\
    \ n 0 (string-length n)))]))\n", "  (cond\n    [(number? x) (number? n)]\n   \
    \ [(equal? x n) #t]\n    [(equal? (string->number x) (string->number n)) #t]\n\
    \    [(equal? (string->number n) (string->number x)) #f]\n    [else (equal? (string->number\
    \ x) (string->number n)) (simplify x (string->number n))]))\n", "  (cond\n   \
    \ [(equal? x n) #t]\n    [(equal? (string-match \"^[0-9]+/[0-9]+$\" x) n) #t]\n\
    \    [else #f]))\n", "  (cond\n    [(equal? x n) #t]\n    [(equal? n 0) #f]\n\
    \    [(equal? (string->number x) (string->number n)) #t]\n    [else (equal? (string->number\
    \ n) (string->number x))\n      (if (equal? (string->number x) (string->number\
    \ n)) #t #f)]\n    [else (equal? (string->number n) (string->number x))\n    \
    \  (if (equal? (string->number x) (string->number n)) #t #f)]\n    [else (equal?\
    \ (string->number n) (string->number x))\n      (if (equal? (string->number x)\
    \ (string->number n)) #t #f)]\n    [else (equal? (string->number n) (string->number\
    \ x))\n      (if (equal? (string->number x) (string->number n)) #t #f)]\n    [else\
    \ (equal? (string->number n) (string->number x))\n      (if (equal? (string->number\
    \ x) (string->number n)) #t #f)]\n    [else (equal? (string->number n) (string->number\
    \ x))\n      (if (equal? (string->number x) (string->number n)) #t #f)]\n    [else\
    \ (equal? (string->number n) (string->number x))\n      (if (equal? (string->number\
    \ x) (string->number n)) #t #f)]\n    [else (equal? (string->number n) (string->number\
    \ x))\n      (if (equal? (string->number x) (string->number n)) #t #f)]\n    [else\
    \ (equal? (string->number n) (string->number x))\n      (if (equal? (string->number\
    \ x) (string->number n)) #t #f)]\n    [else (equal? (string->number n) (string->number\
    \ x))\n      (if (equal? (string->number x) (string->number n)) #t #f)]\n    [else\
    \ (equal? (string->number n) (string->number x))\n      (if (equal? (string->number\
    \ x) (string->number n)) #t #f)]\n    [else (equal? (string->number n) (string->number\
    \ x))\n      (if (equal? (string->number x) (string->number n)) #t #f)]\n    [else\
    \ (equal? (string->number n) (string->number x))\n      (if (equal? (string->number\
    \ x) (string->number n)) #t #f)]\n    [else (equal? (string->number n) (string->number\
    \ x))\n      (if (equal? (string->number x) (string->number n)) #t #f)]\n    [else\
    \ (equal? (string->number n) (string", "  (cond\n    [(number? x) (number? n)\
    \ x]\n    [(number? n) (number? x) n]\n    [(zero? n) (zero? x) n]\n    [(zero?\
    \ x) (zero? n) x]\n    [else (if (zero? (string-length x))\n              #f\n\
    \              (if (zero? (string-length n))\n                  #f\n         \
    \         (if (string-equal? (substring x 0 (string-length x)) \"/\")\n      \
    \                (if (string-equal? (substring n 0 (string-length n)) \"/\")\n\
    \                          (if (string-equal? (substring x 0 (string-length x))\
    \ \"/\")\n                              (if (string-equal? (substring n 0 (string-length\
    \ n)) \"/\")\n                                  (if (string-equal? (substring\
    \ x 0 (string-length x)) \"0\")\n                                      (if (string-equal?\
    \ (substring n 0 (string-length n)) \"0\")\n                                 \
    \         (if (string-equal? (substring x 0 (string-length x)) \"0\")\n      \
    \                                        (if (string-equal? (substring n 0 (string-length\
    \ n)) \"0\")\n                                                  (if (string-equal?\
    \ (substring x 0 (string-length x)) \"0\")\n                                 \
    \                     (if (string-equal? (substring n 0 (string-length n)) \"\
    0\")\n                                                          (if (string-equal?\
    \ (substring x 0 (string-length x)) \"0\")\n                                 \
    \                             (if (string-equal? (substring n 0 (string-length\
    \ n)) \"0\")\n                                                               \
    \   (if (string-equal? (substring x 0 (string-length x)) \"0\")\n            \
    \                                                          (if (string-equal?\
    \ (substring n 0 (string-length n)) \"0\")\n                                 \
    \                                         (if (string-equal? (substring x 0 (string-length\
    \ x)) \"0\")\n                                                               \
    \               (if (string-equal? (substring n 0 (string-length n)) \"0\")\n\
    \                                                                            \
    \      (if (string-equal? (substring x 0 (string-length x)) \"0\")\n         \
    \                                                                            \
    \ (if (string-equal? (substring n 0 (string-length n)) \"0\")\n              \
    \                                                                            (if\
    \ (string-equal? (substring x 0 (string-length x)) \"0\")\n                  \
    \                                                                            (if\
    \ (string-equal? (substring n 0 (string-length n)) \"0\")\n                  \
    \                                                                            \
    \    (if (string-equal? (substring x 0 (string-length x)) \"0\")\n           \
    \                                                                            \
    \               (if (string-equal? (substring n 0 (string-length n)) \"0\")\n\
    \                                                                            \
    \                              (if (string-equal? (substring x 0 (string-length\
    \ x)) \"0\")\n                                                               \
    \                                               (if (string-equal? (substring\
    \ n 0 (string-length n)) \"0\")\n                                            \
    \                                                                      (if (string-equal?\
    \ (substring x 0 (string-length x)) \"0\")\n                                 \
    \                                                                            \
    \         "]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

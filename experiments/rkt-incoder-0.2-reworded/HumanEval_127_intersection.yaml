name: HumanEval_127_intersection
language: rkt
prompt: "#lang racket\n\n;; You are given two intervals,\n;; where each interval is\
  \ a pair of integers. For example, interval = (start, end) = (1, 2).\n;; The given\
  \ intervals are closed which means that the interval (start, end)\n;; includes both\
  \ start and end.\n;; For each given interval, it is assumed that its start is less\
  \ or equal its end.\n;; Your task is to determine whether the length of intersection\
  \ of these two \n;; intervals is a prime number.\n;; Example, the intersection of\
  \ the intervals (1, 3), (2, 4) is (2, 3)\n;; which its length is 1, which not a\
  \ prime number.\n;; If the length of the intersection is a prime number, return\
  \ \"YES\",\n;; otherwise, return \"NO\".\n;; If the two intervals don't intersect,\
  \ return \"NO\".\n;; [input/output] samples:\n;; >>> (intersection (list 1 2) (list\
  \ 2 3))\n;; \"NO\"\n;; >>> (intersection (list -1 1) (list 0 4))\n;; \"NO\"\n;;\
  \ >>> (intersection (list -3 -1) (list -5 5))\n;; \"YES\"\n(define (intersection\
  \ interval1 interval2)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate intersection))\n\
  \    (check-equal? (candidate (list 1 2) (list 2 3)) \"NO\")\n    (check-equal?\
  \ (candidate (list -1 1) (list 0 4)) \"NO\")\n    (check-equal? (candidate (list\
  \ -3 -1) (list -5 5)) \"YES\")\n    (check-equal? (candidate (list -2 2) (list -4\
  \ 0)) \"YES\")\n    (check-equal? (candidate (list -11 2) (list -1 -1)) \"NO\")\n\
  \    (check-equal? (candidate (list 1 2) (list 3 5)) \"NO\")\n    (check-equal?\
  \ (candidate (list 1 2) (list 1 2)) \"NO\")\n    (check-equal? (candidate (list\
  \ -2 -2) (list -3 -2)) \"NO\")\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"\
    NO\"]\n    [(< (first interval1) (first interval2)) (intersection interval1 (rest\
    \ interval2))]\n    [(< (first interval2) (first interval1)) (intersection interval2\
    \ (rest interval1))]\n    [else (cons (first interval1) (intersection interval1\
    \ (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection\
    \ interval1 (rest interval2))]\n    [(< (first interval2) (first interval1)) (intersection\
    \ interval2 (rest interval1))]\n    [else (cons (first interval1) (intersection\
    \ interval1 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond [(empty?\
    \ interval1) \"NO\"]\n        [(empty? interval2) \"NO\"]\n        [(< (first\
    \ interval1) (first interval2)) (intersection (rest interval1) (rest interval2))]\n\
    \        [else (cond [(= (first interval1) (first interval2)) (intersection (rest\
    \ interval1) (rest interval2))]\n                  [else (cond [(= (first interval1)\
    \ (second interval2)) (intersection (rest interval1) (rest interval2))]\n    \
    \                        [else (cond [(= (first interval2) (second interval1))\
    \ (intersection (rest interval1) (rest interval2))]\n                        \
    \              [else (cond [(= (first interval1) (second interval2)) (intersection\
    \ (rest interval1) (rest interval2))]\n                                      \
    \          [else (cond [(= (first interval2) (second interval1)) (intersection\
    \ (rest interval1) (rest interval2))]\n                                      \
    \                    [else (cond [(= (second interval1) (second interval2)) (intersection\
    \ (rest interval1) (rest interval2))]\n                                      \
    \                              [else (cond [(= (first interval1) (second interval2))\
    \ (intersection (rest interval1) (rest interval2))]\n                        \
    \                                                    [else (cond [(= (first interval2)\
    \ (second interval1)) (intersection (rest interval1) (rest interval2))]\n    \
    \                                                                      [else (cond\
    \ [(= (second interval1) (second interval2)) (intersection (rest interval1) (rest\
    \ interval2))]\n                                                             \
    \                       [else (cond [(= (first interval1) (second interval2))\
    \ (intersection (rest interval1) (rest interval2))]\n                        \
    \                                                                      [else (cond\
    \ [(= (first interval2) (second interval1)) (intersection (rest interval1) (rest\
    \ interval2))]\n                                                             \
    \                                           [else (cond [(= (second interval1)\
    \ (second interval2)) (intersection (rest interval1) (rest interval2))]\n    \
    \                                                                            \
    \                  [else (cond [(= (first interval1) (second interval2)) (intersection\
    \ (rest interval1) (rest interval2))]\n                                      \
    \                                                                      [else (cond\
    \ [(= (first interval2) (second interval1)) (intersection (rest interval1) (rest\
    \ interval2))]\n                                                             \
    \                                         [else (cond [(= (second interval1) (second\
    \ interval2)) (intersection (rest interval1) (rest interval2))]\n            \
    \                                                                            \
    \        [else (cond [(= (first interval1) (second interval2)) (intersection (rest\
    \ interval1) (rest interval2))]\n                                            \
    \                                                          [else (cond [(= (first\
    \ interval2) ", "  (cond [(empty? interval1) \"NO\"]\n        [(empty? interval2)\
    \ \"NO\"]\n        [(< (first interval1) (first interval2)) (intersection interval1\
    \ (rest interval2))]\n        [(< (first interval2) (first interval1)) (intersection\
    \ interval2 (rest interval1))]\n        [else (cons (first interval1) (intersection\
    \ interval1 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection (rest interval1) (rest interval2))]\n    [else (cons (first interval1)\
    \ (intersection interval1 (rest interval2)))]))\n", "  (cond\n    [(empty? interval1)\
    \ \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval2)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval2)\
    \ (first interval1)) \"NO\"]\n    [else (cond \n            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n            [else (cond \n                    [else\
    \ (cond \n                            [(= (first interval1) (second interval2))\
    \ \"YES\"]\n                            [else (cond \n                       \
    \             [(= (first interval2) (second interval1)) \"YES\"]\n           \
    \                         [else (cond \n                                     \
    \       [(= (first interval1) (second interval2)) \"YES\"]\n                 \
    \                           [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                                            [(= (second interval1) (second\
    \ interval2)) \"YES\"]\n                                            [(= (second\
    \ interval2) (second interval1)) \"YES\"]\n                                  \
    \          [(= (second interval1) (first interval2)) \"YES\"]\n              \
    \                              [(= (second interval2) (first interval1)) \"YES\"\
    ]\n                                            [(= (second interval1) (first interval2))\
    \ \"YES\"]\n                                            [(= (second interval2)\
    \ (first interval1)) \"YES\"]\n                                            [(=\
    \ (second interval1) (second interval2)) \"YES\"]\n                          \
    \                  [(= (second interval2) (second interval1)) \"YES\"]\n     \
    \                                       [(= (second interval1) (first interval2))\
    \ \"YES\"]\n                                            [(= (second interval2)\
    \ (first interval1)) \"YES\"]\n                                            [(=\
    \ (second interval1) (first interval2)) \"YES\"]\n                           \
    \                 [(= (second interval2) (first interval1)) \"YES\"]\n       \
    \                                     [(= (second interval1) (second interval2))\
    \ \"YES\"]\n                                            [(= (second interval2)\
    \ (second interval1)) \"YES\"]\n                                            [(=\
    \ (second interval1) (first interval2)) \"YES\"]\n                           \
    \                 [(= (second interval2) (first interval1)) \"YES\"]\n       \
    \                                     [(= (second interval1) (first interval2))\
    \ \"YES\"]\n                                            [(= (second interval2)\
    \ (first interval1)) \"YES\"]\n                                            [(=\
    \ (second interval1) (second interval2)) \"YES\"]\n                          \
    \                  [(= (second interval2) (second interval1)) \"YES\"]\n     \
    \                                       [(= (second interval1) (first interval2))\
    \ \"YES\"]\n                                            [(= (second interval2)\
    \ (first interval1)) \"YES\"]\n                                            [(=\
    \ (second interval1) (first interval2)) \"YES\"]\n                           \
    \                 [(= (second interval2) (first ", "  (cond [(empty? interval1)\
    \ \"NO\"]\n        [(empty? interval2) \"NO\"]\n        [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n        [(< (first interval2) (first interval1))\
    \ \"NO\"]\n        [else (cons (first interval1) (intersection interval2 (rest\
    \ interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection\
    \ interval1 (rest interval2))]\n    [(< (first interval2) (first interval1)) (intersection\
    \ interval2 (rest interval1))]\n    [else (cons (first interval1) (intersection\
    \ interval1 (rest interval2)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ \"NO\"]\n    [(< (first interval2) (first interval1)) \"NO\"]\n    [else (let\
    \ ([start1 (first interval1)]\n               [end1 (first interval2)]\n     \
    \          [start2 (first interval2)]\n               [end2 (first interval1)])\n\
    \           (cond\n             [(empty? interval1) \"NO\"]\n             [(empty?\
    \ interval2) \"NO\"]\n             [(< start1 start2) \"NO\"]\n             [(<\
    \ start2 start1) \"NO\"]\n             [else (cond\n                      [(<\
    \ start1 start2) \"NO\"]\n                      [(< start2 start1) \"NO\"]\n \
    \                     [(< end1 end2) \"NO\"]\n                      [(< end2 end1)\
    \ \"NO\"]\n                      [(< start1 end2) \"YES\"]\n                 \
    \     [(< start2 end1) \"YES\"]\n                      [(< end1 end2) \"YES\"\
    ]\n                      [(< end2 end1) \"YES\"]\n                      [(< start1\
    \ start2) \"YES\"]\n                      [(< start2 start1) \"YES\"]\n      \
    \                [(< end1 end2) \"YES\"]\n                      [(< end2 end1)\
    \ \"YES\"]\n                      [else \"NO\")]))]))))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [else (intersection\
    \ interval1 (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(> (first interval1) (first interval2))\
    \ \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n    [else (cond\
    \ \n            [(= (first interval1) (first interval2)) \"YES\"]\n          \
    \  [else (cond \n                    [(= (first interval1) (second interval2))\
    \ \"YES\"]\n                    [else (cond \n                            [(=\
    \ (first interval2) (second interval1)) \"YES\"]\n                           \
    \ [else \"NO\"])])])]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(> (car interval1) (car interval2)) (intersection interval1\
    \ (cdr interval1))]\n    [(< (car interval1) (car interval2)) (intersection interval1\
    \ (cdr interval2))]\n    [else (cons (car interval1) (intersection interval1 (cdr\
    \ interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n \
    \   [(< (first interval1) (first interval2)) \"NO\"]\n    [else (cond\n      \
    \      [(= (first interval1) (first interval2)) \"YES\"]\n            [else (cond\n\
    \                    [(= (first interval1) (second interval2)) \"YES\"]\n    \
    \                [else (cond\n                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                            [else \"NO\"]\n  \
    \                          )]\n                    )]\n            )]\n    )]\n\
    \  )\n)\n", "  (cond ((null? interval1) \"NO\")\n        ((null? interval2) \"\
    NO\")\n        ((<= (first interval1) (first interval2))\n         (cond ((= (first\
    \ interval1) (first interval2)) \"YES\")\n              ((= (first interval1)\
    \ (second interval2)) \"YES\")\n              ((= (first interval2) (second interval1))\
    \ \"YES\")\n              (else \"NO\"))\n         (else \"NO\"))\n        ((>=\
    \ (first interval1) (first interval2))\n         (cond ((= (first interval1) (first\
    \ interval2)) \"YES\")\n              ((= (first interval1) (second interval2))\
    \ \"YES\")\n              ((= (first interval2) (second interval1)) \"YES\")\n\
    \              (else \"NO\"))\n         (else \"NO\"))\n        ((< first interval1\
    \ (first interval2))\n         (cond ((= (first interval1) (first interval2))\
    \ \"YES\")\n              ((= (first interval1) (second interval2)) \"YES\")\n\
    \              ((= (first interval2) (second interval1)) \"YES\")\n          \
    \    (else \"NO\"))\n         (else \"NO\"))\n        ((> first interval1 (first\
    \ interval2))\n         (cond ((= (first interval1) (first interval2)) \"YES\"\
    )\n              ((= (first interval1) (second interval2)) \"YES\")\n        \
    \      ((= (first interval2) (second interval1)) \"YES\")\n              (else\
    \ \"NO\"))\n         (else \"NO\"))\n        (else \"NO\")))\n", "  (cond\n  \
    \  [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first\
    \ interval1) (first interval2)) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ \"NO\"]\n    [else (cond\n            [(= (first interval1) (first interval2))\
    \ \"YES\"]\n            [else (cond\n                    [(= (first interval1)\
    \ (second interval2)) \"YES\"]\n                    [else (cond\n            \
    \                [(= (first interval2) (second interval1)) \"YES\"]\n        \
    \                    [else \"NO\"]\n                            )]\n         \
    \           )]\n            )]\n    )]))\n", "  (cond\n    [(empty? interval1)\
    \ \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond [(empty? interval1) \"NO\"]\n        [(empty? interval2) \"NO\"]\n    \
    \    [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \        [(< (first interval2) (first interval1)) (intersection interval2 (rest\
    \ interval1))]\n        [else (cons (first interval1) (intersection interval1\
    \ (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection\
    \ interval1 (rest interval2))]\n    [(< (first interval2) (first interval1)) (intersection\
    \ interval2 (rest interval1))]\n    [else (cons (first interval1) (intersection\
    \ interval1 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n    [else (cond\n\
    \            [(= (first interval1) (first interval2)) \"YES\"]\n            [else\
    \ (cond\n                    [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                    [else (cond\n                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                            [else \"NO\"]\n  \
    \                          )]\n                    )]\n            )]\n    )]\n\
    \  )\n)\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2)\
    \ \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection interval1\
    \ (rest interval2))]\n    [(< (first interval2) (first interval1)) (intersection\
    \ interval2 (rest interval1))]\n    [else (cons (first interval1) (intersection\
    \ interval1 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n    [else (cond\n\
    \            [(= (first interval1) (first interval2)) \"YES\"]\n            [else\
    \ (cond\n                    [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                    [else (cond\n                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                            [else (cond\n    \
    \                                [(= (first interval1) (second interval2)) \"\
    YES\"]\n                                    [(= (second interval1) (second interval2))\
    \ \"YES\"]\n                                    [else (cond\n                \
    \                            [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                                            [(= (second interval1) (second\
    \ interval2)) \"YES\"]\n                                            [(= (first\
    \ interval2) (second interval1)) \"YES\"]\n                                  \
    \          [(= (second interval2) (second interval1)) \"YES\"]\n             \
    \                               [else \"NO\"])])])])])])))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval2)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [else (cond\n            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n            [else (cond\n                    [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                    [else (cond\n\
    \                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [else \"NO\"]\n                            )]\n\
    \                    )]\n            )]\n    )]\n  )\n)\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval2) (first interval1)) \"\
    NO\"]\n    [else (cond\n            [(= (first interval1) (first interval2)) \"\
    YES\"]\n            [else (cond\n                    [(= (first interval1) (first\
    \ interval2)) \"YES\"]\n                    [else (cond\n                    \
    \        [(= (first interval1) (first interval2)) \"YES\"]\n                 \
    \           [(= (first interval2) (first interval1)) \"YES\"]\n              \
    \              [(= (first interval1) (first interval2)) \"YES\"]\n           \
    \                 [(= (first interval2) (first interval1)) \"YES\"]\n        \
    \                    [(= (first interval1) (first interval2)) \"YES\"]\n     \
    \                       [(= (first interval2) (first interval1)) \"YES\"]\n  \
    \                          [(= (first interval1) (first interval2)) \"YES\"]\n\
    \                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)", "  (cond\n\
    \    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first\
    \ interval1) (first interval2)) (intersection interval1 (rest interval2))]\n \
    \   [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval2)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(> (car interval1) (car interval2)) (intersection interval1 (cdr interval1))]\n\
    \    [else (intersection interval1 (cdr interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval1) (first interval2)) \"\
    NO\"]\n    [else (cond\n            [(= (first interval1) (first interval2)) \"\
    YES\"]\n            [else (cond\n                    [(= (first interval1) (second\
    \ interval2)) \"YES\"]\n                    [else (cond\n                    \
    \        [(= (first interval2) (second interval1)) \"YES\"]\n                \
    \            [else \"NO\"]\n                            )]\n                 \
    \   )]\n            )]\n    )]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval1) (first interval2)) \"\
    NO\"]\n    [else (cons (first interval1) (intersection interval2 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval2)\
    \ (first interval1)) \"NO\"]\n    [else (cond\n            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n            [else (cond\n                    [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                    [else (cond\n\
    \                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [else \"NO\"])]])]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond ((and (number? interval1) (number? interval2)) (equal? (min interval1)\
    \ (min interval2)))\n        ((and (number? interval1) (number? interval2)) (equal?\
    \ (max interval1) (max interval2)))\n        ((and (number? interval1) (number?\
    \ interval2)) (equal? (min interval1) (max interval2)))\n        ((and (number?\
    \ interval1) (number? interval2)) (equal? (max interval1) (min interval2)))\n\
    \        ((and (number? interval1) (number? interval2)) (equal? (min interval1)\
    \ (max interval2)))\n        ((and (number? interval1) (number? interval2)) (equal?\
    \ (max interval1) (max interval2)))\n        (else (equal? (min interval1) (max\
    \ interval2)))))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2)\
    \ \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first\
    \ interval2) (first interval1)) \"NO\"]\n    [else (cond\n            [(= (first\
    \ interval1) (first interval2)) \"YES\"]\n            [else (cond\n          \
    \          [(= (first interval1) (second interval2)) \"YES\"]\n              \
    \      [else (cond\n                            [(= (first interval2) (second\
    \ interval1)) \"YES\"]\n                            [else \"NO\"]\n          \
    \                  )]\n                    )]\n            )]\n    ))\n", "  (cond\n\
    \    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first\
    \ interval1) (first interval2)) (intersection interval1 (rest interval2))]\n \
    \   [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval2)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval2) (first interval1)) \"\
    NO\"]\n    [else (cond\n            [(= (first interval1) (first interval2)) \"\
    YES\"]\n            [else (cond\n                    [(= (first interval1) (second\
    \ interval2)) \"YES\"]\n                    [else (cond\n                    \
    \        [(= (first interval2) (second interval1)) \"YES\"]\n                \
    \            [else \"NO\"])]])]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ \"NO\"]\n    [(< (first interval2) (first interval1)) \"NO\"]\n    [else (cond\n\
    \            [(= (first interval1) (first interval2)) \"YES\"]\n            [else\
    \ (cond\n                    [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                    [else (cond\n                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                            [else \"NO\"])]])]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval2)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [else (cond\n            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n            [else (cond\n                    [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                    [else (cond\n\
    \                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [else \"NO\"]\n                            )]\n\
    \                    )]\n            )]\n    )]))\n", "  (cond\n    [(empty? interval1)\
    \ \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [else (intersection\
    \ interval1 (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval2)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval2)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval2)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval2)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval2)\
    \ (first interval1)) \"NO\"]\n    [else (cons (first interval1) (intersection\
    \ interval2 (rest interval1)))]))\n", "  (cond ((and (number? interval1) (number?\
    \ interval2)) (cond ((= (- interval1 interval2) 0) \"NO\") (\"YES\"))\n      \
    \  ((and (number? interval1) (number? interval2)) (cond ((< interval1 interval2)\
    \ \"NO\") (\"YES\"))\n        ((and (number? interval1) (number? interval2)) (cond\
    \ ((< interval1 interval2) \"NO\") (\"YES\"))\n        ((and (number? interval1)\
    \ (number? interval2)) (cond ((< interval1 interval2) \"NO\") (\"YES\"))\n   \
    \     ((and (number? interval1) (number? interval2)) (cond ((< interval1 interval2)\
    \ \"NO\") (\"YES\"))\n        ((and (number? interval1) (number? interval2)) (cond\
    \ ((< interval1 interval2) \"NO\") (\"YES\"))\n        ((and (number? interval1)\
    \ (number? interval2)) (cond ((< interval1 interval2) \"NO\") (\"YES\"))\n   \
    \     ((and (number? interval1) (number? interval2)) (cond ((< interval1 interval2)\
    \ \"NO\") (\"YES\"))\n        ((and (number? interval1) (number? interval2)) (cond\
    \ ((< interval1 interval2) \"NO\") (\"YES\"))\n        ((and (number? interval1)\
    \ (number? interval2)) (cond ((< interval1 interval2) \"NO\") (\"YES\"))\n   \
    \     ((and (number? interval1) (number? interval2)) (cond ((< interval1 interval2)\
    \ \"NO\") (\"YES\"))\n        ((and (number? interval1) (number? interval2)) (cond\
    \ ((< interval1 interval2) \"NO\") (\"YES\"))\n        ((and (number? interval1)\
    \ (number? interval2)) (cond ((< interval1 interval2) \"NO\") (\"YES\"))\n   \
    \     ((and (number? interval1) (number? interval2)) (cond ((< interval1 interval2)\
    \ \"NO\") (\"YES\"))\n        ((and (number? interval1) (number? interval2)) (cond\
    \ ((< interval1 interval2) \"NO\") (\"YES\"))\n        ((and (number? interval1)\
    \ (number? interval2)) (cond ((< interval1 interval2) \"NO\") (\"YES\"))\n   \
    \     ((and (number? interval1) (number? interval2)) (cond ((< interval1 interval2)\
    \ \"NO\") (\"YES\"))\n        ((and (number? interval1) (number? interval2)) (cond\
    \ ((< interval1 interval2) \"NO\") (\"YES\"))\n        ((and (", "  (cond\n  \
    \  [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first\
    \ interval1) (first interval2)) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ \"NO\"]\n    [else (cond\n            [(= (first interval1) (first interval2))\
    \ \"YES\"]\n            [else (cond\n                    [(= (first interval1)\
    \ (second interval2)) \"YES\"]\n                    [else (cond\n            \
    \                [(= (first interval2) (second interval1)) \"YES\"]\n        \
    \                    [else (cond\n                                    [(= (first\
    \ interval1) (second interval2)) \"YES\"]\n                                  \
    \  [(= (first interval2) (second interval1)) \"YES\"]\n                      \
    \              [else (cond\n                                            [(= (first\
    \ interval1) (second interval2)) \"YES\"]\n                                  \
    \          [(= (first interval2) (second interval1)) \"YES\"]\n              \
    \                              [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                                            [(= (first interval2) (second interval1))\
    \ \"YES\"]\n                                            [(= (first interval1)\
    \ (second interval2)) \"YES\"]\n                                            [(=\
    \ (first interval2) (second interval1)) \"YES\"]\n                           \
    \                 [(= (first interval1) (second interval2)) \"YES\"]\n       \
    \                                     [(= (first interval2) (second interval1))\
    \ \"YES\"]\n                                            [(= (first interval1)\
    \ (second interval2)) \"YES\"]\n                                            [(=\
    \ (first interval2) (second interval1)) \"YES\"]\n                           \
    \                 [(= (first interval1) (second interval2)) \"YES\"]\n       \
    \                                     [(= (first interval2) (second interval1))\
    \ \"YES\"]\n                                            [(= (first interval1)\
    \ (second interval2)) \"YES\"]\n                                            [(=\
    \ (first interval2) (second interval1)) \"YES\"]\n                           \
    \                 [(= (first interval1) (second interval2)) \"YES\"]\n       \
    \                                     [(= (first interval2) (second interval1))\
    \ \"YES\"]\n                                            [(= (first interval1)\
    \ (second interval2)) \"YES\"]\n                                            [(=\
    \ (first interval2) (second interval1)) \"YES\"]\n                           \
    \                 [(= (first interval1) (second interval2)) \"YES\"]\n       \
    \                                     [(= (first interval2) (second interval1))\
    \ \"YES\"]\n                                            [(= (first interval1)\
    \ (second interval2)) \"YES\"]\n                                            [(=\
    \ (first interval2) (second interval1)) \"YES\"]\n                           \
    \                 [(= (first interval1) (second interval2)) \"YES\"]\n       \
    \                                     [(= (first interval2) (second interval1))\
    \ \"YES\"]", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2)\
    \ \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first\
    \ interval2) (first interval1)) \"NO\"]\n    [else (cond\n            [(= (first\
    \ interval1) (first interval2)) \"YES\"]\n            [else (cond\n          \
    \          [(= (first interval1) (second interval2)) \"YES\"]\n              \
    \      [else (cond\n                            [(= (first interval2) (second\
    \ interval1)) \"YES\"]\n                            [else \"NO\"])]])]))\n", " \
    \ (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n  \
    \  [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval2)\
    \ (first interval1)) \"NO\"]\n    [else (cond\n            [(> (first interval1)\
    \ (first interval2)) \"NO\"]\n            [(> (first interval2) (first interval1))\
    \ \"NO\"]\n            [else (cond\n                    [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n                    [else (cond\n             \
    \               [(= (first interval2) (first interval1)) \"YES\"]\n          \
    \                  [else \"NO\"]\n                            )]\n           \
    \         )]\n            )]\n    )]))\n", "  (cond\n    [(empty? interval1) \"\
    NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(> (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval1) (first interval2)) \"\
    NO\"]\n    [else (cond [(< (first interval1) (first interval2)) (intersection\
    \ interval1 (rest interval2))]\n               [(> (first interval1) (first interval2))\
    \ (intersection interval2 (rest interval1))]\n               [(= (first interval1)\
    \ (first interval2)) (cond [(prime? (first interval1) (first interval2)) \"YES\"\
    ]\n                                                         [else \"NO\"])]\n\
    \               [else \"NO\"])]\n    [(prime? (first interval1) (first interval2))\
    \ \"YES\"]\n    [else \"NO\"]\n  )\n)\n", "  (cond\n    [(empty? interval1) \"\
    NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [else (intersection interval1\
    \ (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection\
    \ interval1 (rest interval2))]\n    [else (intersection interval1 (rest interval1))]))\n",
  "  (cond [(empty? interval1) \"NO\"]\n        [(empty? interval2) \"NO\"]\n    \
    \    [(> (first interval1) (first interval2)) \"NO\"]\n        [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n        [else (cond [(prime? (length (intersection\
    \ interval1 (rest interval1))))\n                    \"YES\"]\n              \
    \        [(prime? (length (intersection interval2 (rest interval2)))) \"YES\"\
    ]\n                      [(prime? (length (intersection interval1 (rest interval2))))\
    \ \"YES\"]\n                      [(prime? (length (intersection interval2 (rest\
    \ interval1)))) \"YES\"]\n                      [(prime? (length (intersection\
    \ interval1 (rest interval1)))) \"YES\"]\n                      [(prime? (length\
    \ (intersection interval2 (rest interval2)))) \"YES\"]\n                     \
    \ [(prime? (length (intersection interval1 (rest interval2)))) \"YES\"]\n    \
    \                  [(prime? (length (intersection interval2 (rest interval1))))\
    \ \"YES\"]\n                      [(prime? (length (intersection interval1 (rest\
    \ interval2)))) \"YES\"]\n                      [(prime? (length (intersection\
    \ interval2 (rest interval1)))) \"YES\"]\n                      [(prime? (length\
    \ (intersection interval1 (rest interval2)))) \"YES\"]\n                     \
    \ [(prime? (length (intersection interval2 (rest interval1)))) \"YES\"]\n    \
    \                  [(prime? (length (intersection interval1 (rest interval2))))\
    \ \"YES\"]\n                      [(prime? (length (intersection interval2 (rest\
    \ interval1)))) \"YES\"]\n                      [(prime? (length (intersection\
    \ interval1 (rest interval2)))) \"YES\"]\n                      [(prime? (length\
    \ (intersection interval2 (rest interval1)))) \"YES\"]\n                     \
    \ [(prime? (length (intersection interval1 (rest interval2)))) \"YES\"]\n    \
    \                  [(prime? (length (intersection interval2 (rest interval1))))\
    \ \"YES\"]\n                      [(prime? (length (intersection interval1 (rest\
    \ interval2)))) \"YES\"]\n                      [(prime? (length (intersection\
    \ interval2 (rest interval1)))) \"YES\"]\n                      [(prime? (length\
    \ (intersection interval1 (rest interval2)))) \"YES\"]\n                     \
    \ [(prime? (length (intersection interval2 (rest interval1)))) \"YES\"]\n    \
    \                  [(prime? (length (intersection interval1 (rest interval2))))\
    \ \"YES\"]\n                      [(prime? (length (intersection interval2 (rest\
    \ interval1)))) \"YES\"]\n                      [(prime? (length (intersection\
    \ interval1 (rest interval2)))) \"YES\"]\n                      [(prime? (length\
    \ (intersection interval2 (rest interval1)))) \"YES\"]\n                     \
    \ [(prime? (length (intersection interval1 (rest interval2)))) \"", "  (cond\n\
    \    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first\
    \ interval1) (first interval2)) (intersection interval1 (rest interval2))]\n \
    \   [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval2) (first interval1)) \"\
    NO\"]\n    [else (cond\n            [(= (first interval1) (first interval2)) \"\
    YES\"]\n            [else (cond\n                    [(= (first interval1) (second\
    \ interval2)) \"YES\"]\n                    [else (cond\n                    \
    \        [(= (first interval2) (second interval1)) \"YES\"]\n                \
    \            [else \"NO\"])]])]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval1) (first interval2)) \"\
    NO\"]\n    [else (cond\n            [(= (first interval1) (first interval2)) \"\
    YES\"]\n            [else (cond\n                    [(= (first interval1) (second\
    \ interval2)) \"YES\"]\n                    [else (cond\n                    \
    \        [(= (first interval2) (second interval1)) \"YES\"]\n                \
    \            [else \"NO\"])]])]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval2) (first interval1)) \"\
    NO\"]\n    [else (cond\n            [(= (first interval1) (first interval2)) \"\
    YES\"]\n            [else (cond\n                    [(= (first interval1) (second\
    \ interval2)) \"YES\"]\n                    [else (cond\n                    \
    \        [(= (first interval2) (second interval1)) \"YES\"]\n                \
    \            [else \"NO\"])]])]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [else (intersection interval1\
    \ (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection\
    \ interval1 (rest interval2))]\n    [(< (first interval2) (first interval1)) (intersection\
    \ interval2 (rest interval1))]\n    [else (cons (first interval1) (intersection\
    \ interval1 (rest interval2)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [else (cond\n            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n            [else (cond\n                    [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                    [else (cond\n\
    \                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [else \"NO\"]\n                            )]\n\
    \                    )]\n            )]\n    )]))\n", "  (cond\n    [(empty? interval1)\
    \ \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval2)\
    \ (first interval1)) \"NO\"]\n    [else (cond\n            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n            [else (cond\n                    [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                    [else (cond\n\
    \                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [else \"NO\"])]])]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [else (intersection\
    \ interval1 (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [else (intersection interval1\
    \ (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n \
    \   [(< (first interval2) (first interval1)) \"NO\"]\n    [else (cons (first interval1)\
    \ (intersection interval2 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1)\
    \ \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval2) (first interval1)) \"\
    NO\"]\n    [else (cond\n            [(= (first interval1) (first interval2)) \"\
    YES\"]\n            [else (cond\n                    [(= (first interval1) (first\
    \ interval2)) \"YES\"]\n                    [else (cond\n                    \
    \        [(= (first interval1) (first interval2)) \"YES\"]\n                 \
    \           [(= (first interval2) (first interval1)) \"YES\"]\n              \
    \              [(= (first interval1) (first interval2)) \"YES\"]\n           \
    \                 [(= (first interval2) (first interval1)) \"YES\"]\n        \
    \                    [(= (first interval1) (first interval2)) \"YES\"]\n     \
    \                       [(= (first interval2) (first interval1)) \"YES\"]\n  \
    \                          [(= (first interval1) (first interval2)) \"YES\"]\n\
    \                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)", "  (cond\n\
    \    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first\
    \ interval1) (first interval2)) (intersection interval1 (rest interval2))]\n \
    \   [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval1) (first interval2)) \"\
    NO\"]\n    [else (cond\n            [(> (first interval1) (first interval2)) \"\
    NO\"]\n            [else \"YES\"]\n            )]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond ((null? interval1) \"NO\")\n        ((null? interval2) \"NO\")\n      \
    \  ((<= (first interval1) (first interval2)) (intersection interval1 (rest interval2)))\n\
    \        ((<= (first interval2) (first interval1)) (intersection interval2 (rest\
    \ interval1)))\n        (else \"YES\")))\n", "  (cond\n    [(empty? interval1)\
    \ \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [else (intersection interval1\
    \ (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(> (first interval1) (first interval2)) \"NO\"]\n \
    \   [(< (first interval1) (first interval2)) \"NO\"]\n    [else (cond\n      \
    \      [(> (second interval1) (second interval2)) \"NO\"]\n            [(< (second\
    \ interval1) (second interval2)) \"NO\"]\n            [else (cond\n          \
    \          [(> (first interval1) (second interval2)) \"NO\"]\n               \
    \     [else \"YES\"]\n                    )]))]))\n", "  (cond\n    [(empty? interval1)\
    \ \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval1) (first interval2)) \"\
    NO\"]\n    [else (cond\n            [(> (first interval1) (first interval2)) \"\
    NO\"]\n            [else (cond\n                    [(> (first interval1) (first\
    \ interval2)) \"NO\"]\n                    [else (cond\n                     \
    \       [(> (first interval1) (first interval2)) \"NO\"]\n                   \
    \         [(= (first interval1) (first interval2)) \"YES\"]\n                \
    \            [else (cond\n                                    [(> (first interval1)\
    \ (first interval2)) \"NO\"]\n                                    [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n                                    [(= (first\
    \ interval2) (first interval1)) \"YES\"]\n                                   \
    \ [else (cond\n                                            [(> (first interval1)\
    \ (first interval2)) \"NO\"]\n                                            [(=\
    \ (first interval1) (first interval2)) \"YES\"]\n                            \
    \                [(= (first interval2) (first interval1)) \"YES\"]\n         \
    \                                   [(= (first interval1) (first interval2)) \"\
    YES\"]\n                                            [(= (first interval2) (first\
    \ interval1)) \"YES\"]\n                                            [(= (first\
    \ interval1) (first interval2)) \"YES\"]\n                                   \
    \         [(= (first interval2) (first interval1)) \"YES\"]\n                \
    \                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                                            [(= (first interval2) (first interval1))\
    \ \"YES\"]\n                                            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n                                            [(=\
    \ (first interval2) (first interval1)) \"YES\"]\n                            \
    \                [(= (first interval1) (first interval2)) \"YES\"]\n         \
    \                                   [(= (first interval2) (first interval1)) \"\
    YES\"]\n                                            [(= (first interval1) (first\
    \ interval2)) \"YES\"]\n                                            [(= (first\
    \ interval2) (first interval1)) \"YES\"]\n                                   \
    \         [(= (first interval1) (first interval2)) \"YES\"]\n                \
    \                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                                            [(= (first interval1) (first interval2))\
    \ \"YES\"]\n                                            [(= (first interval2)\
    \ (first interval1)) \"YES\"]\n                                            [(=\
    \ (first interval1) (first interval2)) \"YES\"]\n                            \
    \                [(= (first interval2) (first interval1)) \"YES\"]\n         \
    \                                   [(= (first interval1) (first interval2)) \"\
    YES\"]\n                                            [(= (", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [else (intersection\
    \ interval1 (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [else (intersection interval1\
    \ (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection\
    \ interval1 (rest interval2))]\n    [(< (first interval2) (first interval1)) (intersection\
    \ interval2 (rest interval1))]\n    [else (cons (first interval1) (intersection\
    \ interval1 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval1) (first interval2)) \"\
    NO\"]\n    [else (cond\n            [(> (first interval1) (first interval2)) \"\
    NO\"]\n            [else \"YES\"]\n            )]))\n", "  (cond [(empty? interval1)\
    \ \"NO\"]\n        [(empty? interval2) \"NO\"]\n        [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n        [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \       [else (cond [(prime? (length (intersection interval1 (rest interval1))))\
    \ \"YES\"]\n                   [else \"NO\"])]))\n", "  (cond\n    [(empty? interval1)\
    \ \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval2)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [else (intersection\
    \ interval1 (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection (rest interval1) (rest interval2))]\n    [else (cons (first interval1)\
    \ (intersection (rest interval1) (rest interval2)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [else (intersection\
    \ interval1 (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(> (first interval1) (first interval2))\
    \ \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n    [else (cond\
    \ [(> (second interval1) (second interval2)) \"NO\"]\n               [(< (second\
    \ interval1) (second interval2)) \"NO\"]\n               [else (cond [(= (first\
    \ interval1) (first interval2)) \"YES\"]\n                         [else (cond\
    \ [(= (first interval1) (second interval2)) \"YES\"]\n                       \
    \            [else (cond [(= (second interval1) (second interval2)) \"YES\"]\n\
    \                                           [else (cond [(= (second interval1)\
    \ (first interval2)) \"YES\"]\n                                              \
    \     [else (cond [(= (second interval1) (first interval2)) \"YES\"]\n       \
    \                                                    [else (cond [(= (second interval1)\
    \ (second interval2)) \"YES\"]\n                                             \
    \                      [else \"NO\"])])])])])]))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval2) (first interval1)) \"\
    NO\"]\n    [else (cond\n            [(= (first interval1) (first interval2)) \"\
    YES\"]\n            [else (cond\n                    [(= (first interval1) (second\
    \ interval2)) \"YES\"]\n                    [else (cond\n                    \
    \        [(= (first interval2) (second interval1)) \"YES\"]\n                \
    \            [else \"NO\"])]\n                    )]\n            )]\n    ))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection (rest interval1) (rest\
    \ interval2))]\n    [else (cons (first interval1) (intersection interval1 (rest\
    \ interval2)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection\
    \ interval1 (rest interval2))]\n    [else (intersection interval1 (rest interval1))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval2)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond [(empty? interval1) \"NO\"]\n        [(empty? interval2) \"NO\"]\n    \
    \    [(< (first interval1) (first interval2)) (intersection (rest interval1) (rest\
    \ interval2))]\n        [else (cons (first interval1) (intersection (rest interval1)\
    \ (rest interval2)))]))\n", "  (cond [(empty? interval1) \"NO\"]\n        [(empty?\
    \ interval2) \"NO\"]\n        [(< (first interval1) (first interval2)) (intersection\
    \ interval1 (rest interval2))]\n        [else (intersection interval1 (rest interval1))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(> (car interval1) (car interval2)) \"NO\"]\n    [(< (car interval1) (car interval2))\
    \ \"NO\"]\n    [else (cons (car interval1) (intersection interval1 (cdr interval2)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval2)\
    \ (first interval1)) \"NO\"]\n    [else (cond\n            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n            [else (cond\n                    [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                    [else (cond\n\
    \                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [else \"NO\"])]])]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [else (intersection\
    \ interval1 (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval2) (first interval1)) \"\
    NO\"]\n    [else (cond\n            [(= (first interval1) (first interval2)) \"\
    YES\"]\n            [else (cond\n                    [(= (first interval1) (second\
    \ interval2)) \"YES\"]\n                    [else (cond\n                    \
    \        [(= (first interval2) (second interval1)) \"YES\"]\n                \
    \            [else \"NO\"])]])]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n    [else (cond\n\
    \            [(< (second interval1) (first interval2)) \"NO\"]\n            [(<\
    \ (second interval1) (first interval2)) \"NO\"]\n            [else (cond\n   \
    \                 [(< (second interval1) (second interval2)) \"NO\"]\n       \
    \             [else (cond\n                            [(< (second interval2)\
    \ (first interval1)) \"NO\"]\n                            [else (cond\n      \
    \                              [(< (second interval2) (second interval1)) \"NO\"\
    ]\n                                    [else (cond\n                         \
    \                   [(< (second interval1) (second interval2)) \"YES\"]\n    \
    \                                        [else (cond\n                       \
    \                             [(< (second interval1) (second interval2)) \"YES\"\
    ]\n                                                    [else (cond\n         \
    \                                                   [(< (second interval2) (second\
    \ interval1)) \"YES\"]\n                                                     \
    \       [else (cond\n                                                        \
    \            [(< (second interval2) (second interval1)) \"YES\"]\n           \
    \                                                         [else (cond\n      \
    \                                                                      [(< (first\
    \ interval1) (first interval2)) \"YES\"]\n                                   \
    \                                         [else (cond\n                      \
    \                                              [(< (first interval1) (first interval2))\
    \ \"YES\"]\n                                                                 \
    \   [else (cond\n                                                            \
    \                [(< (first interval1) (second interval2)) \"YES\"]\n        \
    \                                                                    [else (cond\n\
    \                                                                    [(< (first\
    \ interval1) (second interval2)) \"YES\"]\n                                  \
    \                                  [else (cond\n                             \
    \                                               [(< (second interval1) (first\
    \ interval2)) \"YES\"]\n                                                     \
    \                       [else (cond\n                                        \
    \                            [(< (second interval1) (first interval2)) \"YES\"\
    ]\n                                                                    [else (cond\n\
    \                                                                            [(<\
    \ (second interval1) (second interval2)) \"YES\"]\n                          \
    \                                                  [else (cond\n             \
    \                                                       [(< (second interval1)\
    \ (second interval2)) \"YES\"]\n                                             \
    \                       [else (cond\n                                        \
    \                                    [(< (second interval2) (first interval1))\
    \ \"YES\"]\n                                                                 \
    \           [else (cond\n                                                    \
    \                [(< (second interval2) (first interval1)) \"YES\"]\n        \
    \                                                            [else (cond\n   \
    \                                                                         [(<\
    \ (second interval2) (second interval1)) \"YES\"]\n                          \
    \                                                  [else (cond\n             \
    \                                                       [(< (second interval2)\
    \ (second interval1)) \"YES\"]\n                                             \
    \                       [else (cond\n                                        \
    \                                    [(< (second interval1) (second interval2))\
    \ \"YES\"]\n                                                                 \
    \           [", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2)\
    \ \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection interval1\
    \ (rest interval2))]\n    [(< (first interval2) (first interval1)) (intersection\
    \ interval2 (rest interval1))]\n    [else (cons (first interval1) (intersection\
    \ interval1 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond ((null?\
    \ interval1) \"NO\")\n        ((null? interval2) \"NO\")\n        ((< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2)))\n        (else\
    \ \"YES\")))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2)\
    \ \"NO\"]\n    [(> (car interval1) (car interval2)) \"NO\"]\n    [(< (car interval1)\
    \ (car interval2)) \"NO\"]\n    [else (cons (car interval1) (intersection interval1\
    \ (cdr interval2)))]))\n", "  (cond [(empty? interval1) \"NO\"]\n        [(empty?\
    \ interval2) \"NO\"]\n        [(< (first interval1) (first interval2)) \"NO\"\
    ]\n        [(< (first interval2) (first interval1)) \"NO\"]\n        [else (cond\
    \ [(= (first interval1) (first interval2)) \"YES\"]\n                   [(= (first\
    \ interval2) (first interval1)) \"YES\"]\n                   [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n                   [(= (first interval2) (first\
    \ interval1)) \"YES\"]\n                   [(= (first interval1) (first interval2))\
    \ \"YES\"]\n                   [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                   [(= (first interval1) (first interval2)) \"YES\"]\n    \
    \               [(= (first interval2) (first interval1)) \"YES\"]\n          \
    \         [(= (first interval1) (first interval2)) \"YES\"]\n                \
    \   [(= (first interval2) (first interval1)) \"YES\"]\n                   [(=\
    \ (first interval1) (first interval2)) \"YES\"]\n                   [(= (first\
    \ interval2) (first interval1)) \"YES\"]\n                   [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n                   [(= (first interval2) (first\
    \ interval1)) \"YES\"]\n                   [(= (first interval1) (first interval2))\
    \ \"YES\"]\n                   [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                   [(= (first interval1) (first interval2)) \"YES\"]\n    \
    \               [(= (first interval2) (first interval1)) \"YES\"]\n          \
    \         [(= (first interval1) (first interval2)) \"YES\"]\n                \
    \   [(= (first interval2) (first interval1)) \"YES\"]\n                   [(=\
    \ (first interval1) (first interval2)) \"YES\"]\n                   [(= (first\
    \ interval2) (first interval1)) \"YES\"]\n                   [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n                   [(= (first interval2) (first\
    \ interval1)) \"YES\"]\n                   [(= (first interval1) (first interval2))\
    \ \"YES\"]\n                   [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                   [(= (first interval1) (first interval2)) \"YES\"]\n    \
    \               [(= (first interval2) (first interval1)) \"YES\"]\n          \
    \         [(= (first interval1) (first interval2)) \"YES\"]\n                \
    \   [(= (first interval2) (first interval1)) \"YES\"]\n                   [(=\
    \ (first interval1) (", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n \
    \   [(< (first interval1) (first interval2)) \"NO\"]\n    [else (cond\n      \
    \      [(= (first interval1) (first interval2)) \"YES\"]\n            [else (cond\n\
    \                    [(= (first interval1) (second interval2)) \"YES\"]\n    \
    \                [else (cond\n                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                            [else (cond\n    \
    \                                [(= (first interval2) (second interval1)) \"\
    YES\"]\n                                    [else (cond\n                    \
    \                        [(= (second interval1) (second interval2)) \"YES\"]\n\
    \                                            [else (cond\n                   \
    \                                 [(= (second interval1) (second interval2)) \"\
    YES\"]\n                                                    [else (cond\n    \
    \                                                        [(= (second interval2)\
    \ (second interval1)) \"YES\"]\n                                             \
    \               [else \"NO\"]\n                                              \
    \              )]\n                                            )])])])])]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval2)\
    \ (first interval1)) \"NO\"]\n    [else (cond\n            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n            [else (cond\n                    [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                    [else (cond\n\
    \                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [else (cond\n                                 \
    \   [(= (first interval1) (second interval2)) \"YES\"]\n                     \
    \               [(= (first interval2) (second interval1)) \"YES\"]\n         \
    \                           [else (cond\n                                    \
    \        [(= (first interval1) (second interval2)) \"YES\"]\n                \
    \                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                                            [(= (first interval1) (second interval2))\
    \ \"YES\"]\n                                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                                            [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                           \
    \                 [(= (first interval2) (second interval1)) \"YES\"]\n       \
    \                                     [(= (first interval1) (second interval2))\
    \ \"YES\"]\n                                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                                            [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                           \
    \                 [(= (first interval2) (second interval1)) \"YES\"]\n       \
    \                                     [(= (first interval1) (second interval2))\
    \ \"YES\"]\n                                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                                            [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                           \
    \                 [(= (first interval2) (second interval1)) \"YES\"]\n       \
    \                                     [(= (first interval1) (second interval2))\
    \ \"YES\"]\n                                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                                            [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                           \
    \                 [(= (first interval2) (second interval1)) \"YES\"]\n       \
    \                                     [(= (first interval1) (second interval2))\
    \ \"YES\"]\n                                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                                            [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                           \
    \                 [(= (first interval2) (second interval1)) \"YES\"]\n       \
    \                                     [(= (first interval1) (second interval2))\
    \ \"YES\"]\n                                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]", "  (cond ((and (number? interval1) (number? interval2))\
    \ (number? interval1))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval2))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval1))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval2))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval1))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval2))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval1))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval2))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval1))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval2))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval1))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval2))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval1))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval2))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval1))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval2))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval1))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval2))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval1))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval2))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval1))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval2))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval1))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval2))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval1))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval2))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval1))\n        ((and (number? interval1) (number? interval2))\
    \ (number? interval2))\n        ((and (number? interval", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval2)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval2)\
    \ (first interval1)) \"NO\"]\n    [else (cond [(prime? (length (intersection interval1\
    \ (rest interval1))))\n                \"YES\"]\n                  [else \"NO\"\
    ])]\n  )\n)\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2)\
    \ \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection interval1\
    \ (rest interval2))]\n    [(< (first interval2) (first interval1)) (intersection\
    \ interval2 (rest interval1))]\n    [else (cons (first interval1) (intersection\
    \ interval1 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [else (intersection\
    \ interval1 (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval2)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond ((and (number? interval1) (number? interval2))\n         (if (= (- interval1\
    \ interval2) 0)\n             (string-append \"NO\" \"YES\")\n             (string-append\
    \ \"NO\" \"NO\")))\n        ((and (number? interval1) (number? interval2))\n \
    \        (string-append \"NO\" \"NO\"))\n        ((and (number? interval1) (number?\
    \ interval2))\n         (string-append \"YES\" \"YES\"))\n        (else\n    \
    \     (string-append \"NO\" \"NO\"))))\n", "  (cond\n    [(empty? interval1) \"\
    NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval1) (first interval2)) \"\
    NO\"]\n    [else (cond\n            [(= (first interval1) (first interval2)) \"\
    YES\"]\n            [else (cond\n                    [(= (first interval1) (second\
    \ interval2)) \"YES\"]\n                    [else (cond\n                    \
    \        [(= (first interval2) (second interval1)) \"YES\"]\n                \
    \            [else \"NO\"])]\n                )]))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(> (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval1) (first interval2)) \"\
    NO\"]\n    [else (cond\n             [(> (second interval1) (second interval2))\
    \ \"NO\"]\n             [(< (second interval1) (second interval2)) \"NO\"]\n \
    \            [else (cond\n                      [(> (first interval1) (second\
    \ interval2)) \"NO\"]\n                      [(< (first interval1) (second interval2))\
    \ \"NO\"]\n                      [else (cond\n                               [(>\
    \ (first interval2) (second interval1)) \"NO\"]\n                            \
    \   [(< (first interval2) (second interval1)) \"NO\"]\n                      \
    \         [else (cond\n                                        [(> (second interval1)\
    \ (second interval2)) \"NO\"]\n                                        [(< (second\
    \ interval1) (second interval2)) \"NO\"]\n                                   \
    \     [else (cond\n                                                 [(> (second\
    \ interval2) (first interval1)) \"NO\"]\n                                    \
    \             [(< (second interval2) (first interval1)) \"NO\"]\n            \
    \                                     [else (cond\n                          \
    \                               [(> (second interval2) (first interval2)) \"NO\"\
    ]\n                                                         [(< (second interval2)\
    \ (first interval2)) \"NO\"]\n                                               \
    \          [else (cond\n                                                     \
    \              [(> (first interval1) (second interval2)) \"YES\"]\n          \
    \                                                         [(< (first interval1)\
    \ (second interval2)) \"YES\"]\n                                             \
    \                      [else (cond\n                                         \
    \                                  [(> (first interval2) (second interval1)) \"\
    YES\"]\n                                                                     \
    \      [(< (first interval2) (second interval1)) \"YES\"]\n                  \
    \                                                         [else (cond\n      \
    \                                                                            \
    \ [(> (second interval1) (second interval2)) \"YES\"]\n                      \
    \                                                             [(< (second interval1)\
    \ (second interval2)) \"YES\"]\n                                             \
    \                                      [else (cond\n                         \
    \                                                                    [(> (second\
    \ interval2) (first interval1)) \"YES\"]\n                                   \
    \                                                          [(< (second interval2)\
    \ (first interval1)) \"YES\"]\n                                              \
    \                                               [else (cond\n                \
    \                                                                            \
    \           [(> (second interval2) (first interval2)) \"YES\"]\n             \
    \                                                                            \
    \              [(< (second interval2) (first interval2)) \"YES\"]\n          \
    \                                                                            \
    \                 [else (cond\n                                              \
    \                                                                 [(> (first interval1)\
    \ (second interval2)) \"YES\"]\n                                             \
    \                                                                  [(< (first\
    \ interval1) (second interval2)) \"YES\"]\n                                  \
    \                                                                            \
    \ [else (cond\n                                                              \
    \                                                         [(> (first interval2)\
    \ (second interval1)) \"YES\"]\n                                             \
    \                                                                          [(<\
    \ (first interval2) (second interval1)) \"YES\"]\n", "  (cond\n    [(empty? interval1)\
    \ \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection (rest interval1) (rest interval2))]\n    [else\
    \ (cons (first interval1) (intersection (rest interval1) (rest interval2)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(> (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [else (cond\n            [(> (second interval1)\
    \ (second interval2)) \"NO\"]\n            [(< (second interval1) (second interval2))\
    \ \"NO\"]\n            [else (cond\n                    [(> (first interval1)\
    \ (second interval2)) \"NO\"]\n                    [else (cond\n             \
    \               [(> (second interval1) (first interval2)) \"NO\"]\n          \
    \                  [else (cond\n                                    [(> (first\
    \ interval2) (second interval1)) \"NO\"]\n                                   \
    \ [else (cond\n                                            [(> (second interval2)\
    \ (first interval1)) \"NO\"]\n                                            [else\
    \ (cond\n                                                    [(> (first interval1)\
    \ (second interval2)) \"YES\"]\n                                             \
    \       [(> (first interval2) (second interval1)) \"YES\"]\n                 \
    \                                   [else \"NO\"]\n                          \
    \                          )]\n                                            )]\n\
    \                                    )]\n                            )]\n    \
    \                )]\n                )]\n            )]\n    )]\n))\n", "  (cond\n\
    \    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first\
    \ interval1) (first interval2)) (intersection interval1 (rest interval2))]\n \
    \   [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [else (cond\n            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n            [else (cond\n                    [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                    [else (cond\n\
    \                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [else \"NO\"])]])]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [else (cond\n            [(> (first interval1)\
    \ (first interval2)) \"NO\"]\n            [else \"YES\"]\n            )]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [else (cond\n            [(> (first interval1)\
    \ (first interval2)) \"NO\"]\n            [else (cond\n                    [(>\
    \ (first interval1) (first interval2)) \"NO\"]\n                    [else (cond\n\
    \                            [(> (first interval1) (first interval2)) \"NO\"]\n\
    \                            [else (cond\n                                   \
    \ [(> (first interval1) (first interval2)) \"NO\"]\n                         \
    \           [else (cond\n                                            [(> (first\
    \ interval1) (first interval2)) \"NO\"]\n                                    \
    \        [else (cond\n                                                    [(>\
    \ (first interval1) (first interval2)) \"NO\"]\n                             \
    \                       [else (cond\n                                        \
    \                    [(> (first interval1) (first interval2)) \"NO\"]\n      \
    \                                                      [else (cond\n         \
    \                                                           [(> (first interval1)\
    \ (first interval2)) \"NO\"]\n                                               \
    \                     [else (cond\n                                          \
    \                                  [(> (first interval1) (first interval2)) \"\
    NO\"]\n                                                                      \
    \      [else (cond\n                                                         \
    \                           [(> (first interval1) (first interval2)) \"NO\"]\n\
    \                                                                            \
    \        [else (cond\n                                                       \
    \                                     [(> (first interval1) (first interval2))\
    \ \"NO\"]\n                                                                  \
    \                          [else (cond\n                                     \
    \                                                               [(> (first interval1)\
    \ (first interval2)) \"NO\"]\n                                               \
    \                                                     [else (cond\n          \
    \                                                                            \
    \                      [(> (first interval1) (first interval2)) \"NO\"]\n    \
    \                                                                            \
    \                            [else (cond\n                                   \
    \                                                                            \
    \     [(> (first interval1) (first interval2)) \"NO\"]\n                     \
    \                                                                            \
    \                   [else (cond\n                                            \
    \                                                                            \
    \    [(> (first interval1) (first interval2)) \"NO\"]\n                      \
    \                                                                            \
    \                          [else (cond\n                                     \
    \                                                                            \
    \                   [(> (first interval1) (first interval2)) \"NO\"]\n       \
    \                                                                            \
    \                                                 [else (cond\n              \
    \                                                                            \
    \                                                                  [(> (first\
    \ interval1) (first interval2)) \"NO\"]\n                                    \
    \                                                                            \
    \                                            [else (cond\n                   \
    \                                                                            \
    \                                                                     [(> (first\
    \ interval1) (first interval2)) \"NO\"]\n                                    \
    \                                                                            \
    \                                                    [else (cond\n           \
    \                                                                            \
    \                                                                            \
    \         [(> (first interval1) (first interval2)) \"NO\"]\n                 \
    \                                                                            \
    \                                                                            \
    \   [else (cond\n                                                            \
    \                                                                            \
    \                                            [(> (first interval1) (first interval2))\
    \ \"NO\"]\n                                                                  \
    \                                                                            \
    \                                      [else (cond\n                         \
    \                                                                            \
    \                                                                            \
    \           [(> (first interval1) (first interval2)) \"NO\"]\n               \
    \                                                                            \
    \                                                                            \
    \                     [else (cond", "  (cond\n    [(empty? interval1) \"NO\"]\n\
    \    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n    [else (cond\n\
    \            [(= (first interval1) (first interval2)) \"YES\"]\n            [else\
    \ (cond\n                    [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                    [else (cond\n                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                            [else \"NO\"]\n  \
    \                          )]\n                    )]\n            )]\n    )]\n\
    \  )\n)\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2)\
    \ \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection interval1\
    \ (rest interval2))]\n    [(< (first interval2) (first interval1)) (intersection\
    \ interval2 (rest interval1))]\n    [else (cons (first interval1) (intersection\
    \ interval1 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval2)\
    \ (first interval1)) \"NO\"]\n    [else (cond\n            [(> (second interval1)\
    \ (second interval2)) \"NO\"]\n            [(> (second interval2) (second interval1))\
    \ \"NO\"]\n            [else \"YES\"]\n            )]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [else (intersection\
    \ interval1 (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [else (intersection interval1\
    \ (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n \
    \   [(< (first interval2) (first interval1)) \"NO\"]\n    [else (cond\n      \
    \      [(= (first interval1) (first interval2)) \"YES\"]\n            [else (cond\n\
    \                    [(= (first interval1) (second interval2)) \"YES\"]\n    \
    \                [else (cond\n                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                            [else (cond\n    \
    \                                [(= (first interval1) (second interval2)) \"\
    YES\"]\n                                    [(= (second interval1) (second interval2))\
    \ \"YES\"]\n                                    [else (cond\n                \
    \                            [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                                            [(= (second interval1) (second\
    \ interval2)) \"YES\"]\n                                            [(= (first\
    \ interval2) (second interval1)) \"YES\"]\n                                  \
    \          [(= (second interval2) (second interval1)) \"YES\"]\n             \
    \                               [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                                            [(= (second interval1) (first interval2))\
    \ \"YES\"]\n                                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                                            [(=\
    \ (second interval2) (second interval1)) \"YES\"]\n                          \
    \                  [(= (first interval1) (second interval2)) \"YES\"]\n      \
    \                                      [(= (second interval1) (second interval2))\
    \ \"YES\"]\n                                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                                            [(=\
    \ (second interval2) (second interval1)) \"YES\"]\n                          \
    \                  [(= (first interval1) (first interval2)) \"YES\"]\n       \
    \                                     [(= (second interval1) (first interval2))\
    \ \"YES\"]\n                                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                                            [(=\
    \ (second interval2) (second interval1)) \"YES\"]\n                          \
    \                  [(= (first interval1) (second interval2)) \"YES\"]\n      \
    \                                      [(= (second interval1) (second interval2))\
    \ \"YES\"]\n                                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                                            [(=\
    \ (second interval2) (second interval1)) \"YES\"]\n                          \
    \                  [(= (first interval1) (first interval2)) \"YES\"]\n       \
    \                                     [(= (second interval1) (first interval2))\
    \ \"YES\"]\n                                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                                            [(=\
    \ (second interval2) (second interval1)) \"YES\"]", "  (cond\n    [(empty? interval1)\
    \ \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval2)))]))\n", "  (cond [(null?\
    \ interval1) \"NO\"]\n        [(null? interval2) \"NO\"]\n        [(< (car interval1)\
    \ (car interval2)) (intersection interval1 (cdr interval2))]\n        [else (intersection\
    \ interval1 (cdr interval2))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n\
    \    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [else (intersection interval1\
    \ (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection\
    \ interval1 (rest interval2))]\n    [else (intersection interval1 (rest interval1))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval2)\
    \ (first interval1)) \"NO\"]\n    [else (cond\n            [(> (second interval1)\
    \ (second interval2)) \"NO\"]\n            [(> (second interval2) (second interval1))\
    \ \"NO\"]\n            [else \"YES\"])]\n  )\n)\n", "  (cond\n    [(empty? interval1)\
    \ \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval2)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond ((null? interval1) \"NO\")\n        ((null? interval2) \"NO\")\n      \
    \  ((< (car interval1) (car interval2)) (intersection interval1 (cdr interval2)))\n\
    \        (else \"YES\")))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n \
    \   [(< (first interval2) (first interval1)) \"NO\"]\n    [else (cond\n      \
    \      [(= (first interval1) (first interval2)) \"YES\"]\n            [else (cond\n\
    \                    [(= (first interval1) (second interval2)) \"YES\"]\n    \
    \                [else (cond\n                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                            [else \"NO\"])]])]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(> (car interval1) (car interval2)) \"NO\"]\n    [else (cond [(= (car interval1)\
    \ (car interval2)) \"YES\"]\n               [else (intersection interval1 (cdr\
    \ interval1))])]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection\
    \ interval1 (rest interval2))]\n    [(< (first interval2) (first interval1)) (intersection\
    \ interval2 (rest interval1))]\n    [else (cons (first interval1) (intersection\
    \ interval1 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [else (intersection interval1\
    \ (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(> (first interval1) (first interval2)) \"NO\"]\n \
    \   [(< (first interval1) (first interval2)) \"NO\"]\n    [else (cond\n      \
    \      [(> (second interval1) (second interval2)) \"NO\"]\n            [(< (second\
    \ interval1) (second interval2)) \"NO\"]\n            [else (cond\n          \
    \          [(> (first interval1) (second interval2)) \"NO\"]\n               \
    \     [else (cond\n                            [(> (first interval2) (second interval1))\
    \ \"NO\"]\n                            [else (cond\n                         \
    \           [(> (second interval1) (second interval2)) \"NO\"]\n             \
    \                       [else (cond\n                                        \
    \    [(> (second interval2) (second interval1)) \"NO\"]\n                    \
    \                        [else (cond\n                                       \
    \             [(> (first interval1) (first interval2)) \"YES\"]\n            \
    \                                        [(> (first interval2) (first interval1))\
    \ \"YES\"]\n                                                    [(> (second interval1)\
    \ (second interval2)) \"YES\"]\n                                             \
    \       [(> (second interval2) (second interval1)) \"YES\"]\n                \
    \                                    [else \"NO\"])])])])])])]))\n", "  (cond\n\
    \    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first\
    \ interval1) (first interval2)) (intersection interval1 (rest interval2))]\n \
    \   [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(> (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [else (cond\n            [(> (second interval1)\
    \ (second interval2)) \"NO\"]\n            [(< (second interval1) (second interval2))\
    \ \"NO\"]\n            [else (cond\n                    [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n                    [else (cond\n             \
    \               [(= (first interval1) (second interval2)) \"YES\"]\n         \
    \                   [else (cond\n                                    [(= (second\
    \ interval1) (second interval2)) \"YES\"]\n                                  \
    \  [else (cond\n                                            [(= (first interval1)\
    \ (second interval2)) \"YES\"]\n                                            [else\
    \ (cond\n                                                    [(= (second interval1)\
    \ (first interval2)) \"YES\"]\n                                              \
    \      [else (cond\n                                                         \
    \   [(= (second interval1) (second interval2)) \"YES\"]\n                    \
    \                                        [else \"NO\"])])])])])])]))\n", "  (cond\n\
    \    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first\
    \ interval1) (first interval2)) (intersection interval1 (rest interval2))]\n \
    \   [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(> (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval1) (first interval2)) \"\
    NO\"]\n    [else (cond\n            [(> (second interval1) (second interval2))\
    \ \"NO\"]\n            [(< (second interval1) (second interval2)) \"NO\"]\n  \
    \          [else (cond\n                    [(> (first interval1) (second interval2))\
    \ \"NO\"]\n                    [else (cond\n                            [(> (first\
    \ interval2) (second interval1)) \"NO\"]\n                            [else (cond\n\
    \                                    [(> (second interval1) (second interval2))\
    \ \"NO\"]\n                                    [else (cond\n                 \
    \                           [(> (first interval1) (first interval2)) \"YES\"]\n\
    \                                            [else (cond\n                   \
    \                                 [(> (second interval1) (second interval2)) \"\
    YES\"]\n                                                    [else (cond\n    \
    \                                                        [(> (first interval2)\
    \ (first interval1)) \"YES\"]\n                                              \
    \              [else (cond\n                                                 \
    \                   [(> (second interval2) (second interval1)) \"YES\"]\n    \
    \                                                                [else (cond\n\
    \                                                                            [(>\
    \ (first interval1) (second interval2)) \"YES\"]\n                           \
    \                                                 [else (cond\n              \
    \                                                                      [(> (second\
    \ interval1) (second interval2)) \"YES\"]\n                                  \
    \                                                  [else (cond\n             \
    \                                                                            \
    \   [(> (first interval2) (second interval1)) \"YES\"]\n                     \
    \                                                                       [else\
    \ (cond\n                                                                    \
    \                                [(> (second interval2) (second interval1)) \"\
    YES\"]\n                                                                     \
    \                               [else
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

{
  "name": "mbpp_17_square_perimeter",
  "language": "r",
  "prompt": "# Write a function that returns the perimeter of a square given its side length as input.\nsquare_perimeter <- function(a) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_17_square_perimeter.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- square_perimeter\n    if(!identical(candidate(10), 40)){quit('no', 1)}\n    if(!identical(candidate(5), 20)){quit('no', 1)}\n    if(!identical(candidate(4), 16)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n    return(4*a)\n}\n",
    "\n  return(4*a)\n}\n",
    "\n  return(4 * a)\n}\n",
    "\n  return(4*a)\n}\n\nsquare_perimeter(2)\n",
    "\n  return(4*a)\n}\n\nsquare_perimeter(2)\n",
    "\n  return(4*a)\n}\n",
    "\n  return(4*a)\n}\n",
    "\n  return(4*a)\n}\n",
    "\n  return(4*a)\n}\n",
    "\n  return(a * 4)\n}\n",
    "\n    return(a*4)\n}\n\nsquare_perimeter(5)\n",
    "\n  return(4*a)\n}\n",
    "\n  return(4*a)\n}\n",
    "\n  return(4*a)\n}\n\nsquare_perimeter(4)\n",
    "\n  return(4*a)\n}\nsquare_perimeter(5)\n",
    "\n  perimeter <- 4 * a\n  return(perimeter)\n}",
    "\n  return(4*a)\n}\n\nsquare_perimeter(5)\n",
    "\n  return(4*a)\n}\n\nsquare_perimeter(4)\n",
    "\n  return(4 * a)\n}\n",
    "\n  return(4 * a)\n}\n"
  ]
}
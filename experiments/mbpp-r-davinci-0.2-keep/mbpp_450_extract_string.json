{
  "name": "mbpp_450_extract_string",
  "language": "r",
  "prompt": "# Write a function to extract specified size of strings from a given list of string values.\nextract_string <- function(str, l) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_450_extract_string.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- extract_string\n    if(!identical(candidate(c('Python', 'list', 'exercises', 'practice', 'solution'), 8), list('practice', 'solution'))){quit('no', 1)}\n    if(!identical(candidate(c('Python', 'list', 'exercises', 'practice', 'solution'), 6), list('Python'))){quit('no', 1)}\n    if(!identical(candidate(c('Python', 'list', 'exercises', 'practice', 'solution'), 9), list('exercises'))){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  str <- str[nchar(str) == l]\n  return(str)\n}\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"morning\"), 5)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(str, 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(str, 3)\n",
    "\n  lapply(str, function(x) substr(x, 1, l))\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\"), 2)\n",
    "\n  str[nchar(str) == l]\n}\nextract_string(str, 5)\n",
    "\n  str_extract <- c()\n  for (i in 1:length(str)) {\n    if (nchar(str[i]) >= l) {\n      str_extract <- c(str_extract, str[i])\n    }\n  }\n  return(str_extract)\n}\n\nstr <- c(\"This is a sample string\", \"This is another sample string\", \"This is a third sample string\")\nextract_string(str, 10)\n",
    "\n  return(str[nchar(str) == l])\n}\n\nextract_string(c(\"this\", \"is\", \"a\", \"list\", \"of\", \"string\", \"values\"), 4)\n",
    "\n  str[nchar(str) == l]\n}\nextract_string(c(\"This\", \"is\", \"a\", \"list\", \"of\", \"strings\"), 2)\n",
    "\n  str <- str[nchar(str) == l]\n  return(str)\n}\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  return(str[str_length(str) == l])\n}\n\nextract_string(str, 4)\n",
    "\n  return(str[nchar(str) == l])\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"this\", \"is\", \"a\", \"list\", \"of\", \"string\", \"values\"), 4)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  return(str[str_length(str) == l])\n}\n\nextract_string(str, 4)\n",
    "\n  str[str_length(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  if(length(str) < l) {\n    return(str)\n  }\n  else {\n    return(substr(str, 1, l))\n  }\n}\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  lapply(str, function(x) substr(x, 1, l))\n}\nextract_string(str, 3)\n",
    "\n  str[str_length(str) == l]\n}\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str <- str[nchar(str) == l]\n  return(str)\n}\n",
    "\n  str <- str[nchar(str) == l]\n  return(str)\n}\n",
    "\n  return(str[str_length(str) == l])\n}\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  str[nchar(str) == l]\n}\nextract_string(str, 5)\n",
    "\n  str <- str[nchar(str) == l]\n  return(str)\n}\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  str <- str[nchar(str) == l]\n  return(str)\n}\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(str, l)\n",
    "\n  return(grep(paste0(\".{\", l, \"}\"), str, value = TRUE))\n}\n\nextract_string(c(\"abc\", \"defgh\", \"ijklmn\"), 2)\n",
    "\n  return(str[str_length(str) == l])\n}\nextract_string(c(\"This\", \"is\", \"a\", \"collection\", \"of\", \"words\"), 2)\n",
    "\n  str <- str[nchar(str) == l]\n  return(str)\n}\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"a\", \"ab\", \"abc\", \"abcd\"), 2)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  str[str_length(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str <- str[nchar(str) == l]\n  return(str)\n}\n",
    "\n  return(str[str_length(str) == l])\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  lapply(str, function(x) substr(x, 1, l))\n}\n\nextract_string(str, 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"this\", \"is\", \"a\", \"list\", \"of\", \"string\", \"values\"), 2)\n",
    "\n  str_extract <- c()\n  for (i in 1:length(str)) {\n    if (nchar(str[i]) >= l) {\n      str_extract <- c(str_extract, str[i])\n    }\n  }\n  return(str_extract)\n}\n\nstr <- c(\"This\", \"is\", \"a\", \"sample\", \"string\")\nextract_string(str, 4)\n",
    "\n  str[strlen(str) == l]\n}\n\nextract_string(c(\"a\", \"ab\", \"abc\", \"abcd\", \"abcde\"), 3)\n",
    "\n  str <- str[str_length(str) == l]\n  return(str)\n}\n\nstr <- c(\"This\", \"is\", \"a\", \"sample\", \"string\")\nextract_string(str, 4)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"collection\", \"of\", \"words\"), 2)\n",
    "\n  str[nchar(str) == l]\n}\nextract_string(str, 5)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str_extract <- c()\n  for (i in 1:length(str)) {\n    if (nchar(str[i]) >= l) {\n      str_extract <- c(str_extract, str[i])\n    }\n  }\n  return(str_extract)\n}\n\nextract_string(c(\"abc\", \"defg\", \"hijkl\"), 4)\n",
    "\n  str <- str[nchar(str) == l]\n  return(str)\n}\n",
    "\n  return(str[str_length(str) == l])\n}\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[str_length(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  str[str_length(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str_extract <- c()\n  for (i in 1:length(str)) {\n    if (nchar(str[i]) >= l) {\n      str_extract <- c(str_extract, str[i])\n    }\n  }\n  return(str_extract)\n}\n\nstr <- c(\"This\", \"is\", \"a\", \"sample\", \"string\")\nextract_string(str, 3)\n",
    "\n  lapply(str, function(x) substr(x, 1, l))\n}\n\nextract_string(str, 3)\n",
    "\n  str <- str[nchar(str) == l]\n  return(str)\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"collection\", \"of\", \"words\"), 2)\n",
    "\n  str[str_length(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"this\", \"is\", \"a\", \"list\", \"of\", \"string\", \"values\"), 2)\n",
    "\n  str <- str[nchar(str) == l]\n  return(str)\n}\n",
    "\n  str_len <- nchar(str)\n  if (str_len > l) {\n    str <- substr(str, 1, l)\n  }\n  return(str)\n}\n",
    "\n    return(str[nchar(str) == l])\n}\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(str, 5)\n",
    "\n  lapply(str, function(x) substr(x, 1, l))\n}\n\nextract_string(str, l)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"a\", \"ab\", \"abc\", \"abcd\"), 2)\n",
    "\n  return(str[str_length(str) == l])\n}\n\nextract_string(c(\"this\", \"is\", \"a\", \"list\", \"of\", \"string\", \"values\"), 4)\n",
    "\n  str[nchar(str) == l]\n}\nextract_string(str, 5)\n",
    "\n  str[nchar(str) == l]\n}\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  str[str_length(str) == l]\n}\nextract_string(str, 3)\n",
    "\n  str <- str[nchar(str) == l]\n  return(str)\n}\n\nextract_string(str, 5)\n",
    "\n  str[nchar(str) == l]\n}\nextract_string(str, 5)\n",
    "\n  str[nchar(str) == l]\n}\nextract_string(c(\"a\", \"ab\", \"abc\", \"abcd\", \"abcde\"), 3)\n",
    "\n  return(grep(paste0(\"^.{\", l, \"}$\"), str, value = TRUE))\n}\n\nextract_string(c(\"abc\", \"defgh\", \"ijklmn\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  return(str[str_length(str) == l])\n}\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(str, 4)\n",
    "\n  str[nchar(str) == l]\n}\nextract_string(str, 5)\n",
    "\n  return(str[str_length(str) == l])\n}\nextract_string(str, 3)\n",
    "\n  str[nchar(str) == l]\n}\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str <- str[str_length(str) == l]\n  return(str)\n}\n\nstr <- c(\"This\", \"is\", \"a\", \"sample\", \"string\")\nextract_string(str, 4)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str_extract <- c()\n  for (i in 1:length(str)) {\n    if (nchar(str[i]) >= l) {\n      str_extract <- c(str_extract, str[i])\n    }\n  }\n  return(str_extract)\n}\n",
    "\n  return(str[str_length(str) == l])\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  return(str[nchar(str) == l])\n}\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  str[nchar(str) == l]\n}\nextract_string(c(\"this\", \"is\", \"a\", \"list\", \"of\", \"string\", \"values\"), 4)\n",
    "\n  str[str_length(str) == l]\n}\nextract_string(str, 5)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"this\", \"is\", \"a\", \"list\", \"of\", \"strings\"), 2)\n",
    "\n  str <- str[str_length(str) == l]\n  return(str)\n}\n",
    "\n  return(str[str_length(str) == l])\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  str[nchar(str) == l]\n}\nextract_string(str, 5)\n",
    "\n  str <- str[nchar(str) == l]\n  return(str)\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str <- str[str_length(str) == l]\n  return(str)\n}\n",
    "\n  str <- str[nchar(str) == l]\n  return(str)\n}\n",
    "\n  str_list <- strsplit(str, \" \")\n  str_list <- str_list[[1]]\n  str_list <- str_list[nchar(str_list) == l]\n  return(str_list)\n}\n\nextract_string(\"The quick brown fox jumps over the lazy dog\", 3)\n",
    "\n  str[nchar(str) == l]\n}\nextract_string(c(\"this\", \"is\", \"a\", \"list\", \"of\", \"strings\"), 2)\n",
    "\n  str[str_length(str) == l]\n}\n\nextract_string(str, 4)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"morning\"), 5)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"this\", \"is\", \"a\", \"list\", \"of\", \"strings\"), 2)\n",
    "\n  str[nchar(str) == l]\n}\nextract_string(str, 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"abcd\", \"abcde\", \"abcdef\"), 4)\n",
    "\n  str <- str[str_length(str) == l]\n  return(str)\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  str <- str[nchar(str) == l]\n  return(str)\n}\n",
    "\n  lapply(str, function(x) substr(x, 1, l))\n}\n\nextract_string(str, 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"this\", \"is\", \"a\", \"list\", \"of\", \"strings\"), 2)\n",
    "\n  return(str[str_length(str) == l])\n}\nextract_string(str, 4)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  return(str[str_length(str) == l])\n}\n\nextract_string(str, 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(str, 4)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"a\", \"ab\", \"abc\", \"abcd\", \"abcde\"), 3)\n",
    "\n  str <- str[str_length(str) == l]\n  return(str)\n}\n",
    "\n  str <- str[str_length(str) == l]\n  return(str)\n}\n",
    "\n  return(grep(paste0(\"^.{\", l, \"}$\"), str, value = TRUE))\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 2)\n",
    "\n  return(str[nchar(str) == l])\n}\n",
    "\n  str <- str[str_length(str) == l]\n  return(str)\n}\n\nextract_string(str, l)\n",
    "\n  str[nchar(str) == l]\n}\nextract_string(str, 5)\n",
    "\n  if (length(str) == 0) {\n    return(NULL)\n  }\n  if (length(str) == 1) {\n    if (nchar(str) == l) {\n      return(str)\n    } else {\n      return(NULL)\n    }\n  }\n  if (length(str) > 1) {\n    return(str[nchar(str) == l])\n  }\n}\n",
    "\n  str_list <- strsplit(str, \" \")\n  str_list <- unlist(str_list)\n  str_list <- str_list[nchar(str_list) == l]\n  return(str_list)\n}\nextract_string(\"The quick brown fox jumps over the lazy dog\", 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n    str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(str, 4)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  lapply(str, function(x) substr(x, 1, l))\n}\n\nextract_string(str, l)\n",
    "\n  str <- str[nchar(str) == l]\n  return(str)\n}\n\nstr <- c(\"a\", \"ab\", \"abc\", \"abcd\", \"abcde\", \"abcdef\")\nextract_string(str, 3)\n",
    "\n  str[str_length(str) == l]\n}\n\nextract_string(str, 5)\n",
    "\n  str <- str[str_length(str) == l]\n  return(str)\n}\n",
    "\n  str_extract <- c()\n  for (i in 1:length(str)) {\n    if (nchar(str[i]) >= l) {\n      str_extract <- c(str_extract, str[i])\n    }\n  }\n  return(str_extract)\n}\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n",
    "\n  str <- str[nchar(str) == l]\n  return(str)\n}\n\nstr <- c(\"this\", \"is\", \"a\", \"list\", \"of\", \"strings\")\nextract_string(str, 2)\n",
    "\n  str[nchar(str) == l]\n}\nextract_string(str, 5)\n",
    "\n  str <- str[nchar(str) == l]\n  return(str)\n}\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"collection\", \"of\", \"words\"), 2)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[str_length(str) == l]\n}\n\nextract_string(str, l)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(str, 3)\n",
    "\n  lapply(str, function(x) substr(x, 1, l))\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\"), 2)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  return(str[str_length(str) == l])\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"morning\"), 5)\n",
    "\n  str[nchar(str) == l]\n}\nextract_string(str, 5)\n",
    "\n  str[str_length(str) == l]\n}\n\nextract_string(c(\"this\", \"is\", \"a\", \"list\", \"of\", \"string\", \"values\"), 2)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(str, 4)\n",
    "\n  str_list <- strsplit(str, \" \")\n  str_list <- str_list[[1]]\n  str_list <- str_list[nchar(str_list) == l]\n  return(str_list)\n}\n\nextract_string(str, 3)\n",
    "\n  str[strlen(str) == l]\n}\n\nextract_string(str, 3)\n",
    "\n  str <- str[nchar(str) == l]\n  return(str)\n}\n",
    "\n  str <- str[str_length(str) == l]\n  return(str)\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\", \"mno\"), 3)\n",
    "\n  return(grep(paste0(\"^.{\", l, \"}$\"), str, value = TRUE))\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 2)\n",
    "\n  return(str[nchar(str) == l])\n}\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"list\", \"of\", \"strings\"), 2)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"collection\", \"of\", \"words\"), 2)\n",
    "\n  str <- str[str_length(str) == l]\n  return(str)\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str <- str[str_length(str) == l]\n  return(str)\n}\n\nextract_string(str, l)\n",
    "\n  str <- str[nchar(str) == l]\n  return(str)\n}\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"morning\"), 5)\n",
    "\n  str[nchar(str) == l]\n}\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(str, 5)\n",
    "\n  return(str[str_length(str) == l])\n}\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  # str: vector of strings\n  # l: length of string to extract\n  # return: vector of strings of length l\n  return(str[nchar(str) == l])\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\"), 3)\n",
    "\n  if(length(str) > l) {\n    return(substr(str, 1, l))\n  } else {\n    return(str)\n  }\n}\n",
    "\n  return(str[str_length(str) >= l])\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  return(str[nchar(str) == l])\n}\n\nextract_string(c(\"this\", \"is\", \"a\", \"list\", \"of\", \"string\", \"values\"), 4)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"this\", \"is\", \"a\", \"list\", \"of\", \"strings\"), 2)\n",
    "\n  str[nchar(str) == l]\n}\n",
    "\n  return(str[str_length(str) == l])\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"this\", \"is\", \"a\", \"list\", \"of\", \"strings\"), 2)\n",
    "\n  str <- str[nchar(str) == l]\n  str\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  lapply(str, function(x) substr(x, 1, l))\n}\n\nextract_string(str, 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(str, 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(str, 5)\n",
    "\n  str <- str[nchar(str) == l]\n  return(str)\n}\n\nstr <- c(\"abc\", \"def\", \"ghi\", \"jkl\", \"mno\")\nextract_string(str, 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  str <- str[nchar(str) == l]\n  return(str)\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  return(str[str_length(str) == l])\n}\nextract_string(str, 5)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"This\", \"is\", \"a\", \"beautiful\", \"day\"), 4)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n",
    "\n  str <- str[str_length(str) == l]\n  return(str)\n}\n\nextract_string(str = c(\"abc\", \"def\", \"ghi\", \"jkl\"), l = 3)\n",
    "\n  str[nchar(str) == l]\n}\n\nextract_string(c(\"abc\", \"def\", \"ghi\", \"jkl\"), 3)\n"
  ]
}
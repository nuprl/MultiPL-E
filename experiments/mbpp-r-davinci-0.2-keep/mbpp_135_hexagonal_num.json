{
  "name": "mbpp_135_hexagonal_num",
  "language": "r",
  "prompt": "# Write a function to find the nth hexagonal number.\nhexagonal_num <- function(n) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_135_hexagonal_num.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- hexagonal_num\n    if(!identical(candidate(10), 190)){quit('no', 1)}\n    if(!identical(candidate(5), 45)){quit('no', 1)}\n    if(!identical(candidate(7), 91)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n  n * (2 * n - 1)\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  n*(2*n-1)\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  n * (2 * n - 1)\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  n * (2 * n - 1)\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n    return(n * (2 * n - 1))\n}\n",
    "\n  n * (2 * n - 1)\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n    return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  n * (2 * n - 1)\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n    return(n * (2 * n - 1))\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  n * (2 * n - 1)\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  n * (2 * n - 1)\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n    return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n    return(n * (2 * n - 1))\n}\n",
    "\n    return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n  n * (2 * n - 1)\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n    return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n    return(n*(2*n - 1))\n}\n",
    "\n  n * (2 * n - 1)\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  n * (2 * n - 1)\n}\n",
    "\n  (2 * n^2) - n\n}\n",
    "\n  return((2*n^2)-n)\n}\n",
    "\n    return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n    return(n * (2 * n - 1))\n}\n",
    "\n    return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  n * (2 * n - 1)\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n    return(n * (2 * n - 1))\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n - 1))\n}\n",
    "\n  (n * (2 * n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n - 1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n  n * (2 * n - 1)\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n  return(n*(2*n-1))\n}\n",
    "\n    n * (2 * n - 1)\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n  return(n * (2 * n - 1))\n}\n",
    "\n  n * (2 * n - 1)\n}\n",
    "\n  n * (2 * n - 1)\n}\n",
    "\n    return(n*(2*n-1))\n}\n",
    "\n  n * (2 * n - 1)\n}\n"
  ]
}
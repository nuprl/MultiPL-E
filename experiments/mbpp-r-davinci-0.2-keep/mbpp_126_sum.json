{
  "name": "mbpp_126_sum",
  "language": "r",
  "prompt": "# Write a python function to find the sum of common divisors of two given numbers.\nsum <- function(a, b) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_126_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- sum\n    if(!identical(candidate(10, 15), 6)){quit('no', 1)}\n    if(!identical(candidate(100, 150), 93)){quit('no', 1)}\n    if(!identical(candidate(4, 6), 3)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  sum <- 0\n  for (i in 1:a) {\n    if (a %% i == 0 && b %% i == 0) {\n      sum <- sum + i\n    }\n  }\n  return(sum)\n}\n\nsum(12, 18)\n",
    "\n    sum <- 0\n    for (i in 1:a) {\n        if (a %% i == 0 & b %% i == 0) {\n            sum <- sum + i\n        }\n    }\n    return(sum)\n}\n\nsum(12, 24)\n",
    "\n  # Write your code here\n  sum <- 0\n  for(i in 1:a){\n    if(a%%i==0 & b%%i==0){\n      sum <- sum + i\n    }\n  }\n  return(sum)\n}\n",
    "\n    if (a == 0) {\n        return(b)\n    } else {\n        return(sum(b %% a, a))\n    }\n}\n",
    "\n  if (a == 0) {\n    return(b)\n  } else {\n    return(sum(b %% a, a))\n  }\n}\n\nsum(12, 24)\n",
    "\n    if (a == b) {\n        return(a)\n    }\n    else if (a > b) {\n        return(sum(a - b, b))\n    }\n    else {\n        return(sum(a, b - a))\n    }\n}\n\nsum(6, 9)\n",
    "\n  if (a == 0) {\n    return(b)\n  } else {\n    return(sum(b %% a, a))\n  }\n}\n",
    "\n    sum <- 0\n    for (i in 1:min(a, b)) {\n        if (a %% i == 0 & b %% i == 0) {\n            sum <- sum + i\n        }\n    }\n    return(sum)\n}\n\nsum(12, 18)\n",
    "\n  if (a == 0) {\n    return(b)\n  } else {\n    return(sum(b %% a, a))\n  }\n}\n\nsum(12, 24)\n",
    "\n  sum <- 0\n  for (i in 1:a) {\n    if (a %% i == 0 & b %% i == 0) {\n      sum <- sum + i\n    }\n  }\n  return(sum)\n}\n",
    "\n  if (a == b) {\n    return(a)\n  }\n  else if (a > b) {\n    return(sum(a - b, b))\n  }\n  else {\n    return(sum(a, b - a))\n  }\n}\n",
    "\n  if (a == 0 || b == 0) {\n    return(0)\n  }\n  else {\n    return(a + b)\n  }\n}\n\nsum(0, 0)\nsum(0, 1)\nsum(1, 0)\nsum(1, 1)\n",
    "\n    sum <- 0\n    for (i in 1:a) {\n        if (a %% i == 0 & b %% i == 0) {\n            sum <- sum + i\n        }\n    }\n    return(sum)\n}\n\nsum(10, 20)\n",
    "\n  if (a == 0 || b == 0) {\n    return(0)\n  }\n  if (a == b) {\n    return(a)\n  }\n  if (a > b) {\n    return(sum(a - b, b))\n  }\n  return(sum(a, b - a))\n}\n\nsum(6, 9)\n",
    "\n  if (a == 0 && b == 0) {\n    return(0)\n  }\n  if (a == 0) {\n    return(sum(b, a))\n  }\n  if (b == 0) {\n    return(0)\n  }\n  if (a == b) {\n    return(a)\n  }\n  if (a > b) {\n    return(sum(a - b, b))\n  }\n  if (b > a) {\n    return(sum(a, b - a))\n  }\n}\n",
    "\n  if (a < b) {\n    a <- b\n    b <- a\n  }\n  sum <- 0\n  for (i in 1:b) {\n    if (a %% i == 0 & b %% i == 0) {\n      sum <- sum + i\n    }\n  }\n  return(sum)\n}\n\nsum(12, 24)\n",
    "\n  sum <- 0\n  for(i in 1:a) {\n    if(a %% i == 0 & b %% i == 0) {\n      sum <- sum + i\n    }\n  }\n  return(sum)\n}\n\nsum(6, 12)\n",
    "\n    if (a == 0) {\n        return(b)\n    }\n    return(sum(b % a, a))\n}\n",
    "\n  a_divisors <- divisors(a)\n  b_divisors <- divisors(b)\n  common_divisors <- intersect(a_divisors, b_divisors)\n  sum(common_divisors)\n}\n\nsum(12, 24)\n",
    "\n  divisors <- function(x) {\n    divisors <- c()\n    for (i in 1:x) {\n      if (x %% i == 0) {\n        divisors <- c(divisors, i)\n      }\n    }\n    return(divisors)\n  }\n  a_divisors <- divisors(a)\n  b_divisors <- divisors(b)\n  common_divisors <- intersect(a_divisors, b_divisors)\n  return(sum(common_divisors))\n}\n\nsum(6, 12)\nsum(10, 15)\n"
  ]
}
{
  "name": "mbpp_284_check_element",
  "language": "r",
  "prompt": "# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\ncheck_element <- function(list, element) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_284_check_element.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- check_element\n    if(!identical(candidate(list('green', 'orange', 'black', 'white'), 'blue'), FALSE)){quit('no', 1)}\n    if(!identical(candidate(list(1, 2, 3, 4), 7), FALSE)){quit('no', 1)}\n    if(!identical(candidate(list('green', 'green', 'green', 'green'), 'green'), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n    for (i in list) {\n        if (i != element) {\n            return(FALSE)\n        }\n    }\n    return(TRUE)\n}\n",
    "\n  for (i in list) {\n    if (i != element) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n",
    "\n  for (i in list) {\n    if (i != element) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n",
    "\n    for (i in list) {\n        if (i != element) {\n            return(FALSE)\n        }\n    }\n    return(TRUE)\n}\n",
    "\n    for (i in 1:length(list)) {\n        if (list[i] != element) {\n            return(FALSE)\n        }\n    }\n    return(TRUE)\n}\n\ncheck_element(c(1, 1, 1), 1)\ncheck_element(c(1, 1, 1), 2)\ncheck_element(c(1, 1, 1), 1.0)\n",
    "\n  for (i in 1:length(list)) {\n    if (list[i] != element) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n",
    "\n    for (i in list) {\n        if (i != element) {\n            return(FALSE)\n        }\n    }\n    return(TRUE)\n}\n",
    "\n  for (i in list) {\n    if (i != element) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n",
    "\n    for (i in list) {\n        if (i != element) {\n            return(FALSE)\n        }\n    }\n    return(TRUE)\n}\n",
    "\n    for(i in 1:length(list)) {\n        if(list[i] != element) {\n            return(FALSE)\n        }\n    }\n    return(TRUE)\n}\n\ncheck_element(c(1,1,1,1,1), 1)\ncheck_element(c(1,1,1,1,1), 2)\n",
    "\n  for (i in list) {\n    if (i != element) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n",
    "\n  for (i in list) {\n    if (i != element) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n",
    "\n  all(list == element)\n}\n",
    "\n    for (i in list) {\n        if (i != element) {\n            return(FALSE)\n        }\n    }\n    return(TRUE)\n}\n",
    "\n  for (i in list) {\n    if (i != element) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n",
    "\n  for (i in list) {\n    if (i != element) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n",
    "\n  for (i in list) {\n    if (i != element) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n",
    "\n  for (i in list) {\n    if (i != element) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n",
    "\n  for (i in list) {\n    if (i != element) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n",
    "\n  for (i in list) {\n    if (i != element) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n"
  ]
}
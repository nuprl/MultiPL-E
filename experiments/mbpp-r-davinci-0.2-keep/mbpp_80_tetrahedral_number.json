{
  "name": "mbpp_80_tetrahedral_number",
  "language": "r",
  "prompt": "# Write a function to find the nth tetrahedral number.\ntetrahedral_number <- function(n) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_80_tetrahedral_number.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- tetrahedral_number\n    if(!identical(candidate(5), 35)){quit('no', 1)}\n    if(!identical(candidate(6), 56)){quit('no', 1)}\n    if(!identical(candidate(7), 84)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  n * (n + 1) * (n + 2) / 6\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n    return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n    return(n*(n+1)*(n+2)/6)\n}\n",
    "\n    return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n    return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  if (n < 1) {\n    return(0)\n  }\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n\ntetrahedral_number(4)\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n    return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  sum(1:n)\n}\n\ntetrahedral_number(5)\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n    return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n\ntetrahedral_number(5)\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n    return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  n * (n + 1) * (n + 2) / 6\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n    return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n    return(n*(n+1)*(n+2)/6)\n}\n",
    "\n    return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n\ntetrahedral_number(5)\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n    return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n    return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n    return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n    return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n    return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n    return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n    return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n    return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  n * (n + 1) * (n + 2) / 6\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n    return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return((n*(n+1)*(n+2))/6)\n}\n",
    "\n  return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n    return(n * (n + 1) * (n + 2) / 6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n",
    "\n  return(n*(n+1)*(n+2)/6)\n}\n"
  ]
}
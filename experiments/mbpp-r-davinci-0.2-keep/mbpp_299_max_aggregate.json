{
  "name": "mbpp_299_max_aggregate",
  "language": "r",
  "prompt": "# Write a function to calculate the maximum aggregate from the list of tuples.\nmax_aggregate <- function(stdata) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_299_max_aggregate.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- max_aggregate\n    if(!identical(candidate(list(list('Juan Whelan', 90), list('Sabah Colley', 88), list('Peter Nichols', 7), list('Juan Whelan', 122), list('Sabah Colley', 84))), list('Juan Whelan', 212))){quit('no', 1)}\n    if(!identical(candidate(list(list('Juan Whelan', 50), list('Sabah Colley', 48), list('Peter Nichols', 37), list('Juan Whelan', 22), list('Sabah Colley', 14))), list('Juan Whelan', 72))){quit('no', 1)}\n    if(!identical(candidate(list(list('Juan Whelan', 10), list('Sabah Colley', 20), list('Peter Nichols', 30), list('Juan Whelan', 40), list('Sabah Colley', 50))), list('Sabah Colley', 70))){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$Aggregate)\n}\n",
    "\n  max_aggregate <- max(stdata$aggregate)\n  return(max_aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  # Create a vector to store the aggregate of each student.\n  aggregate <- c()\n  # Loop through each student.\n  for (i in 1:nrow(stdata)) {\n    # Calculate the aggregate of the student.\n    aggregate[i] <- sum(stdata[i, 2:5])\n  }\n  # Return the maximum aggregate.\n  return(max(aggregate))\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$Aggregate)\n}\n",
    "\n  max(stdata[,2])\n}\n",
    "\n  max(stdata$aggregate)\n}\n\nmax_aggregate(stdata)\n",
    "\n  max(stdata$aggregate)\n}\n\nmax_aggregate(stdata)\n",
    "\n    max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\nmax_aggregate(stdata)\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\nmax_aggregate(stdata)\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n\nmax_aggregate(stdata)\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$Aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  # Write your code here\n  max_aggregate <- max(stdata$aggregate)\n  return(max_aggregate)\n}\n",
    "\n  max(stdata$Aggregate)\n}\n",
    "\n  max(stdata[,2])\n}\n",
    "\n  max(stdata$aggregate)\n}\nmax_aggregate(stdata)\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\nmax_aggregate(stdata)\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$Aggregate, na.rm = TRUE)\n}\nmax_aggregate(stdata)\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n\nmax_aggregate(stdata)\n",
    "\n  max(stdata$Aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n\nmax_aggregate(stdata)\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n    max(stdata[,3])\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$Aggregate)\n}\n",
    "\n  max(stdata[,2])\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$Aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  stdata %>%\n    group_by(State) %>%\n    summarise(max_aggregate = max(Aggregate))\n}\n\nmax_aggregate(stdata)\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n\nmax_aggregate(stdata)\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\nmax_aggregate(stdata)\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$Aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n\nmax_aggregate(stdata)\n",
    "\n  max(stdata$Aggregate)\n}\n",
    "\n  max(stdata$Aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  stdata %>%\n    group_by(state) %>%\n    summarise(max_aggregate = max(aggregate))\n}\n",
    "\n  stdata %>%\n    group_by(state) %>%\n    summarise(max_aggregate = max(aggregate))\n}\n\nmax_aggregate(stdata)\n",
    "\n    max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n\nmax_aggregate(stdata)\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  stdata$aggregate <- stdata$runs + stdata$wickets * 20\n  stdata[which.max(stdata$aggregate), ]\n}\nmax_aggregate(stdata)\n",
    "\n  stdata %>%\n    group_by(state) %>%\n    summarise(max_aggregate = max(aggregate))\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$Aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata[,2])\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$Aggregate)\n}\n",
    "\n    max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  # Calculate the aggregate for each student.\n  stdata$aggregate <- stdata$maths + stdata$science + stdata$english\n  # Find the maximum aggregate.\n  max_aggregate <- max(stdata$aggregate)\n  # Return the maximum aggregate.\n  return(max_aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  # Write your code here\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$Aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$Aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$Aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\nmax_aggregate(stdata)\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max_aggregate <- max(stdata$Aggregate)\n  return(max_aggregate)\n}\n",
    "\n  max(stdata$Aggregate)\n}\nmax_aggregate(stdata)\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata[,2])\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$Aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$Aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n    # Write your code here\n    max(stdata$aggregate)\n}\n",
    "\n  stdata %>%\n    group_by(state) %>%\n    summarise(max_aggregate = max(aggregate))\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\nmax_aggregate(stdata)\n",
    "\n  max(stdata$aggregate)\n}\n\nmax_aggregate(stdata)\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\nmax_aggregate(stdata)\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$Aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n\nmax_aggregate(stdata)\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n\nmax_aggregate(stdata)\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$Aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$Aggregate)\n}\n",
    "\n  max(stdata$aggregate, na.rm = TRUE)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata$aggregate)\n}\n",
    "\n  max(stdata[,2])\n}\n"
  ]
}
{
  "name": "mbpp_778_pack_consecutive_duplicates",
  "language": "r",
  "prompt": "# Write a function to pack consecutive duplicates of a given list elements into sublists.\npack_consecutive_duplicates <- function(list1) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_778_pack_consecutive_duplicates.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- pack_consecutive_duplicates\n    if(!identical(candidate(list(0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4)), list(list(0, 0), list(1), list(2), list(3), list(4, 4), list(5), list(6, 6, 6), list(7), list(8), list(9), list(4, 4)))){quit('no', 1)}\n    if(!identical(candidate(list(10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10)), list(list(10, 10), list(15), list(19), list(18, 18), list(17), list(26, 26), list(17), list(18), list(10)))){quit('no', 1)}\n    if(!identical(candidate(list('a', 'a', 'b', 'c', 'd', 'd')), list(list('a', 'a'), list('b'), list('c'), list('d', 'd')))){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  list2 <- list()\n  i <- 1\n  j <- 1\n  for (i in 1:length(list1)) {\n    if (i == 1) {\n      list2[[j]] <- list1[i]\n    } else {\n      if (list1[i] == list1[i-1]) {\n        list2[[j]] <- c(list2[[j]], list1[i])\n      } else {\n        j <- j + 1\n        list2[[j]] <- list1[i]\n      }\n    }\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  else {\n    pack_consecutive_duplicates_helper(tail(list1, n = -1),\n                                       c(list2, list(pack_consecutive_duplicates_helper2(list1))))\n  }\n}\n\npack_consecutive_duplicates_helper2 <- function(list1) {\n  if (length(list1) == 0) {\n    return(list())\n  }\n  else if (length(list1) == 1) {\n    return(list1)\n  }\n  else if (head(list1, n = 1) == head(list1, n = 2)) {\n    return(c(head(list1, n = 1), pack_consecutive_duplicates_helper2(tail(list1, n = -1))))\n  }\n  else {\n    return(list())\n  }\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list1 <- as.character(list1)\n  list2 <- list()\n  for (i in 1:length(list1)) {\n    if (i == 1) {\n      list2[[i]] <- list1[i]\n    } else {\n      if (list1[i] == list1[i - 1]) {\n        list2[[length(list2)]] <- c(list2[[length(list2)]], list1[i])\n      } else {\n        list2[[length(list2) + 1]] <- list1[i]\n      }\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  else {\n    list2 <- c(list2, list(list1[1]))\n    list1 <- list1[-1]\n    while (length(list1) > 0 && list1[1] == list2[[length(list2)]]) {\n      list2[[length(list2)]] <- c(list2[[length(list2)]], list1[1])\n      list1 <- list1[-1]\n    }\n    pack_consecutive_duplicates_helper(list1, list2)\n  }\n}\n\npack_consecutive_duplicates(list(1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5))\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  list2\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  else {\n    list2 <- c(list2, list(list1[1]))\n    list1 <- list1[-1]\n    while (length(list1) > 0 && list1[1] == list2[[length(list2)]]) {\n      list2[[length(list2)]] <- c(list2[[length(list2)]], list1[1])\n      list1 <- list1[-1]\n    }\n    pack_consecutive_duplicates_helper(list1, list2)\n  }\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list(), list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2, list3) {\n  if (length(list1) == 0) {\n    return(list3)\n  }\n  if (length(list2) == 0) {\n    list2 <- c(list2, list1[1])\n    list3 <- c(list3, list2)\n    return(pack_consecutive_duplicates_helper(list1[-1], list(), list3))\n  }\n  if (list1[1] == list2[length(list2)]) {\n    list2 <- c(list2, list1[1])\n    list3[length(list3)] <- list2\n    return(pack_consecutive_duplicates_helper(list1[-1], list2, list3))\n  } else {\n    list2 <- c(list2, list1[1])\n    list3 <- c(list3, list2)\n    return(pack_consecutive_duplicates_helper(list1[-1], list(), list3))\n  }\n}\n",
    "\n  list1 <- as.character(list1)\n  list2 <- list()\n  for (i in 1:length(list1)) {\n    if (i == 1) {\n      list2[[i]] <- list1[i]\n    } else {\n      if (list1[i] == list1[i-1]) {\n        list2[[length(list2)]] <- c(list2[[length(list2)]], list1[i])\n      } else {\n        list2[[length(list2)+1]] <- list1[i]\n      }\n    }\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates_helper(list1, list())\n}\n\npack_consecutive_duplicates_helper <- function(list1, list2) {\n  if (length(list1) == 0) {\n    return(list2)\n  }\n  if (length(list2) == 0) {\n    list2 <- list(list1[1])\n    return(pack_consecutive_duplicates_helper(list1[-1], list2))\n  }\n  if (list1[1] == list2[[length(list2)]][1]) {\n    list2[[length(list2)]] <- c(list2[[length(list2)]], list1[1])\n    return(pack_consecutive_duplicates_helper(list1[-1], list2))\n  }\n  list2 <- c(list2, list(list1[1]))\n  return(pack_consecutive_duplicates_helper(list1[-1], list2))\n}\n\npack_consecutive_duplicates(list(\"a\", \"a\", \"a\", \"a\", \"b\", \"c\", \"c\", \"a\", \"a\", \"d\", \"e\", \"e\", \"e\", \"e\"))\n",
    "\n  list2 <- list()\n  i <- 1\n  while(i <= length(list1)) {\n    j <- i\n    while(j <= length(list1) && list1[i] == list1[j]) {\n      j <- j + 1\n    }\n    list2[[i]] <- list1[i:(j-1)]\n    i <- j\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  j <- 1\n  for (i in 1:length(list1)) {\n    if (i == 1) {\n      list2[[j]] <- list1[i]\n    } else if (list1[i] == list1[i-1]) {\n      list2[[j]] <- c(list2[[j]], list1[i])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[i]\n    }\n  }\n  return(list2)\n}\n",
    "\n  pack_consecutive_duplicates <- function(list1, result) {\n    if (length(list1) == 0) {\n      return(result)\n    }\n    else {\n      i <- 1\n      while (i <= length(list1) && list1[i] == list1[1]) {\n        i <- i + 1\n      }\n      result <- c(result, list(list1[1:i-1]))\n      list1 <- list1[i:length(list1)]\n      pack_consecutive_duplicates(list1, result)\n    }\n  }\n  pack_consecutive_duplicates(list1, list())\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list1[[i-1]]) {\n      list2[[length(list2)]] <- c(list2[[length(list2)]], list1[[i]])\n    } else {\n      list2[[length(list2)+1]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  list2\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for (i in 2:length(list1)) {\n    if (list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  list2\n}\n",
    "\n  list2 <- list()\n  list2[[1]] <- list1[[1]]\n  j <- 1\n  for(i in 2:length(list1)) {\n    if(list1[[i]] == list2[[j]][[1]]) {\n      list2[[j]] <- c(list2[[j]], list1[[i]])\n    } else {\n      j <- j + 1\n      list2[[j]] <- list1[[i]]\n    }\n  }\n  return(list2)\n}\n"
  ]
}
{
  "name": "mbpp_420_cube_Sum",
  "language": "r",
  "prompt": "# Write a python function to find the cube sum of first n even natural numbers.\ncube_Sum <- function(n) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_420_cube_Sum.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- cube_Sum\n    if(!identical(candidate(2), 72)){quit('no', 1)}\n    if(!identical(candidate(3), 288)){quit('no', 1)}\n    if(!identical(candidate(4), 800)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (2 * i) ^ 3\n  }\n  return(sum)\n}\n\ncube_Sum(3)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (2*i)^3\n  }\n  return(sum)\n}\n\ncube_Sum(3)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (2*i)^3\n  }\n  return(sum)\n}\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + i^3\n  }\n  return(sum)\n}\n\ncube_Sum(5)\n",
    "\n    sum <- 0\n    for (i in 1:n) {\n        sum <- sum + i^3\n    }\n    return(sum)\n}\n\ncube_Sum(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + i^3\n  }\n  return(sum)\n}\n\ncube_Sum(4)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (2*i)^3\n  }\n  return(sum)\n}\n\ncube_Sum(3)\n",
    "\n    sum <- 0\n    for (i in 1:n) {\n        sum <- sum + (i*i*i)\n    }\n    return(sum)\n}\n\ncube_Sum(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (2*i)^3\n  }\n  return(sum)\n}\n\ncube_Sum(3)\n",
    "\n    sum <- 0\n    for (i in 1:n) {\n        sum <- sum + i^3\n    }\n    return(sum)\n}\n\ncube_Sum(10)\n",
    "\n    sum <- 0\n    for (i in 1:n) {\n        sum <- sum + i^3\n    }\n    return(sum)\n}\n\ncube_Sum(5)\n",
    "\n    sum <- 0\n    for (i in 1:n) {\n        sum <- sum + i^3\n    }\n    return(sum)\n}\n\ncube_Sum(5)\n",
    "\n    sum <- 0\n    for (i in 1:n) {\n        sum <- sum + (2*i)^3\n    }\n    return(sum)\n}\n\ncube_Sum(3)\n",
    "\n  sum(seq(2, n*2, 2)^3)\n}\n\ncube_Sum(3)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + i^3\n  }\n  return(sum)\n}\n\ncube_Sum(5)\n",
    "\n    sum <- 0\n    for (i in 1:n) {\n        sum <- sum + (2*i)^3\n    }\n    return(sum)\n}\n\ncube_Sum(3)\n",
    "\n    sum <- 0\n    for (i in 1:n) {\n        sum <- sum + (i*i*i)\n    }\n    return(sum)\n}\n\ncube_Sum(10)\n",
    "\n    sum <- 0\n    for (i in 1:n) {\n        sum <- sum + (2*i)^3\n    }\n    return(sum)\n}\n\ncube_Sum(3)\n",
    "\n    sum <- 0\n    for (i in 1:n) {\n        sum <- sum + (i * i * i)\n    }\n    return(sum)\n}\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (i * i * i)\n  }\n  return(sum)\n}\n\ncube_Sum(4)\n"
  ]
}
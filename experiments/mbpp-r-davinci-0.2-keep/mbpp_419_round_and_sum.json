{
  "name": "mbpp_419_round_and_sum",
  "language": "r",
  "prompt": "# Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\nround_and_sum <- function(list1) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_419_round_and_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- round_and_sum\n    if(!identical(candidate(list(22.4, 4.0, -16.22, -9.1, 11.0, -12.22, 14.2, -5.2, 17.5)), 243)){quit('no', 1)}\n    if(!identical(candidate(list(5, 2, 9, 24.3, 29)), 345)){quit('no', 1)}\n    if(!identical(candidate(list(25.0, 56.7, 89.2)), 513)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  sum(round(list1)) * length(list1)\n}\n",
    "\n  list2 <- sapply(list1, round)\n  sum(list2) * length(list2)\n}\n",
    "\n  sum(round(list1)) * length(list1)\n}\n\nround_and_sum(c(1.5, 2.5, 3.5))\n",
    "\n    sum(round(list1)) * length(list1)\n}\n",
    "\n  sum(round(list1)) * length(list1)\n}\n",
    "\n  total <- 0\n  for (i in 1:length(list1)) {\n    total <- total + round(list1[i])\n  }\n  total * length(list1)\n}\n",
    "\n  sum(round(list1)) * length(list1)\n}\n",
    "\n  sum(round(list1)) * length(list1)\n}\n",
    "\n  sum(round(list1)) * length(list1)\n}\n",
    "\n  sum(round(list1)) * length(list1)\n}\n",
    "\n  sum(round(list1)) * length(list1)\n}\n",
    "\n  sum(round(list1)) * length(list1)\n}\n",
    "\n  sum(round(list1)) * length(list1)\n}\n",
    "\n  sum(round(list1)) * length(list1)\n}\n",
    "\n  sum(round(list1)) * length(list1)\n}\n",
    "\n  # Write your code here\n}\n",
    "\n  sum(round(list1)) * length(list1)\n}\n",
    "\n  sum(round(list1)) * length(list1)\n}\n\nround_and_sum(c(1.2, 3.4, 5.6, 7.8, 9.0))\n",
    "\n  sum(round(list1)) * length(list1)\n}\n",
    "\n  sum(round(list1)) * length(list1)\n}\n"
  ]
}
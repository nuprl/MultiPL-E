{
  "name": "mbpp_745_divisible_by_digits",
  "language": "r",
  "prompt": "# Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\ndivisible_by_digits <- function(startnum, endnum) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_745_divisible_by_digits.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- divisible_by_digits\n    if(!identical(candidate(1, 22), list(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22))){quit('no', 1)}\n    if(!identical(candidate(1, 15), list(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15))){quit('no', 1)}\n    if(!identical(candidate(20, 25), list(22, 24))){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  divisible_by_digits <- function(x) {\n    digits <- strsplit(as.character(x), \"\")[[1]]\n    all(x %% as.numeric(digits) == 0)\n  }\n  return(Filter(divisible_by_digits, startnum:endnum))\n}\ndivisible_by_digits(1, 100)\n",
    "\n  # Write your code here\n  return(NULL)\n}\ndivisible_by_digits(1, 100)\n ",
    "\n  lapply(startnum:endnum, function(x) {\n    if (all(x %% as.numeric(strsplit(as.character(x), \"\")[[1]]) == 0)) {\n      x\n    }\n  })\n}\n\ndivisible_by_digits(1, 100)\n",
    "\n  numbers <- seq(startnum, endnum)\n  numbers <- numbers[sapply(numbers, function(x) all(x %% as.integer(strsplit(as.character(x), \"\")[[1]]) == 0))]\n  return(numbers)\n}\n\ndivisible_by_digits(1, 100)\n",
    "\n  return(sapply(startnum:endnum, function(x) {\n    if(all(x %% as.integer(strsplit(as.character(x), \"\")[[1]]) == 0)) {\n      return(x)\n    }\n  }))\n}\n\ndivisible_by_digits(1, 100)\n",
    "\n  lapply(startnum:endnum, function(x) {\n    if (all(x %% as.numeric(strsplit(as.character(x), \"\")[[1]]) == 0)) {\n      x\n    }\n  })\n}\n\ndivisible_by_digits(1, 100)\n",
    "\n  divisible_by_digits <- function(x) {\n    digits <- strsplit(as.character(x), \"\")[[1]]\n    all(x %% as.numeric(digits) == 0)\n  }\n  Filter(divisible_by_digits, startnum:endnum)\n}\n\ndivisible_by_digits(1, 100)\n",
    "\n  lapply(startnum:endnum, function(x) {\n    if (all(x %% as.integer(strsplit(as.character(x), \"\")[[1]]) == 0)) {\n      x\n    }\n  })\n}\n\ndivisible_by_digits(1, 100)\n",
    "\n  lapply(startnum:endnum, function(x) {\n    if (all(x %% as.integer(strsplit(as.character(x), \"\")[[1]]) == 0)) {\n      x\n    }\n  })\n}\n\ndivisible_by_digits(1, 100)\n",
    "\n  divisible_by_digits <- function(x) {\n    digits <- strsplit(as.character(x), \"\")[[1]]\n    all(x %% as.numeric(digits) == 0)\n  }\n  return(Filter(divisible_by_digits, startnum:endnum))\n}\ndivisible_by_digits(1, 100)\n",
    "\n  divisible_by_digits <- function(num) {\n    digits <- strsplit(as.character(num), \"\")[[1]]\n    divisible <- TRUE\n    for (digit in digits) {\n      if (num %% as.integer(digit) != 0) {\n        divisible <- FALSE\n      }\n    }\n    return(divisible)\n  }\n  return(Filter(divisible_by_digits, startnum:endnum))\n}\n\ndivisible_by_digits(1, 100)\n",
    "\n  divisible_by_digits <- function(x) {\n    digits <- strsplit(as.character(x), \"\")[[1]]\n    all(x %% as.numeric(digits) == 0)\n  }\n  divisible_by_digits_vector <- Vectorize(divisible_by_digits)\n  divisible_by_digits_vector(startnum:endnum)\n}\n\ndivisible_by_digits(1, 100)\n",
    "\n  lapply(startnum:endnum, function(x) {\n    if (all(x %% as.numeric(strsplit(as.character(x), \"\")[[1]]) == 0)) {\n      x\n    }\n  })\n}\n\ndivisible_by_digits(1, 100)\n",
    "\n    divisible_by_digits <- function(num) {\n        num_digits <- unlist(strsplit(as.character(num), \"\"))\n        all(num %% as.numeric(num_digits) == 0)\n    }\n    return(Filter(divisible_by_digits, startnum:endnum))\n}\ndivisible_by_digits(1, 100)\n",
    "\n  lapply(startnum:endnum, function(x) {\n    if (all(x %% as.numeric(strsplit(as.character(x), \"\")[[1]]) == 0)) x\n  })\n}\ndivisible_by_digits(1, 100)\n",
    "\n  lapply(startnum:endnum, function(x) {\n    if (all(x %% as.numeric(unlist(strsplit(as.character(x), split = \"\"))) == 0)) {\n      x\n    }\n  })\n}\n\ndivisible_by_digits(1, 100)\n",
    "\n  lapply(startnum:endnum, function(x) {\n    if (all(x %% as.numeric(strsplit(as.character(x), \"\")[[1]]) == 0)) {\n      x\n    }\n  })\n}\n\ndivisible_by_digits(1, 100)\n",
    "\n  numbers <- seq(startnum, endnum)\n  numbers <- numbers[sapply(numbers, function(x) all(x %% as.numeric(strsplit(as.character(x), \"\")[[1]]) == 0))]\n  return(numbers)\n}\n",
    "\n  nums <- seq(startnum, endnum)\n  nums <- nums[sapply(nums, function(x) all(x %% as.integer(strsplit(as.character(x), \"\")[[1]]) == 0))]\n  return(nums)\n}\n\ndivisible_by_digits(1, 100)\n",
    "\n  divisible_by_digits_helper <- function(num) {\n    digits <- strsplit(num, \"\")[[1]]\n    all(as.numeric(digits) != 0) && all(num %% as.numeric(digits) == 0)\n  }\n  return(Filter(divisible_by_digits_helper, startnum:endnum))\n}\ndivisible_by_digits(1, 100)\n"
  ]
}
{
  "name": "mbpp_592_sum_Of_product",
  "language": "r",
  "prompt": "# Write a python function to find the sum of the product of consecutive binomial co-efficients.\nsum_Of_product <- function(n) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_592_sum_Of_product.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- sum_Of_product\n    if(!identical(candidate(3), 15)){quit('no', 1)}\n    if(!identical(candidate(4), 56)){quit('no', 1)}\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + binomial_coeff(i,j) * binomial_coeff(i,j+1)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(4)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + (factorial(i)/(factorial(j)*factorial(i-j)))\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + (factorial(i) / (factorial(j) * factorial(i - j)))\n    }\n  }\n  return(sum)\n}\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + (factorial(i)/(factorial(j)*factorial(i-j)))\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + (factorial(i) / (factorial(j) * factorial(i - j)))\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + (factorial(i)/(factorial(j)*factorial(i-j)))*(factorial(i)/(factorial(j)*factorial(i-j)))\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))*(factorial(n)/(factorial(i+1)*factorial(n-i-1)))\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:n) {\n      sum <- sum + binomial_coeff(i,j)\n    }\n  }\n  return(sum)\n}\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + (binomial_coefficient(i,j) * binomial_coefficient(i,j+1))\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(4)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n) / (factorial(i) * factorial(n - i)))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j)\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(4)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + choose(i, j) * choose(i, j + 1)\n    }\n  }\n  return(sum)\n}\nsum_Of_product(3)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + (factorial(i)/(factorial(j)*factorial(i-j)))\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + (binomial_coefficient(i, j) * binomial_coefficient(i, j + 1))\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(6)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + (factorial(i) / (factorial(j) * factorial(i - j)))\n    }\n  }\n  return(sum)\n}\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum <- sum + (binomial_coefficient(i, j) * binomial_coefficient(i, j + 1))\n    }\n  }\n  return(sum)\n}\n\nsum_Of_product(4)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n)/(factorial(i)*factorial(n-i)))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + (factorial(n) / (factorial(i) * factorial(n - i)))\n  }\n  return(sum)\n}\n\nsum_Of_product(5)\n",
    "\n  sum_of_product <- 0\n  for (i in 1:n) {\n    for (j in 1:i) {\n      sum_of_product <- sum_of_product + (choose(i,j) * choose(i,j+1))\n    }\n  }\n  return(sum_of_product)\n}\n\nsum_Of_product(4)\n"
  ]
}
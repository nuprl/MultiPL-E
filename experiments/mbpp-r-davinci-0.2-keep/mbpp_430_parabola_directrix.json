{
  "name": "mbpp_430_parabola_directrix",
  "language": "r",
  "prompt": "# Write a function to find the directrix of a parabola.\nparabola_directrix <- function(a, b, c) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_430_parabola_directrix.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- parabola_directrix\n    if(!identical(candidate(5, 3, 2), -198)){quit('no', 1)}\n    if(!identical(candidate(9, 8, 4), -2336)){quit('no', 1)}\n    if(!identical(candidate(2, 4, 6), -130)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n    -c / b\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n    -c/b\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n  # TODO: Write your code here\n  -c/b\n}\n",
    "\n  # a is the coefficient of x^2\n  # b is the coefficient of x\n  # c is the constant\n  # The directrix is the line y = -a/b - c/b\n  return(-a/b - c/b)\n}\n",
    "\n    return(-c/b)\n}\n",
    "\n  # Your code here\n}\n",
    "\n  -c / b\n}\n",
    "\n  -c / b\n}\n",
    "\n  # Your code here\n}\n",
    "\n  -c / b\n}\n",
    "\n  -c/b\n}\n",
    "\n  # Your code here\n}\n",
    "\n  -(b^2 - 4*a*c)/(4*a)\n}\n",
    "\n  -c / b\n}\n",
    "\n  # Your code here\n}\n",
    "\n    -c/b\n}\n",
    "\n  -c/b\n}\n",
    "\n  -c/b\n}\n",
    "\n  # a is the coefficient of x^2\n  # b is the coefficient of x\n  # c is the constant\n  # directrix is the line y = -b/2a - c/a\n  # return the directrix as a string\n  # return the directrix as a string\n  return(paste(\"y =\", -b/(2*a), \"-\", c/a))\n}\n",
    "\n  -c/b\n}\n",
    "\n  # Your code here\n}\n",
    "\n  -c / b\n}\n",
    "\n  # Your code here\n}\n",
    "\n    -c/b\n}\n",
    "\n  # Your code here\n}\n",
    "\n    -c/b\n}\n",
    "\n  -c/b\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n  # Your code here\n}\n",
    "\n  -c/b\n}\n",
    "\n  # Your code here\n}\n",
    "\n  -c / b\n}\n",
    "\n    return(-(a*b^2)/(4*a))\n}\n",
    "\n  -c/b\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n    return(-(a*b^2 + c)/b)\n}\n",
    "\n  -c/b\n}\n",
    "\n  return(-(a/b))\n}\n",
    "\n  -c/b\n}\n",
    "\n  -c/b\n}\n",
    "\n  -c/b\n}\n",
    "\n  -c/b\n}\n",
    "\n  # Your code here\n}\n",
    "\n  -c / b\n}\n",
    "\n  -c / b\n}\n",
    "\n  -c/b\n}\n",
    "\n  # Your code here\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n  -c/b\n}\n",
    "\n  return(-c/b)\n}\n",
    "\n    -c/b\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n  -c/b\n}\n",
    "\n  # Your code here\n}\n",
    "\n  -c / b\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n  -c/b\n}\n",
    "\n  # Your code here\n}\n",
    "\n  -c/b\n}\n",
    "\n  -c / b\n}\n",
    "\n  -c / b\n}\n",
    "\n    -c / b\n}\n",
    "\n  # Your code here\n}\n",
    "\n    -c/b\n}\n",
    "\n  -c/b\n}\n",
    "\n    -c/b\n}\n",
    "\n  -c/b\n}\n",
    "\n  # a, b, c are the coefficients of the parabola equation\n  # y = ax^2 + bx + c\n  # The directrix is the line x = -b/(2a)\n  return(-b/(2*a))\n}\n",
    "\n  return(b / (2 * a))\n}\n",
    "\n    return(b/(2*a))\n}\n",
    "\n  # Your code here\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n  return(-(a/b))\n}\n",
    "\n    return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n  -(b^2 - 4*a*c) / (4*a)\n}\n",
    "\n    -c/b\n}\n",
    "\n  # Your code here\n}\n",
    "\n  # Your code here\n}\n",
    "\n  # Your code here\n}\n",
    "\n    return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n  # Your code here\n}\n",
    "\n  # Your code here\n}\n",
    "\n  -c/b\n}\n",
    "\n  -c/b\n}\n",
    "\n  # a, b, c are the coefficients of the parabola equation\n  # y = ax^2 + bx + c\n  # The directrix is the line y = -c/b\n  -c/b\n}\n",
    "\n  # Your code here\n}\n",
    "\n  -c/b\n}\n",
    "\n  # Your code here\n}\n",
    "\n    -c/b\n}\n",
    "\n  -c/b\n}\n\nparabola_directrix(1, 2, 3)\n",
    "\n  -c / b\n}\n",
    "\n  -c/b\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n  -c/b\n}\n",
    "\n    return(-c/b)\n}\n",
    "\n  return(-(b/(2*a)))\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n  # Write your code here.\n  return(0)\n}\n",
    "\n  -c/b\n}\n",
    "\n  return(-c/b)\n}\n",
    "\n  -c/b\n}\n",
    "\n  # Your code here\n}\n",
    "\n  # a, b, c are the coefficients of the parabola equation\n  # y = ax^2 + bx + c\n  # directrix is a line perpendicular to the axis of symmetry\n  # and at a distance of 1/4a from the vertex\n  # directrix equation is y = -1/4a * x + d\n  # where d is the y-intercept\n  # d = -b/4a + c\n  # d = -b/4a + c\n  d <- -b/(4*a) + c\n  return(d)\n}\n",
    "\n    return(-(a/b))\n}\n",
    "\n  -c/b\n}\n",
    "\n  # Your code here\n}\n",
    "\n  return(-(b^2 - 4*a*c) / (4*a))\n}\n",
    "\n  # a, b, c are the coefficients of the parabola equation\n  # y = ax^2 + bx + c\n  # directrix is the line y = -(a/b)x + (c/b)\n  # return the directrix as a vector of length 2\n  # [1] is the slope\n  # [2] is the y-intercept\n  return(c(-(a/b), (c/b)))\n}\n",
    "\n  -c / b\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n  return(-c/b)\n}",
    "\n    -c / b\n}\n",
    "\n    -c/b\n}\n",
    "\n  # Your code here\n}\n",
    "\n  -c/b\n}\n",
    "\n  -c/b\n}\n",
    "\n  return(-c/b)\n}\n",
    "\n  # Your code here\n}\n",
    "\n  # Your code here\n}\n",
    "\n  # Your code here\n}\n",
    "\n    -c/b\n}\n",
    "\n  -c/b\n}\n",
    "\n  # Your code here\n}\n",
    "\n  -c / b\n}\n",
    "\n  -c/b\n}\n",
    "\n  # Write your code here\n  return(0)\n}\n",
    "\n  -(b^2 - 4*a*c)/(4*a)\n}\n",
    "\n    -c/b\n}\n",
    "\n  -c / b\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n  -c / b\n}\n",
    "\n    return(-(a/b))\n}\n",
    "\n  return(-c/b)\n}\n",
    "\n  -c/b\n}\n",
    "\n    -c/b\n}\n",
    "\n  x <- -b/(2*a)\n  y <- -(b^2 - 4*a*c)/(4*a)\n  return(c(x, y))\n}\n",
    "\n  -c/b\n}\n",
    "\n  # Your code here\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n  # a, b, c are the coefficients of the parabola equation\n  # y = ax^2 + bx + c\n  # directrix is the line y = -b^2 / 4a + c\n  -b^2 / (4*a) + c\n}\n",
    "\n  # a is the coefficient of x^2\n  # b is the coefficient of x\n  # c is the constant\n  # The directrix is a line perpendicular to the axis of symmetry\n  # and at a distance of 1/4a from the vertex.\n  # The axis of symmetry is the line x = -b/(2a)\n  # The distance from the vertex to the directrix is 1/4a\n  # The slope of the directrix is -1/slope of the axis of symmetry\n  # The slope of the axis of symmetry is -b/a\n  # The slope of the directrix is a/b\n  # The intercept of the directrix is the y-coordinate of the vertex\n  # plus the distance from the vertex to the directrix\n  # The intercept of the directrix is c - b^2/(4a) + 1/4a\n  # The intercept of the directrix is (4ac - b^2)/(4a)\n  # The intercept of the directrix is (4ac - b^2)/(4a)\n  # The intercept of the directrix is (4ac - b^2)/(4a)\n  # The intercept of the directrix is (4ac - b^2)/(4a)\n  # The intercept of the directrix is (4ac - b^2)/(4a)\n  # The intercept of the directrix is (4ac - b^2)/(4a)\n  # The intercept of the directrix is (4ac - b^2)/(4a)\n  # The intercept of the directrix is (4ac - b^2)/(4a)\n  # The intercept of the directrix is (4ac - b^2)/(4a)\n  # The intercept of the directrix is (4ac - b^2)/(4a)\n  # The intercept of the directrix is (4ac - b^2)/(4a)\n  # The intercept of the directrix is (4ac - b^2)/(4a)\n  # The intercept of the directrix is (4ac - b^2)/(4a)\n  # The intercept of the directrix is (4ac - b^2)/(4a)\n  # The intercept of the",
    "\n    -c/b\n}\n",
    "\n  -c/b\n}\n",
    "\n  -c / b\n}\n",
    "\n    -c/b\n}\n",
    "\n  # a is the coefficient of x^2, b is the coefficient of x, and c is the constant.\n  # The directrix is the line y = -a/b*x - c/b.\n  return(-a/b*x - c/b)\n}\n",
    "\n  # a, b, c are the coefficients of the parabola equation\n  # y = ax^2 + bx + c\n  # directrix = -b / (2a)\n  return(-b / (2 * a))\n}\n",
    "\n  -c / b\n}\n",
    "\n  -c/b\n}\n",
    "\n  -c / b\n}\n",
    "\n  -c/b\n}\n",
    "\n    -c/b\n}\n",
    "\n    -c / b\n}",
    "\n  -c/b\n}\n",
    "\n  return(-(b^2 - 4*a*c) / (4*a))\n}\n",
    "\n  -c / b\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n    -c/b\n}\n",
    "\n  # Write your code here\n  return(0)\n}\n",
    "\n  -c/b\n}\n",
    "\n  -c/b\n}\n",
    "\n    -c/b\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n    -c/b\n}\n",
    "\n  return(-(b^2-4*a*c)/(4*a))\n}\n",
    "\n    -c/b\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n  return(-b/(2*a))\n}\n",
    "\n    -c/b\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n  -c / b\n}\n",
    "\n  # Your code here\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n    return (-c / b)\n}\n",
    "\n    # Your code here\n}\n",
    "\n    -c/b\n}\n",
    "\n  -c/b\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n  -c / b\n}\n",
    "\n  # Your code here\n  return(0)\n}\n",
    "\n  -c/b\n}\n",
    "\n  # Your code here\n  return(0)\n}\n",
    "\n  -c/b\n}\n",
    "\n    -c/b\n}\n",
    "\n  # Your code here\n}\n",
    "\n  -c/b\n}\n",
    "\n    -c / b\n}\n",
    "\n  # a, b, c are the coefficients of the parabola equation\n  # y = ax^2 + bx + c\n  # The directrix is the line perpendicular to the axis of symmetry\n  # and at a distance of 1/4a from the vertex.\n  # The directrix is given by the equation\n  # y = -4a^2 + bx + c\n  # The function should return a vector of length 2,\n  # where the first element is the slope of the directrix\n  # and the second element is the y-intercept.\n  # For example, if a = 1, b = 2, and c = 3,\n  # the directrix is y = -4 + 2x + 3\n  # and the function should return the vector c(-2, 3)\n  # Hint: Use the solve function to solve for the y-intercept.\n  # Hint: Use the function c to create a vector.\n  # Hint: Use the function round to round the y-intercept to 2 decimal places.\n  # Hint: Use the function as.numeric to convert the y-intercept to a number.\n  # Hint: Use the function abs to take the absolute value of a.\n  # Hint: Use the function - to negate a number.\n  # Hint: Use the function / to divide a number by another number.\n  # Hint: Use the function ^ to raise a number to a power.\n  # Hint: Use the function * to multiply a number by another number.\n  # Hint: Use the function + to add a number to another number.\n  # Hint: Use the function - to subtract a number from another number.\n  # Hint: Use the function == to test if two numbers are equal.\n  # Hint: Use the function != to test if two numbers are not equal.\n  # Hint: Use the function & to combine two logical values.\n  # Hint: Use the function | to combine two logical values.\n  # Hint: Use the function ! to negate a logical value.\n  # Hint: Use the function isTRUE to test if an object is TRUE.\n  # Hint: Use the function is.numeric to test if an object is numeric.\n ",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n",
    "\n  return((-b)/(2*a))\n}\n",
    "\n    return(-c/b)\n}\n",
    "\n  -c/b\n}\n",
    "\n  -c/b\n}\n",
    "\n  d <- -c/b\n  return(d)\n}\n",
    "\n  return(-(b^2 - 4*a*c)/(4*a))\n}\n"
  ]
}
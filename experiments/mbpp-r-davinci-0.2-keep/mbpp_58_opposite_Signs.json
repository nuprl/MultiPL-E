{
  "name": "mbpp_58_opposite_Signs",
  "language": "r",
  "prompt": "# Write a python function to check whether the given two integers have opposite sign or not.\nopposite_Signs <- function(x, y) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_58_opposite_Signs.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- opposite_Signs\n    if(!identical(candidate(1, -2), TRUE)){quit('no', 1)}\n    if(!identical(candidate(3, 2), FALSE)){quit('no', 1)}\n    if(!identical(candidate(-10, -10), FALSE)){quit('no', 1)}\n    if(!identical(candidate(-2, 2), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  if ((x < 0 && y > 0) || (x > 0 && y < 0)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\nopposite_Signs(2, -3)\n",
    "\n  if (x * y < 0) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\nopposite_Signs(2, -1)\nopposite_Signs(2, 4)\n",
    "\n  if ((x < 0 && y > 0) || (x > 0 && y < 0)) {\n    return(TRUE)\n  }\n  else {\n    return(FALSE)\n  }\n}\n\nopposite_Signs(2, -1)\nopposite_Signs(-1, 1)\nopposite_Signs(2, 4)\nopposite_Signs(-1, -1)\n",
    "\n  if (x * y < 0) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\nopposite_Signs(2, -3)\nopposite_Signs(2, 3)\n",
    "\n  if ((x < 0 && y > 0) || (x > 0 && y < 0)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\nopposite_Signs(2, -3)\n",
    "\n  if (x * y < 0) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\nopposite_Signs(2, -3)\n",
    "\n  if ((x > 0 && y < 0) || (x < 0 && y > 0)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\nopposite_Signs(2, -3)\n",
    "\n    if (x * y < 0) {\n        return(TRUE)\n    } else {\n        return(FALSE)\n    }\n}\n\nopposite_Signs(2, -5)\n",
    "\n  if ((x < 0 && y > 0) || (x > 0 && y < 0)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\nopposite_Signs(2, -1)\nopposite_Signs(-1, 1)\nopposite_Signs(2, 4)\nopposite_Signs(-1, -1)\n",
    "\n    if (x * y < 0) {\n        print(\"Yes\")\n    } else {\n        print(\"No\")\n    }\n}\n\nopposite_Signs(2, -3)\nopposite_Signs(2, 3)\n",
    "\n  if (x * y < 0) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\nopposite_Signs(2, -5)\nopposite_Signs(2, 5)\n",
    "\n  if(x*y < 0) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\nopposite_Signs(2, -5)\nopposite_Signs(2, 5)\n",
    "\n  if (x * y < 0) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\nopposite_Signs(2, -3)\n",
    "\n  if (x * y < 0) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\nopposite_Signs(2, -3)\n",
    "\n    if (x * y < 0) {\n        return(TRUE)\n    } else {\n        return(FALSE)\n    }\n}\n\nopposite_Signs(2, -3)\n",
    "\n    if ((x * y) < 0) {\n        return(TRUE)\n    } else {\n        return(FALSE)\n    }\n}\n\nopposite_Signs(2, -3)\n",
    "\n    if (x * y < 0) {\n        return(TRUE)\n    } else {\n        return(FALSE)\n    }\n}\n",
    "\n    if (x * y < 0) {\n        return(TRUE)\n    } else {\n        return(FALSE)\n    }\n}\n\nopposite_Signs(2, -3)\n",
    "\n  if (x * y < 0) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n",
    "\n  if (x * y < 0) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\nopposite_Signs(2, -5)\nopposite_Signs(2, 5)\n"
  ]
}
{
  "name": "mbpp_747_lcs_of_three",
  "language": "r",
  "prompt": "# Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nlcs_of_three <- function(X, Y, Z) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_747_lcs_of_three.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- lcs_of_three\n    if(!identical(candidate('AGGT12', '12TXAYB', '12XBA'), 2)){quit('no', 1)}\n    if(!identical(candidate('Reels', 'Reelsfor', 'ReelsforReels'), 5)){quit('no', 1)}\n    if(!identical(candidate('abcd1e2', 'bc12ea', 'bd1ea'), 3)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  m <- nrow(X)\n  n <- nrow(Y)\n  o <- nrow(Z)\n  L <- matrix(0, m+1, n+1, o+1)\n  for (i in 1:m) {\n    for (j in 1:n) {\n      for (k in 1:o) {\n        if (X[i] == Y[j] && Y[j] == Z[k]) {\n          L[i+1, j+1, k+1] <- L[i, j, k] + 1\n        } else {\n          L[i+1, j+1, k+1] <- max(L[i, j+1, k+1], L[i+1, j, k+1], L[i+1, j+1, k])\n        }\n      }\n    }\n  }\n  return(L[m+1, n+1, o+1])\n}\n\nX <- c(\"A\", \"B\", \"C\", \"B\", \"D\", \"A\", \"B\")\nY <- c(\"B\", \"D\", \"C\", \"A\", \"B\", \"A\")\nZ <- c(\"A\", \"B\", \"C\", \"B\", \"D\", \"A\", \"B\")\n\nlcs_of_three(X, Y, Z)\n",
    "\n  m <- nchar(X)\n  n <- nchar(Y)\n  o <- nchar(Z)\n  L <- matrix(0, m+1, n+1, o+1)\n  for (i in 1:m) {\n    for (j in 1:n) {\n      for (k in 1:o) {\n        if (substr(X, i, i) == substr(Y, j, j) && substr(X, i, i) == substr(Z, k, k)) {\n          L[i+1, j+1, k+1] <- L[i, j, k] + 1\n        } else {\n          L[i+1, j+1, k+1] <- max(L[i, j+1, k+1], L[i+1, j, k+1], L[i+1, j+1, k])\n        }\n      }\n    }\n  }\n  return(L[m+1, n+1, o+1])\n}\n",
    "\n  m <- nrow(X)\n  n <- nrow(Y)\n  o <- nrow(Z)\n  L <- matrix(0, m+1, n+1, o+1)\n  for (i in 1:m) {\n    for (j in 1:n) {\n      for (k in 1:o) {\n        if (X[i] == Y[j] && Y[j] == Z[k]) {\n          L[i+1, j+1, k+1] <- L[i, j, k] + 1\n        } else {\n          L[i+1, j+1, k+1] <- max(L[i, j+1, k+1], L[i+1, j, k+1], L[i+1, j+1, k])\n        }\n      }\n    }\n  }\n  return(L[m+1, n+1, o+1])\n}\n",
    "\n  m <- nchar(X)\n  n <- nchar(Y)\n  o <- nchar(Z)\n  L <- matrix(0, m+1, n+1, o+1)\n  for (i in 1:m) {\n    for (j in 1:n) {\n      for (k in 1:o) {\n        if (substr(X, i, i) == substr(Y, j, j) && substr(X, i, i) == substr(Z, k, k)) {\n          L[i+1, j+1, k+1] <- L[i, j, k] + 1\n        } else {\n          L[i+1, j+1, k+1] <- max(L[i, j+1, k+1], L[i+1, j, k+1], L[i+1, j+1, k])\n        }\n      }\n    }\n  }\n  return(L[m+1, n+1, o+1])\n}\n\nlcs_of_three(\"ABCDGH\", \"AEDFHR\", \"AEDGHR\")\n",
    "\n  m <- nchar(X)\n  n <- nchar(Y)\n  o <- nchar(Z)\n  L <- matrix(0, m+1, n+1, o+1)\n  for (i in 1:m) {\n    for (j in 1:n) {\n      for (k in 1:o) {\n        if (substr(X, i, i) == substr(Y, j, j) && substr(X, i, i) == substr(Z, k, k)) {\n          L[i+1, j+1, k+1] <- L[i, j, k] + 1\n        } else {\n          L[i+1, j+1, k+1] <- max(L[i, j+1, k+1], L[i+1, j, k+1], L[i+1, j+1, k])\n        }\n      }\n    }\n  }\n  return(L[m+1, n+1, o+1])\n}\n",
    "\n  m <- nrow(X)\n  n <- nrow(Y)\n  o <- nrow(Z)\n  L <- matrix(0, m+1, n+1, o+1)\n  for (i in 1:m) {\n    for (j in 1:n) {\n      for (k in 1:o) {\n        if (X[i] == Y[j] && Y[j] == Z[k]) {\n          L[i+1, j+1, k+1] <- L[i, j, k] + 1\n        } else {\n          L[i+1, j+1, k+1] <- max(L[i, j+1, k+1], L[i+1, j, k+1], L[i+1, j+1, k])\n        }\n      }\n    }\n  }\n  return(L[m+1, n+1, o+1])\n}\n",
    "\n  m <- nchar(X)\n  n <- nchar(Y)\n  o <- nchar(Z)\n  L <- matrix(0, m+1, n+1, o+1)\n  for (i in 1:m) {\n    for (j in 1:n) {\n      for (k in 1:o) {\n        if (substr(X, i, i) == substr(Y, j, j) && substr(X, i, i) == substr(Z, k, k)) {\n          L[i+1, j+1, k+1] <- L[i, j, k] + 1\n        } else {\n          L[i+1, j+1, k+1] <- max(L[i, j+1, k+1], L[i+1, j, k+1], L[i+1, j+1, k])\n        }\n      }\n    }\n  }\n  return(L[m+1, n+1, o+1])\n}\n\nlcs_of_three(\"abcdef\", \"acbcf\", \"abcdaf\")\n",
    "\n  m <- nrow(X)\n  n <- nrow(Y)\n  o <- nrow(Z)\n  L <- matrix(0, m+1, n+1, o+1)\n  for (i in 1:m) {\n    for (j in 1:n) {\n      for (k in 1:o) {\n        if (X[i] == Y[j] && Y[j] == Z[k]) {\n          L[i+1, j+1, k+1] <- L[i, j, k] + 1\n        } else {\n          L[i+1, j+1, k+1] <- max(L[i, j+1, k+1], L[i+1, j, k+1], L[i+1, j+1, k])\n        }\n      }\n    }\n  }\n  return(L[m+1, n+1, o+1])\n}\n\nlcs_of_three(X, Y, Z)\n",
    "\n    m <- nchar(X)\n    n <- nchar(Y)\n    o <- nchar(Z)\n    L <- matrix(0, m+1, n+1, o+1)\n    for (i in 1:m) {\n        for (j in 1:n) {\n            for (k in 1:o) {\n                if (substr(X, i, i) == substr(Y, j, j) && substr(X, i, i) == substr(Z, k, k)) {\n                    L[i+1, j+1, k+1] <- L[i, j, k] + 1\n                } else {\n                    L[i+1, j+1, k+1] <- max(L[i, j+1, k+1], L[i+1, j, k+1], L[i+1, j+1, k], L[i, j, k+1], L[i, j+1, k], L[i+1, j, k])\n                }\n            }\n        }\n    }\n    return(L[m+1, n+1, o+1])\n}\n\nlcs_of_three(\"AGGTAB\", \"GXTXAYB\", \"GTAB\")\n",
    "\n  m <- nchar(X)\n  n <- nchar(Y)\n  o <- nchar(Z)\n  L <- matrix(0, m+1, n+1, o+1)\n  for (i in 1:m) {\n    for (j in 1:n) {\n      for (k in 1:o) {\n        if (substr(X, i, i) == substr(Y, j, j) && substr(Y, j, j) == substr(Z, k, k)) {\n          L[i+1, j+1, k+1] <- L[i, j, k] + 1\n        } else {\n          L[i+1, j+1, k+1] <- max(L[i, j+1, k+1], L[i+1, j, k+1], L[i+1, j+1, k])\n        }\n      }\n    }\n  }\n  return(L[m+1, n+1, o+1])\n}\n\nlcs_of_three(\"AGGTAB\", \"GXTXAYB\", \"GTAB\")\n",
    "\n    m <- nchar(X)\n    n <- nchar(Y)\n    o <- nchar(Z)\n    L <- matrix(0, m+1, n+1, o+1)\n    for (i in 1:m) {\n        for (j in 1:n) {\n            for (k in 1:o) {\n                if (substr(X, i, i) == substr(Y, j, j) && substr(X, i, i) == substr(Z, k, k)) {\n                    L[i+1, j+1, k+1] <- L[i, j, k] + 1\n                } else {\n                    L[i+1, j+1, k+1] <- max(L[i, j+1, k+1], L[i+1, j, k+1], L[i+1, j+1, k])\n                }\n            }\n        }\n    }\n    return(L[m+1, n+1, o+1])\n}\n",
    "\n  m <- nrow(X)\n  n <- nrow(Y)\n  o <- nrow(Z)\n  L <- matrix(0, m+1, n+1, o+1)\n  for (i in 1:m) {\n    for (j in 1:n) {\n      for (k in 1:o) {\n        if (X[i,] == Y[j,] && X[i,] == Z[k,]) {\n          L[i+1,j+1,k+1] <- L[i,j,k] + 1\n        } else {\n          L[i+1,j+1,k+1] <- max(L[i,j+1,k+1], L[i+1,j,k+1], L[i+1,j+1,k], L[i,j,k+1], L[i,j+1,k], L[i+1,j,k])\n        }\n      }\n    }\n  }\n  return(L[m+1,n+1,o+1])\n}\n",
    "\n  m <- nrow(X)\n  n <- nrow(Y)\n  o <- nrow(Z)\n  L <- matrix(0, m+1, n+1, o+1)\n  for (i in 1:m) {\n    for (j in 1:n) {\n      for (k in 1:o) {\n        if (X[i] == Y[j] && Y[j] == Z[k]) {\n          L[i+1, j+1, k+1] <- L[i, j, k] + 1\n        } else {\n          L[i+1, j+1, k+1] <- max(L[i+1, j, k+1], L[i, j+1, k+1], L[i, j, k+1], L[i+1, j+1, k], L[i+1, j, k+1], L[i, j+1, k])\n        }\n      }\n    }\n  }\n  return(L[m+1, n+1, o+1])\n}\n",
    "\n  m <- nchar(X)\n  n <- nchar(Y)\n  o <- nchar(Z)\n  L <- matrix(0, m+1, n+1, o+1)\n  for (i in 1:m) {\n    for (j in 1:n) {\n      for (k in 1:o) {\n        if (substr(X, i, i) == substr(Y, j, j) && substr(X, i, i) == substr(Z, k, k)) {\n          L[i+1, j+1, k+1] <- L[i, j, k] + 1\n        } else {\n          L[i+1, j+1, k+1] <- max(L[i, j+1, k+1], L[i+1, j, k+1], L[i+1, j+1, k], L[i, j, k+1], L[i, j+1, k], L[i+1, j, k])\n        }\n      }\n    }\n  }\n  return(L[m+1, n+1, o+1])\n}\n\nlcs_of_three(\"ABCDGH\", \"AEDFHR\", \"AEDFHR\")\n",
    "\n    m <- nrow(X)\n    n <- nrow(Y)\n    o <- nrow(Z)\n    L <- matrix(0, m+1, n+1, o+1)\n    for (i in 1:m) {\n        for (j in 1:n) {\n            for (k in 1:o) {\n                if (X[i] == Y[j] && Y[j] == Z[k]) {\n                    L[i+1, j+1, k+1] <- L[i, j, k] + 1\n                } else {\n                    L[i+1, j+1, k+1] <- max(L[i, j+1, k+1], L[i+1, j, k+1], L[i+1, j+1, k])\n                }\n            }\n        }\n    }\n    return(L[m+1, n+1, o+1])\n}\n",
    "\n  m <- nrow(X)\n  n <- nrow(Y)\n  o <- nrow(Z)\n  L <- matrix(0, m, n, o)\n  for (i in 1:m) {\n    for (j in 1:n) {\n      for (k in 1:o) {\n        if (X[i] == Y[j] && Y[j] == Z[k]) {\n          L[i, j, k] <- L[i-1, j-1, k-1] + 1\n        } else {\n          L[i, j, k] <- max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n        }\n      }\n    }\n  }\n  return(L[m, n, o])\n}\n",
    "\n  m <- nchar(X)\n  n <- nchar(Y)\n  o <- nchar(Z)\n  L <- matrix(0, m+1, n+1, o+1)\n  for (i in 1:m) {\n    for (j in 1:n) {\n      for (k in 1:o) {\n        if (substr(X, i, i) == substr(Y, j, j) && substr(X, i, i) == substr(Z, k, k)) {\n          L[i+1, j+1, k+1] <- L[i, j, k] + 1\n        } else {\n          L[i+1, j+1, k+1] <- max(L[i, j+1, k+1], L[i+1, j, k+1], L[i+1, j+1, k])\n        }\n      }\n    }\n  }\n  return(L[m+1, n+1, o+1])\n}\n\nlcs_of_three(\"ABCDGH\", \"AEDFHR\", \"AEDFHR\")\n",
    "\n    m <- nchar(X)\n    n <- nchar(Y)\n    o <- nchar(Z)\n    \n    L <- matrix(0, m+1, n+1, o+1)\n    \n    for (i in 1:m) {\n        for (j in 1:n) {\n            for (k in 1:o) {\n                if (substr(X, i, i) == substr(Y, j, j) && substr(X, i, i) == substr(Z, k, k)) {\n                    L[i+1, j+1, k+1] <- L[i, j, k] + 1\n                } else {\n                    L[i+1, j+1, k+1] <- max(L[i+1, j, k+1], L[i, j+1, k+1], L[i, j, k+1], L[i+1, j+1, k], L[i+1, j, k], L[i, j+1, k])\n                }\n            }\n        }\n    }\n    \n    return(L[m+1, n+1, o+1])\n}\n\nlcs_of_three(\"AGGTAB\", \"GXTXAYB\", \"GTAB\")\n",
    "\n    m <- nchar(X)\n    n <- nchar(Y)\n    o <- nchar(Z)\n    L <- matrix(0, m+1, n+1, o+1)\n    for (i in 1:m) {\n        for (j in 1:n) {\n            for (k in 1:o) {\n                if (substr(X, i, i) == substr(Y, j, j) && substr(X, i, i) == substr(Z, k, k)) {\n                    L[i+1, j+1, k+1] <- L[i, j, k] + 1\n                } else {\n                    L[i+1, j+1, k+1] <- max(L[i, j+1, k+1], L[i+1, j, k+1], L[i+1, j+1, k])\n                }\n            }\n        }\n    }\n    return(L[m+1, n+1, o+1])\n}\n\nX <- \"AGGT12\"\nY <- \"12TXAYB\"\nZ <- \"12XBA\"\nlcs_of_three(X, Y, Z)\n",
    "\n  m <- nchar(X)\n  n <- nchar(Y)\n  o <- nchar(Z)\n  L <- matrix(0, m+1, n+1, o+1)\n  for (i in 1:m) {\n    for (j in 1:n) {\n      for (k in 1:o) {\n        if (substr(X, i, i) == substr(Y, j, j) && substr(X, i, i) == substr(Z, k, k)) {\n          L[i+1, j+1, k+1] <- L[i, j, k] + 1\n        } else {\n          L[i+1, j+1, k+1] <- max(L[i, j+1, k+1], L[i+1, j, k+1], L[i+1, j+1, k])\n        }\n      }\n    }\n  }\n  return(L[m+1, n+1, o+1])\n}\n\nlcs_of_three(\"AGGTAB\", \"GXTXAYB\", \"GTAB\")\n"
  ]
}
{
  "name": "mbpp_292_find",
  "language": "r",
  "prompt": "# Write a python function to find quotient of two numbers (rounded down to the nearest integer).\nfind <- function(n, m) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_292_find.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- find\n    if(!identical(candidate(10, 3), 3)){quit('no', 1)}\n    if(!identical(candidate(4, 2), 2)){quit('no', 1)}\n    if(!identical(candidate(20, 5), 4)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n    return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n    return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n  return(floor(n/m))\n}\n",
    "\n  return(floor(n / m))\n}\n\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n    floor(n/m)\n}\n\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\nfind(10, 3)\n",
    "\n  return(floor(n / m))\n}\n\nfind(10, 3)\n",
    "\n    return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n  n %/% m\n}\n\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n    floor(n/m)\n}\n\nfind(10, 3)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n",
    "\n    return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\n",
    "\n  return(floor(n/m))\n}\n",
    "\n  return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n  return(floor(n/m))\n}\n",
    "\n  floor(n/m)\n}\n\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\nfind(5, 2)\n",
    "\n    floor(n/m)\n}\n\nfind(5,2)\n",
    "\n  return(floor(n/m))\n}\n",
    "\n  return(floor(n/m))\n}\n",
    "\n  return(floor(n/m))\n}\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  floor(n / m)\n}\n\nfind(10, 3)\n",
    "\n  floor(n/m)\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n",
    "\n    floor(n/m)\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n    floor(n/m)\n}\n",
    "\n  return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\n\nfind(10, 4)\n",
    "\n    return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  floor(n/m)\n}\n\nfind(5, 2)\n",
    "\n  floor(n / m)\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n  floor(n/m)\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n / m))\n}\n",
    "\n  floor(n/m)\n}\nfind(5, 2)\n",
    "\n    if (m == 0) {\n        return(0)\n    }\n    else {\n        return(floor(n/m))\n    }\n}\n\nfind(5, 2)\nfind(5, 0)\n",
    "\n    return(floor(n / m))\n}\n\nfind(5, 2)\n",
    "\n    return(floor(n / m))\n}\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\nfind(10, 3)\n",
    "\n    return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n    q <- n %/% m\n    return(q)\n}\nfind(5, 2)\n",
    "\n  if(m == 0) {\n    stop(\"Divide by zero error\")\n  }\n  return(floor(n/m))\n}\n",
    "\n  return(floor(n/m))\n}\nfind(5, 2)\n",
    "\n  floor(n/m)\n}\n\nfind(5, 2)\n",
    "\n  quotient <- n %/% m\n  return(quotient)\n}\n\nfind(5, 2)\n",
    "\n    floor(n/m)\n}\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n    return(floor(n/m))\n}\nfind(5, 2)\n",
    "\n  floor(n/m)\n}\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n  floor(n/m)\n}\n\nfind(5, 2)\n",
    "\n  n %/% m\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\nfind(10, 3)\n",
    "\n  return(floor(n/m))\n}\nfind(10, 3)\n",
    "\n  floor(n/m)\n}\n\nfind(5, 3)\n",
    "\n  return(floor(n/m))\n}\nfind(4, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n    return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n    floor(n/m)\n}\n\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\n",
    "\n    return(floor(n / m))\n}\n\nfind(5, 2)\n",
    "\n  floor(n / m)\n}\n\nfind(10, 3)\n",
    "\n  floor(n/m)\n}\n\nfind(5, 2)\n",
    "\n  floor(n/m)\n}\n",
    "\n  floor(n/m)\n}\n\nfind(5, 2)\n",
    "\n  floor(n/m)\n}\n\nfind(10, 3)\n",
    "\n  floor(n/m)\n}\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  floor(n/m)\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  floor(n/m)\n}\n",
    "\n  return(floor(n/m))\n}\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  floor(n / m)\n}\n\nfind(5, 2)\n",
    "\n  floor(n/m)\n}\n\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n",
    "\n  return(floor(n/m))\n}\n",
    "\n  floor(n/m)\n}\n\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\nfind(10, 3)\n",
    "\n  return(floor(n/m))\n}\n",
    "\n  return(floor(n/m))\n}\nfind(5, 2)\n",
    "\n  floor(n/m)\n}\nfind(5, 2)\n",
    "\n  floor(n/m)\n}\n\nfind(10, 3)\n",
    "\n  return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n  return(floor(n/m))\n}\n",
    "\n    return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  return (floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n    return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n",
    "\n    return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n  floor(n/m)\n}\n\nfind(5, 2)\n",
    "\n  floor(n/m)\n}\n\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  floor(n/m)\n}\n\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\nfind(7, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n  if(n < m) {\n    return(0)\n  }\n  else {\n    return(1 + find(n - m, m))\n  }\n}\n\nfind(10, 3)\n",
    "\n    return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  return (n %/% m)\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n    floor(n/m)\n}\n\nfind(10, 3)\n",
    "\n  floor(n/m)\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n",
    "\n  return (floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\nfind(5, 2)\n",
    "\n    floor(n/m)\n}\nfind(5, 2)\n",
    "\n    return(floor(n / m))\n}\n\nfind(10, 3)\n",
    "\n    return(floor(n/m))\n}\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  floor(n/m)\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5,2)\n",
    "\n  return(floor(n/m))\n}\n",
    "\n  if (m == 0) {\n    return(0)\n  }\n  else {\n    return(floor(n/m))\n  }\n}\n\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  floor(n/m)\n}\n",
    "\n  n %/% m\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n",
    "\n  return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5,2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  floor(n/m)\n}\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n    floor(n/m)\n}\n\nfind(5, 2)\n",
    "\n  floor(n/m)\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  return (n %/% m)\n}\n\nfind(10, 3)\n",
    "\n  floor(n/m)\n}\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  floor(n/m)\n}\n",
    "\n    return(floor(n/m))\n}\nfind(10, 3)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  floor(n/m)\n}\n\nfind(10, 3)\n",
    "\n  return(floor(n/m))\n}\n",
    "\n    return(floor(n/m))\n}\nfind(5, 2)\n",
    "\n  floor(n/m)\n}\n\nfind(5, 2)\n",
    "\n  floor(n/m)\n}\n\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n  return(floor(n/m))\n}\nfind(5, 2)\n",
    "\n  floor(n / m)\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 3)\n",
    "\n  return(floor(n/m))\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n  return(floor(n / m))\n}\n",
    "\n  return(floor(n/m))\n}\n",
    "\n  return(floor(n/m))\n}\n",
    "\n    return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n    return(floor(n/m))\n}\nfind(10, 3)\n",
    "\n  return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n    return(floor(n/m))\n}\nfind(5, 2)\n",
    "\n    return(floor(n/m))\n}\n\nfind(10, 3)\n",
    "\n  floor(n / m)\n}\n\nfind(5, 2)\n",
    "\n  return(floor(n/m))\n}\n",
    "\n  floor(n/m)\n}\n\nfind(10, 3)\n"
  ]
}
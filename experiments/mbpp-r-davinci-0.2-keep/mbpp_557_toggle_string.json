{
  "name": "mbpp_557_toggle_string",
  "language": "r",
  "prompt": "# Write a function to toggle the case of all characters in a string.\ntoggle_string <- function(string) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_557_toggle_string.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- toggle_string\n    if(!identical(candidate('Python'), 'pYTHON')){quit('no', 1)}\n    if(!identical(candidate('Pangram'), 'pANGRAM')){quit('no', 1)}\n    if(!identical(candidate('LIttLE'), 'liTTle')){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n    # Use the str_to_lower function to convert the string to lower case.\n    string <- str_to_lower(string)\n    # Use the str_to_upper function to convert the string to upper case.\n    string <- str_to_upper(string)\n    # Return the string.\n    return(string)\n}\n",
    "\n  # Use the `chartr()` function to replace all lowercase letters with\n  # uppercase letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), string)\n}\n\ntoggle_string(\"Hello World!\")",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- ifelse(string %in% c(\"a\", \"A\"), \"b\", \"B\")\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Write your code here\n  string <- strsplit(string, \"\")\n  string <- string[[1]]\n  for(i in 1:length(string)){\n    if(string[i] == toupper(string[i])){\n      string[i] <- tolower(string[i])\n    }else{\n      string[i] <- toupper(string[i])\n    }\n  }\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Write your code here\n  return(string)\n}\n",
    "\n  # Use the `chartr` function to replace all lowercase letters with uppercase\n  # letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), x = string)\n}\n",
    "\n  # Use the `chartr()` function to replace all lowercase letters with uppercase\n  # letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), string)\n}\n\ntoggle_string(\"Hello World!\")",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      x <- tolower(x)\n    } else {\n      x <- toupper(x)\n    }\n    return(x)\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  # Use the `chartr` function to replace all lowercase letters with uppercase\n  # letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), string)\n}\n\ntoggle_string(\"Hello World\")\n",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  # Convert all lowercase letters to uppercase and vice versa.\n  string <- ifelse(string %in% letters,\n                   ifelse(string %in% LETTERS, tolower(string), toupper(string)),\n                   string)\n  # Return the string.\n  return(paste(string, collapse = \"\"))\n}\n",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  # Convert the character vector to a factor.\n  string <- factor(string, levels = c(letters, LETTERS))\n  # Convert the factor back to a character vector.\n  string <- as.character(string)\n  # Return the character vector.\n  return(string)\n}\n",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  # Use sapply to apply the tolower and toupper functions to each character.\n  sapply(string, function(x) {\n    if (x %in% letters) {\n      tolower(x)\n    } else {\n      toupper(x)\n    }\n  })\n  # Return the string.\n  return(paste(string, collapse = \"\"))\n}\n",
    "\n  # Convert string to lower case\n  string <- tolower(string)\n  # Convert string to upper case\n  string <- toupper(string)\n  # Return string\n  return(string)\n}\n",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  # Toggle the case of each character.\n  string <- ifelse(string %in% LETTERS, tolower(string), toupper(string))\n  # Return the string.\n  return(paste(string, collapse=\"\"))\n}\n",
    "\n  # Convert the string to lower case.\n  string <- tolower(string)\n  # Convert the string to upper case.\n  string <- toupper(string)\n  # Return the string.\n  return(string)\n}\n",
    "\n  # Use the `chartr` function to replace all lowercase letters with uppercase\n  # letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), string)\n}\n",
    "\n  # Convert the string to lower case.\n  string <- tolower(string)\n  # Convert the string to upper case.\n  string <- toupper(string)\n  # Return the string.\n  return(string)\n}\n",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  # Use a for loop to iterate over each character in the string.\n  for (i in 1:length(string)) {\n    # If the character is uppercase, make it lowercase.\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      # Otherwise, make it uppercase.\n      string[i] <- toupper(string[i])\n    }\n  }\n  # Return the modified string.\n  return(paste(string, collapse = \"\"))\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbC\")\n"
  ]
}
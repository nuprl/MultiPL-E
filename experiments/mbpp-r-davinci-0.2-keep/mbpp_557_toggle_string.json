{
  "name": "mbpp_557_toggle_string",
  "language": "r",
  "prompt": "# Write a function to toggle the case of all characters in a string.\ntoggle_string <- function(string) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_557_toggle_string.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- toggle_string\n    if(!identical(candidate('Python'), 'pYTHON')){quit('no', 1)}\n    if(!identical(candidate('Pangram'), 'pANGRAM')){quit('no', 1)}\n    if(!identical(candidate('LIttLE'), 'liTTle')){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n    # Use the str_to_lower function to convert the string to lower case.\n    string <- str_to_lower(string)\n    # Use the str_to_upper function to convert the string to upper case.\n    string <- str_to_upper(string)\n    # Return the string.\n    return(string)\n}\n",
    "\n  # Use the `chartr()` function to replace all lowercase letters with\n  # uppercase letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), string)\n}\n\ntoggle_string(\"Hello World!\")",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- ifelse(string %in% c(\"a\", \"A\"), \"b\", \"B\")\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Write your code here\n  string <- strsplit(string, \"\")\n  string <- string[[1]]\n  for(i in 1:length(string)){\n    if(string[i] == toupper(string[i])){\n      string[i] <- tolower(string[i])\n    }else{\n      string[i] <- toupper(string[i])\n    }\n  }\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Write your code here\n  return(string)\n}\n",
    "\n  # Use the `chartr` function to replace all lowercase letters with uppercase\n  # letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), x = string)\n}\n",
    "\n  # Use the `chartr()` function to replace all lowercase letters with uppercase\n  # letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), string)\n}\n\ntoggle_string(\"Hello World!\")",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      x <- tolower(x)\n    } else {\n      x <- toupper(x)\n    }\n    return(x)\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  # Use the `chartr` function to replace all lowercase letters with uppercase\n  # letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), string)\n}\n\ntoggle_string(\"Hello World\")\n",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  # Convert all lowercase letters to uppercase and vice versa.\n  string <- ifelse(string %in% letters,\n                   ifelse(string %in% LETTERS, tolower(string), toupper(string)),\n                   string)\n  # Return the string.\n  return(paste(string, collapse = \"\"))\n}\n",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  # Convert the character vector to a factor.\n  string <- factor(string, levels = c(letters, LETTERS))\n  # Convert the factor back to a character vector.\n  string <- as.character(string)\n  # Return the character vector.\n  return(string)\n}\n",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  # Use sapply to apply the tolower and toupper functions to each character.\n  sapply(string, function(x) {\n    if (x %in% letters) {\n      tolower(x)\n    } else {\n      toupper(x)\n    }\n  })\n  # Return the string.\n  return(paste(string, collapse = \"\"))\n}\n",
    "\n  # Convert string to lower case\n  string <- tolower(string)\n  # Convert string to upper case\n  string <- toupper(string)\n  # Return string\n  return(string)\n}\n",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  # Toggle the case of each character.\n  string <- ifelse(string %in% LETTERS, tolower(string), toupper(string))\n  # Return the string.\n  return(paste(string, collapse=\"\"))\n}\n",
    "\n  # Convert the string to lower case.\n  string <- tolower(string)\n  # Convert the string to upper case.\n  string <- toupper(string)\n  # Return the string.\n  return(string)\n}\n",
    "\n  # Use the `chartr` function to replace all lowercase letters with uppercase\n  # letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), string)\n}\n",
    "\n  # Convert the string to lower case.\n  string <- tolower(string)\n  # Convert the string to upper case.\n  string <- toupper(string)\n  # Return the string.\n  return(string)\n}\n",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  # Use a for loop to iterate over each character in the string.\n  for (i in 1:length(string)) {\n    # If the character is uppercase, make it lowercase.\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      # Otherwise, make it uppercase.\n      string[i] <- toupper(string[i])\n    }\n  }\n  # Return the modified string.\n  return(paste(string, collapse = \"\"))\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Convert the string to lower case.\n  string <- tolower(string)\n  # Convert the string to upper case.\n  string <- toupper(string)\n  # Return the string.\n  return(string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == tolower(x)) {\n      x <- toupper(x)\n    } else {\n      x <- tolower(x)\n    }\n    return(x)\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == tolower(x)) {\n      x <- toupper(x)\n    } else {\n      x <- tolower(x)\n    }\n    return(x)\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  # Use sapply to apply the tolower and toupper functions to each character.\n  string <- sapply(string, function(x) {\n    if (x == tolower(x)) {\n      toupper(x)\n    } else {\n      tolower(x)\n    }\n  })\n  # Return the string.\n  return(paste(string, collapse = \"\"))\n}\n",
    "\n  # Use the `chartr` function to replace all lowercase letters with uppercase\n  # letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == tolower(x)) {\n      x <- toupper(x)\n    } else {\n      x <- tolower(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x %in% LETTERS) {\n      x <- tolower(x)\n    } else {\n      x <- toupper(x)\n    }\n    return(x)\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\ntoggle_string(\"AbCdEf\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      return(tolower(x))\n    } else {\n      return(toupper(x))\n    }\n  })\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  # Use the `chartr` function to replace all lowercase letters with uppercase\n  # letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), string)\n}\n\ntoggle_string(\"Hello World!\")\n",
    "\n  string <- strsplit(string, split = \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      x <- tolower(x)\n    } else {\n      x <- toupper(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      x <- tolower(x)\n    } else {\n      x <- toupper(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == tolower(x)) {\n      return(toupper(x))\n    } else {\n      return(tolower(x))\n    }\n  })\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  # Write your code here\n  # Hint: Use the chartr function\n  # Hint: Use the paste function\n  # Hint: Use the toupper function\n  # Hint: Use the tolower function\n  # Hint: Use the substr function\n  # Hint: Use the nchar function\n  # Hint: Use the seq function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function\n  # Hint: Use the paste function",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Use the `str_to_lower` function to convert the string to lower case.\n  string <- str_to_lower(string)\n  # Use the `str_to_upper` function to convert the string to upper case.\n  string <- str_to_upper(string)\n  # Return the string.\n  return(string)\n}\n",
    "\n  # Use the built-in function toupper() to convert all characters to upper case.\n  upper_string <- toupper(string)\n  # Use the built-in function tolower() to convert all characters to lower case.\n  lower_string <- tolower(string)\n  # Create a vector of logical values indicating which characters are upper case.\n  upper_case <- upper_string == string\n  # Create a vector of logical values indicating which characters are lower case.\n  lower_case <- lower_string == string\n  # Create a vector of characters that are the same as the input string.\n  output <- string\n  # Set the characters that are upper case to lower case.\n  output[upper_case] <- tolower(output[upper_case])\n  # Set the characters that are lower case to upper case.\n  output[lower_case] <- toupper(output[lower_case])\n  # Return the output.\n  return(output)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x %in% letters) {\n      if (x == toupper(x)) {\n        x <- tolower(x)\n      } else {\n        x <- toupper(x)\n      }\n    }\n    x\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  # Use a for loop to iterate over the characters in the string.\n  for (i in 1:length(string)) {\n    # If the character is uppercase, make it lowercase.\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      # Otherwise, make it uppercase.\n      string[i] <- toupper(string[i])\n    }\n  }\n  # Return the string.\n  return(paste(string, collapse = \"\"))\n}\n",
    "\n  string <- strsplit(string, \"\")\n  string <- sapply(string, function(x) {\n    if (x %in% letters) {\n      x <- ifelse(x == toupper(x), tolower(x), toupper(x))\n    }\n    x\n  })\n  string <- paste(string, collapse = \"\")\n  string\n}\n\ntoggle_string(\"AbCdEf\")",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- ifelse(string %in% c(\"a\", \"e\", \"i\", \"o\", \"u\"), toupper(string), tolower(string))\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"Hello World\")\n",
    "\n  # Convert to lower case\n  string <- tolower(string)\n  # Convert to upper case\n  string <- toupper(string)\n  # Return the string\n  return(string)\n}\n",
    "\n  # Convert the string to lower case.\n  string <- tolower(string)\n  # Convert the string to upper case.\n  string <- toupper(string)\n  # Return the string.\n  return(string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == tolower(x)) {\n      return(toupper(x))\n    } else {\n      return(tolower(x))\n    }\n  })\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  # Convert string to lower case\n  string <- tolower(string)\n  # Convert string to upper case\n  string <- toupper(string)\n  # Return string\n  return(string)\n}\n",
    "\n  # Your code here\n}\n",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  # Use sapply to apply the tolower and toupper functions to each character.\n  sapply(string, function(x) {\n    ifelse(x == tolower(x), toupper(x), tolower(x))\n  })\n  # Paste the characters back together.\n  paste(string, collapse = \"\")\n}\n\ntoggle_string(\"aBcDeF\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      x <- tolower(x)\n    } else {\n      x <- toupper(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  if (is.character(string) == FALSE) {\n    stop(\"Please enter a string.\")\n  }\n  string <- gsub(\"[a-z]\", \"[[:lower:]]\", string)\n  string <- gsub(\"[A-Z]\", \"[[:upper:]]\", string)\n  return(string)\n}\n",
    "\n  # Use the `chartr` function to replace all lowercase letters with uppercase letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- ifelse(string %in% LETTERS, tolower(string), toupper(string))\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"Hello World\")\n",
    "\n  string <- strsplit(string, \"\")\n  string <- sapply(string, function(x) {\n    if (is.na(x)) {\n      return(x)\n    } else {\n      if (x == toupper(x)) {\n        return(tolower(x))\n      } else {\n        return(toupper(x))\n      }\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == tolower(x)) {\n      x <- toupper(x)\n    } else {\n      x <- tolower(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  # Convert the string to lower case.\n  lower_string <- tolower(string)\n  # Convert the string to upper case.\n  upper_string <- toupper(string)\n  # Create a vector of the same length as the string.\n  # The vector will contain the characters of the string.\n  string_vector <- strsplit(string, \"\")[[1]]\n  # Create a vector of the same length as the string.\n  # The vector will contain the characters of the string.\n  lower_vector <- strsplit(lower_string, \"\")[[1]]\n  # Create a vector of the same length as the string.\n  # The vector will contain the characters of the string.\n  upper_vector <- strsplit(upper_string, \"\")[[1]]\n  # Create a vector of the same length as the string.\n  # The vector will contain the characters of the string.\n  toggle_vector <- vector(\"character\", length(string_vector))\n  # Loop through the characters of the string.\n  for (i in 1:length(string_vector)) {\n    # If the character is in lower case, change it to upper case.\n    if (string_vector[i] == lower_vector[i]) {\n      toggle_vector[i] <- upper_vector[i]\n    }\n    # If the character is in upper case, change it to lower case.\n    if (string_vector[i] == upper_vector[i]) {\n      toggle_vector[i] <- lower_vector[i]\n    }\n  }\n  # Convert the vector to a string.\n  toggle_string <- paste(toggle_vector, collapse = \"\")\n  # Return the string.\n  return(toggle_string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      x <- tolower(x)\n    } else {\n      x <- toupper(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  # Convert the string to lower case.\n  string <- tolower(string)\n  # Convert the string to upper case.\n  string <- toupper(string)\n  # Return the string.\n  return(string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == tolower(x)) {\n      x <- toupper(x)\n    } else {\n      x <- tolower(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  # Write your code here\n  return(string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      x <- tolower(x)\n    } else {\n      x <- toupper(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      return(tolower(x))\n    } else {\n      return(toupper(x))\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == tolower(x)) {\n      return(toupper(x))\n    } else {\n      return(tolower(x))\n    }\n  })\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == tolower(x)) {\n      x <- toupper(x)\n    } else {\n      x <- tolower(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  # Create a vector of characters\n  char_vec <- strsplit(string, \"\")[[1]]\n  # Create a vector of logical values\n  is_upper <- char_vec %in% LETTERS\n  # Convert the characters to lower case\n  char_vec[is_upper] <- tolower(char_vec[is_upper])\n  # Convert the characters to upper case\n  char_vec[!is_upper] <- toupper(char_vec[!is_upper])\n  # Return the string\n  return(paste(char_vec, collapse = \"\"))\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Convert string to lower case\n  string <- tolower(string)\n  # Convert string to upper case\n  string <- toupper(string)\n  # Return string\n  return(string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      return(tolower(x))\n    } else {\n      return(toupper(x))\n    }\n  })\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == tolower(x)) {\n      x <- toupper(x)\n    } else {\n      x <- tolower(x)\n    }\n    return(x)\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbCdEfGhIjKlMnOpQrStUvWxYz\")\n",
    "\n  # Convert the string to lower case.\n  string <- tolower(string)\n  # Convert the string to upper case.\n  string <- toupper(string)\n  # Return the string.\n  return(string)\n}",
    "\n  string <- gsub(\"[a-z]\", \"[[:lower:]]\", string)\n  string <- gsub(\"[A-Z]\", \"[[:upper:]]\", string)\n  return(string)\n}\n\ntoggle_string(\"Hello World\")\n",
    "\n  # Use the `chartr` function to replace all lowercase letters with uppercase letters\n  # and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), x = string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      x <- tolower(x)\n    } else {\n      x <- toupper(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Convert the string to lower case.\n  string <- tolower(string)\n  # Convert the string to upper case.\n  string <- toupper(string)\n  # Return the string.\n  return(string)\n}\n",
    "\n  # Use `chartr` to replace all lowercase letters with uppercase letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), x = string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Your code goes here\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Convert the string to lower case.\n  string <- tolower(string)\n  # Convert the string to upper case.\n  string <- toupper(string)\n  # Return the string.\n  return(string)\n}\n",
    "\n  # Write your code here\n  return(string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      return(tolower(x))\n    } else {\n      return(toupper(x))\n    }\n  })\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  string <- gsub(\"[a-z]\", \"[A-Z]\", string, ignore.case = TRUE)\n  string <- gsub(\"[A-Z]\", \"[a-z]\", string, ignore.case = TRUE)\n  return(string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (is.na(x)) {\n      x\n    } else if (x == tolower(x)) {\n      toupper(x)\n    } else {\n      tolower(x)\n    }\n  })\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      return(tolower(x))\n    } else {\n      return(toupper(x))\n    }\n  })\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  # Convert the string to lower case.\n  string <- tolower(string)\n  # Use the stringr package to replace all lower case letters with upper case letters.\n  string <- str_replace_all(string, \"[a-z]\", \"[A-Z]\")\n  # Return the string.\n  return(string)\n}\n",
    "\n  # Use the stringr package to toggle the case of all characters in a string.\n  stringr::str_to_title(string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (is.na(string[i])) {\n      next\n    }\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Convert string to lower case\n  string <- tolower(string)\n  # Convert string to upper case\n  string <- toupper(string)\n  # Return string\n  return(string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == tolower(x)) {\n      x <- toupper(x)\n    } else {\n      x <- tolower(x)\n    }\n    return(x)\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      x <- tolower(x)\n    } else {\n      x <- toupper(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      x <- tolower(x)\n    } else {\n      x <- toupper(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] %in% letters) {\n      string[i] <- ifelse(string[i] == toupper(string[i]), tolower(string[i]), toupper(string[i]))\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Convert all characters to lower case\n  string <- tolower(string)\n  # Convert all characters to upper case\n  string <- toupper(string)\n  # Return the string\n  return(string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      x <- tolower(x)\n    } else {\n      x <- toupper(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbCdEfG\")\n",
    "\n  # Use `chartr` to replace all lowercase letters with uppercase letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), x = string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x %in% letters) {\n      if (x == toupper(x)) {\n        x <- tolower(x)\n      } else {\n        x <- toupper(x)\n      }\n    }\n    x\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n",
    "\n  # Use the `str_to_lower` function to convert all characters to lowercase.\n  # Use the `str_to_upper` function to convert all characters to uppercase.\n  # Use the `str_detect` function to detect if a character is uppercase.\n  # Use the `str_replace` function to replace a character with its uppercase or lowercase equivalent.\n  # Use the `str_c` function to concatenate the results of the `str_replace` function.\n  # Return the result of the `str_c` function.\n  return(str_c(str_replace(string, str_detect(string, \"[A-Z]\"), str_to_lower(str_detect(string, \"[A-Z]\"))), str_replace(string, str_detect(string, \"[a-z]\"), str_to_upper(str_detect(string, \"[a-z]\")))))\n}\n",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  # Use the `chartr` function to replace all lowercase letters with uppercase\n  # letters and vice versa.\n  string <- chartr(lower.case, upper.case, string)\n  # Return the string.\n  return(string)\n}\n",
    "\n  # Write your code here\n  string <- strsplit(string, split = \"\")\n  string <- lapply(string, function(x) {\n    if(x %in% c(LETTERS)) {\n      x <- tolower(x)\n    } else {\n      x <- toupper(x)\n    }\n    return(x)\n  })\n  string <- unlist(string)\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"abcdE\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Your code here\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  return(gsub(\"([a-zA-Z])\", \"\\\\U\\\\1\", string))\n}\n\ntoggle_string(\"Hello World\")\n",
    "\n  # Use the `chartr()` function to replace all lowercase letters with their uppercase\n  # equivalents and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), string)\n}\n\ntoggle_string(\"Hello World!\")\n",
    "\n  # Use the `chartr` function to replace all lowercase letters with uppercase\n  # letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), string)\n}\n\ntoggle_string(\"Hello World\")",
    "\n  # Use the built-in function `toupper` to convert all characters to upper case.\n  upper <- toupper(string)\n  # Use the built-in function `tolower` to convert all characters to lower case.\n  lower <- tolower(string)\n  # Use the built-in function `chartr` to replace all upper case characters with lower case characters and vice versa.\n  chartr(upper, lower, string)\n}\n",
    "\n  # Convert the string to lower case\n  string <- tolower(string)\n  # Convert the string to upper case\n  string <- toupper(string)\n  # Return the string\n  return(string)\n}\n",
    "\n  # Use the `chartr()` function to replace all lowercase letters with uppercase letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), string)\n}\n\ntoggle_string(\"Hello World!\")\n",
    "\n  # Use the `chartr` function to replace all lowercase letters with uppercase\n  # and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n    string <- strsplit(string, \"\")[[1]]\n    string <- sapply(string, function(x) {\n        if (x == tolower(x)) {\n            return(toupper(x))\n        } else {\n            return(tolower(x))\n        }\n    })\n    return(paste(string, collapse = \"\"))\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  # Use sapply to apply the tolower and toupper functions to each character.\n  sapply(string, function(x) {\n    if (x %in% letters) {\n      if (x == tolower(x)) {\n        toupper(x)\n      } else {\n        tolower(x)\n      }\n    } else {\n      x\n    }\n  })\n  # Return the character vector as a string.\n  paste(sapply(string, function(x) {\n    if (x %in% letters) {\n      if (x == tolower(x)) {\n        toupper(x)\n      } else {\n        tolower(x)\n      }\n    } else {\n      x\n    }\n  }), collapse = \"\")\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Convert string to lowercase\n  string <- tolower(string)\n  # Convert string to uppercase\n  string <- toupper(string)\n  # Return string\n  return(string)\n}\n",
    "\n  # Your code here\n}\n",
    "\n  # Use the `chartr()` function to replace all lowercase letters with uppercase\n  # letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), string)\n}\n\ntoggle_string(\"Hello World\")\n",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  # Use sapply to apply the tolower and toupper functions to each character.\n  sapply(string, function(x) {\n    if (x == tolower(x)) {\n      toupper(x)\n    } else {\n      tolower(x)\n    }\n  })\n  # Convert the character vector back to a string.\n  paste(string, collapse = \"\")\n}\n\ntoggle_string(\"aBcDeF\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      x <- tolower(x)\n    } else {\n      x <- toupper(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Convert the string to lower case.\n  string <- tolower(string)\n  # Convert the string to upper case.\n  string <- toupper(string)\n  # Return the string.\n  return(string)\n}\n",
    "\n  # Convert the string to lower case.\n  string <- tolower(string)\n  # Convert the string to upper case.\n  string <- toupper(string)\n  # Return the string.\n  return(string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Use `str_to_lower` to convert all characters to lower case.\n  # Use `str_to_upper` to convert all characters to upper case.\n  # Use `str_detect` to detect if the string is all lower case.\n  # Use `str_replace` to replace all lower case characters with upper case characters.\n  # Use `str_replace` to replace all upper case characters with lower case characters.\n  # Return the modified string.\n  if (str_detect(string, \"[a-z]\")) {\n    return(str_replace_all(string, \"[a-z]\", str_to_upper(string)))\n  } else {\n    return(str_replace_all(string, \"[A-Z]\", str_to_lower(string)))\n  }\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      return(tolower(x))\n    } else {\n      return(toupper(x))\n    }\n  })\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- ifelse(string %in% letters,\n                   ifelse(string %in% letters[LETTERS],\n                          tolower(string),\n                          toupper(string)),\n                   string)\n  paste(string, collapse = \"\")\n}\n",
    "\n  string <- str_to_lower(string)\n  string <- str_replace_all(string, \"[a-z]\", function(x) {\n    str_to_upper(x)\n  })\n  return(string)\n}\n\ntoggle_string(\"Hello World\")\n",
    "\n  # Convert string to lower case\n  string <- tolower(string)\n  # Convert string to upper case\n  string <- toupper(string)\n  # Return string\n  return(string)\n}\n",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  \n  # Convert all lowercase characters to uppercase and vice versa.\n  string <- ifelse(string %in% letters,\n                   ifelse(string %in% LETTERS, tolower(string), toupper(string)),\n                   string)\n  \n  # Return the string.\n  return(paste(string, collapse = \"\"))\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == tolower(x)) {\n      x <- toupper(x)\n    } else {\n      x <- tolower(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Use the stringr package to toggle case.\n  stringr::str_to_title(string)\n}\n",
    "\n  # Convert string to lower case\n  string <- tolower(string)\n  # Convert string to upper case\n  string <- toupper(string)\n  # Return string\n  return(string)\n}",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  \n  # Loop through the character vector.\n  for (i in 1:length(string)) {\n    # If the character is uppercase, make it lowercase.\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      # Otherwise, make it uppercase.\n      string[i] <- toupper(string[i])\n    }\n  }\n  \n  # Return the modified string.\n  return(paste(string, collapse = \"\"))\n}\n",
    "\n  # Write your code here\n  string <- strsplit(string, \"\")\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      return(tolower(x))\n    } else {\n      return(toupper(x))\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"Abc\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == tolower(x)) {\n      x <- toupper(x)\n    } else {\n      x <- tolower(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in seq_along(string)) {\n    if (string[i] %in% letters) {\n      string[i] <- ifelse(string[i] == toupper(string[i]), tolower(string[i]), toupper(string[i]))\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"Hello World\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      return(tolower(x))\n    } else {\n      return(toupper(x))\n    }\n  })\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  # Use `str_to_lower` to convert all characters to lowercase.\n  # Use `str_to_upper` to convert all characters to uppercase.\n  # Use `str_detect` to detect if a character is uppercase.\n  # Use `str_replace_all` to replace all uppercase characters with lowercase characters.\n  # Use `str_replace_all` to replace all lowercase characters with uppercase characters.\n  # Return the modified string.\n  return(str_replace_all(str_replace_all(string, \"[A-Z]\", str_to_lower(string)), \"[a-z]\", str_to_upper(string)))\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n",
    "\n  # Convert string to lower case\n  string <- tolower(string)\n  # Convert string to upper case\n  string <- toupper(string)\n  # Return string\n  return(string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      x <- tolower(x)\n    } else {\n      x <- toupper(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Convert the string to lower case.\n  string <- tolower(string)\n  # Convert the string to upper case.\n  string <- toupper(string)\n  # Return the string.\n  return(string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    ifelse(x == toupper(x), tolower(x), toupper(x))\n  })\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  # Use the `chartr` function to replace all lower case letters with upper case\n  # letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    ifelse(x == toupper(x), tolower(x), toupper(x))\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  # Your code here\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      x <- tolower(x)\n    } else {\n      x <- toupper(x)\n    }\n    return(x)\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n",
    "\n  # Use gsub to replace all lowercase letters with uppercase letters and vice versa.\n  gsub(\"[a-z]\", \"[A-Z]\", string, fixed = TRUE)\n}\n",
    "\n  # Use the stringr package to convert all characters to lowercase.\n  string <- str_to_lower(string)\n  # Use the stringr package to convert all characters to uppercase.\n  string <- str_to_upper(string)\n  # Return the modified string.\n  return(string)\n}\n",
    "\n  # Convert the string to lower case.\n  string <- tolower(string)\n  # Convert the string to upper case.\n  string <- toupper(string)\n  # Return the string.\n  return(string)\n}",
    "\n  # Write your code here\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  \n  # Toggle the case of each character.\n  for (i in 1:length(string)) {\n    if (is.na(string[i])) {\n      next\n    } else if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  \n  # Return the modified string.\n  return(paste(string, collapse = \"\"))\n}\n",
    "\n    string <- strsplit(string, \"\")[[1]]\n    for (i in 1:length(string)) {\n        if (string[i] == toupper(string[i])) {\n            string[i] <- tolower(string[i])\n        } else {\n            string[i] <- toupper(string[i])\n        }\n    }\n    return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Use the `chartr()` function to replace all lower case letters with upper case letters, and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), string)\n}\n",
    "\n  # Convert the string to a vector of characters.\n  string <- strsplit(string, \"\")[[1]]\n  # Use a for loop to iterate over the characters.\n  for (i in 1:length(string)) {\n    # If the character is uppercase, make it lowercase.\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    }\n    # If the character is lowercase, make it uppercase.\n    else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  # Return the new string.\n  return(paste(string, collapse = \"\"))\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- ifelse(string %in% LETTERS, tolower(string), toupper(string))\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"Hello World\")\n",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  # Use sapply to apply the tolower and toupper functions to each character.\n  # Use the ifelse function to toggle the case of each character.\n  string <- sapply(string, function(x) {\n    ifelse(x == tolower(x), toupper(x), tolower(x))\n  })\n  # Return the string.\n  return(string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      return(tolower(x))\n    } else {\n      return(toupper(x))\n    }\n  })\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == tolower(x)) {\n      x <- toupper(x)\n    } else {\n      x <- tolower(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (is.na(string[i])) {\n      next\n    } else if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  # Convert string to lower case\n  string <- tolower(string)\n  # Convert string to upper case\n  string <- toupper(string)\n  # Return string\n  return(string)\n}\n",
    "\n  # Use the `chartr` function to replace all lower case letters with upper case\n  # letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), string)\n}\n\ntoggle_string(\"Hello World\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      x <- tolower(x)\n    } else {\n      x <- toupper(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      x <- tolower(x)\n    } else {\n      x <- toupper(x)\n    }\n    return(x)\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n",
    "\n  # Use the `chartr` function to replace all lower case characters with upper case characters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), string)\n}\n",
    "\n  # Convert the string to lowercase.\n  string <- tolower(string)\n  # Convert the string to uppercase.\n  string <- toupper(string)\n  # Return the string.\n  return(string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- ifelse(string %in% letters,\n                   ifelse(string %in% toupper(string),\n                          tolower(string),\n                          toupper(string)),\n                   string)\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  # Convert the string to lowercase\n  string <- tolower(string)\n  # Convert the string to uppercase\n  string <- toupper(string)\n  # Return the string\n  return(string)\n}\n",
    "\n    string <- strsplit(string, \"\")[[1]]\n    string <- sapply(string, function(x) {\n        if (x == tolower(x)) {\n            x <- toupper(x)\n        } else {\n            x <- tolower(x)\n        }\n    })\n    string <- paste(string, collapse = \"\")\n    return(string)\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      x <- tolower(x)\n    } else {\n      x <- toupper(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbC\")\n",
    "\n    string <- strsplit(string, \"\")[[1]]\n    string <- sapply(string, function(x) {\n        if (x == toupper(x)) {\n            x <- tolower(x)\n        } else {\n            x <- toupper(x)\n        }\n    })\n    string <- paste(string, collapse = \"\")\n    return(string)\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  string <- strsplit(string, split = \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == tolower(x)) {\n      x <- toupper(x)\n    } else {\n      x <- tolower(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      x <- tolower(x)\n    } else {\n      x <- toupper(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Use the `chartr()` function to replace all uppercase letters with lowercase letters, and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), x = string)\n}\n",
    "\n    # Convert the string to a character vector.\n    char_vec <- strsplit(string, \"\")[[1]]\n    # Use sapply to apply the tolower and toupper functions to each character.\n    sapply(char_vec, function(x) {\n        if (x == tolower(x)) {\n            toupper(x)\n        } else {\n            tolower(x)\n        }\n    })\n    # Return the result as a string.\n    return(paste(sapply(char_vec, function(x) {\n        if (x == tolower(x)) {\n            toupper(x)\n        } else {\n            tolower(x)\n        }\n    }), collapse = \"\"))\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      x <- tolower(x)\n    } else {\n      x <- toupper(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  \n  # Use the `gsub` function to replace all lowercase letters with uppercase letters and vice versa.\n  string <- gsub(\"[a-z]\", \"[A-Z]\", string, fixed = TRUE)\n  string <- gsub(\"[A-Z]\", \"[a-z]\", string, fixed = TRUE)\n  \n  # Return the string.\n  return(string)\n}\n",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  # Toggle the case of each character.\n  string <- ifelse(string %in% LETTERS, tolower(string), toupper(string))\n  # Return the string.\n  return(paste(string, collapse = \"\"))\n}\n",
    "\n  # Use `chartr` to replace all lowercase letters with uppercase letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), x = string)\n}\n",
    "\n  # Use the `chartr` function to replace all lowercase letters with uppercase\n  # letters, and all uppercase letters with lowercase letters.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), x = string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      return(tolower(x))\n    } else {\n      return(toupper(x))\n    }\n  })\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  # Use the `chartr` function to replace all lowercase letters with uppercase letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), string)\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Convert the string to lower case.\n  string <- tolower(string)\n  # Convert the string to upper case.\n  string <- toupper(string)\n  # Return the string.\n  return(string)\n}\n",
    "\n  string <- strsplit(string, split = \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] %in% LETTERS) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"Hello World\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- ifelse(string %in% LETTERS, tolower(string), toupper(string))\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"Hello World\")\n",
    "\n  # Use the `chartr` function to replace all lowercase letters with uppercase\n  # letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), string)\n}\n",
    "\n  # Use `chartr` to replace all lowercase letters with uppercase letters and vice versa.\n  chartr(from = c(\"a-z\", \"A-Z\"), to = c(\"A-Z\", \"a-z\"), x = string)\n}\n",
    "\n  # Write your code here\n  # Hint: Use the tolower() and toupper() functions\n  # to convert characters to lower and upper case respectively.\n  # You can use the ifelse() function to toggle the case.\n  # The ifelse() function takes three arguments:\n  # a logical vector, a vector of values to return when the logical vector is TRUE,\n  # and a vector of values to return when the logical vector is FALSE.\n  # The function returns a vector of values corresponding to each element of the logical vector.\n  # For example, ifelse(c(TRUE, FALSE, TRUE), 1, 0) returns the vector c(1, 0, 1).\n  # You can use the islower() and isupper() functions to check if a character is lower or upper case.\n  # For example, islower(\"a\") returns TRUE and islower(\"A\") returns FALSE.\n  # You can use the paste() function to concatenate strings.\n  # For example, paste(\"a\", \"b\", sep = \"\") returns the string \"ab\".\n  # You can use the strsplit() function to split a string into a vector of characters.\n  # For example, strsplit(\"abcd\", \"\") returns the vector c(\"a\", \"b\", \"c\", \"d\").\n  # You can use the unlist() function to convert a list to a vector.\n  # For example, unlist(list(\"a\", \"b\", \"c\", \"d\")) returns the vector c(\"a\", \"b\", \"c\", \"d\").\n  # You can use the as.character() function to convert a vector to a character vector.\n  # For example, as.character(c(\"a\", \"b\", \"c\", \"d\")) returns the character vector c(\"a\", \"b\", \"c\", \"d\").\n  # You can use the as.list() function to convert a vector to a list.\n  # For example, as.list(c(\"a\", \"b\", \"c\", \"d\")) returns the list list(\"a\", \"b\", \"c\", \"d\").\n  # You can use the sapply() function to apply a function to each element of a vector.\n  # For example, sapply(c(\"a\", \"b\", \"c\",",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  # Use sapply to apply the tolower and toupper functions to each element of the vector.\n  string <- sapply(string, function(x) {\n    if (x %in% letters) {\n      tolower(x)\n    } else {\n      toupper(x)\n    }\n  })\n  # Return the string.\n  return(paste(string, collapse = \"\"))\n}\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == tolower(x)) {\n      x <- toupper(x)\n    } else {\n      x <- tolower(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == tolower(x)) {\n      x <- toupper(x)\n    } else {\n      x <- tolower(x)\n    }\n  })\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbC\")\n",
    "\n  # Convert the string to a character vector.\n  string <- strsplit(string, \"\")[[1]]\n  # Use sapply to apply the tolower and toupper functions to each character.\n  sapply(string, function(x) {\n    if (x == tolower(x)) {\n      toupper(x)\n    } else {\n      tolower(x)\n    }\n  })\n  # Return the character vector as a string.\n  paste(string, collapse = \"\")\n}\n\ntoggle_string(\"aBcDeFg\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"Hello World\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x)) {\n      return(tolower(x))\n    } else {\n      return(toupper(x))\n    }\n  })\n  return(paste(string, collapse = \"\"))\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == tolower(x)) {\n      x <- toupper(x)\n    } else {\n      x <- tolower(x)\n    }\n  })\n  string <- paste(string, collapse = \"\")\n  return(string)\n}\n\ntoggle_string(\"AbCdEf\")\n",
    "\n  # Use the tolower and toupper functions to convert the string to lowercase and then uppercase.\n  # Use the paste function to concatenate the two strings together.\n  # Use the substr function to extract the second string from the concatenated string.\n  # Return the extracted string.\n  return(substr(paste(tolower(string), toupper(string)), 2, nchar(string) + 1))\n}\n"
  ]
}
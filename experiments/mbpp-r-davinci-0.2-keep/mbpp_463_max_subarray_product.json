{
  "name": "mbpp_463_max_subarray_product",
  "language": "r",
  "prompt": "# Write a function to find the maximum product subarray of the given array.\nmax_subarray_product <- function(arr) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_463_max_subarray_product.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- max_subarray_product\n    if(!identical(candidate(c(1, -2, -3, 0, 7, -8, -2)), 112)){quit('no', 1)}\n    if(!identical(candidate(c(6, -3, -10, 0, 2)), 180)){quit('no', 1)}\n    if(!identical(candidate(c(-2, -40, 0, -2, -3)), 80)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  max_product <- arr[1]\n  min_product <- arr[1]\n  max_so_far <- arr[1]\n  for (i in 2:length(arr)) {\n    if (arr[i] < 0) {\n      temp <- max_product\n      max_product <- max(min_product * arr[i], arr[i])\n      min_product <- min(temp * arr[i], arr[i])\n    } else {\n      max_product <- max(max_product * arr[i], arr[i])\n      min_product <- min(min_product * arr[i], arr[i])\n    }\n    max_so_far <- max(max_so_far, max_product)\n  }\n  return(max_so_far)\n}\n",
    "\n  max_so_far <- arr[1]\n  min_so_far <- arr[1]\n  max_ending_here <- arr[1]\n  min_ending_here <- arr[1]\n  for (i in 2:length(arr)) {\n    if (arr[i] > 0) {\n      max_ending_here <- max(arr[i], max_ending_here * arr[i])\n      min_ending_here <- min(arr[i], min_ending_here * arr[i])\n    } else {\n      max_ending_here <- max(arr[i], min_ending_here * arr[i])\n      min_ending_here <- min(arr[i], max_ending_here * arr[i])\n    }\n    max_so_far <- max(max_so_far, max_ending_here)\n  }\n  return(max_so_far)\n}\n\nmax_subarray_product(c(2, 3, -2, 4))\n",
    "\n  max_ending_here <- arr[1]\n  min_ending_here <- arr[1]\n  max_so_far <- arr[1]\n  for (i in 2:length(arr)) {\n    if (arr[i] > 0) {\n      max_ending_here <- max(arr[i], max_ending_here * arr[i])\n      min_ending_here <- min(arr[i], min_ending_here * arr[i])\n    } else {\n      max_ending_here <- max(arr[i], min_ending_here * arr[i])\n      min_ending_here <- min(arr[i], max_ending_here * arr[i])\n    }\n    max_so_far <- max(max_so_far, max_ending_here)\n  }\n  return(max_so_far)\n}\n",
    "\n  max_ending_here <- arr[1]\n  min_ending_here <- arr[1]\n  max_so_far <- arr[1]\n  for (i in 2:length(arr)) {\n    if (arr[i] > 0) {\n      max_ending_here <- max(arr[i], max_ending_here * arr[i])\n      min_ending_here <- min(arr[i], min_ending_here * arr[i])\n    } else {\n      max_ending_here <- max(arr[i], min_ending_here * arr[i])\n      min_ending_here <- min(arr[i], max_ending_here * arr[i])\n    }\n    max_so_far <- max(max_so_far, max_ending_here)\n  }\n  return(max_so_far)\n}\n\nmax_subarray_product(c(2, 3, -2, 4))\nmax_subarray_product(c(-2, -3, 0, -2, -40))\nmax_subarray_product(c(-1, -3, -10, 0, 60))\nmax_subarray_product(c(-2, -3, 0, -2, -40))\nmax_subarray_product(c(-1, -3, -10, 0, 60))\nmax_subarray_product(c(-2, -3, 0, -2, -40))\nmax_subarray_product(c(-1, -3, -10, 0, 60))\nmax_subarray_product(c(-2, -3, 0, -2, -40))\nmax_subarray_product(c(-1, -3, -10, 0, 60))\nmax_subarray_product(c(-2, -3, 0, -2, -40))\nmax_subarray_product(c(-1, -3, -10, 0, 60))\nmax_subarray_product(c(-2, -3, 0, -2, -40))\nmax_subarray_product(c(-1, -3, -10, 0, 60))\nmax_subarray_product(c(-2, -3, 0, -2",
    "\n  n <- length(arr)\n  max_so_far <- arr[1]\n  min_so_far <- arr[1]\n  max_ending_here <- arr[1]\n  min_ending_here <- arr[1]\n  for (i in 2:n) {\n    if (arr[i] > 0) {\n      max_ending_here <- max(arr[i], max_ending_here * arr[i])\n      min_ending_here <- min(arr[i], min_ending_here * arr[i])\n    } else {\n      max_ending_here <- max(arr[i], min_ending_here * arr[i])\n      min_ending_here <- min(arr[i], max_ending_here * arr[i])\n    }\n    max_so_far <- max(max_so_far, max_ending_here)\n  }\n  return(max_so_far)\n}\n",
    "\n  max_so_far <- arr[1]\n  min_so_far <- arr[1]\n  max_ending_here <- arr[1]\n  min_ending_here <- arr[1]\n  for (i in 2:length(arr)) {\n    if (arr[i] > 0) {\n      max_ending_here <- max(arr[i], max_ending_here * arr[i])\n      min_ending_here <- min(arr[i], min_ending_here * arr[i])\n    } else {\n      max_ending_here <- max(arr[i], min_ending_here * arr[i])\n      min_ending_here <- min(arr[i], max_ending_here * arr[i])\n    }\n    max_so_far <- max(max_so_far, max_ending_here)\n  }\n  return(max_so_far)\n}\n\nmax_subarray_product(c(1, -2, -3, 0, 7, -8, -2))\n",
    "\n  max_ending_here <- arr[1]\n  min_ending_here <- arr[1]\n  max_so_far <- arr[1]\n  for (i in 2:length(arr)) {\n    if (arr[i] > 0) {\n      max_ending_here <- max(arr[i], max_ending_here * arr[i])\n      min_ending_here <- min(arr[i], min_ending_here * arr[i])\n    } else {\n      max_ending_here <- max(arr[i], min_ending_here * arr[i])\n      min_ending_here <- min(arr[i], max_ending_here * arr[i])\n    }\n    max_so_far <- max(max_so_far, max_ending_here)\n  }\n  return(max_so_far)\n}\n\nmax_subarray_product(c(2, 3, -2, 4))\nmax_subarray_product(c(-2, 0, -1))\n",
    "\n  max_product <- arr[1]\n  min_product <- arr[1]\n  max_so_far <- arr[1]\n  for (i in 2:length(arr)) {\n    if (arr[i] < 0) {\n      temp <- max_product\n      max_product <- max(min_product * arr[i], arr[i])\n      min_product <- min(temp * arr[i], arr[i])\n    } else {\n      max_product <- max(max_product * arr[i], arr[i])\n      min_product <- min(min_product * arr[i], arr[i])\n    }\n    max_so_far <- max(max_so_far, max_product)\n  }\n  max_so_far\n}\n",
    "\n  max_so_far <- arr[1]\n  min_so_far <- arr[1]\n  max_ending_here <- arr[1]\n  min_ending_here <- arr[1]\n  for (i in 2:length(arr)) {\n    if (arr[i] > 0) {\n      max_ending_here <- max(max_ending_here * arr[i], arr[i])\n      min_ending_here <- min(min_ending_here * arr[i], arr[i])\n    } else {\n      max_ending_here <- max(min_ending_here * arr[i], arr[i])\n      min_ending_here <- min(max_ending_here * arr[i], arr[i])\n    }\n    max_so_far <- max(max_so_far, max_ending_here)\n  }\n  max_so_far\n}\n",
    "\n    max_ending_here <- arr[1]\n    min_ending_here <- arr[1]\n    max_so_far <- arr[1]\n    \n    for (i in 2:length(arr)) {\n        if (arr[i] > 0) {\n            max_ending_here <- max(arr[i], max_ending_here * arr[i])\n            min_ending_here <- min(arr[i], min_ending_here * arr[i])\n        } else {\n            max_ending_here <- max(arr[i], min_ending_here * arr[i])\n            min_ending_here <- min(arr[i], max_ending_here * arr[i])\n        }\n        max_so_far <- max(max_so_far, max_ending_here)\n    }\n    return(max_so_far)\n}\n",
    "\n  max_ending_here <- arr[1]\n  min_ending_here <- arr[1]\n  max_so_far <- arr[1]\n  for (i in 2:length(arr)) {\n    if (arr[i] > 0) {\n      max_ending_here <- max(arr[i], max_ending_here * arr[i])\n      min_ending_here <- min(arr[i], min_ending_here * arr[i])\n    } else {\n      max_ending_here <- max(arr[i], min_ending_here * arr[i])\n      min_ending_here <- min(arr[i], max_ending_here * arr[i])\n    }\n    max_so_far <- max(max_so_far, max_ending_here)\n  }\n  return(max_so_far)\n}\n",
    "\n    max_ending_here <- arr[1]\n    min_ending_here <- arr[1]\n    max_so_far <- arr[1]\n    for (i in 2:length(arr)) {\n        if (arr[i] > 0) {\n            max_ending_here <- max(max_ending_here * arr[i], arr[i])\n            min_ending_here <- min(min_ending_here * arr[i], arr[i])\n        } else {\n            max_ending_here <- max(min_ending_here * arr[i], arr[i])\n            min_ending_here <- min(max_ending_here * arr[i], arr[i])\n        }\n        max_so_far <- max(max_so_far, max_ending_here)\n    }\n    return(max_so_far)\n}\n\narr <- c(2, 3, -2, 4)\nmax_subarray_product(arr)\n\narr <- c(-2, -3, 0, -2, -40)\nmax_subarray_product(arr)\n\narr <- c(-1, -3, -10, 0, 60)\nmax_subarray_product(arr)\n\narr <- c(-2, -3, 0, -2, -40)\nmax_subarray_product(arr)\n\narr <- c(-1, -3, -10, 0, 60)\nmax_subarray_product(arr)\n\narr <- c(-2, -3, 0, -2, -40)\nmax_subarray_product(arr)\n\narr <- c(-1, -3, -10, 0, 60)\nmax_subarray_product(arr)\n\narr <- c(-2, -3, 0, -2, -40)\nmax_subarray_product(arr)\n\narr <- c(-1, -3, -10, 0, 60)\nmax_subarray_product(arr)\n\narr <- c(-2, -3, 0, -2, -40)\nmax_subarray_product(arr)\n\narr <- c(-1, -3, -10, 0, 60)\nmax_subarray_product(arr",
    "\n  max_product <- arr[1]\n  min_product <- arr[1]\n  max_so_far <- arr[1]\n  for (i in 2:length(arr)) {\n    if (arr[i] < 0) {\n      temp <- max_product\n      max_product <- max(min_product * arr[i], arr[i])\n      min_product <- min(temp * arr[i], arr[i])\n    } else {\n      max_product <- max(max_product * arr[i], arr[i])\n      min_product <- min(min_product * arr[i], arr[i])\n    }\n    max_so_far <- max(max_so_far, max_product)\n  }\n  return(max_so_far)\n}\n",
    "\n  if (length(arr) == 1) {\n    return(arr[1])\n  }\n  max_so_far <- arr[1]\n  max_ending_here <- arr[1]\n  min_ending_here <- arr[1]\n  for (i in 2:length(arr)) {\n    if (arr[i] > 0) {\n      max_ending_here <- max(max_ending_here * arr[i], arr[i])\n      min_ending_here <- min(min_ending_here * arr[i], arr[i])\n    } else {\n      max_ending_here <- max(min_ending_here * arr[i], arr[i])\n      min_ending_here <- min(max_ending_here * arr[i], arr[i])\n    }\n    max_so_far <- max(max_so_far, max_ending_here)\n  }\n  return(max_so_far)\n}\n",
    "\n  max_product <- arr[1]\n  min_product <- arr[1]\n  max_so_far <- arr[1]\n  for (i in 2:length(arr)) {\n    if (arr[i] < 0) {\n      temp <- max_product\n      max_product <- max(min_product * arr[i], arr[i])\n      min_product <- min(temp * arr[i], arr[i])\n    } else {\n      max_product <- max(max_product * arr[i], arr[i])\n      min_product <- min(min_product * arr[i], arr[i])\n    }\n    max_so_far <- max(max_so_far, max_product)\n  }\n  return(max_so_far)\n}\n",
    "\n  max_ending_here <- arr[1]\n  min_ending_here <- arr[1]\n  max_so_far <- arr[1]\n  for (i in 2:length(arr)) {\n    if (arr[i] > 0) {\n      max_ending_here <- max(arr[i], max_ending_here * arr[i])\n      min_ending_here <- min(arr[i], min_ending_here * arr[i])\n    } else {\n      max_ending_here <- max(arr[i], min_ending_here * arr[i])\n      min_ending_here <- min(arr[i], max_ending_here * arr[i])\n    }\n    max_so_far <- max(max_so_far, max_ending_here)\n  }\n  return(max_so_far)\n}\n",
    "\n  max_so_far <- arr[1]\n  min_so_far <- arr[1]\n  max_ending_here <- arr[1]\n  min_ending_here <- arr[1]\n  for (i in 2:length(arr)) {\n    if (arr[i] > 0) {\n      max_ending_here <- max(arr[i], max_ending_here * arr[i])\n      min_ending_here <- min(arr[i], min_ending_here * arr[i])\n    } else {\n      max_ending_here <- max(arr[i], min_ending_here * arr[i])\n      min_ending_here <- min(arr[i], max_ending_here * arr[i])\n    }\n    max_so_far <- max(max_so_far, max_ending_here)\n  }\n  return(max_so_far)\n}\n",
    "\n  max_product <- arr[1]\n  min_product <- arr[1]\n  max_so_far <- arr[1]\n  for (i in 2:length(arr)) {\n    if (arr[i] < 0) {\n      temp <- max_product\n      max_product <- max(min_product * arr[i], arr[i])\n      min_product <- min(temp * arr[i], arr[i])\n    } else {\n      max_product <- max(max_product * arr[i], arr[i])\n      min_product <- min(min_product * arr[i], arr[i])\n    }\n    max_so_far <- max(max_so_far, max_product)\n  }\n  return(max_so_far)\n}\n",
    "\n  max_ending_here <- arr[1]\n  min_ending_here <- arr[1]\n  max_so_far <- arr[1]\n  for (i in 2:length(arr)) {\n    if (arr[i] > 0) {\n      max_ending_here <- max(arr[i], max_ending_here * arr[i])\n      min_ending_here <- min(arr[i], min_ending_here * arr[i])\n    } else {\n      max_ending_here <- max(arr[i], min_ending_here * arr[i])\n      min_ending_here <- min(arr[i], max_ending_here * arr[i])\n    }\n    max_so_far <- max(max_so_far, max_ending_here)\n  }\n  return(max_so_far)\n}\n\nmax_subarray_product(c(2, 3, -2, 4))\n",
    "\n  max_ending_here <- arr[1]\n  min_ending_here <- arr[1]\n  max_so_far <- arr[1]\n  for (i in 2:length(arr)) {\n    if (arr[i] > 0) {\n      max_ending_here <- max(arr[i], max_ending_here * arr[i])\n      min_ending_here <- min(arr[i], min_ending_here * arr[i])\n    } else {\n      max_ending_here <- max(arr[i], min_ending_here * arr[i])\n      min_ending_here <- min(arr[i], max_ending_here * arr[i])\n    }\n    max_so_far <- max(max_so_far, max_ending_here)\n  }\n  return(max_so_far)\n}\n"
  ]
}
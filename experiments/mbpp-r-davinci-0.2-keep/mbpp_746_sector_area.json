{
  "name": "mbpp_746_sector_area",
  "language": "r",
  "prompt": "# Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nsector_area <- function(r, a) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_746_sector_area.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- sector_area\n    if(!identical(candidate(4, 45), 6.283185307179586)){quit('no', 1)}\n    if(!identical(candidate(9, 45), 31.808625617596654)){quit('no', 1)}\n    if(!identical(candidate(9, 361), NULL)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  if (a > 360) {\n    return(NULL)\n  }\n  else {\n    return(a/360 * pi * r^2)\n  }\n}\n",
    "\n  if (a > 360) {\n    return(NULL)\n  }\n  else {\n    return(a/360*pi*r^2)\n  }\n}\n\nsector_area(10, 360)\nsector_area(10, 361)\n",
    "\n  if(a > 360) {\n    return(NULL)\n  } else {\n    return(a/360 * pi * r^2)\n  }\n}\n",
    "\n  if (a > 360) {\n    return(NULL)\n  }\n  else {\n    return(a/360*pi*r^2)\n  }\n}\n",
    "\n  if (a > 360) {\n    return(NULL)\n  } else {\n    return(a/360 * pi * r^2)\n  }\n}\n",
    "\n  if (a > 360) {\n    return(NULL)\n  } else {\n    return(0.5 * r^2 * a)\n  }\n}\n\nsector_area(10, 45)\n",
    "\n  if (a > 360) {\n    return(NULL)\n  } else {\n    return(a * (pi * r^2) / 360)\n  }\n}\n",
    "\n  if (a > 360) {\n    return(NULL)\n  } else {\n    return(0.5 * r^2 * a)\n  }\n}\n\nsector_area(10, 360)\nsector_area(10, 361)\n",
    "\n  if (a > 360) {\n    return(NULL)\n  } else {\n    return(0.5 * r * r * a)\n  }\n}\n\nsector_area(10, 360)\nsector_area(10, 361)\n",
    "\n  if (a > 360) {\n    return(NULL)\n  } else {\n    return(0.5 * r^2 * a)\n  }\n}\n\nsector_area(10, 360)\nsector_area(10, 361)\n",
    "\n  if (a > 360) {\n    return(NULL)\n  } else {\n    return(r^2 * a * pi / 360)\n  }\n}\n",
    "\n    if (a > 360) {\n        return(NULL)\n    } else {\n        return(0.5 * r * r * a)\n    }\n}\n\nsector_area(10, 360)\nsector_area(10, 361)\n",
    "\n  if (a > 360) {\n    return(NULL)\n  }\n  else {\n    return(0.5 * r * r * a)\n  }\n}\n",
    "\n  if (a > 360) {\n    return(NULL)\n  }\n  else {\n    return(0.5 * r * r * a * pi / 360)\n  }\n}\n\nsector_area(10, 360)\nsector_area(10, 361)\n",
    "\n  if (a > 360) {\n    return(NULL)\n  } else {\n    return(a * (pi * r^2) / 360)\n  }\n}\n\nsector_area(2, 360)\nsector_area(2, 361)\n",
    "\n    if (a > 360) {\n        return(NULL)\n    } else {\n        return(a/360 * pi * r^2)\n    }\n}\n",
    "\n  if (a > 360) {\n    return(NULL)\n  } else {\n    return(0.5 * r * r * a)\n  }\n}\n",
    "\n  if (a > 360) {\n    return(NULL)\n  } else {\n    return(pi * r^2 * a/360)\n  }\n}\n",
    "\n  if (a > 360) {\n    return(NULL)\n  }\n  else {\n    return(0.5 * r * r * a)\n  }\n}\n\nsector_area(10, 360)\nsector_area(10, 361)\n",
    "\n  if (a > 360) {\n    return(NULL)\n  } else {\n    return(a / 360 * pi * r^2)\n  }\n}\n"
  ]
}
{
  "name": "mbpp_594_diff_even_odd",
  "language": "r",
  "prompt": "# Write a function to find the difference of the first even and first odd number of a given list.\ndiff_even_odd <- function(list1) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_594_diff_even_odd.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- diff_even_odd\n    if(!identical(candidate(c(1, 3, 5, 7, 4, 1, 6, 8)), 3)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)), 1)){quit('no', 1)}\n    if(!identical(candidate(c(1, 5, 7, 9, 10)), 9)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  even <- list1[which(list1 %% 2 == 0)]\n  odd <- list1[which(list1 %% 2 != 0)]\n  return(even[1] - odd[1])\n}\n",
    "\n  even_num <- list1[which(list1 %% 2 == 0)[1]]\n  odd_num <- list1[which(list1 %% 2 != 0)[1]]\n  return(even_num - odd_num)\n}\n",
    "\n  even_num <- list1[which(list1 %% 2 == 0)]\n  odd_num <- list1[which(list1 %% 2 != 0)]\n  return(even_num[1] - odd_num[1])\n}\n",
    "\n  even_num <- list1[which(list1 %% 2 == 0)]\n  odd_num <- list1[which(list1 %% 2 != 0)]\n  diff <- even_num[1] - odd_num[1]\n  return(diff)\n}\n",
    "\n  even <- list1[which(list1 %% 2 == 0)]\n  odd <- list1[which(list1 %% 2 != 0)]\n  return(even[1] - odd[1])\n}\n",
    "\n  even <- list1[which(list1 %% 2 == 0)]\n  odd <- list1[which(list1 %% 2 != 0)]\n  diff <- even[1] - odd[1]\n  return(diff)\n}\n\ndiff_even_odd(list1)\n",
    "\n  even_num <- list1[which(list1 %% 2 == 0)]\n  odd_num <- list1[which(list1 %% 2 != 0)]\n  diff <- even_num[1] - odd_num[1]\n  return(diff)\n}\n",
    "\n  even_num <- list1[which(list1 %% 2 == 0)]\n  odd_num <- list1[which(list1 %% 2 != 0)]\n  return(even_num[1] - odd_num[1])\n}\n\ndiff_even_odd(list1)\n",
    "\n  even_num <- list1[which(list1 %% 2 == 0)]\n  odd_num <- list1[which(list1 %% 2 != 0)]\n  return(even_num[1] - odd_num[1])\n}\n",
    "\n  even <- list1[which(list1 %% 2 == 0)]\n  odd <- list1[which(list1 %% 2 == 1)]\n  diff <- even[1] - odd[1]\n  return(diff)\n}\n",
    "\n  even_numbers <- list1[list1 %% 2 == 0]\n  odd_numbers <- list1[list1 %% 2 != 0]\n  return(even_numbers[1] - odd_numbers[1])\n}\n",
    "\n  even_num <- list1[which(list1 %% 2 == 0)]\n  odd_num <- list1[which(list1 %% 2 != 0)]\n  diff <- even_num[1] - odd_num[1]\n  return(diff)\n}\n",
    "\n  even_num <- list1[which(list1 %% 2 == 0)]\n  odd_num <- list1[which(list1 %% 2 != 0)]\n  return(even_num[1] - odd_num[1])\n}\n",
    "\n  even <- list1[which(list1 %% 2 == 0)]\n  odd <- list1[which(list1 %% 2 != 0)]\n  diff <- even[1] - odd[1]\n  return(diff)\n}\n\ndiff_even_odd(list1)\n",
    "\n  even <- list1[which(list1 %% 2 == 0)]\n  odd <- list1[which(list1 %% 2 != 0)]\n  diff <- even[1] - odd[1]\n  return(diff)\n}\n",
    "\n  even_numbers <- list1[list1 %% 2 == 0]\n  odd_numbers <- list1[list1 %% 2 != 0]\n  return(even_numbers[1] - odd_numbers[1])\n}\n\ndiff_even_odd(list1)\n",
    "\n  even_num <- list1[which(list1 %% 2 == 0)]\n  odd_num <- list1[which(list1 %% 2 != 0)]\n  return(even_num[1] - odd_num[1])\n}\n",
    "\n  even_num <- list1[which(list1 %% 2 == 0)]\n  odd_num <- list1[which(list1 %% 2 != 0)]\n  diff <- even_num[1] - odd_num[1]\n  return(diff)\n}\n",
    "\n  even <- list1[which(list1 %% 2 == 0)]\n  odd <- list1[which(list1 %% 2 != 0)]\n  diff <- even[1] - odd[1]\n  return(diff)\n}\n",
    "\n  even <- list1[which(list1 %% 2 == 0)]\n  odd <- list1[which(list1 %% 2 != 0)]\n  diff <- even[1] - odd[1]\n  return(diff)\n}\n\ndiff_even_odd(list1)\n"
  ]
}
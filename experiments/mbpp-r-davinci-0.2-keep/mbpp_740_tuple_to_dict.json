{
  "name": "mbpp_740_tuple_to_dict",
  "language": "r",
  "prompt": "# Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\ntuple_to_dict <- function(test_tup) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_740_tuple_to_dict.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- tuple_to_dict\n    if(!identical(candidate(list(1, 5, 7, 10, 13, 5)), list(1 = 5, 7 = 10, 13 = 5))){quit('no', 1)}\n    if(!identical(candidate(list(1, 2, 3, 4, 5, 6)), list(1 = 2, 3 = 4, 5 = 6))){quit('no', 1)}\n    if(!identical(candidate(list(7, 8, 9, 10, 11, 12)), list(7 = 8, 9 = 10, 11 = 12))){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  dict <- list()\n  for (i in seq(1, length(test_tup), 2)) {\n    dict[[test_tup[i]]] <- test_tup[i + 1]\n  }\n  return(dict)\n}\n",
    "\n  dict <- list()\n  for (i in seq(1, length(test_tup), 2)) {\n    dict[[test_tup[i]]] <- test_tup[i + 1]\n  }\n  return(dict)\n}\n\ntest_tup <- c(\"a\", 1, \"b\", 2, \"c\", 3)\ntuple_to_dict(test_tup)\n",
    "\n    dict <- list()\n    for (i in 1:length(test_tup)) {\n        if (i %% 2 == 0) {\n            dict[[test_tup[i-1]]] <- test_tup[i]\n        }\n    }\n    return(dict)\n}\n\ntest_tup <- c('a', 1, 'b', 2, 'c', 3, 'd', 4)\ntuple_to_dict(test_tup)\n",
    "\n  # Write your code here\n  dict <- list()\n  for (i in seq(1, length(test_tup), 2)) {\n    dict[[test_tup[i]]] <- test_tup[i+1]\n  }\n  return(dict)\n}\n",
    "\n  dict <- list()\n  for (i in seq(1, length(test_tup), 2)) {\n    dict[[test_tup[i]]] <- test_tup[i+1]\n  }\n  return(dict)\n}\n",
    "\n  # Write your code here\n  dict <- list()\n  for(i in 1:length(test_tup)){\n    if(i%%2 == 0){\n      dict[[test_tup[i-1]]] <- test_tup[i]\n    }\n  }\n  return(dict)\n}\n",
    "\n  # Write your code here\n  dict <- list()\n  for(i in 1:length(test_tup)){\n    if(i%%2==0){\n      dict[[test_tup[i-1]]] <- test_tup[i]\n    }\n  }\n  return(dict)\n}\n",
    "\n  dict <- list()\n  for (i in seq(1, length(test_tup), 2)) {\n    dict[[test_tup[i]]] <- test_tup[i+1]\n  }\n  return(dict)\n}\n\ntest_tup <- c(\"a\", 1, \"b\", 2, \"c\", 3)\ntuple_to_dict(test_tup)\n",
    "\n  dict <- list()\n  for (i in 1:length(test_tup)) {\n    if (i %% 2 == 0) {\n      dict[[test_tup[i-1]]] <- test_tup[i]\n    }\n  }\n  return(dict)\n}\n\ntest_tup <- c(\"a\", 1, \"b\", 2, \"c\", 3)\ntuple_to_dict(test_tup)\n",
    "\n    dict <- list()\n    for (i in seq(1, length(test_tup), 2)) {\n        dict[[test_tup[i]]] <- test_tup[i+1]\n    }\n    return(dict)\n}\n\ntest_tup <- c(\"a\", 1, \"b\", 2, \"c\", 3)\ntuple_to_dict(test_tup)\n",
    "\n  dict <- list()\n  for (i in 1:length(test_tup)) {\n    if (i %% 2 == 0) {\n      dict[[test_tup[i-1]]] <- test_tup[i]\n    }\n  }\n  return(dict)\n}\n\ntest_tup <- c(\"a\", 1, \"b\", 2, \"c\", 3)\ntuple_to_dict(test_tup)\n",
    "\n  dict <- list()\n  for (i in seq(1, length(test_tup), 2)) {\n    dict[[test_tup[i]]] <- test_tup[i+1]\n  }\n  return(dict)\n}\n\ntest_tup <- c(\"a\", 1, \"b\", 2, \"c\", 3)\ntuple_to_dict(test_tup)\n",
    "\n  # Write your code here\n  dict <- list()\n  for (i in 1:length(test_tup)) {\n    if (i%%2 == 0) {\n      dict[[test_tup[i-1]]] <- test_tup[i]\n    }\n  }\n  return(dict)\n}\n",
    "\n  # Write your code here\n  dict <- list()\n  for (i in 1:length(test_tup)) {\n    if (i %% 2 == 0) {\n      dict[[test_tup[i-1]]] <- test_tup[i]\n    }\n  }\n  return(dict)\n}\n",
    "\n    dict <- list()\n    for (i in seq(1, length(test_tup), 2)) {\n        dict[[test_tup[i]]] <- test_tup[i + 1]\n    }\n    return(dict)\n}\n\ntuple_to_dict(c(1, 2, 3, 4, 5, 6))\n",
    "\n    test_dict <- dict()\n    for (i in seq(1, length(test_tup), 2)) {\n        test_dict[test_tup[i]] <- test_tup[i + 1]\n    }\n    return(test_dict)\n}\n\ntest_tup <- c(\"a\", 1, \"b\", 2, \"c\", 3)\ntuple_to_dict(test_tup)\n",
    "\n  test_dict <- dict()\n  for (i in 1:length(test_tup)) {\n    if (i %% 2 == 0) {\n      test_dict[[test_tup[i-1]]] <- test_tup[i]\n    }\n  }\n  return(test_dict)\n}\n",
    "\n  dict <- list()\n  for (i in 1:(length(test_tup)-1)) {\n    dict[[test_tup[i]]] <- test_tup[i+1]\n  }\n  return(dict)\n}\n",
    "\n    dict <- list()\n    for (i in seq(1, length(test_tup), 2)) {\n        dict[[test_tup[i]]] <- test_tup[i+1]\n    }\n    return(dict)\n}\n\ntest_tup <- c(\"a\", 1, \"b\", 2, \"c\", 3)\ntuple_to_dict(test_tup)\n",
    "\n  dict <- list()\n  for (i in 1:length(test_tup)) {\n    if (i %% 2 == 0) {\n      dict[[test_tup[i-1]]] <- test_tup[i]\n    }\n  }\n  return(dict)\n}\n\ntest_tup <- c(\"a\", 1, \"b\", 2, \"c\", 3)\ntuple_to_dict(test_tup)\n"
  ]
}
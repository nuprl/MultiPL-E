{
  "name": "mbpp_752_jacobsthal_num",
  "language": "r",
  "prompt": "# Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...\njacobsthal_num <- function(n) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_752_jacobsthal_num.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- jacobsthal_num\n    if(!identical(candidate(5), 11)){quit('no', 1)}\n    if(!identical(candidate(2), 1)){quit('no', 1)}\n    if(!identical(candidate(4), 5)){quit('no', 1)}\n    if(!identical(candidate(13), 2731)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  if (n == 0) {\n    return(0)\n  } else if (n == 1) {\n    return(1)\n  } else {\n    return(jacobsthal_num(n-1) + 2*jacobsthal_num(n-2))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(0)\n  } else if (n == 1) {\n    return(1)\n  } else {\n    return(jacobsthal_num(n-1) + 2*jacobsthal_num(n-2))\n  }\n}\n\njacobsthal_num(10)\n",
    "\n  if (n == 0) {\n    return(0)\n  } else if (n == 1) {\n    return(1)\n  } else {\n    return(jacobsthal_num(n-1) + 2*jacobsthal_num(n-2))\n  }\n}\n\njacobsthal_num(10)\n",
    "\n  if (n == 0) {\n    return(0)\n  } else if (n == 1) {\n    return(1)\n  } else {\n    return(jacobsthal_num(n-1) + 2*jacobsthal_num(n-2))\n  }\n}\n",
    "\n    if (n == 0) {\n        return(0)\n    } else if (n == 1) {\n        return(1)\n    } else {\n        return(jacobsthal_num(n-1) + 2*jacobsthal_num(n-2))\n    }\n}\n\njacobsthal_num(10)\n",
    "\n  if (n == 0) {\n    return(0)\n  } else if (n == 1) {\n    return(1)\n  } else {\n    return(jacobsthal_num(n-1) + 2*jacobsthal_num(n-2))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(0)\n  } else if (n == 1) {\n    return(1)\n  } else {\n    return(jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2))\n  }\n}\n\njacobsthal_num(10)\n",
    "\n    if (n == 0) {\n        return(0)\n    } else if (n == 1) {\n        return(1)\n    } else {\n        return(jacobsthal_num(n-1) + 2*jacobsthal_num(n-2))\n    }\n}\n",
    "\n  if (n == 0) {\n    return(0)\n  } else if (n == 1) {\n    return(1)\n  } else {\n    return(jacobsthal_num(n-1) + 2*jacobsthal_num(n-2))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(0)\n  } else if (n == 1) {\n    return(1)\n  } else {\n    return(jacobsthal_num(n-1) + 2*jacobsthal_num(n-2))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(0)\n  } else if (n == 1) {\n    return(1)\n  } else {\n    return(jacobsthal_num(n-1) + 2*jacobsthal_num(n-2))\n  }\n}\n\njacobsthal_num(10)\n",
    "\n  if (n == 0) {\n    return(0)\n  } else if (n == 1) {\n    return(1)\n  } else {\n    return(jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2))\n  }\n}\n\njacobsthal_num(10)\n",
    "\n  if (n == 0) {\n    return(0)\n  }\n  if (n == 1) {\n    return(1)\n  }\n  return(jacobsthal_num(n-1) + 2*jacobsthal_num(n-2))\n}\n",
    "\n  if (n == 0) {\n    return(0)\n  } else if (n == 1) {\n    return(1)\n  } else {\n    return(jacobsthal_num(n-1) + 2*jacobsthal_num(n-2))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(0)\n  } else if (n == 1) {\n    return(1)\n  } else {\n    return(jacobsthal_num(n-1) + 2*jacobsthal_num(n-2))\n  }\n}\n\njacobsthal_num(10)\n",
    "\n  if (n == 0) {\n    return(0)\n  } else if (n == 1) {\n    return(1)\n  } else {\n    return(jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2))\n  }\n}\njacobsthal_num(10)\n",
    "\n    if (n == 0) {\n        return(0)\n    } else if (n == 1) {\n        return(1)\n    } else {\n        return(jacobsthal_num(n-1) + 2*jacobsthal_num(n-2))\n    }\n}\n\njacobsthal_num(10)\n",
    "\n  if (n == 0) {\n    return(0)\n  } else if (n == 1) {\n    return(1)\n  } else {\n    return(jacobsthal_num(n-1) + 2*jacobsthal_num(n-2))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(0)\n  } else if (n == 1) {\n    return(1)\n  } else {\n    return(jacobsthal_num(n-1) + 2*jacobsthal_num(n-2))\n  }\n}\n",
    "\n  if (n == 0) {\n    return(0)\n  } else if (n == 1) {\n    return(1)\n  } else {\n    return(jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2))\n  }\n}\n\njacobsthal_num(10)\n"
  ]
}
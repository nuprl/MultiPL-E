{
  "name": "mbpp_739_find_Index",
  "language": "r",
  "prompt": "# Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfind_Index <- function(n) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_739_find_Index.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- find_Index\n    if(!identical(candidate(2), 4)){quit('no', 1)}\n    if(!identical(candidate(3), 14)){quit('no', 1)}\n    if(!identical(candidate(4), 45)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  # write your code here\n  # return the index of the triangular number\n  # return -1 if there is no such triangular number\n  i <- 1\n  while(TRUE) {\n    if(nchar(i*(i+1)/2) == n) {\n      return(i)\n    }\n    i <- i + 1\n  }\n  return(-1)\n}\n\nfind_Index(2)\n",
    "\n  i <- 1\n  while(TRUE) {\n    if(nchar(i*(i+1)/2) == n) {\n      return(i)\n    }\n    i <- i + 1\n  }\n}\nfind_Index(3)\n",
    "\n  # Write your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  # Write your code here\n  x <- 1\n  while(nchar(x*(x+1)/2) < n) {\n    x <- x + 1\n  }\n  return(x)\n}\n",
    "\n    # Initialize index value \n    index = 1\n  \n    # Initialize triangular number \n    triangle = 1\n  \n    # Initialize number of digits in triangle \n    digits = 1\n  \n    # Loop until the number of digits in triangle \n    # is not equal to n \n    while (digits != n) {\n  \n        # Increment index \n        index = index + 1\n  \n        # Add index to triangle \n        triangle = triangle + index\n  \n        # Count digits in triangle \n        digits = nchar(triangle)\n    }\n  \n    # Return index \n    return (index)\n}\n",
    "\n  # write your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while(TRUE) {\n    if(nchar(i*(i+1)/2) == n) {\n      return(i)\n    }\n    i <- i + 1\n  }\n}\nfind_Index(3)\n",
    "\n  # Initialize index\n  index <- 1\n  # Initialize triangular number\n  tri_num <- 1\n  # Initialize length of triangular number\n  len_tri_num <- 1\n  # Loop until length of triangular number is greater than n\n  while (len_tri_num < n) {\n    # Increment index\n    index <- index + 1\n    # Calculate next triangular number\n    tri_num <- tri_num + index\n    # Calculate length of triangular number\n    len_tri_num <- floor(log10(tri_num)) + 1\n  }\n  # Return index\n  return(index)\n}\n",
    "\n  if (n == 1) {\n    return 1\n  }\n  if (n == 2) {\n    return 3\n  }\n  if (n == 3) {\n    return 6\n  }\n  if (n == 4) {\n    return 6\n  }\n  if (n == 5) {\n    return 28\n  }\n  if (n == 6) {\n    return 36\n  }\n  if (n == 7) {\n    return 45\n  }\n  if (n == 8) {\n    return 55\n  }\n  if (n == 9) {\n    return 66\n  }\n  if (n == 10) {\n    return 78\n  }\n  if (n == 11) {\n    return 91\n  }\n  if (n == 12) {\n    return 105\n  }\n  if (n == 13) {\n    return 120\n  }\n  if (n == 14) {\n    return 136\n  }\n  if (n == 15) {\n    return 153\n  }\n  if (n == 16) {\n    return 171\n  }\n  if (n == 17) {\n    return 190\n  }\n  if (n == 18) {\n    return 210\n  }\n  if (n == 19) {\n    return 231\n  }\n  if (n == 20) {\n    return 253\n  }\n  if (n == 21) {\n    return 276\n  }\n  if (n == 22) {\n    return 300\n  }\n  if (n == 23) {\n    return 325\n  }\n  if (n == 24) {\n    return 351\n  }\n  if (n == 25) {\n    return 378\n  }\n  if (n == 26) {\n    return 406\n  }\n  if (n == 27) {\n    return 435\n  }\n  if (n == 28) {\n    return 465\n  }\n  if (n == 29) {\n    return 496\n  }\n  if (n == 30) {\n    return 528\n  }\n  if (n == 31) {\n    return 561\n  }\n  if (n == 32) {\n    return",
    "\n  # Your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n    # Initialize index of triangular number\n    index = 1\n    # Initialize triangular number\n    tri_num = 1\n    # Initialize number of digits in triangular number\n    num_digits = 1\n    # Loop until number of digits in triangular number is greater than n\n    while (num_digits <= n) {\n        # Increment index by 1\n        index = index + 1\n        # Add index to triangular number\n        tri_num = tri_num + index\n        # Update number of digits in triangular number\n        num_digits = nchar(tri_num)\n    }\n    # Return index\n    return(index)\n}\n",
    "\n  # Write your code here\n  if(n==1){\n    return(1)\n  }\n  else{\n    return(ceiling(log(10^(n-1),10)/log(2,10)+1))\n  }\n}\n\nfind_Index(3)\n",
    "\n  # Write your code here\n  i <- 1\n  while(TRUE) {\n    if(nchar(i*(i+1)/2) == n) {\n      return(i)\n    }\n    i <- i + 1\n  }\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (TRUE) {\n    if (nchar(i * (i + 1) / 2) == n) {\n      return(i)\n    }\n    i <- i + 1\n  }\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  # Write your code here\n  x <- 0\n  while(nchar(x) != n) {\n    x <- x + 1\n    x <- x * (x + 1) / 2\n  }\n  return(x)\n}\n\nfind_Index(3)\n",
    "\n  # Write your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i+1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n    # Your code here\n    if (n == 1) {\n        return(1)\n    }\n    if (n == 2) {\n        return(3)\n    }\n    if (n == 3) {\n        return(6)\n    }\n    if (n == 4) {\n        return(6)\n    }\n    if (n == 5) {\n        return(10)\n    }\n    if (n == 6) {\n        return(15)\n    }\n    if (n == 7) {\n        return(21)\n    }\n    if (n == 8) {\n        return(28)\n    }\n    if (n == 9) {\n        return(36)\n    }\n    if (n == 10) {\n        return(45)\n    }\n    if (n == 11) {\n        return(55)\n    }\n    if (n == 12) {\n        return(66)\n    }\n    if (n == 13) {\n        return(78)\n    }\n    if (n == 14) {\n        return(91)\n    }\n    if (n == 15) {\n        return(105)\n    }\n    if (n == 16) {\n        return(120)\n    }\n    if (n == 17) {\n        return(136)\n    }\n    if (n == 18) {\n        return(153)\n    }\n    if (n == 19) {\n        return(171)\n    }\n    if (n == 20) {\n        return(190)\n    }\n    if (n == 21) {\n        return(210)\n    }\n    if (n == 22) {\n        return(231)\n    }\n    if (n == 23) {\n        return(253)\n    }\n    if (n == 24) {\n        return(276)\n    }\n    if (n == 25) {\n        return(300)\n    }\n    if (n == 26) {\n        return(325)\n    }\n    if (n == 27) {\n        return(351)\n    }\n    if (n == 28) {\n        return(378)\n    }\n",
    "\n  # Write your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  # Write your code here\n  a <- 1\n  b <- 1\n  while(n > 0) {\n    a <- a + 1\n    b <- b + a\n    if(nchar(b) == n) {\n      n <- n - 1\n    }\n  }\n  return(a)\n}\n",
    "\n  # Write your code here\n  if (n == 1) {\n    return(1)\n  }\n  else {\n    return(ceiling(log(10^(n-1), base=2)))\n  }\n}\n\nfind_Index(1)\nfind_Index(2)\nfind_Index(3)\nfind_Index(4)\nfind_Index(5)\nfind_Index(6)\nfind_Index(7)\nfind_Index(8)\nfind_Index(9)\nfind_Index(10)\nfind_Index(11)\nfind_Index(12)\nfind_Index(13)\nfind_Index(14)\nfind_Index(15)\nfind_Index(16)\nfind_Index(17)\nfind_Index(18)\nfind_Index(19)\nfind_Index(20)\nfind_Index(21)\nfind_Index(22)\nfind_Index(23)\nfind_Index(24)\nfind_Index(25)\nfind_Index(26)\nfind_Index(27)\nfind_Index(28)\nfind_Index(29)\nfind_Index(30)\nfind_Index(31)\nfind_Index(32)\nfind_Index(33)\nfind_Index(34)\nfind_Index(35)\nfind_Index(36)\nfind_Index(37)\nfind_Index(38)\nfind_Index(39)\nfind_Index(40)\nfind_Index(41)\nfind_Index(42)\nfind_Index(43)\nfind_Index(44)\nfind_Index(45)\nfind_Index(46)\nfind_Index(47)\nfind_Index(48)\nfind_Index(49)\nfind_Index(50)\nfind_Index(51)\nfind_Index(52)\nfind_Index(53)\nfind_Index(54)\nfind_Index(55)\nfind_Index(56)\nfind_Index(57)\nfind_Index(58)\nfind_Index(59)\nfind_Index(60)\nfind_Index(61)\nfind_Index(62)\nfind_Index(63)\nfind_Index(64)\nfind_Index(65)\n",
    "\n  # Write your code here\n  i = 1\n  while(TRUE){\n    if(nchar(i*(i+1)/2) == n){\n      return(i)\n    }\n    i = i + 1\n  }\n}\n\nfind_Index(3)\n",
    "\n  # Write your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n){\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  # initialize index and triangular number\n  index <- 1\n  triangular_number <- 1\n  # loop until n-digit triangular number is found\n  while (nchar(triangular_number) < n) {\n    index <- index + 1\n    triangular_number <- triangular_number + index\n  }\n  return(index)\n}\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i * (i + 1) / 2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  # Initialize index and triangular number\n  index = 1\n  triangularNumber = 1\n  # Calculate triangular number\n  while (nchar(triangularNumber) < n) {\n    index = index + 1\n    triangularNumber = triangularNumber + index\n  }\n  return(index)\n}\n",
    "\n  # Write your code here\n  a <- 1\n  b <- 1\n  while(nchar(a) < n) {\n    a <- a + b\n    b <- b + 1\n  }\n  if(nchar(a) == n) {\n    return(b)\n  }\n  else {\n    return(0)\n  }\n}\n\nfind_Index(3)\n",
    "\n    # Your code here\n    i <- 1\n    while(nchar(i*(i+1)/2) < n) {\n        i <- i + 1\n    }\n    return(i)\n}\nfind_Index(3)\n",
    "\n    # Your code here\n    i <- 1\n    while(nchar(i*(i+1)/2) < n) {\n        i <- i + 1\n    }\n    return(i)\n}\nfind_Index(3)\n",
    "\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n",
    "\n  i <- 1\n  while(TRUE) {\n    if(nchar(i*(i+1)/2) == n) {\n      return(i)\n    }\n    i <- i+1\n  }\n}\n\nfind_Index(3)\n",
    "\n  # Write your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n",
    "\n  # Write your code here\n  i <- 1\n  while(nchar(i*(i+1)/2)<n){\n    i <- i+1\n  }\n  return(i)\n}\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  # Your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\nfind_Index(3)\n",
    "\n  i <- 1\n  while (n > 0) {\n    n <- n - floor(log10(i)) - 1\n    i <- i + 1\n  }\n  return(i - 1)\n}\n\nfind_Index(3)\n",
    "\n    # Initialize index\n    index = 1\n    # Initialize triangular number\n    tri_num = 1\n    # Initialize count of digits in tri_num\n    digits = 1\n    # Loop until digits in tri_num becomes n\n    while (digits < n) {\n        # Increment index\n        index = index + 1\n        # Add index to tri_num\n        tri_num = tri_num + index\n        # Count digits in tri_num\n        digits = nchar(tri_num)\n    }\n    return(index)\n}\n",
    "\n  i <- 1\n  while (TRUE) {\n    if (nchar(i*(i+1)/2) == n) {\n      return(i)\n    }\n    i <- i + 1\n  }\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(4)\n",
    "\n  if (n == 1) {\n    return 1\n  }\n  if (n == 2) {\n    return 3\n  }\n  if (n == 3) {\n    return 6\n  }\n  if (n == 4) {\n    return 6\n  }\n  if (n == 5) {\n    return 28\n  }\n  if (n == 6) {\n    return 36\n  }\n  if (n == 7) {\n    return 45\n  }\n  if (n == 8) {\n    return 55\n  }\n  if (n == 9) {\n    return 66\n  }\n  if (n == 10) {\n    return 78\n  }\n  if (n == 11) {\n    return 91\n  }\n  if (n == 12) {\n    return 105\n  }\n  if (n == 13) {\n    return 120\n  }\n  if (n == 14) {\n    return 136\n  }\n  if (n == 15) {\n    return 153\n  }\n  if (n == 16) {\n    return 171\n  }\n  if (n == 17) {\n    return 190\n  }\n  if (n == 18) {\n    return 210\n  }\n  if (n == 19) {\n    return 231\n  }\n  if (n == 20) {\n    return 253\n  }\n  if (n == 21) {\n    return 276\n  }\n  if (n == 22) {\n    return 300\n  }\n  if (n == 23) {\n    return 325\n  }\n  if (n == 24) {\n    return 351\n  }\n  if (n == 25) {\n    return 378\n  }\n  if (n == 26) {\n    return 406\n  }\n  if (n == 27) {\n    return 435\n  }\n  if (n == 28) {\n    return 465\n  }\n  if (n == 29) {\n    return 496\n  }\n  if (n == 30) {\n    return 528\n  }\n  if (n == 31) {\n    return 561\n  }\n  if (n == 32) {\n    return",
    "\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  # Write your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i+1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i*(i+1)/2) < n) {\n    i <- i+1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  if (n == 1) {\n    return 1\n  }\n  if (n == 2) {\n    return 3\n  }\n  if (n == 3) {\n    return 6\n  }\n  if (n == 4) {\n    return 6\n  }\n  if (n == 5) {\n    return 28\n  }\n  if (n == 6) {\n    return 28\n  }\n  if (n == 7) {\n    return 36\n  }\n  if (n == 8) {\n    return 36\n  }\n  if (n == 9) {\n    return 45\n  }\n  if (n == 10) {\n    return 45\n  }\n  if (n == 11) {\n    return 55\n  }\n  if (n == 12) {\n    return 55\n  }\n  if (n == 13) {\n    return 66\n  }\n  if (n == 14) {\n    return 66\n  }\n  if (n == 15) {\n    return 78\n  }\n  if (n == 16) {\n    return 78\n  }\n  if (n == 17) {\n    return 91\n  }\n  if (n == 18) {\n    return 91\n  }\n  if (n == 19) {\n    return 105\n  }\n  if (n == 20) {\n    return 105\n  }\n  if (n == 21) {\n    return 120\n  }\n  if (n == 22) {\n    return 120\n  }\n  if (n == 23) {\n    return 136\n  }\n  if (n == 24) {\n    return 136\n  }\n  if (n == 25) {\n    return 153\n  }\n  if (n == 26) {\n    return 153\n  }\n  if (n == 27) {\n    return 171\n  }\n  if (n == 28) {\n    return 171\n  }\n  if (n == 29) {\n    return 190\n  }\n  if (n == 30) {\n    return 190\n  }\n  if (n == 31) {\n    return 210\n  }\n  if (n == 32) {\n    return 210\n ",
    "\n  if (n==1) {\n    return(1)\n  }\n  else {\n    return(ceiling(log(10^n-1)/log(10))+1)\n  }\n}\n",
    "\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i*(i+1)/2) < n) {\n    i <- i+1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i * (i + 1) / 2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  # Write your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n    # Initialize index of triangular number\n    index = 1\n    # Initialize first triangular number\n    triangularNumber = 1\n    # Initialize count of digits in triangular number\n    count = 1\n    # Run loop till n-1 triangular numbers are found\n    while (count < n) {\n        # Increment index by 1\n        index = index + 1\n        # Add index to triangular number\n        triangularNumber = triangularNumber + index\n        # Increment count by number of digits in triangular number\n        count = nchar(triangularNumber)\n    }\n    # Return index of triangular number\n    return (index)\n}\n",
    "\n  if (n == 1) {\n    return 1\n  }\n  else {\n    return (ceiling(sqrt(2 * 10^n - 1)) - 1)\n  }\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n    # Your code here\n    i = 1\n    while(nchar(i*(i+1)/2) < n) {\n        i = i + 1\n    }\n    return(i)\n}\n\nfind_Index(2)\n",
    "\n  # Initialize index and triangular number\n  index <- 1\n  triangular_number <- 1\n  # Increment index until triangular number has n digits\n  while (nchar(triangular_number) < n) {\n    index <- index + 1\n    triangular_number <- triangular_number + index\n  }\n  return(index)\n}\n",
    "\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (n > 0) {\n    n <- n - log10(i)\n    i <- i + 1\n  }\n  return(i - 2)\n}\nfind_Index(3)\n",
    "\n  i <- 1\n  while(nchar(i*(i+1)/2)<n) {\n    i <- i+1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while(TRUE) {\n    if(nchar(i*(i+1)/2) == n) {\n      return(i)\n    }\n    i <- i + 1\n  }\n}\n\nfind_Index(2)\nfind_Index(3)\nfind_Index(4)\nfind_Index(5)\nfind_Index(6)\nfind_Index(7)\nfind_Index(8)\nfind_Index(9)\n",
    "\n  # Write your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  if (n == 1) {\n    return 1\n  }\n  if (n == 2) {\n    return 3\n  }\n  if (n == 3) {\n    return 6\n  }\n  if (n == 4) {\n    return 6\n  }\n  if (n == 5) {\n    return 28\n  }\n  if (n == 6) {\n    return 28\n  }\n  if (n == 7) {\n    return 36\n  }\n  if (n == 8) {\n    return 36\n  }\n  if (n == 9) {\n    return 45\n  }\n  if (n == 10) {\n    return 45\n  }\n  if (n == 11) {\n    return 55\n  }\n  if (n == 12) {\n    return 55\n  }\n  if (n == 13) {\n    return 66\n  }\n  if (n == 14) {\n    return 66\n  }\n  if (n == 15) {\n    return 78\n  }\n  if (n == 16) {\n    return 78\n  }\n  if (n == 17) {\n    return 91\n  }\n  if (n == 18) {\n    return 91\n  }\n  if (n == 19) {\n    return 105\n  }\n  if (n == 20) {\n    return 105\n  }\n  if (n == 21) {\n    return 120\n  }\n  if (n == 22) {\n    return 120\n  }\n  if (n == 23) {\n    return 136\n  }\n  if (n == 24) {\n    return 136\n  }\n  if (n == 25) {\n    return 153\n  }\n  if (n == 26) {\n    return 153\n  }\n  if (n == 27) {\n    return 171\n  }\n  if (n == 28) {\n    return 171\n  }\n  if (n == 29) {\n    return 190\n  }\n  if (n == 30) {\n    return 190\n  }\n  if (n == 31) {\n    return 210\n  }\n  if (n == 32) {\n    return 210\n ",
    "\n  x <- 1\n  while(nchar(x*(x+1)/2) < n) {\n    x <- x + 1\n  }\n  return(x)\n}\n\nfind_Index(3)\n",
    "\n  if (n == 1) {\n    return 1\n  }\n  if (n == 2) {\n    return 3\n  }\n  if (n == 3) {\n    return 6\n  }\n  if (n == 4) {\n    return 6\n  }\n  if (n == 5) {\n    return 28\n  }\n  if (n == 6) {\n    return 36\n  }\n  if (n == 7) {\n    return 45\n  }\n  if (n == 8) {\n    return 55\n  }\n  if (n == 9) {\n    return 66\n  }\n  if (n == 10) {\n    return 78\n  }\n  if (n == 11) {\n    return 91\n  }\n  if (n == 12) {\n    return 105\n  }\n  if (n == 13) {\n    return 120\n  }\n  if (n == 14) {\n    return 136\n  }\n  if (n == 15) {\n    return 153\n  }\n  if (n == 16) {\n    return 171\n  }\n  if (n == 17) {\n    return 190\n  }\n  if (n == 18) {\n    return 210\n  }\n  if (n == 19) {\n    return 231\n  }\n  if (n == 20) {\n    return 253\n  }\n  if (n == 21) {\n    return 276\n  }\n  if (n == 22) {\n    return 300\n  }\n  if (n == 23) {\n    return 325\n  }\n  if (n == 24) {\n    return 351\n  }\n  if (n == 25) {\n    return 378\n  }\n  if (n == 26) {\n    return 406\n  }\n  if (n == 27) {\n    return 435\n  }\n  if (n == 28) {\n    return 465\n  }\n  if (n == 29) {\n    return 496\n  }\n  if (n == 30) {\n    return 528\n  }\n  if (n == 31) {\n    return 561\n  }\n  if (n == 32) {\n    return",
    "\n    i <- 1\n    while (nchar(i*(i+1)/2) < n) {\n        i <- i + 1\n    }\n    return(i)\n}\n\nfind_Index(3)\n",
    "\n    # Write your code here\n    i <- 1\n    while(TRUE) {\n        if(nchar(i*(i+1)/2) == n) {\n            return(i)\n        }\n        i <- i + 1\n    }\n}\n\nfind_Index(3)\n",
    "\n  if (n == 1) {\n    return 1\n  }\n  else {\n    return (ceiling(log(10^n - 1) / log(10)) + 1)\n  }\n}\n",
    "\n  i <- 1\n  while(TRUE) {\n    if(nchar(i*(i+1)/2) == n) {\n      return(i)\n    }\n    i <- i + 1\n  }\n}\n\nfind_Index(3)\n",
    "\n  if (n < 0) {\n    return -1\n  }\n  if (n == 1) {\n    return 1\n  }\n  # Find the smallest triangular number with n digits.\n  # The nth triangular number is given by n*(n+1)/2.\n  # We find the smallest number with n digits by starting from n and\n  # incrementing it until we find the first triangular number with n digits.\n  # We know that the first triangular number with n digits will be greater\n  # than 10^(n-1) and less than 10^n.\n  i <- n\n  while (TRUE) {\n    # Find the triangular number for i.\n    t = i * (i + 1) / 2\n    # Check if the number of digits in t is n.\n    if (t >= 10^(n-1) && t < 10^n) {\n      return i\n    }\n    i <- i + 1\n  }\n}\n",
    "\n  i <- 1\n  while (nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n    # Initialize index of triangular number\n    index = 1\n    # Initialize triangular number\n    triangular_number = 1\n    # Initialize count of digits in triangular number\n    count = 1\n    # Loop until number of digits in triangular number is n\n    while (count != n) {\n        # Increment index by 1\n        index = index + 1\n        # Calculate triangular number\n        triangular_number = triangular_number + index\n        # Calculate number of digits in triangular number\n        count = nchar(triangular_number)\n    }\n    # Return index\n    return(index)\n}\n",
    "\n  # Write your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n",
    "\n  i <- 1\n  while (nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n    # Initialize index\n    index <- 1\n    # Initialize triangular number\n    tri_num <- 1\n    # Initialize count of digits\n    count <- 1\n    # Loop until count of digits is n\n    while (count < n) {\n        # Increment index\n        index <- index + 1\n        # Add index to triangular number\n        tri_num <- tri_num + index\n        # Update count of digits\n        count <- nchar(tri_num)\n    }\n    return(index)\n}\n",
    "\n    # Write your code here\n    i <- 1\n    while(nchar(i*(i+1)/2) < n) {\n        i <- i + 1\n    }\n    return(i)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (TRUE) {\n    if (nchar(i * (i + 1) / 2) == n) {\n      return(i)\n    }\n    i <- i + 1\n  }\n}\n\nfind_Index(3)\n",
    "\n  # Write your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n    i <- 1\n    while(nchar(i*(i+1)/2) < n) {\n        i <- i + 1\n    }\n    return(i)\n}\nfind_Index(3)\n",
    "\n  # Your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i = i + 1\n  }\n  return(i)\n}\nfind_Index(3)\n",
    "\n  i <- 1\n  while (TRUE) {\n    if (nchar(i * (i + 1) / 2) == n) {\n      return(i)\n    }\n    i <- i + 1\n  }\n}\n\nfind_Index(3)\n",
    "\n  if (n == 1) {\n    return 3\n  }\n  if (n == 2) {\n    return 6\n  }\n  if (n == 3) {\n    return 6\n  }\n  if (n == 4) {\n    return 10\n  }\n  if (n == 5) {\n    return 15\n  }\n  if (n == 6) {\n    return 21\n  }\n  if (n == 7) {\n    return 28\n  }\n  if (n == 8) {\n    return 36\n  }\n  if (n == 9) {\n    return 45\n  }\n  if (n == 10) {\n    return 55\n  }\n  if (n == 11) {\n    return 66\n  }\n  if (n == 12) {\n    return 78\n  }\n  if (n == 13) {\n    return 91\n  }\n  if (n == 14) {\n    return 105\n  }\n  if (n == 15) {\n    return 120\n  }\n  if (n == 16) {\n    return 136\n  }\n  if (n == 17) {\n    return 153\n  }\n  if (n == 18) {\n    return 171\n  }\n  if (n == 19) {\n    return 190\n  }\n  if (n == 20) {\n    return 210\n  }\n  if (n == 21) {\n    return 231\n  }\n  if (n == 22) {\n    return 253\n  }\n  if (n == 23) {\n    return 276\n  }\n  if (n == 24) {\n    return 300\n  }\n  if (n == 25) {\n    return 325\n  }\n  if (n == 26) {\n    return 351\n  }\n  if (n == 27) {\n    return 378\n  }\n  if (n == 28) {\n    return 406\n  }\n  if (n == 29) {\n    return 435\n  }\n  if (n == 30) {\n    return 465\n  }\n  if (n == 31) {\n    return 496\n  }\n  if (n == 32) {\n    return 528",
    "\n  if (n <= 0) {\n    return -1\n  }\n  if (n == 1) {\n    return 1\n  }\n  if (n == 2) {\n    return 3\n  }\n  if (n == 3) {\n    return 6\n  }\n  if (n == 4) {\n    return 6\n  }\n  if (n == 5) {\n    return 28\n  }\n  if (n == 6) {\n    return 36\n  }\n  if (n == 7) {\n    return 45\n  }\n  if (n == 8) {\n    return 55\n  }\n  if (n == 9) {\n    return 66\n  }\n  if (n == 10) {\n    return 78\n  }\n  if (n == 11) {\n    return 91\n  }\n  if (n == 12) {\n    return 105\n  }\n  if (n == 13) {\n    return 120\n  }\n  if (n == 14) {\n    return 136\n  }\n  if (n == 15) {\n    return 153\n  }\n  if (n == 16) {\n    return 171\n  }\n  if (n == 17) {\n    return 190\n  }\n  if (n == 18) {\n    return 210\n  }\n  if (n == 19) {\n    return 231\n  }\n  if (n == 20) {\n    return 253\n  }\n  if (n == 21) {\n    return 276\n  }\n  if (n == 22) {\n    return 300\n  }\n  if (n == 23) {\n    return 325\n  }\n  if (n == 24) {\n    return 351\n  }\n  if (n == 25) {\n    return 378\n  }\n  if (n == 26) {\n    return 406\n  }\n  if (n == 27) {\n    return 435\n  }\n  if (n == 28) {\n    return 465\n  }\n  if (n == 29) {\n    return 496\n  }\n  if (n == 30) {\n    return 528\n  }\n  if (n == 31) {\n    return",
    "\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i+1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  if (n == 1) {\n    return 1\n  }\n  if (n == 2) {\n    return 3\n  }\n  if (n == 3) {\n    return 6\n  }\n  if (n == 4) {\n    return 6\n  }\n  if (n == 5) {\n    return 28\n  }\n  if (n == 6) {\n    return 36\n  }\n  if (n == 7) {\n    return 45\n  }\n  if (n == 8) {\n    return 55\n  }\n  if (n == 9) {\n    return 66\n  }\n  if (n == 10) {\n    return 78\n  }\n  if (n == 11) {\n    return 91\n  }\n  if (n == 12) {\n    return 105\n  }\n  if (n == 13) {\n    return 120\n  }\n  if (n == 14) {\n    return 136\n  }\n  if (n == 15) {\n    return 153\n  }\n  if (n == 16) {\n    return 171\n  }\n  if (n == 17) {\n    return 190\n  }\n  if (n == 18) {\n    return 210\n  }\n  if (n == 19) {\n    return 231\n  }\n  if (n == 20) {\n    return 253\n  }\n  if (n == 21) {\n    return 276\n  }\n  if (n == 22) {\n    return 300\n  }\n  if (n == 23) {\n    return 325\n  }\n  if (n == 24) {\n    return 351\n  }\n  if (n == 25) {\n    return 378\n  }\n  if (n == 26) {\n    return 406\n  }\n  if (n == 27) {\n    return 435\n  }\n  if (n == 28) {\n    return 465\n  }\n  if (n == 29) {\n    return 496\n  }\n  if (n == 30) {\n    return 528\n  }\n  if (n == 31) {\n    return 561\n  }\n  if (n == 32) {\n    return",
    "\n  # Write your code here\n  i = 1\n  while(TRUE) {\n    if(nchar(i*(i+1)/2) == n) {\n      return(i)\n    }\n    i = i + 1\n  }\n}\n",
    "\n    # Your code goes here\n    i=1\n    while(TRUE){\n        if(nchar(i*(i+1)/2)==n){\n            return(i)\n        }\n        i=i+1\n    }\n}\nfind_Index(3)\n",
    "\n  i <- 1\n  while(TRUE) {\n    if(nchar(i*(i+1)/2) == n) {\n      return(i)\n    }\n    i <- i + 1\n  }\n}\nfind_Index(2)\n",
    "\n    # write your code here\n    if (n == 1) {\n        return 1\n    }\n    if (n == 2) {\n        return 3\n    }\n    if (n == 3) {\n        return 6\n    }\n    if (n == 4) {\n        return 6\n    }\n    if (n == 5) {\n        return 10\n    }\n    if (n == 6) {\n        return 15\n    }\n    if (n == 7) {\n        return 21\n    }\n    if (n == 8) {\n        return 28\n    }\n    if (n == 9) {\n        return 36\n    }\n    if (n == 10) {\n        return 45\n    }\n    if (n == 11) {\n        return 55\n    }\n    if (n == 12) {\n        return 66\n    }\n    if (n == 13) {\n        return 78\n    }\n    if (n == 14) {\n        return 91\n    }\n    if (n == 15) {\n        return 105\n    }\n    if (n == 16) {\n        return 120\n    }\n    if (n == 17) {\n        return 136\n    }\n    if (n == 18) {\n        return 153\n    }\n    if (n == 19) {\n        return 171\n    }\n    if (n == 20) {\n        return 190\n    }\n    if (n == 21) {\n        return 210\n    }\n    if (n == 22) {\n        return 231\n    }\n    if (n == 23) {\n        return 253\n    }\n    if (n == 24) {\n        return 276\n    }\n    if (n == 25) {\n        return 300\n    }\n    if (n == 26) {\n        return 325\n    }\n    if (n == 27) {\n        return 351\n    }\n    if (n == 28) {\n        return 378\n    }\n    if (n == 29) {\n        return 406\n    }\n    if (n == 30) {\n        return 435\n    }\n    if (n == 31) {\n        return 465\n    }\n    if (n == 32)",
    "\n  if (n == 1) {\n    return 1\n  }\n  if (n == 2) {\n    return 3\n  }\n  if (n == 3) {\n    return 6\n  }\n  if (n == 4) {\n    return 6\n  }\n  if (n == 5) {\n    return 28\n  }\n  if (n == 6) {\n    return 36\n  }\n  if (n == 7) {\n    return 45\n  }\n  if (n == 8) {\n    return 55\n  }\n  if (n == 9) {\n    return 66\n  }\n  if (n == 10) {\n    return 78\n  }\n  if (n == 11) {\n    return 91\n  }\n  if (n == 12) {\n    return 105\n  }\n  if (n == 13) {\n    return 120\n  }\n  if (n == 14) {\n    return 136\n  }\n  if (n == 15) {\n    return 153\n  }\n  if (n == 16) {\n    return 171\n  }\n  if (n == 17) {\n    return 190\n  }\n  if (n == 18) {\n    return 210\n  }\n  if (n == 19) {\n    return 231\n  }\n  if (n == 20) {\n    return 253\n  }\n  if (n == 21) {\n    return 276\n  }\n  if (n == 22) {\n    return 300\n  }\n  if (n == 23) {\n    return 325\n  }\n  if (n == 24) {\n    return 351\n  }\n  if (n == 25) {\n    return 378\n  }\n  if (n == 26) {\n    return 406\n  }\n  if (n == 27) {\n    return 435\n  }\n  if (n == 28) {\n    return 465\n  }\n  if (n == 29) {\n    return 496\n  }\n  if (n == 30) {\n    return 528\n  }\n  if (n == 31) {\n    return 561\n  }\n  if (n == 32) {\n    return",
    "\n  # Write your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  if (n == 1) {\n    return 1\n  }\n  else {\n    return (ceiling(log10(sqrt(2 * 10^n * (10^n - 1)))) + 1)\n  }\n}\n",
    "\n    # Your code here\n    i <- 1\n    while(nchar(i*(i+1)/2) < n){\n        i <- i + 1\n    }\n    return(i)\n}\nfind_Index(3)\n",
    "\n  i <- 1\n  while(TRUE) {\n    if(nchar(i*(i+1)/2) == n) {\n      return(i)\n    }\n    i <- i + 1\n  }\n}\n\nfind_Index(3)\n",
    "\n  # Write your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  if (n == 1) {\n    return 1\n  }\n  if (n == 2) {\n    return 3\n  }\n  if (n == 3) {\n    return 6\n  }\n  if (n == 4) {\n    return 6\n  }\n  if (n == 5) {\n    return 28\n  }\n  if (n == 6) {\n    return 36\n  }\n  if (n == 7) {\n    return 45\n  }\n  if (n == 8) {\n    return 55\n  }\n  if (n == 9) {\n    return 66\n  }\n  if (n == 10) {\n    return 78\n  }\n  if (n == 11) {\n    return 91\n  }\n  if (n == 12) {\n    return 105\n  }\n  if (n == 13) {\n    return 120\n  }\n  if (n == 14) {\n    return 136\n  }\n  if (n == 15) {\n    return 153\n  }\n  if (n == 16) {\n    return 171\n  }\n  if (n == 17) {\n    return 190\n  }\n  if (n == 18) {\n    return 210\n  }\n  if (n == 19) {\n    return 231\n  }\n  if (n == 20) {\n    return 253\n  }\n  if (n == 21) {\n    return 276\n  }\n  if (n == 22) {\n    return 300\n  }\n  if (n == 23) {\n    return 325\n  }\n  if (n == 24) {\n    return 351\n  }\n  if (n == 25) {\n    return 378\n  }\n  if (n == 26) {\n    return 406\n  }\n  if (n == 27) {\n    return 435\n  }\n  if (n == 28) {\n    return 465\n  }\n  if (n == 29) {\n    return 496\n  }\n  if (n == 30) {\n    return 528\n  }\n  if (n == 31) {\n    return 561\n  }\n  if (n == 32) {\n    return",
    "\n    # Initialize index\n    index = 1\n    # Initialize triangular number\n    tri_num = 1\n    # Initialize count of digits\n    count = 1\n    # Loop until count of digits is equal to n\n    while (count != n) {\n        # Increment index by 1\n        index = index + 1\n        # Add index to tri_num\n        tri_num = tri_num + index\n        # Count digits in tri_num\n        count = nchar(tri_num)\n    }\n    # Return index\n    return (index)\n}\n",
    "\n  # Your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\nfind_Index(3)\n",
    "\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i+1\n  }\n  return(i)\n}\nfind_Index(3)\n",
    "\n    # Your code here\n    i = 1\n    while(TRUE) {\n        if(nchar(i*(i+1)/2) == n) {\n            return(i)\n        }\n        i = i + 1\n    }\n}\nfind_Index(3)\n",
    "\n  if (n < 1) \n    return(0)\n  else {\n    i <- 1\n    while (nchar(i * (i + 1) / 2) < n) {\n      i <- i + 1\n    }\n    return(i)\n  }\n}\n\nfind_Index(3)\n",
    "\n    i <- 1\n    while(TRUE) {\n        if(nchar(i*(i+1)/2) == n) {\n            return(i)\n        }\n        i <- i+1\n    }\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i * (i + 1) / 2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  if (n == 1) {\n    return 1\n  }\n  else {\n    return (1 + find_Index(n - 1) + n - 1)\n  }\n}\n",
    "\n  i <- 1\n  t <- 0\n  while (nchar(t) < n) {\n    t <- t + i\n    i <- i + 1\n  }\n  return(i - 1)\n}\n\nfind_Index(3)\n",
    "\n    # Your code here\n    i = 1\n    while(nchar(i*(i+1)/2) < n) {\n        i = i + 1\n    }\n    return(i)\n}\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i * (i + 1) / 2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\nfind_Index(3)\n",
    "\n  # Your code here\n  i=1\n  while(nchar(i*(i+1)/2)<n){\n    i=i+1\n  }\n  return(i)\n}\nfind_Index(3)\n",
    "\n  # Write your code here\n  i <- 1\n  while(TRUE) {\n    if(nchar(i*(i+1)/2) == n) {\n      return(i)\n    }\n    i <- i + 1\n  }\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  if (n < 1) {\n    return(-1)\n  }\n  if (n == 1) {\n    return(1)\n  }\n  # Initialize index\n  index <- 1\n  # Initialize triangular number\n  tri_num <- 1\n  # Find the number of digits in tri_num\n  digits <- 1\n  while (digits < n) {\n    index <- index + 1\n    tri_num <- tri_num + index\n    digits <- nchar(tri_num)\n  }\n  return(index)\n}\n",
    "\n  i <- 1\n  while (nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i * (i + 1) / 2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  if (n == 1) {\n    return 1\n  }\n  else {\n    return (ceiling(log10(sqrt(2 * 10^n * (10^n - 1)))) + 1)\n  }\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while(TRUE) {\n    if(nchar(i*(i+1)/2) == n) {\n      return(i)\n    }\n    i <- i + 1\n  }\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  if (n < 0) {\n    return -1\n  }\n  if (n == 1) {\n    return 1\n  }\n  x <- 1\n  while (n > 0) {\n    x <- x + 1\n    n <- n - floor(log10(x)) - 1\n  }\n  return x\n}\n",
    "\n    # initialize index\n    index = 1\n    # initialize triangular number\n    tri_num = 1\n    # initialize number of digits\n    num_digits = 1\n    # loop until number of digits is greater than n\n    while (num_digits <= n) {\n        # increment index\n        index = index + 1\n        # update triangular number\n        tri_num = tri_num + index\n        # update number of digits\n        num_digits = nchar(tri_num)\n    }\n    return(index)\n}\n",
    "\n  i <- 1\n  while(n > 0) {\n    n <- n - floor(log10(i)) - 1\n    i <- i + 1\n  }\n  return(i - 1)\n}\n",
    "\n  # Write your code here\n  i = 1\n  while(nchar(i*(i+1)/2) < n){\n    i = i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i * (i + 1) / 2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n    # initialize the first triangular number\n    tri_num <- 0\n    # initialize the index\n    index <- 0\n    # loop until the number of digits in the triangular number is n\n    while (nchar(tri_num) < n) {\n        # increment the index\n        index <- index + 1\n        # add the index to the triangular number\n        tri_num <- tri_num + index\n    }\n    # return the index\n    return(index)\n}\n",
    "\n  # Write your code here\n  # Return the index of the triangular number\n  # Return -1 if no such number exists\n  i <- 1\n  while(nchar(i*(i+1)/2)<n){\n    i <- i+1\n  }\n  if(nchar(i*(i+1)/2)==n){\n    return(i)\n  }else{\n    return(-1)\n  }\n}\n\nfind_Index(2)\n",
    "\n  i <- 1\n  while (TRUE) {\n    if (nchar(i * (i + 1) / 2) == n) {\n      break\n    }\n    i <- i + 1\n  }\n  return(i)\n}\n",
    "\n  # Initialize index of triangular number\n  index = 1\n  # Initialize triangular number\n  tri_num = 1\n  # Initialize count of digits in triangular number\n  count = 0\n  # Loop until count of digits in triangular number is n\n  while(count < n) {\n    # Increment index\n    index = index + 1\n    # Add index to triangular number\n    tri_num = tri_num + index\n    # Count digits in triangular number\n    count = nchar(tri_num)\n  }\n  # Return index of triangular number\n  return(index)\n}\n",
    "\n  # Write your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  # Write your code here\n  i <- 1\n  while(nchar(triangle(i)) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  # Write your code here\n  if(n==1)\n    return(1)\n  else\n    return(find_Index(n-1)+1)\n}\n",
    "\n  i <- 1\n  while (nchar(i * (i + 1) / 2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\nfind_Index(3)\n",
    "\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\nfind_Index(3)\n",
    "\n  # Write your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while(TRUE) {\n    if(nchar(i*(i+1)/2) == n) {\n      return(i)\n    }\n    i <- i + 1\n  }\n}\n\nfind_Index(3)\n",
    "\n  if(n == 1) {\n    return(1)\n  }\n  else {\n    return(find_Index(n-1) + n)\n  }\n}\n\nfind_Index(3)\n",
    "\n  # Write your code here\n  i = 1\n  while(nchar(i*(i+1)/2) < n) {\n    i = i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  # Write your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  if (n == 1) {\n    return 1\n  }\n  if (n == 2) {\n    return 3\n  }\n  if (n == 3) {\n    return 6\n  }\n  if (n == 4) {\n    return 6\n  }\n  if (n == 5) {\n    return 28\n  }\n  if (n == 6) {\n    return 36\n  }\n  if (n == 7) {\n    return 45\n  }\n  if (n == 8) {\n    return 55\n  }\n  if (n == 9) {\n    return 66\n  }\n  if (n == 10) {\n    return 78\n  }\n  if (n == 11) {\n    return 91\n  }\n  if (n == 12) {\n    return 105\n  }\n  if (n == 13) {\n    return 120\n  }\n  if (n == 14) {\n    return 136\n  }\n  if (n == 15) {\n    return 153\n  }\n  if (n == 16) {\n    return 171\n  }\n  if (n == 17) {\n    return 190\n  }\n  if (n == 18) {\n    return 210\n  }\n  if (n == 19) {\n    return 231\n  }\n  if (n == 20) {\n    return 253\n  }\n  if (n == 21) {\n    return 276\n  }\n  if (n == 22) {\n    return 300\n  }\n  if (n == 23) {\n    return 325\n  }\n  if (n == 24) {\n    return 351\n  }\n  if (n == 25) {\n    return 378\n  }\n  if (n == 26) {\n    return 406\n  }\n  if (n == 27) {\n    return 435\n  }\n  if (n == 28) {\n    return 465\n  }\n  if (n == 29) {\n    return 496\n  }\n  if (n == 30) {\n    return 528\n  }\n  if (n == 31) {\n    return 561\n  }\n  if (n == 32) {\n    return",
    "\n  i <- 1\n  while (TRUE) {\n    if (nchar(i*(i+1)/2) == n) {\n      return(i)\n    }\n    i <- i + 1\n  }\n}\nfind_Index(2)\n",
    "\n  if (n == 1) {\n    return 1\n  }\n  else {\n    return (ceiling(log10(sqrt(8 * n + 1))) - 1)\n  }\n}\n",
    "\n    # Initialize index\n    index = 1\n    # Initialize triangular number\n    triangular_number = 1\n    # Initialize count of digits\n    count_digits = 1\n    # Loop until count of digits is equal to n\n    while (count_digits != n) {\n        # Increment index\n        index = index + 1\n        # Add index to triangular number\n        triangular_number = triangular_number + index\n        # Count digits in triangular number\n        count_digits = nchar(triangular_number)\n    }\n    # Return index\n    return(index)\n}\n",
    "\n  i <- 1\n  while(TRUE) {\n    if(nchar(i*(i+1)/2) == n) {\n      return(i)\n    }\n    i <- i + 1\n  }\n}\n\nfind_Index(3)\n",
    "\n  # Write your code here\n  i <- 1\n  while(TRUE){\n    if(nchar(i*(i+1)/2) == n){\n      return(i)\n    }\n    i <- i+1\n  }\n}\n\nfind_Index(3)\n",
    "\n  # Write your code here\n  i = 1\n  while (nchar(i*(i+1)/2) < n) {\n    i = i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while(length(as.character(triangle_number(i))) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\nfind_Index(2)\n",
    "\n  i <- 1\n  while(n > 0) {\n    n <- n - floor(log10(i)) - 1\n    i <- i + 1\n  }\n  return(i - 2)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while(TRUE) {\n    if(nchar(i*(i+1)/2) == n) {\n      return(i)\n    }\n    i <- i + 1\n  }\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  # initialize the index\n  index <- 1\n  # initialize the triangular number\n  triangular_num <- 1\n  # initialize the number of digits\n  num_digits <- 1\n  # loop until the number of digits is equal to n\n  while (num_digits != n) {\n    # increment the index\n    index <- index + 1\n    # calculate the triangular number\n    triangular_num <- triangular_num + index\n    # calculate the number of digits\n    num_digits <- nchar(triangular_num)\n  }\n  # return the index\n  return(index)\n}\n",
    "\n  i <- 1\n  while (nchar(i * (i + 1) / 2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  # write your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  # Initialize index of triangular number\n  index <- 1\n  # Initialize triangular number\n  tri_num <- 1\n  # Initialize count of digits in triangular number\n  count <- 1\n  \n  # Run loop until n-digit triangular number is found\n  while (count < n) {\n    # Increment index by 1\n    index <- index + 1\n    # Add index to triangular number\n    tri_num <- tri_num + index\n    # Count digits in triangular number\n    count <- nchar(tri_num)\n  }\n  \n  return(index)\n}\n",
    "\n  # Initialize index\n  index = 1\n  # Initialize triangular number\n  tri_num = 1\n  # Initialize count of digits\n  count = 1\n  # Iterate until count of digits is n\n  while (count != n) {\n    # Increment index\n    index = index + 1\n    # Add index to triangular number\n    tri_num = tri_num + index\n    # Count digits in updated triangular number\n    count = nchar(tri_num)\n  }\n  # Return index\n  return(index)\n}\n",
    "\n  # Write your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while(TRUE) {\n    if(nchar(i*(i+1)/2) == n) {\n      return(i)\n    }\n    i <- i + 1\n  }\n}\n\nfind_Index(2)\nfind_Index(3)\nfind_Index(4)\nfind_Index(5)\nfind_Index(6)\nfind_Index(7)\nfind_Index(8)\nfind_Index(9)\nfind_Index(10)\nfind_Index(11)\nfind_Index(12)\nfind_Index(13)\nfind_Index(14)\nfind_Index(15)\nfind_Index(16)\nfind_Index(17)\nfind_Index(18)\nfind_Index(19)\nfind_Index(20)\nfind_Index(21)\nfind_Index(22)\nfind_Index(23)\nfind_Index(24)\nfind_Index(25)\nfind_Index(26)\nfind_Index(27)\nfind_Index(28)\nfind_Index(29)\nfind_Index(30)\nfind_Index(31)\nfind_Index(32)\nfind_Index(33)\nfind_Index(34)\nfind_Index(35)\nfind_Index(36)\nfind_Index(37)\nfind_Index(38)\nfind_Index(39)\nfind_Index(40)\nfind_Index(41)\nfind_Index(42)\nfind_Index(43)\nfind_Index(44)\nfind_Index(45)\nfind_Index(46)\nfind_Index(47)\nfind_Index(48)\nfind_Index(49)\nfind_Index(50)\nfind_Index(51)\nfind_Index(52)\nfind_Index(53)\nfind_Index(54)\nfind_Index(55)\nfind_Index(56)\nfind_Index(57)\nfind_Index(58)\nfind_Index(59)\nfind_Index(60)\nfind_Index(61)\nfind_Index(62)\nfind_Index(63)\nfind_Index(64)\nfind_Index(65)\nfind_Index(66)\n",
    "\n    # Initialize index\n    index = 1\n    # Initialize triangular number\n    tri_num = 1\n    # Initialize number of digits in triangular number\n    num_digits = 1\n    # Loop until number of digits in triangular number is greater than n\n    while (num_digits <= n) {\n        # Increment index\n        index = index + 1\n        # Calculate triangular number\n        tri_num = tri_num + index\n        # Calculate number of digits in triangular number\n        num_digits = nchar(tri_num)\n    }\n    return(index)\n}\n",
    "\n  i <- 1\n  tri <- 0\n  while (nchar(tri) < n) {\n    tri <- tri + i\n    i <- i + 1\n  }\n  return(i - 1)\n}\n\nfind_Index(3)\n",
    "\n  # Write your code here\n  i <- 1\n  j <- 1\n  while (n > 0) {\n    j <- j + i\n    i <- i + 1\n    n <- n - 1\n  }\n  return (i)\n}\n",
    "\n  # Write your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n){\n    i <- i+1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  # Write your code here\n  i <- 1\n  while(TRUE) {\n    if(nchar(i*(i+1)/2) == n) {\n      return(i)\n    }\n    i <- i + 1\n  }\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i * (i + 1) / 2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  if (n < 0) {\n    return -1\n  }\n  if (n == 1) {\n    return 1\n  }\n  if (n == 2) {\n    return 3\n  }\n  if (n == 3) {\n    return 6\n  }\n  if (n == 4) {\n    return 6\n  }\n  if (n == 5) {\n    return 28\n  }\n  if (n == 6) {\n    return 36\n  }\n  if (n == 7) {\n    return 45\n  }\n  if (n == 8) {\n    return 55\n  }\n  if (n == 9) {\n    return 66\n  }\n  if (n == 10) {\n    return 78\n  }\n  if (n == 11) {\n    return 91\n  }\n  if (n == 12) {\n    return 105\n  }\n  if (n == 13) {\n    return 120\n  }\n  if (n == 14) {\n    return 136\n  }\n  if (n == 15) {\n    return 153\n  }\n  if (n == 16) {\n    return 171\n  }\n  if (n == 17) {\n    return 190\n  }\n  if (n == 18) {\n    return 210\n  }\n  if (n == 19) {\n    return 231\n  }\n  if (n == 20) {\n    return 253\n  }\n  if (n == 21) {\n    return 276\n  }\n  if (n == 22) {\n    return 300\n  }\n  if (n == 23) {\n    return 325\n  }\n  if (n == 24) {\n    return 351\n  }\n  if (n == 25) {\n    return 378\n  }\n  if (n == 26) {\n    return 406\n  }\n  if (n == 27) {\n    return 435\n  }\n  if (n == 28) {\n    return 465\n  }\n  if (n == 29) {\n    return 496\n  }\n  if (n == 30) {\n    return 528\n  }\n  if (n == 31) {\n    return",
    "\n  i <- 1\n  while (nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n",
    "\n  if (n == 1) {\n    return 1\n  }\n  if (n == 2) {\n    return 3\n  }\n  if (n == 3) {\n    return 6\n  }\n  if (n == 4) {\n    return 6\n  }\n  if (n == 5) {\n    return 28\n  }\n  if (n == 6) {\n    return 36\n  }\n  if (n == 7) {\n    return 45\n  }\n  if (n == 8) {\n    return 55\n  }\n  if (n == 9) {\n    return 66\n  }\n  if (n == 10) {\n    return 78\n  }\n  if (n == 11) {\n    return 91\n  }\n  if (n == 12) {\n    return 105\n  }\n  if (n == 13) {\n    return 120\n  }\n  if (n == 14) {\n    return 136\n  }\n  if (n == 15) {\n    return 153\n  }\n  if (n == 16) {\n    return 171\n  }\n  if (n == 17) {\n    return 190\n  }\n  if (n == 18) {\n    return 210\n  }\n  if (n == 19) {\n    return 231\n  }\n  if (n == 20) {\n    return 253\n  }\n  if (n == 21) {\n    return 276\n  }\n  if (n == 22) {\n    return 300\n  }\n  if (n == 23) {\n    return 325\n  }\n  if (n == 24) {\n    return 351\n  }\n  if (n == 25) {\n    return 378\n  }\n  if (n == 26) {\n    return 406\n  }\n  if (n == 27) {\n    return 435\n  }\n  if (n == 28) {\n    return 465\n  }\n  if (n == 29) {\n    return 496\n  }\n  if (n == 30) {\n    return 528\n  }\n  if (n == 31) {\n    return 561\n  }\n  if (n == 32) {\n    return",
    "\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i * (i + 1) / 2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n    if (n == 1) {\n        return 1\n    }\n    if (n == 2) {\n        return 3\n    }\n    if (n == 3) {\n        return 6\n    }\n    if (n == 4) {\n        return 6\n    }\n    if (n == 5) {\n        return 28\n    }\n    if (n == 6) {\n        return 36\n    }\n    if (n == 7) {\n        return 45\n    }\n    if (n == 8) {\n        return 55\n    }\n    if (n == 9) {\n        return 66\n    }\n    if (n == 10) {\n        return 78\n    }\n    if (n == 11) {\n        return 91\n    }\n    if (n == 12) {\n        return 105\n    }\n    if (n == 13) {\n        return 120\n    }\n    if (n == 14) {\n        return 136\n    }\n    if (n == 15) {\n        return 153\n    }\n    if (n == 16) {\n        return 171\n    }\n    if (n == 17) {\n        return 190\n    }\n    if (n == 18) {\n        return 210\n    }\n    if (n == 19) {\n        return 231\n    }\n    if (n == 20) {\n        return 253\n    }\n    if (n == 21) {\n        return 276\n    }\n    if (n == 22) {\n        return 300\n    }\n    if (n == 23) {\n        return 325\n    }\n    if (n == 24) {\n        return 351\n    }\n    if (n == 25) {\n        return 378\n    }\n    if (n == 26) {\n        return 406\n    }\n    if (n == 27) {\n        return 435\n    }\n    if (n == 28) {\n        return 465\n    }\n    if (n == 29) {\n        return 496\n    }\n    if (n == 30) {\n        return 528\n    }\n    if (n == 31) {\n        return 561\n    }\n    if (n == 32) {\n        return",
    "\n  i <- 1\n  while (nchar(i * (i + 1) / 2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i*(i+1)/2) < n) {\n    i <- i+1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  # Write your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  if (n == 1) {\n    return 1\n  }\n  else {\n    return (find_Index(n-1) + 1)\n  }\n}\n\nfind_Index(3)\n",
    "\n  if (n == 1) {\n    return 1\n  }\n  if (n == 2) {\n    return 3\n  }\n  if (n == 3) {\n    return 6\n  }\n  if (n == 4) {\n    return 6\n  }\n  if (n == 5) {\n    return 28\n  }\n  if (n == 6) {\n    return 36\n  }\n  if (n == 7) {\n    return 45\n  }\n  if (n == 8) {\n    return 55\n  }\n  if (n == 9) {\n    return 66\n  }\n  if (n == 10) {\n    return 78\n  }\n  if (n == 11) {\n    return 91\n  }\n  if (n == 12) {\n    return 105\n  }\n  if (n == 13) {\n    return 120\n  }\n  if (n == 14) {\n    return 136\n  }\n  if (n == 15) {\n    return 153\n  }\n  if (n == 16) {\n    return 171\n  }\n  if (n == 17) {\n    return 190\n  }\n  if (n == 18) {\n    return 210\n  }\n  if (n == 19) {\n    return 231\n  }\n  if (n == 20) {\n    return 253\n  }\n  if (n == 21) {\n    return 276\n  }\n  if (n == 22) {\n    return 300\n  }\n  if (n == 23) {\n    return 325\n  }\n  if (n == 24) {\n    return 351\n  }\n  if (n == 25) {\n    return 378\n  }\n  if (n == 26) {\n    return 406\n  }\n  if (n == 27) {\n    return 435\n  }\n  if (n == 28) {\n    return 465\n  }\n  if (n == 29) {\n    return 496\n  }\n  if (n == 30) {\n    return 528\n  }\n  if (n == 31) {\n    return 561\n  }\n  if (n == 32) {\n    return",
    "\n    # Write your code here\n    i = 1\n    while(TRUE) {\n        if(nchar(i*(i+1)/2) == n) {\n            return(i)\n        }\n        i = i + 1\n    }\n}\n\nfind_Index(3)\n",
    "\n  # Write your code here\n  x <- 1\n  while(nchar(x*(x+1)/2) < n) {\n    x <- x+1\n  }\n  return(x)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while(TRUE) {\n    if(nchar(i*(i+1)/2) == n) {\n      return(i)\n    }\n    i <- i + 1\n  }\n}\n\nfind_Index(3)\n",
    "\n  # Initialize index and triangular number\n  index <- 1\n  triangular_number <- 0\n  \n  # Find the index\n  while (nchar(triangular_number) < n) {\n    index <- index + 1\n    triangular_number <- triangular_number + index\n  }\n  \n  return(index)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(2)\n",
    "\n  if (n < 1) {\n    return(0)\n  }\n  if (n == 1) {\n    return(1)\n  }\n  x <- 1\n  while (n > 0) {\n    x <- x + 1\n    n <- n - floor(log10(x))\n  }\n  return(x - 1)\n}\n",
    "\n  if (n == 1) {\n    return 1\n  }\n  if (n == 2) {\n    return 3\n  }\n  if (n == 3) {\n    return 6\n  }\n  if (n == 4) {\n    return 6\n  }\n  if (n == 5) {\n    return 10\n  }\n  if (n == 6) {\n    return 15\n  }\n  if (n == 7) {\n    return 21\n  }\n  if (n == 8) {\n    return 28\n  }\n  if (n == 9) {\n    return 36\n  }\n  if (n == 10) {\n    return 45\n  }\n  if (n == 11) {\n    return 55\n  }\n  if (n == 12) {\n    return 66\n  }\n  if (n == 13) {\n    return 78\n  }\n  if (n == 14) {\n    return 91\n  }\n  if (n == 15) {\n    return 105\n  }\n  if (n == 16) {\n    return 120\n  }\n  if (n == 17) {\n    return 136\n  }\n  if (n == 18) {\n    return 153\n  }\n  if (n == 19) {\n    return 171\n  }\n  if (n == 20) {\n    return 190\n  }\n  if (n == 21) {\n    return 210\n  }\n  if (n == 22) {\n    return 231\n  }\n  if (n == 23) {\n    return 253\n  }\n  if (n == 24) {\n    return 276\n  }\n  if (n == 25) {\n    return 300\n  }\n  if (n == 26) {\n    return 325\n  }\n  if (n == 27) {\n    return 351\n  }\n  if (n == 28) {\n    return 378\n  }\n  if (n == 29) {\n    return 406\n  }\n  if (n == 30) {\n    return 435\n  }\n  if (n == 31) {\n    return 465\n  }\n  if (n == 32) {\n    return 496\n",
    "\n  i <- 1\n  while (nchar(i * (i + 1) / 2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(2)\nfind_Index(3)\nfind_Index(4)\nfind_Index(5)\nfind_Index(6)\nfind_Index(7)\nfind_Index(8)\nfind_Index(9)\nfind_Index(10)\nfind_Index(11)\nfind_Index(12)\nfind_Index(13)\nfind_Index(14)\nfind_Index(15)\nfind_Index(16)\nfind_Index(17)\nfind_Index(18)\nfind_Index(19)\nfind_Index(20)\nfind_Index(21)\nfind_Index(22)\nfind_Index(23)\nfind_Index(24)\nfind_Index(25)\nfind_Index(26)\nfind_Index(27)\nfind_Index(28)\nfind_Index(29)\nfind_Index(30)\nfind_Index(31)\nfind_Index(32)\nfind_Index(33)\nfind_Index(34)\nfind_Index(35)\nfind_Index(36)\nfind_Index(37)\nfind_Index(38)\nfind_Index(39)\nfind_Index(40)\nfind_Index(41)\nfind_Index(42)\nfind_Index(43)\nfind_Index(44)\nfind_Index(45)\nfind_Index(46)\nfind_Index(47)\nfind_Index(48)\nfind_Index(49)\nfind_Index(50)\nfind_Index(51)\nfind_Index(52)\nfind_Index(53)\nfind_Index(54)\nfind_Index(55)\nfind_Index(56)\nfind_Index(57)\nfind_Index(58)\nfind_Index(59)\nfind_Index(60)\nfind_Index(61)\nfind_Index(62)\nfind_Index(63)\nfind_Index(64)\nfind_Index(65)\nfind_Index(66)\nfind_Index(67)\nfind_Index",
    "\n  if (n == 1) {\n    return 1\n  }\n  if (n == 2) {\n    return 3\n  }\n  if (n == 3) {\n    return 6\n  }\n  if (n == 4) {\n    return 6\n  }\n  if (n == 5) {\n    return 28\n  }\n  if (n == 6) {\n    return 36\n  }\n  if (n == 7) {\n    return 45\n  }\n  if (n == 8) {\n    return 55\n  }\n  if (n == 9) {\n    return 66\n  }\n  if (n == 10) {\n    return 78\n  }\n  if (n == 11) {\n    return 91\n  }\n  if (n == 12) {\n    return 105\n  }\n  if (n == 13) {\n    return 120\n  }\n  if (n == 14) {\n    return 136\n  }\n  if (n == 15) {\n    return 153\n  }\n  if (n == 16) {\n    return 171\n  }\n  if (n == 17) {\n    return 190\n  }\n  if (n == 18) {\n    return 210\n  }\n  if (n == 19) {\n    return 231\n  }\n  if (n == 20) {\n    return 253\n  }\n  if (n == 21) {\n    return 276\n  }\n  if (n == 22) {\n    return 300\n  }\n  if (n == 23) {\n    return 325\n  }\n  if (n == 24) {\n    return 351\n  }\n  if (n == 25) {\n    return 378\n  }\n  if (n == 26) {\n    return 406\n  }\n  if (n == 27) {\n    return 435\n  }\n  if (n == 28) {\n    return 465\n  }\n  if (n == 29) {\n    return 496\n  }\n  if (n == 30) {\n    return 528\n  }\n  if (n == 31) {\n    return 561\n  }\n  if (n == 32) {\n    return",
    "\n    # Your code here\n    i <- 1\n    while(nchar(triangle(i)) < n) {\n        i <- i + 1\n    }\n    return(i)\n}\n\nfind_Index(2)\n",
    "\n  if (n < 0) {\n    return -1\n  }\n  if (n == 1) {\n    return 1\n  }\n  # find the number of digits in n\n  # using log(n) base 10\n  digits <- floor(log10(n)) + 1\n  # find the largest number with\n  # digits = digits - 1\n  max_num <- 10 ^ (digits - 1) - 1\n  # find the smallest number with\n  # digits = digits - 1\n  min_num <- 10 ^ (digits - 2)\n  # find the sum of digits in max_num\n  # and min_num\n  max_sum <- sum(seq_len(max_num))\n  min_sum <- sum(seq_len(min_num))\n  # find the triangular number\n  # closest to n\n  if (n - max_sum < min_sum - n) {\n    return max_num\n  }\n  else {\n    return min_num\n  }\n}\n",
    "\n  # Initialize index\n  index <- 1\n  # Initialize triangular number\n  tri_num <- 1\n  # Initialize number of digits\n  num_digits <- 1\n  # Loop until number of digits is greater than n\n  while (num_digits <= n) {\n    # Increment index\n    index <- index + 1\n    # Calculate triangular number\n    tri_num <- tri_num + index\n    # Calculate number of digits\n    num_digits <- nchar(tri_num)\n  }\n  return(index)\n}\n\nfind_Index(3)\n",
    "\n    # Write your code here\n    i = 1\n    while(nchar(i*(i+1)/2) < n) {\n        i = i + 1\n    }\n    return(i)\n}\n\nfind_Index(3)\n",
    "\n  # Write your code here\n  i <- 1\n  while(length(as.character(triangular(i))) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (n > 0) {\n    n <- n - length(as.character(i * (i + 1) / 2))\n    i <- i + 1\n  }\n  return(i - 1)\n}\n\nfind_Index(3)\n",
    "\n    # Initialize first triangular number\n    # and index\n    tri_no = 0\n    index = 1\n    # Loop until n-digit triangular number\n    # is found\n    while (n > length(as.character(tri_no))) {\n        tri_no = tri_no + index\n        index = index + 1\n    }\n    # Return index\n    return(index - 1)\n}\n",
    "\n  if (n == 1) {\n    return 1\n  }\n  if (n == 2) {\n    return 3\n  }\n  if (n == 3) {\n    return 6\n  }\n  if (n == 4) {\n    return 6\n  }\n  if (n == 5) {\n    return 28\n  }\n  if (n == 6) {\n    return 28\n  }\n  if (n == 7) {\n    return 36\n  }\n  if (n == 8) {\n    return 36\n  }\n  if (n == 9) {\n    return 45\n  }\n  if (n == 10) {\n    return 45\n  }\n  if (n == 11) {\n    return 55\n  }\n  if (n == 12) {\n    return 55\n  }\n  if (n == 13) {\n    return 66\n  }\n  if (n == 14) {\n    return 66\n  }\n  if (n == 15) {\n    return 78\n  }\n  if (n == 16) {\n    return 78\n  }\n  if (n == 17) {\n    return 91\n  }\n  if (n == 18) {\n    return 91\n  }\n  if (n == 19) {\n    return 105\n  }\n  if (n == 20) {\n    return 105\n  }\n  if (n == 21) {\n    return 120\n  }\n  if (n == 22) {\n    return 120\n  }\n  if (n == 23) {\n    return 136\n  }\n  if (n == 24) {\n    return 136\n  }\n  if (n == 25) {\n    return 153\n  }\n  if (n == 26) {\n    return 153\n  }\n  if (n == 27) {\n    return 171\n  }\n  if (n == 28) {\n    return 171\n  }\n  if (n == 29) {\n    return 190\n  }\n  if (n == 30) {\n    return 190\n  }\n  if (n == 31) {\n    return 210\n  }\n  if (n == 32) {\n    return 210\n ",
    "\n  if (n < 0) {\n    return -1\n  }\n  if (n == 0) {\n    return 0\n  }\n  if (n == 1) {\n    return 1\n  }\n  if (n == 2) {\n    return 3\n  }\n  if (n == 3) {\n    return 6\n  }\n  if (n == 4) {\n    return 6\n  }\n  if (n == 5) {\n    return 28\n  }\n  if (n == 6) {\n    return 36\n  }\n  if (n == 7) {\n    return 45\n  }\n  if (n == 8) {\n    return 55\n  }\n  if (n == 9) {\n    return 66\n  }\n  if (n == 10) {\n    return 78\n  }\n  if (n == 11) {\n    return 91\n  }\n  if (n == 12) {\n    return 105\n  }\n  if (n == 13) {\n    return 120\n  }\n  if (n == 14) {\n    return 136\n  }\n  if (n == 15) {\n    return 153\n  }\n  if (n == 16) {\n    return 171\n  }\n  if (n == 17) {\n    return 190\n  }\n  if (n == 18) {\n    return 210\n  }\n  if (n == 19) {\n    return 231\n  }\n  if (n == 20) {\n    return 253\n  }\n  if (n == 21) {\n    return 276\n  }\n  if (n == 22) {\n    return 300\n  }\n  if (n == 23) {\n    return 325\n  }\n  if (n == 24) {\n    return 351\n  }\n  if (n == 25) {\n    return 378\n  }\n  if (n == 26) {\n    return 406\n  }\n  if (n == 27) {\n    return 435\n  }\n  if (n == 28) {\n    return 465\n  }\n  if (n == 29) {\n    return 496\n  }\n  if (n == 30) {\n    return 5",
    "\n  # Write your code here\n  i <- 1\n  while(nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\n\nfind_Index(3)\n",
    "\n  # initialize the index\n  index = 1\n  # initialize the triangular number\n  triangular_number = 1\n  # find the number of digits in the triangular number\n  digits = nchar(triangular_number)\n  # loop until the number of digits in the triangular number is equal to n\n  while(digits < n) {\n    # increment the index\n    index = index + 1\n    # find the next triangular number\n    triangular_number = triangular_number + index\n    # find the number of digits in the triangular number\n    digits = nchar(triangular_number)\n  }\n  # return the index\n  return(index)\n}\n",
    "\n  # Write your code here\n  x <- 1\n  while(nchar(x*(x+1)/2) < n){\n    x <- x+1\n  }\n  return(x)\n}\n",
    "\n  # Write your code here\n  if(n==1){\n    return(1)\n  }\n  else{\n    return(ceiling(log(10^(n-1),10)/log(3,10)))\n  }\n}\n\nfind_Index(3)\n",
    "\n  i <- 1\n  while (nchar(i*(i+1)/2) < n) {\n    i <- i + 1\n  }\n  return(i)\n}\nfind_Index(3)\n"
  ]
}
{
  "name": "mbpp_753_min_k",
  "language": "r",
  "prompt": "# Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\nmin_k <- function(test_list, K) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_753_min_k.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- min_k\n    if(!identical(candidate(list(list('Manjeet', 10), list('Akshat', 4), list('Akash', 2), list('Nikhil', 8)), 2), list(list('Akash', 2), list('Akshat', 4)))){quit('no', 1)}\n    if(!identical(candidate(list(list('Sanjeev', 11), list('Angat', 5), list('Akash', 3), list('Nepin', 9)), 3), list(list('Akash', 3), list('Angat', 5), list('Nepin', 9)))){quit('no', 1)}\n    if(!identical(candidate(list(list('tanmay', 14), list('Amer', 11), list('Ayesha', 9), list('SKD', 16)), 1), list(list('Ayesha', 9)))){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  # sort the list\n  sorted_list <- sort(test_list, decreasing = FALSE)\n  # return the first K elements\n  return(sorted_list[1:K])\n}\n",
    "\n  # sort the list\n  sorted_list <- sort(test_list, decreasing = FALSE)\n  # return the first K elements\n  return(sorted_list[1:K])\n}\n",
    "\n  # sort the list\n  sorted_list <- sort(test_list)\n  # return the first K elements\n  return(sorted_list[1:K])\n}\n",
    "\n  # sort the list by the first element of each tuple\n  sorted_list <- sort(test_list, decreasing = FALSE, index.return = TRUE)\n  # return the first K elements of the sorted list\n  return(sorted_list$x[1:K])\n}\n",
    "\n  # sort the list in ascending order\n  test_list <- sort(test_list)\n  # print the first K elements\n  print(test_list[1:K])\n}\n",
    "\n  # sort the list\n  sorted_list <- sort(test_list, decreasing = FALSE)\n  # return the first k elements\n  return(sorted_list[1:K])\n}\n",
    "\n  # sort the list\n  sorted_list <- sort(test_list, decreasing = FALSE)\n  # return the first K elements\n  return(sorted_list[1:K])\n}\n",
    "\n  # sort the list\n  sorted_list <- sort(test_list)\n  # return the first K records\n  return(sorted_list[1:K])\n}\n",
    "\n  # sort the list\n  sorted_list <- sort(test_list, decreasing = FALSE)\n  # return the first k elements\n  return(sorted_list[1:K])\n}\n",
    "\n    # sort the list\n    sorted_list <- sort(test_list, decreasing = FALSE)\n    # return the first K elements\n    return(sorted_list[1:K])\n}\n",
    "\n  # Write your code here\n  # Return the sorted list\n  return(sort(test_list, decreasing = FALSE)[1:K])\n}\n",
    "\n  # sort the list\n  sorted_list <- sort(test_list, decreasing = FALSE)\n  # return the first K records\n  return(sorted_list[1:K])\n}\n",
    "\n  # sort the list\n  sorted_list <- sort(test_list, decreasing = FALSE)\n  # return the first K elements\n  return(sorted_list[1:K])\n}\n",
    "\n  # sort the list in ascending order\n  test_list <- sort(test_list)\n  # print the first K elements\n  print(test_list[1:K])\n}\n",
    "\n  # Write your code here\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples\n  # Return the list of tuples",
    "\n  if (K > length(test_list)) {\n    return(\"K is greater than number of records in list\")\n  }\n  test_list <- sort(test_list, decreasing = FALSE)\n  return(test_list[1:K])\n}\n\ntest_list <- list((\"Geeks\", 10), (\"for\", 15), (\"Geeks\", 20))\nK <- 2\nmin_k(test_list, K)\n\ntest_list <- list((\"Geeks\", 10), (\"for\", 15), (\"Geeks\", 20))\nK <- 4\nmin_k(test_list, K)\n\ntest_list <- list((\"Geeks\", 10), (\"for\", 15), (\"Geeks\", 20))\nK <- 0\nmin_k(test_list, K)\n\ntest_list <- list((\"Geeks\", 10), (\"for\", 15), (\"Geeks\", 20))\nK <- -1\nmin_k(test_list, K)\n\ntest_list <- list((\"Geeks\", 10), (\"for\", 15), (\"Geeks\", 20))\nK <- 1\nmin_k(test_list, K)\n\ntest_list <- list((\"Geeks\", 10), (\"for\", 15), (\"Geeks\", 20))\nK <- 3\nmin_k(test_list, K)\n\ntest_list <- list((\"Geeks\", 10), (\"for\", 15), (\"Geeks\", 20))\nK <- 5\nmin_k(test_list, K)\n\ntest_list <- list((\"Geeks\", 10), (\"for\", 15), (\"Geeks\", 20))\nK <- 6\nmin_k(test_list, K)\n\ntest_list <- list((\"Geeks\", 10), (\"for\", 15), (\"Geeks\", 20))\nK <- 7\nmin_k(test_list, K)\n\ntest_list <- list((\"Geeks\", 10), (\"for\", 15), (\"Geeks\", 20))\nK <- 8\nmin_k(test_list, K)\n\ntest_list <- list((\"Geeks\", 10), (\"for\", 15), (\"Geeks\", 20))\nK <- 9\nmin_k(test_list, K)\n\ntest_list <- list((\"G",
    "\n  # sort the list\n  sorted_list <- sort(test_list, decreasing = FALSE)\n  # return the first K elements\n  return(sorted_list[1:K])\n}\n",
    "\n  # sort the list\n  test_list <- sort(test_list, decreasing = FALSE)\n  # return the first K elements\n  return(test_list[1:K])\n}\n",
    "\n  # sort the list\n  sorted_list <- sort(test_list, decreasing = FALSE)\n  # return the first K elements\n  return(sorted_list[1:K])\n}\n",
    "\n  # sort the list\n  sorted_list <- sort(test_list, decreasing = FALSE)\n  # return the first k elements\n  return(sorted_list[1:K])\n}\n"
  ]
}
{
  "name": "mbpp_160_find_solution",
  "language": "r",
  "prompt": "# Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nfind_solution <- function(a, b, n) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_160_find_solution.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- find_solution\n    if(!identical(candidate(2, 3, 7), list(2, 1))){quit('no', 1)}\n    if(!identical(candidate(4, 2, 7), NULL)){quit('no', 1)}\n    if(!identical(candidate(1, 13, 17), list(4, 1))){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  x <- 0\n  while (x <= n) {\n    y <- (n - a * x) / b\n    if (y %% 1 == 0) {\n      return(c(x, y))\n    }\n    x <- x + 1\n  }\n  return(NULL)\n}\n\nfind_solution(2, 3, 4)\nfind_solution(2, 3, 5)\nfind_solution(2, 3, 6)\nfind_solution(2, 3, 7)\nfind_solution(2, 3, 8)\nfind_solution(2, 3, 9)\nfind_solution(2, 3, 10)\nfind_solution(2, 3, 11)\nfind_solution(2, 3, 12)\nfind_solution(2, 3, 13)\nfind_solution(2, 3, 14)\nfind_solution(2, 3, 15)\nfind_solution(2, 3, 16)\nfind_solution(2, 3, 17)\nfind_solution(2, 3, 18)\nfind_solution(2, 3, 19)\nfind_solution(2, 3, 20)\nfind_solution(2, 3, 21)\nfind_solution(2, 3, 22)\nfind_solution(2, 3, 23)\nfind_solution(2, 3, 24)\nfind_solution(2, 3, 25)\nfind_solution(2, 3, 26)\nfind_solution(2, 3, 27)\nfind_solution(2, 3, 28)\nfind_solution(2, 3, 29)\nfind_solution(2, 3, 30)\nfind_solution(2, 3, 31)\nfind_solution(2, 3, 32)\nfind_solution(2, 3, 33)\nfind_solution(2, 3, 34)\nfind_solution(2, 3, 35)\nfind_solution(2, 3, 36)\nfind_solution(2, 3, 37)\nfind_solution(2, 3, 38)\nfind_solution(2, 3, 39)\nfind_solution(2, 3",
    "\n    for (x in 0:n) {\n        for (y in 0:n) {\n            if (a*x + b*y == n) {\n                return(c(x, y))\n            }\n        }\n    }\n    return(NULL)\n}\n\nfind_solution(1, 2, 100)\n",
    "\n    if (n %% gcd(a, b) != 0) {\n        return(NULL)\n    }\n    else {\n        x <- 0\n        y <- n / b\n        while (a * x + b * y != n) {\n            if (a * x + b * y < n) {\n                x <- x + 1\n            }\n            else {\n                y <- y - 1\n            }\n        }\n        return(c(x, y))\n    }\n}\n\nfind_solution(2, 3, 7)\nfind_solution(2, 3, 10)\nfind_solution(2, 3, 11)\nfind_solution(2, 3, 12)\nfind_solution(2, 3, 13)\nfind_solution(2, 3, 14)\nfind_solution(2, 3, 15)\nfind_solution(2, 3, 16)\nfind_solution(2, 3, 17)\nfind_solution(2, 3, 18)\nfind_solution(2, 3, 19)\nfind_solution(2, 3, 20)\nfind_solution(2, 3, 21)\nfind_solution(2, 3, 22)\nfind_solution(2, 3, 23)\nfind_solution(2, 3, 24)\nfind_solution(2, 3, 25)\nfind_solution(2, 3, 26)\nfind_solution(2, 3, 27)\nfind_solution(2, 3, 28)\nfind_solution(2, 3, 29)\nfind_solution(2, 3, 30)\nfind_solution(2, 3, 31)\nfind_solution(2, 3, 32)\nfind_solution(2, 3, 33)\nfind_solution(2, 3, 34)\nfind_solution(2, 3, 35)\nfind_solution(2, 3, 36)\nfind_solution(2, 3, 37)\nfind_solution(2, 3, 38)\nfind_solution(2, 3, 39)\nfind_solution(2, 3, 40)\nfind_solution(2, 3, 41)",
    "\n  for (x in 0:n) {\n    for (y in 0:n) {\n      if (a * x + b * y == n) {\n        return(c(x, y))\n      }\n    }\n  }\n  return(NULL)\n}\n\nfind_solution(1, 2, 100)\n",
    "\n  if (n %% gcd(a, b) != 0) {\n    return(NULL)\n  }\n  else {\n    x <- 0\n    y <- n / b\n    while (TRUE) {\n      if (a * x + b * y == n) {\n        return(c(x, y))\n      }\n      if (a * x + b * y > n) {\n        y <- y - 1\n      }\n      else {\n        x <- x + 1\n      }\n    }\n  }\n}\n\nfind_solution(1, 2, 4)\nfind_solution(1, 2, 5)\nfind_solution(1, 2, 6)\nfind_solution(1, 2, 7)\nfind_solution(1, 2, 8)\nfind_solution(1, 2, 9)\nfind_solution(1, 2, 10)\nfind_solution(1, 2, 11)\nfind_solution(1, 2, 12)\nfind_solution(1, 2, 13)\nfind_solution(1, 2, 14)\nfind_solution(1, 2, 15)\nfind_solution(1, 2, 16)\nfind_solution(1, 2, 17)\nfind_solution(1, 2, 18)\nfind_solution(1, 2, 19)\nfind_solution(1, 2, 20)\nfind_solution(1, 2, 21)\nfind_solution(1, 2, 22)\nfind_solution(1, 2, 23)\nfind_solution(1, 2, 24)\nfind_solution(1, 2, 25)\nfind_solution(1, 2, 26)\nfind_solution(1, 2, 27)\nfind_solution(1, 2, 28)\nfind_solution(1, 2, 29)\nfind_solution(1, 2, 30)\nfind_solution(1, 2, 31)\nfind_solution(1, 2, 32)\nfind_solution(1, 2, 33)\nfind_solution(1, 2, 34)\nfind_solution(1, 2, 35)\n",
    "\n  if (n %% gcd(a, b) != 0) {\n    return(NULL)\n  }\n  else {\n    x <- 0\n    y <- n / b\n    while (a * x + b * y != n) {\n      if (a * x + b * y < n) {\n        x <- x + 1\n      }\n      else {\n        y <- y - 1\n      }\n    }\n    return(c(x, y))\n  }\n}\n\nfind_solution(2, 3, 7)\nfind_solution(2, 3, 8)\nfind_solution(2, 3, 9)\nfind_solution(2, 3, 10)\nfind_solution(2, 3, 11)\nfind_solution(2, 3, 12)\nfind_solution(2, 3, 13)\nfind_solution(2, 3, 14)\nfind_solution(2, 3, 15)\nfind_solution(2, 3, 16)\nfind_solution(2, 3, 17)\nfind_solution(2, 3, 18)\nfind_solution(2, 3, 19)\nfind_solution(2, 3, 20)\nfind_solution(2, 3, 21)\nfind_solution(2, 3, 22)\nfind_solution(2, 3, 23)\nfind_solution(2, 3, 24)\nfind_solution(2, 3, 25)\nfind_solution(2, 3, 26)\nfind_solution(2, 3, 27)\nfind_solution(2, 3, 28)\nfind_solution(2, 3, 29)\nfind_solution(2, 3, 30)\nfind_solution(2, 3, 31)\nfind_solution(2, 3, 32)\nfind_solution(2, 3, 33)\nfind_solution(2, 3, 34)\nfind_solution(2, 3, 35)\nfind_solution(2, 3, 36)\nfind_solution(2, 3, 37)\nfind_solution(2, 3, 38)\nfind_solution(2, 3, 39)",
    "\n  if (n %% gcd(a, b) != 0) {\n    return(NULL)\n  } else {\n    x <- 0\n    y <- n / b\n    while (a * x + b * y != n) {\n      if (a * x + b * y < n) {\n        x <- x + 1\n      } else {\n        y <- y - 1\n      }\n    }\n    return(c(x, y))\n  }\n}\n",
    "\n    if (n %% gcd(a, b) != 0) {\n        return(NULL)\n    }\n    x <- 0\n    y <- n / b\n    while (a * x + b * y != n) {\n        if (a * x + b * y < n) {\n            x <- x + 1\n        } else {\n            y <- y - 1\n        }\n    }\n    return(c(x, y))\n}\n\nfind_solution(2, 3, 7)\nfind_solution(2, 3, 8)\nfind_solution(2, 3, 9)\nfind_solution(2, 3, 10)\nfind_solution(2, 3, 11)\nfind_solution(2, 3, 12)\nfind_solution(2, 3, 13)\nfind_solution(2, 3, 14)\nfind_solution(2, 3, 15)\nfind_solution(2, 3, 16)\nfind_solution(2, 3, 17)\nfind_solution(2, 3, 18)\nfind_solution(2, 3, 19)\nfind_solution(2, 3, 20)\nfind_solution(2, 3, 21)\nfind_solution(2, 3, 22)\nfind_solution(2, 3, 23)\nfind_solution(2, 3, 24)\nfind_solution(2, 3, 25)\nfind_solution(2, 3, 26)\nfind_solution(2, 3, 27)\nfind_solution(2, 3, 28)\nfind_solution(2, 3, 29)\nfind_solution(2, 3, 30)\nfind_solution(2, 3, 31)\nfind_solution(2, 3, 32)\nfind_solution(2, 3, 33)\nfind_solution(2, 3, 34)\nfind_solution(2, 3, 35)\nfind_solution(2, 3, 36)\nfind_solution(2, 3, 37)\nfind_solution(2, 3, 38)\nfind_solution(2, 3, 39)\nfind_solution(2, 3",
    "\n    if (n %% gcd(a, b) != 0) {\n        return(NULL)\n    }\n    else {\n        x <- 0\n        y <- n / b\n        while (a * x + b * y != n) {\n            if (a * x + b * y < n) {\n                x <- x + 1\n            }\n            else {\n                y <- y - 1\n            }\n        }\n        return(c(x, y))\n    }\n}\n\nfind_solution(2, 3, 7)\nfind_solution(2, 3, 6)\nfind_solution(2, 3, 5)\nfind_solution(2, 3, 4)\nfind_solution(2, 3, 3)\nfind_solution(2, 3, 2)\nfind_solution(2, 3, 1)\nfind_solution(2, 3, 0)\nfind_solution(2, 3, -1)\nfind_solution(2, 3, -2)\nfind_solution(2, 3, -3)\nfind_solution(2, 3, -4)\nfind_solution(2, 3, -5)\nfind_solution(2, 3, -6)\nfind_solution(2, 3, -7)\n\nfind_solution(3, 5, 7)\nfind_solution(3, 5, 6)\nfind_solution(3, 5, 5)\nfind_solution(3, 5, 4)\nfind_solution(3, 5, 3)\nfind_solution(3, 5, 2)\nfind_solution(3, 5, 1)\nfind_solution(3, 5, 0)\nfind_solution(3, 5, -1)\nfind_solution(3, 5, -2)\nfind_solution(3, 5, -3)\nfind_solution(3, 5, -4)\nfind_solution(3, 5, -5)\nfind_solution(3, 5, -6)\nfind_solution(3, 5, -7)\n\nfind_solution(5, 7, 7)\nfind_solution(5,",
    "\n  for (x in 0:n) {\n    for (y in 0:n) {\n      if (a * x + b * y == n) {\n        return(c(x, y))\n      }\n    }\n  }\n  return(NULL)\n}\n\nfind_solution(2, 3, 7)\nfind_solution(2, 3, 8)\nfind_solution(2, 3, 9)\nfind_solution(2, 3, 10)\nfind_solution(2, 3, 11)\nfind_solution(2, 3, 12)\nfind_solution(2, 3, 13)\nfind_solution(2, 3, 14)\nfind_solution(2, 3, 15)\nfind_solution(2, 3, 16)\nfind_solution(2, 3, 17)\nfind_solution(2, 3, 18)\nfind_solution(2, 3, 19)\nfind_solution(2, 3, 20)\nfind_solution(2, 3, 21)\nfind_solution(2, 3, 22)\nfind_solution(2, 3, 23)\nfind_solution(2, 3, 24)\nfind_solution(2, 3, 25)\nfind_solution(2, 3, 26)\nfind_solution(2, 3, 27)\nfind_solution(2, 3, 28)\nfind_solution(2, 3, 29)\nfind_solution(2, 3, 30)\nfind_solution(2, 3, 31)\nfind_solution(2, 3, 32)\nfind_solution(2, 3, 33)\nfind_solution(2, 3, 34)\nfind_solution(2, 3, 35)\nfind_solution(2, 3, 36)\nfind_solution(2, 3, 37)\nfind_solution(2, 3, 38)\nfind_solution(2, 3, 39)\nfind_solution(2, 3, 40)\nfind_solution(2, 3, 41)\nfind_solution(2, 3, 42)\nfind_solution(2, 3, 43)\nfind",
    "\n  if (n %% gcd(a, b) != 0) {\n    return(NULL)\n  }\n  else {\n    x <- 0\n    y <- n / b\n    while (TRUE) {\n      if (a * x + b * y == n) {\n        return(c(x, y))\n      }\n      if (a * x + b * y > n) {\n        y <- y - 1\n      }\n      else {\n        x <- x + 1\n      }\n    }\n  }\n}\n\nfind_solution(2, 3, 7)\nfind_solution(2, 3, 8)\nfind_solution(2, 3, 9)\nfind_solution(2, 3, 10)\nfind_solution(2, 3, 11)\nfind_solution(2, 3, 12)\nfind_solution(2, 3, 13)\nfind_solution(2, 3, 14)\nfind_solution(2, 3, 15)\nfind_solution(2, 3, 16)\nfind_solution(2, 3, 17)\nfind_solution(2, 3, 18)\nfind_solution(2, 3, 19)\nfind_solution(2, 3, 20)\nfind_solution(2, 3, 21)\nfind_solution(2, 3, 22)\nfind_solution(2, 3, 23)\nfind_solution(2, 3, 24)\nfind_solution(2, 3, 25)\nfind_solution(2, 3, 26)\nfind_solution(2, 3, 27)\nfind_solution(2, 3, 28)\nfind_solution(2, 3, 29)\nfind_solution(2, 3, 30)\nfind_solution(2, 3, 31)\nfind_solution(2, 3, 32)\nfind_solution(2, 3, 33)\nfind_solution(2, 3, 34)\nfind_solution(2, 3, 35)\nfind_solution(2, 3, 36)\nfind_solution(2, 3, 37)\nfind_solution(2, 3, 38)\n",
    "\n  if (n %% gcd(a, b) != 0) {\n    return(NULL)\n  }\n  x <- 0\n  y <- n / b\n  while (x * a + y * b != n) {\n    if (y * b > n) {\n      y <- y - 1\n    } else {\n      x <- x + 1\n    }\n  }\n  return(c(x, y))\n}\n\nfind_solution(2, 3, 4)\nfind_solution(2, 3, 5)\nfind_solution(2, 3, 6)\nfind_solution(2, 3, 7)\nfind_solution(2, 3, 8)\nfind_solution(2, 3, 9)\nfind_solution(2, 3, 10)\nfind_solution(2, 3, 11)\nfind_solution(2, 3, 12)\nfind_solution(2, 3, 13)\nfind_solution(2, 3, 14)\nfind_solution(2, 3, 15)\nfind_solution(2, 3, 16)\nfind_solution(2, 3, 17)\nfind_solution(2, 3, 18)\nfind_solution(2, 3, 19)\nfind_solution(2, 3, 20)\nfind_solution(2, 3, 21)\nfind_solution(2, 3, 22)\nfind_solution(2, 3, 23)\nfind_solution(2, 3, 24)\nfind_solution(2, 3, 25)\nfind_solution(2, 3, 26)\nfind_solution(2, 3, 27)\nfind_solution(2, 3, 28)\nfind_solution(2, 3, 29)\nfind_solution(2, 3, 30)\nfind_solution(2, 3, 31)\nfind_solution(2, 3, 32)\nfind_solution(2, 3, 33)\nfind_solution(2, 3, 34)\nfind_solution(2, 3, 35)\nfind_solution(2, 3, 36)\nfind_solution(2, 3, 37)\n",
    "\n  if (n %% gcd(a, b) != 0) {\n    return(NULL)\n  }\n  x <- 0\n  y <- n / b\n  while (a * x + b * y != n) {\n    if (a * x + b * y < n) {\n      x <- x + 1\n    } else {\n      y <- y - 1\n    }\n  }\n  return(c(x, y))\n}\n\nfind_solution(2, 3, 7)\nfind_solution(2, 3, 8)\nfind_solution(2, 3, 9)\nfind_solution(2, 3, 10)\nfind_solution(2, 3, 11)\nfind_solution(2, 3, 12)\nfind_solution(2, 3, 13)\nfind_solution(2, 3, 14)\nfind_solution(2, 3, 15)\nfind_solution(2, 3, 16)\nfind_solution(2, 3, 17)\nfind_solution(2, 3, 18)\nfind_solution(2, 3, 19)\nfind_solution(2, 3, 20)\nfind_solution(2, 3, 21)\nfind_solution(2, 3, 22)\nfind_solution(2, 3, 23)\nfind_solution(2, 3, 24)\nfind_solution(2, 3, 25)\nfind_solution(2, 3, 26)\nfind_solution(2, 3, 27)\nfind_solution(2, 3, 28)\nfind_solution(2, 3, 29)\nfind_solution(2, 3, 30)\nfind_solution(2, 3, 31)\nfind_solution(2, 3, 32)\nfind_solution(2, 3, 33)\nfind_solution(2, 3, 34)\nfind_solution(2, 3, 35)\nfind_solution(2, 3, 36)\nfind_solution(2, 3, 37)\nfind_solution(2, 3, 38)\nfind_solution(2, 3, 39)\nfind_solution(2, 3",
    "\n  if (n %% gcd(a, b) != 0) {\n    return(NULL)\n  }\n  x <- 0\n  y <- n / b\n  while (a * x + b * y != n) {\n    if (a * x + b * y < n) {\n      x <- x + 1\n    } else {\n      y <- y - 1\n    }\n  }\n  return(c(x, y))\n}\n\nfind_solution(2, 3, 7)\nfind_solution(2, 3, 8)\n",
    "\n  for (x in 0:n) {\n    y <- (n - a * x) / b\n    if (y %% 1 == 0) {\n      return(c(x, y))\n    }\n  }\n  return(NULL)\n}\n\nfind_solution(1, 2, 4)\n",
    "\n  if (n %% gcd(a, b) != 0) {\n    return(NULL)\n  }\n  x <- 0\n  y <- n / b\n  while (x * a + y * b != n) {\n    if (x * a + y * b < n) {\n      x <- x + 1\n    } else {\n      y <- y - 1\n    }\n  }\n  return(c(x, y))\n}\n",
    "\n  if (n %% gcd(a, b) != 0) {\n    return(NULL)\n  }\n  x <- 0\n  y <- n / b\n  while (x * a + y * b != n) {\n    if (x * a + y * b < n) {\n      x <- x + 1\n    } else {\n      y <- y - 1\n    }\n  }\n  return(c(x, y))\n}\n",
    "\n    if (n %% gcd(a, b) != 0) {\n        return(NULL)\n    }\n    x <- 0\n    y <- n / b\n    while (x * a + y * b != n) {\n        if (y * b > n) {\n            y <- y - 1\n        } else {\n            x <- x + 1\n        }\n    }\n    return(c(x, y))\n}\n\nfind_solution(2, 3, 4)\nfind_solution(2, 3, 5)\nfind_solution(2, 3, 6)\nfind_solution(2, 3, 7)\nfind_solution(2, 3, 8)\nfind_solution(2, 3, 9)\nfind_solution(2, 3, 10)\nfind_solution(2, 3, 11)\nfind_solution(2, 3, 12)\nfind_solution(2, 3, 13)\nfind_solution(2, 3, 14)\nfind_solution(2, 3, 15)\nfind_solution(2, 3, 16)\nfind_solution(2, 3, 17)\nfind_solution(2, 3, 18)\nfind_solution(2, 3, 19)\nfind_solution(2, 3, 20)\nfind_solution(2, 3, 21)\nfind_solution(2, 3, 22)\nfind_solution(2, 3, 23)\nfind_solution(2, 3, 24)\nfind_solution(2, 3, 25)\nfind_solution(2, 3, 26)\nfind_solution(2, 3, 27)\nfind_solution(2, 3, 28)\nfind_solution(2, 3, 29)\nfind_solution(2, 3, 30)\nfind_solution(2, 3, 31)\nfind_solution(2, 3, 32)\nfind_solution(2, 3, 33)\nfind_solution(2, 3, 34)\nfind_solution(2, 3, 35)\nfind_solution(2, 3, 36)\nfind_solution(2, 3, 37)\n",
    "\n  if (n %% gcd(a, b) != 0) {\n    return(NULL)\n  }\n  else {\n    x <- 0\n    y <- n / b\n    while (a * x + b * y != n) {\n      if (a * x + b * y < n) {\n        x <- x + 1\n      }\n      else {\n        y <- y - 1\n      }\n    }\n    return(c(x, y))\n  }\n}\n\nfind_solution(2, 3, 7)\nfind_solution(2, 3, 8)\nfind_solution(2, 3, 9)\nfind_solution(2, 3, 10)\nfind_solution(2, 3, 11)\nfind_solution(2, 3, 12)\nfind_solution(2, 3, 13)\nfind_solution(2, 3, 14)\nfind_solution(2, 3, 15)\nfind_solution(2, 3, 16)\nfind_solution(2, 3, 17)\nfind_solution(2, 3, 18)\nfind_solution(2, 3, 19)\nfind_solution(2, 3, 20)\nfind_solution(2, 3, 21)\nfind_solution(2, 3, 22)\nfind_solution(2, 3, 23)\nfind_solution(2, 3, 24)\nfind_solution(2, 3, 25)\nfind_solution(2, 3, 26)\nfind_solution(2, 3, 27)\nfind_solution(2, 3, 28)\nfind_solution(2, 3, 29)\nfind_solution(2, 3, 30)\nfind_solution(2, 3, 31)\nfind_solution(2, 3, 32)\nfind_solution(2, 3, 33)\nfind_solution(2, 3, 34)\nfind_solution(2, 3, 35)\nfind_solution(2, 3, 36)\nfind_solution(2, 3, 37)\nfind_solution(2, 3, 38)\nfind_solution(2, 3, 39)",
    "\n    if (n %% gcd(a, b) != 0) {\n        return(NULL)\n    }\n    x <- 0\n    y <- n / b\n    while (x * a + y * b != n) {\n        if (y * b > n) {\n            y <- y - 1\n        } else {\n            x <- x + 1\n        }\n    }\n    return(c(x, y))\n}\n\nfind_solution(1, 2, 4)\nfind_solution(1, 2, 5)\nfind_solution(1, 2, 6)\nfind_solution(1, 2, 7)\nfind_solution(1, 2, 8)\nfind_solution(1, 2, 9)\nfind_solution(1, 2, 10)\nfind_solution(1, 2, 11)\nfind_solution(1, 2, 12)\nfind_solution(1, 2, 13)\nfind_solution(1, 2, 14)\nfind_solution(1, 2, 15)\nfind_solution(1, 2, 16)\nfind_solution(1, 2, 17)\nfind_solution(1, 2, 18)\nfind_solution(1, 2, 19)\nfind_solution(1, 2, 20)\nfind_solution(1, 2, 21)\nfind_solution(1, 2, 22)\nfind_solution(1, 2, 23)\nfind_solution(1, 2, 24)\nfind_solution(1, 2, 25)\nfind_solution(1, 2, 26)\nfind_solution(1, 2, 27)\nfind_solution(1, 2, 28)\nfind_solution(1, 2, 29)\nfind_solution(1, 2, 30)\nfind_solution(1, 2, 31)\nfind_solution(1, 2, 32)\nfind_solution(1, 2, 33)\nfind_solution(1, 2, 34)\nfind_solution(1, 2, 35)\nfind_solution(1, 2, 36)\nfind_solution(1, 2, 37)\n"
  ]
}
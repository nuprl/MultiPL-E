{
  "name": "mbpp_401_add_nested_tuples",
  "language": "r",
  "prompt": "# Write a function to perform index wise addition of tuple elements in the given two nested tuples.\nadd_nested_tuples <- function(test_tup1, test_tup2) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_401_add_nested_tuples.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- add_nested_tuples\n    if(!identical(candidate(list(list(1, 3), list(4, 5), list(2, 9), list(1, 10)), list(list(6, 7), list(3, 9), list(1, 1), list(7, 3))), list(list(7, 10), list(7, 14), list(3, 10), list(8, 13)))){quit('no', 1)}\n    if(!identical(candidate(list(list(2, 4), list(5, 6), list(3, 10), list(2, 11)), list(list(7, 8), list(4, 10), list(2, 2), list(8, 4))), list(list(9, 12), list(9, 16), list(5, 12), list(10, 15)))){quit('no', 1)}\n    if(!identical(candidate(list(list(3, 5), list(6, 7), list(4, 11), list(3, 12)), list(list(8, 9), list(5, 11), list(3, 3), list(9, 5))), list(list(11, 14), list(11, 18), list(7, 14), list(12, 17)))){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  # Write your code here\n  return(NULL)\n}\n",
    "\n  # Write your code here\n  test_tup1 <- unlist(test_tup1)\n  test_tup2 <- unlist(test_tup2)\n  return(list(test_tup1 + test_tup2))\n}\n",
    "\n  # Write your code here\n  return(NULL)\n}\n",
    "\n  # Write your code here\n  return(test_tup1 + test_tup2)\n}\n",
    "\n  # Write your code here\n  return(NULL)\n}\n",
    "\n    # Write your code here\n    return(NULL)\n}\n",
    "\n  # Write your code here\n  test_tup1 <- unlist(test_tup1)\n  test_tup2 <- unlist(test_tup2)\n  return(list(test_tup1 + test_tup2))\n}\n",
    "\n  # Write your code here\n  return(NULL)\n}\n",
    "\n  # Write your code here\n  test_tup1 <- unlist(test_tup1)\n  test_tup2 <- unlist(test_tup2)\n  test_tup1 + test_tup2\n}\n",
    "\n  # Write your code here\n  return(NULL)\n}\n",
    "\n  # Write your code here\n  return(NULL)\n}\n",
    "\n  # Write your code here\n  return(NULL)\n}\n",
    "\n  # Write your code here\n  return(NULL)\n}\n",
    "\n  # Write your code here\n  tup_len <- length(test_tup1)\n  tup_list <- list()\n  for (i in 1:tup_len) {\n    tup_list[[i]] <- test_tup1[[i]] + test_tup2[[i]]\n  }\n  return(tup_list)\n}\n",
    "\n    test_tup1 <- unlist(test_tup1)\n    test_tup2 <- unlist(test_tup2)\n    test_tup3 <- test_tup1 + test_tup2\n    test_tup3 <- matrix(test_tup3, nrow = 2, ncol = 3)\n    test_tup3 <- as.tuple(test_tup3)\n    return(test_tup3)\n}\n",
    "\n  # Write your code here\n  return(NULL)\n}\n",
    "\n  # Write your code here\n  return(NULL)\n}\n",
    "\n  # Write your code here\n  # Return the result\n  return(NULL)\n}\n",
    "\n  # Write your code here\n  return(NULL)\n}\n",
    "\n  # Write your code here\n  return(NULL)\n}\n"
  ]
}
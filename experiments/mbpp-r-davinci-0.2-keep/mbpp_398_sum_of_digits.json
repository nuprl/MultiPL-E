{
  "name": "mbpp_398_sum_of_digits",
  "language": "r",
  "prompt": "# Write a function to compute the sum of digits of each number of a given list.\nsum_of_digits <- function(nums) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_398_sum_of_digits.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- sum_of_digits\n    if(!identical(candidate(list(10, 2, 56)), 14)){quit('no', 1)}\n    if(!identical(candidate(list(list(10, 20, 4, 5, 'b', 70, 'a'))), 19)){quit('no', 1)}\n    if(!identical(candidate(list(10, 20, -4, 5, -70)), 19)){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  sum(as.numeric(strsplit(as.character(nums), \"\")[[1]]))\n}\n\nsum_of_digits(c(10, 20, 30))\n",
    "\n  sum_of_digits <- 0\n  for (num in nums) {\n    sum_of_digits <- sum_of_digits + sum(as.numeric(strsplit(as.character(num), \"\")[[1]]))\n  }\n  return(sum_of_digits)\n}\n",
    "\n  sum(unlist(strsplit(as.character(nums), \"\")))\n}\n\nsum_of_digits(c(10, 20, 30))\n",
    "\n  # YOUR CODE HERE\n  sum(unlist(lapply(nums, function(x) {\n    sum(as.integer(strsplit(as.character(x), split = \"\")[[1]]))\n  })))\n}\n",
    "\n  sum(unlist(lapply(nums, function(x) {\n    as.numeric(strsplit(as.character(x), \"\")[[1]])\n  })))\n}\n",
    "\n  nums <- as.character(nums)\n  nums <- strsplit(nums, \"\")\n  nums <- lapply(nums, as.numeric)\n  nums <- lapply(nums, sum)\n  nums <- unlist(nums)\n  return(nums)\n}\n",
    "\n  sum_of_digits <- numeric()\n  for (i in 1:length(nums)) {\n    sum_of_digits[i] <- sum(as.numeric(strsplit(as.character(nums[i]), \"\")[[1]]))\n  }\n  return(sum_of_digits)\n}\n",
    "\n  sum_digits <- function(num) {\n    sum(as.integer(strsplit(as.character(num), split = \"\")[[1]]))\n  }\n  sapply(nums, sum_digits)\n}\n\nsum_of_digits(c(10, 11, 12))\n",
    "\n  nums <- as.character(nums)\n  nums <- strsplit(nums, \"\")\n  nums <- lapply(nums, as.numeric)\n  nums <- lapply(nums, sum)\n  nums <- unlist(nums)\n  nums\n}\n\nsum_of_digits(c(12, 45, 78))\n",
    "\n  # YOUR CODE HERE\n  sum(as.numeric(unlist(strsplit(nums, \"\"))))\n}\n\nsum_of_digits(c(10, 20, 30))\n",
    "\n  nums <- as.numeric(nums)\n  nums <- nums %>%\n    as.character() %>%\n    strsplit(split = \"\") %>%\n    unlist() %>%\n    as.numeric()\n  sum(nums)\n}\n\nsum_of_digits(c(10, 20, 30))\n",
    "\n  nums <- as.character(nums)\n  nums <- strsplit(nums, \"\")\n  nums <- lapply(nums, as.numeric)\n  nums <- lapply(nums, sum)\n  nums <- unlist(nums)\n  return(nums)\n}\n",
    "\n  sum_of_digits <- sapply(nums, function(x) sum(as.integer(unlist(strsplit(as.character(x), \"\")))))\n  return(sum_of_digits)\n}\n\nsum_of_digits(nums)\n",
    "\n  # Your code here\n}\n",
    "\n  sum(unlist(lapply(nums, function(x) {\n    strsplit(as.character(x), \"\")[[1]]\n  })))\n}\n\nsum_of_digits(c(10, 20, 30))\n",
    "\n  sum_of_digits <- function(num) {\n    num <- as.character(num)\n    sum(as.numeric(strsplit(num, \"\")[[1]]))\n  }\n  sapply(nums, sum_of_digits)\n}\n\nsum_of_digits(c(10, 20, 30))\n",
    "\n  sum_digits <- function(num) {\n    sum <- 0\n    while (num > 0) {\n      sum <- sum + num %% 10\n      num <- num %/% 10\n    }\n    sum\n  }\n  sapply(nums, sum_digits)\n}\n\nsum_of_digits(c(1, 2, 3, 4, 5))\n",
    "\n  sum_digits <- function(num) {\n    num <- as.character(num)\n    sum(as.numeric(strsplit(num, \"\")[[1]]))\n  }\n  sapply(nums, sum_digits)\n}\n",
    "\n  sum(unlist(strsplit(as.character(nums), \"\")))\n}\n\nsum_of_digits(c(12, 45, 67))\n",
    "\n    sum_digits <- c()\n    for (num in nums) {\n        sum_digits <- c(sum_digits, sum(as.integer(strsplit(as.character(num), \"\")[[1]])))\n    }\n    return(sum_digits)\n}\n"
  ]
}
{
  "name": "mbpp_572_two_unique_nums",
  "language": "r",
  "prompt": "# Write a python function to remove duplicate numbers from a given number of lists.\ntwo_unique_nums <- function(nums) {",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_572_two_unique_nums.py",
  "prompt_terminology": "verbatim",
  "tests": "test_humaneval <- function() {\ncandidate <- two_unique_nums\n    if(!identical(candidate(c(1, 2, 3, 2, 3, 4, 5)), list(1, 4, 5))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 2, 4, 5)), list(1, 3, 4, 5))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 5)), list(1, 2, 3, 4, 5))){quit('no', 1)}\n}\ntest_humaneval()",
  "stop_tokens": [
    "\n#",
    "\n```"
  ],
  "completions": [
    "\n  nums <- sort(nums)\n  if (length(nums) == 1) {\n    return(nums)\n  }\n  if (nums[1] == nums[2]) {\n    return(two_unique_nums(nums[-1]))\n  } else {\n    return(c(nums[1], two_unique_nums(nums[-1])))\n  }\n}\n\ntwo_unique_nums(c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,",
    "\n  # Write your code here\n  nums <- sort(nums)\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n    nums <- unique(nums)\n    if (length(nums) == 2) {\n        return(nums)\n    } else {\n        return(NA)\n    }\n}\n",
    "\n  # Create a vector of unique numbers.\n  unique_nums <- unique(nums)\n  \n  # Create a vector of the number of times each unique number appears.\n  num_appearances <- table(unique_nums)\n  \n  # Create a vector of the unique numbers that appear only once.\n  single_appearance <- unique_nums[num_appearances == 1]\n  \n  # Return the vector of unique numbers that appear only once.\n  return(single_appearance)\n}\n",
    "\n  # Your code here\n  nums <- unique(nums)\n  nums <- nums[nums != 0]\n  return(nums)\n}\n",
    "\n  # Your code here\n  unique(nums)\n}\n",
    "\n  # Write your code here\n  nums <- unique(nums)\n  nums <- nums[nums != 0]\n  if (length(nums) == 1) {\n    return(0)\n  } else {\n    return(nums)\n  }\n}\n",
    "\n  nums <- unique(nums)\n  if (length(nums) > 2) {\n    nums <- nums[1:2]\n  }\n  return(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5))\ntwo_unique_nums(c(1,2,3,4,5,6))\ntwo_unique_nums(c(1,2,3,4,5,6,7))\n",
    "\n  nums <- unique(nums)\n  if (length(nums) > 2) {\n    return(nums[1:2])\n  } else {\n    return(nums)\n  }\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  nums <- unique(nums)\n  if (length(nums) == 2) {\n    return(nums)\n  } else {\n    return(NULL)\n  }\n}\n",
    "\n  nums <- unique(nums)\n  if (length(nums) > 2) {\n    nums <- nums[1:2]\n  }\n  return(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  nums <- sort(nums)\n  if (length(nums) == 1) {\n    return(nums)\n  } else if (nums[1] == nums[2]) {\n    return(two_unique_nums(nums[-1]))\n  } else {\n    return(c(nums[1], two_unique_nums(nums[-1])))\n  }\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  # Write your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  nums <- unique(nums)\n  if (length(nums) == 2) {\n    return(nums)\n  } else {\n    return(c(0, 0))\n  }\n}\n",
    "\n  nums <- nums[!duplicated(nums)]\n  return(nums)\n}\n",
    "\n  nums <- sort(nums)\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  # Your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  # Your code here\n  nums <- unique(nums)\n  return(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  # Write your code here\n  unique(nums)\n}\n",
    "\n  unique(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  # Your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n    nums <- unique(nums)\n    return(nums[1:2])\n}\n",
    "\n  nums <- unique(nums)\n  if (length(nums) < 2) {\n    return(c(NA, NA))\n  } else {\n    return(nums[1:2])\n  }\n}\n\ntwo_unique_nums(c(1,2,3,4,5))\ntwo_unique_nums(c(1,2,3,4,5,1))\ntwo_unique_nums(c(1,1,1,1,1))\n",
    "\n  # Your code goes here\n  nums <- unique(nums)\n  return(nums[1:2])\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  nums <- unique(nums)\n  return(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  # Write your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  nums <- unique(nums)\n  if (length(nums) == 2) {\n    return(nums)\n  } else {\n    return(c(NA, NA))\n  }\n}\n\ntwo_unique_nums(c(1, 2, 3, 4, 5))\ntwo_unique_nums(c(1, 2, 3, 4, 5, 6))\ntwo_unique_nums(c(1, 2, 3, 4, 5, 6, 7))\n",
    "\n  # Your code here\n  # Hint: You can use the setdiff() function\n  setdiff(nums, nums[duplicated(nums)])\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20))\n",
    "\n  nums <- unique(nums)\n  return(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n    unique_nums <- unique(nums)\n    return(unique_nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20))\n",
    "\n  # Your code here\n  nums <- unique(nums)\n  nums <- nums[nums != 0]\n  return(nums)\n}\n",
    "\n    nums <- sort(nums)\n    nums <- nums[!duplicated(nums)]\n    return(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  # Write your code here\n  nums <- unique(nums)\n  if(length(nums) > 2) {\n    nums <- nums[1:2]\n  }\n  return(nums)\n}\n",
    "\n  # Your code here\n  unique(nums)\n}\n",
    "\n  nums <- unique(nums)\n  return(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  unique(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  nums <- sort(nums)\n  if (length(nums) == 1) {\n    return(nums)\n  } else {\n    if (nums[1] == nums[2]) {\n      return(two_unique_nums(nums[-1]))\n    } else {\n      return(c(nums[1], two_unique_nums(nums[-1])))\n    }\n  }\n}\n\ntwo_unique_nums(c(1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 9))\n",
    "\n  # Your code goes here\n  nums <- sort(nums)\n  nums <- unique(nums)\n  return(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n    nums <- unique(nums)\n    if (length(nums) < 2) {\n        return(c(NA, NA))\n    } else {\n        return(nums[1:2])\n    }\n}\n\ntwo_unique_nums(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n",
    "\n  # Your code here\n  nums <- unique(nums)\n  nums <- nums[nums != 0]\n  return(nums)\n}\n",
    "\n  unique_nums <- unique(nums)\n  if (length(unique_nums) < 2) {\n    return(c(NA, NA))\n  } else {\n    return(unique_nums[1:2])\n  }\n}\n\ntwo_unique_nums(c(1, 2, 3, 4, 5))\ntwo_unique_nums(c(1, 2, 3, 3, 5))\ntwo_unique_nums(c(1, 1, 3, 3, 5))\n",
    "\n  # Remove duplicates\n  nums <- unique(nums)\n  # Return the first two numbers\n  return(nums[1:2])\n}\n",
    "\n  # Your code here\n  nums <- unique(nums)\n  return(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  # Your code here\n  nums <- unique(nums)\n  return(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20))\n",
    "\n  unique_nums <- unique(nums)\n  if (length(unique_nums) > 2) {\n    unique_nums <- unique_nums[1:2]\n  }\n  return(unique_nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  nums <- nums[!duplicated(nums)]\n  return(nums)\n}\n",
    "\n  # Your code here\n  nums <- unique(nums)\n  return(nums)\n}\n\ntwo_unique_nums(c(1, 2, 3, 2, 1, 4, 5, 6, 5, 6))\n",
    "\n  # Write your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  unique(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  nums <- unique(nums)\n  if (length(nums) < 2) {\n    return(c(NA, NA))\n  } else {\n    return(nums[1:2])\n  }\n}\n\ntwo_unique_nums(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n",
    "\n  # Write your code here\n  nums <- unique(nums)\n  nums <- nums[nums > 0]\n  nums <- nums[nums < 100]\n  return(nums)\n}\n",
    "\n  # Your code here\n  nums <- sort(nums)\n  nums <- nums[!duplicated(nums)]\n  return(nums)\n}\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  # Create a vector of unique numbers\n  unique_nums <- unique(nums)\n  # Create a vector of the number of times each unique number appears\n  num_of_occurrences <- table(unique_nums)\n  # Create a vector of the unique numbers that appear only once\n  unique_nums_once <- unique_nums[num_of_occurrences == 1]\n  # Return the first two unique numbers that appear only once\n  return(unique_nums_once[1:2])\n}\n",
    "\n  nums <- nums[!duplicated(nums)]\n  return(nums)\n}\n",
    "\n  unique(nums)\n}\n\ntwo_unique_nums(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n",
    "\n  # Make sure the input is a vector\n  if (!is.vector(nums)) {\n    stop(\"Input must be a vector\")\n  }\n  # Make sure the input is numeric\n  if (!is.numeric(nums)) {\n    stop(\"Input must be numeric\")\n  }\n  # Make sure the input has at least two elements\n  if (length(nums) < 2) {\n    stop(\"Input must have at least two elements\")\n  }\n  # Make sure the input has no more than two elements\n  if (length(nums) > 2) {\n    stop(\"Input must have no more than two elements\")\n  }\n  # Make sure the input has no NA values\n  if (any(is.na(nums))) {\n    stop(\"Input must not have NA values\")\n  }\n  # Make sure the input has no Inf values\n  if (any(is.infinite(nums))) {\n    stop(\"Input must not have Inf values\")\n  }\n  # Make sure the input has no NaN values\n  if (any(is.nan(nums))) {\n    stop(\"Input must not have NaN values\")\n  }\n  # Make sure the input has no duplicate values\n  if (length(unique(nums)) != length(nums)) {\n    stop(\"Input must not have duplicate values\")\n  }\n  # Return the input\n  return(nums)\n}\n",
    "\n  nums <- sort(nums)\n  nums <- nums[!duplicated(nums)]\n  return(nums)\n}\n",
    "\n  # Write your code here\n  return(nums)\n}\n",
    "\n  nums <- unique(nums)\n  if (length(nums) < 2) {\n    return(c(NA, NA))\n  }\n  return(nums[1:2])\n}\n",
    "\n  # Remove duplicates\n  nums <- unique(nums)\n  \n  # Return the first two numbers\n  return(nums[1:2])\n}\n",
    "\n    nums <- unique(nums)\n    if (length(nums) == 2) {\n        return(nums)\n    } else {\n        return(c(NA, NA))\n    }\n}\n",
    "\n    nums <- nums[!duplicated(nums)]\n    return(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  # Your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  # Your code here\n  return(nums)\n}\n",
    "\n  nums <- unique(nums)\n  if (length(nums) < 2) {\n    return(c(NA, NA))\n  } else {\n    return(nums[1:2])\n  }\n}\n\ntwo_unique_nums(c(1, 2, 3, 4, 5, 6))\ntwo_unique_nums(c(1, 2, 3, 4, 4, 5, 6))\ntwo_unique_nums(c(1, 1, 2, 3, 4, 5, 6))\ntwo_unique_nums(c(1, 1, 2, 2, 3, 4, 5, 6))\ntwo_unique_nums(c(1, 1, 1, 2, 2, 2, 3, 4, 5, 6))\ntwo_unique_nums(c(1, 1, 1, 1, 2, 2, 2, 2, 3, 4, 5, 6))\n",
    "\n  unique(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  # Your code here\n  nums <- unique(nums)\n  nums <- nums[nums != 0]\n  return(nums)\n}\n",
    "\n  # Your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  nums <- sort(nums)\n  return(nums[1:2])\n}\n",
    "\n  nums <- sort(nums)\n  nums[nums != nums[1]]\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20))\n",
    "\n  nums <- unique(nums)\n  if (length(nums) < 2) {\n    return(c(nums, rep(NA, 2 - length(nums))))\n  } else {\n    return(nums[1:2])\n  }\n}\n\ntwo_unique_nums(c(1, 2, 3, 4, 5, 5, 4, 3, 2, 1))\n",
    "\n  nums <- unique(nums)\n  return(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n    # Your code here\n    nums <- unique(nums)\n    return(nums)\n}\n",
    "\n    nums <- unique(nums)\n    return(nums[1:2])\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  # Write your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  # Your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  # YOUR CODE HERE\n  nums <- unique(nums)\n  if (length(nums) == 2) {\n    return(nums)\n  } else {\n    return(c(nums[1], nums[2]))\n  }\n}\ntwo_unique_nums(c(1, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 9))\n",
    "\n  # Write your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  nums <- nums[!duplicated(nums)]\n  return(nums)\n}\n",
    "\n  unique_nums <- unique(nums)\n  if (length(unique_nums) > 2) {\n    return(unique_nums[1:2])\n  } else {\n    return(unique_nums)\n  }\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9))\n",
    "\n  nums <- unique(nums)\n  nums <- nums[nums != 0]\n  if (length(nums) == 2) {\n    return(nums)\n  } else {\n    return(c(0,0))\n  }\n}\n",
    "\n  unique(nums)\n}\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  nums <- unique(nums)\n  if (length(nums) > 2) {\n    nums <- nums[1:2]\n  }\n  return(nums)\n}\n",
    "\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  # YOUR CODE HERE\n  return(nums[!duplicated(nums)])\n}\n",
    "\n    # Your code here\n}\n",
    "\n  unique(nums)\n}\n",
    "\n  # Write your code here\n  nums <- sort(nums)\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  # Your code here\n  nums <- unique(nums)\n  if (length(nums) == 2) {\n    return(nums)\n  } else {\n    return(c(NA, NA))\n  }\n}\n\ntwo_unique_nums(c(1, 2, 3, 4, 5))\ntwo_unique_nums(c(1, 2, 3, 4, 5, 1, 2, 3, 4, 5))\ntwo_unique_nums(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\ntwo_unique_nums(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\ntwo_unique_nums(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))\ntwo_unique_nums(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))\n",
    "\n  # Your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  nums <- unique(nums)\n  if (length(nums) == 2) {\n    return(nums)\n  } else {\n    return(c(NA, NA))\n  }\n}\n\ntwo_unique_nums(c(1, 2, 3, 4, 5))\ntwo_unique_nums(c(1, 2, 3, 4, 5, 6))\ntwo_unique_nums(c(1, 2, 3, 4, 5, 6, 7))\n",
    "\n  nums <- unique(nums)\n  return(nums[1:2])\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  # Your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n    nums <- unique(nums)\n    if (length(nums) == 2) {\n        return(nums)\n    } else {\n        return(c(nums[1], nums[2]))\n    }\n}\n\ntwo_unique_nums(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\ntwo_unique_nums(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1))\ntwo_unique_nums(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\ntwo_unique_nums(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n",
    "\n  unique_nums <- unique(nums)\n  if (length(unique_nums) >= 2) {\n    return(unique_nums[1:2])\n  } else {\n    return(unique_nums)\n  }\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n    # Remove duplicates\n    nums <- unique(nums)\n    \n    # Return the first two numbers\n    return(nums[1:2])\n}\n",
    "\n  # Write your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  # Write your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n    # Write your code here\n    nums <- sort(nums)\n    return(unique(nums))\n}\n ",
    "\n  unique(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  nums <- sort(nums)\n  return(nums[1:2])\n}\n\ntwo_unique_nums(c(1, 2, 3, 4, 3, 2, 1))\n",
    "\n  nums <- unique(nums)\n  return(nums[1:2])\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  nums <- unique(nums)\n  if (length(nums) < 2) {\n    return(nums)\n  } else {\n    return(nums[1:2])\n  }\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  nums <- unique(nums)\n  return(nums[1:2])\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  # Write your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  nums <- sort(nums)\n  nums[length(nums)]\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9))\n",
    "\n  nums <- unique(nums)\n  if (length(nums) >= 2) {\n    return(nums[1:2])\n  } else {\n    return(nums)\n  }\n}\n\ntwo_unique_nums(c(1,2,3,4,5))\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20))\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30))\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40))\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50))\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40",
    "\n  nums <- sort(nums)\n  return(nums[1:2])\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20))\n",
    "\n  # Your code here\n  unique(nums)\n}\n",
    "\n  # Write your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  nums <- unique(nums)\n  return(nums[1:2])\n}\n",
    "\n  unique(nums)\n}\n",
    "\n  # Write your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  nums <- unique(nums)\n  if (length(nums) == 2) {\n    return(nums)\n  } else {\n    return(c(nums[1], nums[2]))\n  }\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  unique(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  nums <- sort(nums)\n  return(nums[1:2])\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n    nums <- unique(nums)\n    return(nums)\n}\n",
    "\n  nums <- unique(nums)\n  return(nums[length(nums)])\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20))\n",
    "\n  # Write your code here\n  unique_nums <- unique(nums)\n  if(length(unique_nums) >= 2) {\n    return(unique_nums[1:2])\n  } else {\n    return(unique_nums)\n  }\n}\n",
    "\n    nums <- nums[!duplicated(nums)]\n    return(nums)\n}\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20))\n",
    "\n  unique_nums <- unique(nums)\n  if (length(unique_nums) < 2) {\n    return(c(NA, NA))\n  } else {\n    return(unique_nums[1:2])\n  }\n}\n\ntwo_unique_nums(c(1, 2, 3, 4, 5))\ntwo_unique_nums(c(1, 2, 3, 4, 5, 1, 2, 3, 4))\ntwo_unique_nums(c(1, 1, 1, 1, 1))\n",
    "\n  # Write your code here\n  unique(nums)\n}\n",
    "\n  # Write your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  # Your code here\n  nums <- unique(nums)\n  return(nums[1:2])\n}\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  # Your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  nums <- unique(nums)\n  return(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  nums <- unique(nums)\n  if (length(nums) < 2) {\n    return(c(NA, NA))\n  } else {\n    return(nums[1:2])\n  }\n}\n\ntwo_unique_nums(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n",
    "\n  nums <- nums[!duplicated(nums)]\n  return(nums)\n}\n",
    "\n  nums <- unique(nums)\n  if (length(nums) >= 2) {\n    return(nums[1:2])\n  } else {\n    return(nums)\n  }\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  # Write your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  # Your code here\n  unique(nums)\n}\n",
    "\n  nums <- unique(nums)\n  if (length(nums) == 1) {\n    return(nums)\n  } else {\n    return(nums[1:2])\n  }\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  # Your code here\n  nums <- unique(nums)\n  return(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  # Remove duplicates\n  nums <- unique(nums)\n  # Return the first two elements\n  return(nums[1:2])\n}\n",
    "\n  unique(nums)\n}\n\ntwo_unique_nums(c(1,1,2,3,4,4,5,6,6,7,7,8,9,9))\n",
    "\n  # Your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  nums <- unique(nums)\n  if (length(nums) >= 2) {\n    return(nums[1:2])\n  }\n  else {\n    return(nums)\n  }\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  # Your code here\n  nums <- unique(nums)\n  return(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  # Write your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  unique(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  # Remove duplicates\n  nums <- unique(nums)\n  # Return the first two numbers\n  return(nums[1:2])\n}\n",
    "\n    nums <- unique(nums)\n    nums <- nums[!is.na(nums)]\n    if (length(nums) < 2) {\n        return(c(NA, NA))\n    }\n    return(nums[1:2])\n}\n\ntwo_unique_nums(c(1, 2, 3, 4, 3, 2, 1, 2, 3, 4, 3, 2, 1))\n",
    "\n  # Write your code here\n  unique(nums)\n}\n",
    "\n  unique(nums)\n}\n\ntwo_unique_nums(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n",
    "\n    # Your code here\n    nums <- unique(nums)\n    return(nums)\n}\n",
    "\n  # Your code goes here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n    nums <- sort(nums)\n    nums <- nums[!duplicated(nums)]\n    return(nums)\n}\n",
    "\n  # Your code here\n  nums <- unique(nums)\n  return(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  nums <- unique(nums)\n  if (length(nums) == 1) {\n    return(nums)\n  } else {\n    return(nums[1:2])\n  }\n}\n",
    "\n  # Write your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n    # Remove duplicates\n    nums <- unique(nums)\n    # Return the first two numbers\n    return(nums[1:2])\n}\n",
    "\n  nums <- sort(nums)\n  if (length(nums) == 1) {\n    return(nums)\n  } else if (nums[1] == nums[2]) {\n    return(two_unique_nums(nums[-1]))\n  } else if (nums[length(nums)] == nums[length(nums) - 1]) {\n    return(two_unique_nums(nums[-length(nums)]))\n  } else {\n    return(nums)\n  }\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185",
    "\n  # Write your code here\n  unique_nums <- unique(nums)\n  return(unique_nums)\n}\n",
    "\n  # Remove duplicates\n  nums <- unique(nums)\n  # Return the first two numbers\n  return(nums[1:2])\n}\n",
    "\n  # Your code here\n  nums <- sort(nums)\n  nums[nums != nums[1]]\n}\n",
    "\n  # Your code here\n  nums <- unique(nums)\n  nums <- nums[nums > 0]\n  nums <- nums[nums < 100]\n  nums <- nums[order(nums)]\n  return(nums)\n}\n",
    "\n  # Remove duplicates\n  nums <- unique(nums)\n  # Return the first two numbers\n  return(nums[1:2])\n}\n",
    "\n  nums <- sort(nums)\n  nums[nums != nums[1]]\n}\ntwo_unique_nums(c(1,1,2,3,3,4,4,5,5))\n",
    "\n  unique(nums)\n}\n",
    "\n  nums <- unique(nums)\n  if (length(nums) < 2) {\n    return(c(NA, NA))\n  } else {\n    return(nums[1:2])\n  }\n}\n\ntwo_unique_nums(c(1, 2, 3, 4, 5))\ntwo_unique_nums(c(1, 1, 1, 1, 1))\ntwo_unique_nums(c(1, 1, 2, 2, 3))\n",
    "\n    # Write your code here\n    nums <- unique(nums)\n    return(nums)\n}\n",
    "\n  # Your code here\n  return(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  nums <- sort(nums)\n  nums[nums != nums[1]]\n}\n\ntwo_unique_nums(c(1,1,1,2,2,3,3,4,4,5,5))\n",
    "\n  unique_nums <- unique(nums)\n  if (length(unique_nums) < 2) {\n    return(c(NA, NA))\n  } else {\n    return(unique_nums[1:2])\n  }\n}\n",
    "\n  # Write your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  # Create a vector of unique numbers\n  unique_nums <- unique(nums)\n  # If the length of the vector is less than 2, return the vector\n  if (length(unique_nums) < 2) {\n    return(unique_nums)\n  }\n  # If the length of the vector is greater than 2, return the first two elements of the vector\n  else {\n    return(unique_nums[1:2])\n  }\n}\n",
    "\n  nums <- unique(nums)\n  if (length(nums) < 2) {\n    return(c(NA, NA))\n  } else {\n    return(nums[1:2])\n  }\n}\n\ntwo_unique_nums(c(1, 2, 3, 4, 5))\ntwo_unique_nums(c(1, 2, 3, 4, 5, 1, 2, 3, 4, 5))\ntwo_unique_nums(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1))\n",
    "\n  # Write your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  # Your code here\n  return(unique(nums))\n}\n",
    "\n  # Write your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  nums <- unique(nums)\n  return(nums[length(nums)])\n}\n",
    "\n  # Write your code here\n  nums <- unique(nums)\n  if(length(nums) == 2) {\n    return(nums)\n  } else {\n    return(c(nums[1], nums[2]))\n  }\n}\n",
    "\n  # Remove duplicates from the list\n  nums <- unique(nums)\n  # Return the first two numbers\n  return(nums[1:2])\n}\n",
    "\n  nums <- unique(nums)\n  nums <- nums[nums != 0]\n  return(nums)\n}\n\ntwo_unique_nums(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n",
    "\n  # Write your code here\n  # Remove duplicates\n  nums <- unique(nums)\n  # Return the first two numbers\n  return(nums[1:2])\n}\n",
    "\n  # Write your code here\n  return(unique(nums))\n}\n",
    "\n  nums <- unique(nums)\n  if (length(nums) < 2) {\n    return(c(nums, rep(NA, 2 - length(nums))))\n  } else {\n    return(nums[1:2])\n  }\n}\n\ntwo_unique_nums(c(1, 2, 3, 4, 5))\ntwo_unique_nums(c(1, 1, 1, 1, 1))\ntwo_unique_nums(c(1, 1, 2, 2, 3))\ntwo_unique_nums(c(1, 1, 2, 3, 3))\ntwo_unique_nums(c(1, 2, 3, 4, 5, 5))\ntwo_unique_nums(c(1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 5))\n",
    "\n  unique(nums)\n}\n\ntwo_unique_nums(c(1,1,2,3,3,4,5,5,6,6,7,7,8,8,9,9))\n",
    "\n  nums <- unique(nums)\n  if (length(nums) == 2) {\n    return(nums)\n  } else {\n    return(c(nums[1], nums[2]))\n  }\n}\n\ntwo_unique_nums(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n",
    "\n  nums <- sort(nums)\n  if (length(nums) == 1) {\n    return(nums)\n  }\n  if (nums[1] == nums[2]) {\n    nums <- nums[-1]\n    return(two_unique_nums(nums))\n  } else {\n    return(nums)\n  }\n}\n\ntwo_unique_nums(c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
    "\n  # Your code here\n  unique(nums)\n}\n",
    "\n    # Remove duplicates\n    nums <- unique(nums)\n    # Return the first two numbers\n    return(nums[1:2])\n}\n",
    "\n  # Write your code here\n  nums <- unique(nums)\n  return(nums[1:2])\n}\n",
    "\n  nums <- sort(nums)\n  nums[nums != nums[1] & nums != nums[length(nums)]]\n}\n\ntwo_unique_nums(c(1,1,1,2,2,3,3,4,4,5,5))\n",
    "\n  # Your code goes here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  # Write your code here\n  unique(nums)\n}\n",
    "\n  # Write your code here\n  nums <- unique(nums)\n  return(nums)\n}\n",
    "\n  nums <- unique(nums)\n  if (length(nums) > 2) {\n    nums <- nums[1:2]\n  }\n  return(nums)\n}\n",
    "\n  # Create a vector of unique numbers\n  unique_nums <- unique(nums)\n  # Return the first two unique numbers\n  return(unique_nums[1:2])\n}\n",
    "\n  nums <- unique(nums)\n  if (length(nums) == 2) {\n    return(nums)\n  } else {\n    return(c(nums[1], nums[2]))\n  }\n}\n",
    "\n  # Remove duplicates\n  nums <- unique(nums)\n  \n  # Return the first two numbers\n  return(nums[1:2])\n}\n",
    "\n  # Remove duplicates\n  nums <- unique(nums)\n  # Return the first two numbers\n  return(nums[1:2])\n}\n",
    "\n  unique(nums)\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))\n",
    "\n  # Your code here\n  return(unique(nums))\n}\n",
    "\n  # your code here\n}\n\ntwo_unique_nums(c(1,2,3,4,5,6,7,8,9,10))",
    "\n  unique(nums)\n}\n\ntwo_unique_nums(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n",
    "\n  nums <- unique(nums)\n  if (length(nums) == 2) {\n    return(nums)\n  } else {\n    return(c(nums[1], nums[2]))\n  }\n}\n\ntwo_unique_nums(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n"
  ]
}
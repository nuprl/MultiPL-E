name: HumanEval_88_sort_array
language: r
prompt: "# Given an array of non-negative integers, return a copy of the given array\
  \ after sorting,\n# you will sort the given array in ascending order if the sum(\
  \ first index value, last index value) is odd,\n# or sort it in descending order\
  \ if the sum( first index value, last index value) is even.\n# Note:\n# * don't\
  \ change the given array.\n# Examples:\nsort_array <- function(array) {"
tests: "test_humaneval <- function() {\ncandidate <- sort_array\n    if(!identical(candidate(c()),\
  \ list())){quit('no', 1)}\n    if(!identical(candidate(c(5)), list(5))){quit('no',\
  \ 1)}\n    if(!identical(candidate(c(2, 4, 3, 0, 1, 5)), list(0, 1, 2, 3, 4, 5))){quit('no',\
  \ 1)}\n    if(!identical(candidate(c(2, 4, 3, 0, 1, 5, 6)), list(6, 5, 4, 3, 2,\
  \ 1, 0))){quit('no', 1)}\n    if(!identical(candidate(c(2, 1)), list(1, 2))){quit('no',\
  \ 1)}\n    if(!identical(candidate(c(15, 42, 87, 32, 11, 0)), list(0, 11, 15, 32,\
  \ 42, 87))){quit('no', 1)}\n    if(!identical(candidate(c(21, 14, 23, 11)), list(23,\
  \ 21, 14, 11))){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  # your code here\n}\n", "\n  # Your code here\n}\n", "\n  # your\
    \ code here\n}", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n \
    \   return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  # your code here\n}\n\nsort_array(c(1, 2, 3, 4, 5)) # should\
    \ return c(5, 4, 3, 2, 1)\nsort_array(c(1, 2, 3, 4, 5, 6)) # should return c(6,\
    \ 5, 4, 3, 2, 1)\nsort_array(c(1, 2, 3, 4, 5, 6, 7)) # should return c(7, 6, 5,\
    \ 4, 3, 2, 1)\nsort_array(c(1, 2, 3, 4, 5, 6, 7, 8)) # should return c(8, 7, 6,\
    \ 5, 4, 3, 2, 1)\nsort_array(c(1, 2, 3, 4, 5, 6, 7, 8, 9)) # should return c(9,\
    \ 8, 7, 6, 5, 4, 3, 2, 1)\nsort_array(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) # should\
    \ return c(10, 9, 8, 7, 6, 5, 4, 3, 2, 1)\nsort_array(c(1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11)) # should return c(11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1)\nsort_array(c(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)) # should return c(12, 11, 10, 9, 8, 7,\
    \ 6, 5, 4, 3, 2, 1)\nsort_array(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))\
    \ # should return c(13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1)\nsort_array(c(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14)) # should return c(14, 13, 12, 11,\
    \ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1)\nsort", "\n  if (sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    sort(array, decreasing\
    \ = TRUE)\n  } else {\n    sort(array)\n  }\n}\n\nsort_array(c(1, 2, 3, 4, 5))\n\
    sort_array(c(1, 3, 2, 4, 5))\nsort_array(c(1, 2, 3, 4, 5, 6))\nsort_array(c(1,\
    \ 3, 2, 4, 5, 6))\n", "\n  if (sum(c(array[1], array[length(array)])) %% 2 ==\
    \ 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if(sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  # your code here\n\
    }\n\nsort_array(c(1, 2, 3, 4, 5)) # [1] 5 4 3 2 1\nsort_array(c(1, 2, 3, 4, 5,\
    \ 6)) # [1] 6 5 4 3 2 1\nsort_array(c(1, 2, 3, 4, 5, 6, 7)) # [1] 7 6 5 4 3 2\
    \ 1\nsort_array(c(1, 2, 3, 4, 5, 6, 7, 8)) # [1] 8 7 6 5 4 3 2 1\nsort_array(c(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9)) # [1] 9 8 7 6 5 4 3 2 1\nsort_array(c(1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10)) # [1] 10 9 8 7 6 5 4 3 2 1\nsort_array(c(1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11)) # [1] 11 10 9 8 7 6 5 4 3 2 1\nsort_array(c(1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12)) # [1] 12 11 10 9 8 7 6 5 4 3 2 1\nsort_array(c(1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13)) # [1] 13 12 11 10 9 8 7 6 5 4 3 2 1\n\
    sort_array(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14)) # [1] 14 13 12 11\
    \ 10 9 8 7 6 5 4 3 2 1\nsort_array(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15)) # [1] 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\nsort_array(c(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16)) # [1] 16 15 14 13 12 11 10 9", "\n\
    \  # your code here\n  if(sum(array[1],array[length(array)]) %% 2 == 0){\n   \
    \ return(sort(array,decreasing = TRUE))\n  }else{\n    return(sort(array))\n \
    \ }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  #\
    \ your code here\n}\n", "\n  if (sum(c(array[1], array[length(array)])) %% 2 ==\
    \ 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n\nsort_array(c(1, 2, 3, 4, 5))\nsort_array(c(1, 2, 3, 4, 5, 6))\n", "\n\
    \  if(sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  # your code here\n\
    }\n\nsort_array(c(1, 2, 3, 4, 5)) # [1] 5 4 3 2 1\nsort_array(c(1, 2, 3, 4, 5,\
    \ 6)) # [1] 6 5 4 3 2 1\nsort_array(c(1, 2, 3, 4, 5, 6, 7)) # [1] 7 6 5 4 3 2\
    \ 1\nsort_array(c(1, 2, 3, 4, 5, 6, 7, 8)) # [1] 8 7 6 5 4 3 2 1\nsort_array(c(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9)) # [1] 9 8 7 6 5 4 3 2 1\nsort_array(c(1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10)) # [1] 10 9 8 7 6 5 4 3 2 1\nsort_array(c(1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11)) # [1] 11 10 9 8 7 6 5 4 3 2 1\nsort_array(c(1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12)) # [1] 12 11 10 9 8 7 6 5 4 3 2 1\nsort_array(c(1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13)) # [1] 13 12 11 10 9 8 7 6 5 4 3 2 1\n\
    sort_array(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14)) # [1] 14 13 12 11\
    \ 10 9 8 7 6 5 4 3 2 1\nsort_array(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15)) # [1] 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\nsort_array(c(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16)) # [1] 16 15 14 13 12 11 10 9", "\n\
    \  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if(sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if(sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(c(array[1], array[length(array)]))\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  #\
    \ your code here\n}\n", "\n  if (sum(c(array[1], array[length(array)])) %% 2 ==\
    \ 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  # your code here\n}\n\nsort_array(c(1, 2, 3, 4, 5))", "\n  if\
    \ (sum(c(array[1], array[length(array)])) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  # your code here\n}\n",
  "\n  if(sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  #\
    \ your code here\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0)\
    \ {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(c(array[1], array[length(array)])) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(c(array[1], array[length(array)])) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(c(array[1],\
    \ array[length(array)])) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  if(sum(c(array[1], array[length(array)]))\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  # your code here\n}\n\nsort_array(c(1, 2, 3, 4, 5)) # should\
    \ return c(5, 4, 3, 2, 1)\nsort_array(c(1, 2, 3, 4, 5, 6)) # should return c(6,\
    \ 5, 4, 3, 2, 1)\nsort_array(c(1, 2, 3, 4, 5, 6, 7)) # should return c(7, 6, 5,\
    \ 4, 3, 2, 1)\nsort_array(c(1, 2, 3, 4, 5, 6, 7, 8)) # should return c(8, 7, 6,\
    \ 5, 4, 3, 2, 1)\nsort_array(c(1, 2, 3, 4, 5, 6, 7, 8, 9)) # should return c(9,\
    \ 8, 7, 6, 5, 4, 3, 2, 1)\nsort_array(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) # should\
    \ return c(10, 9, 8, 7, 6, 5, 4, 3, 2, 1)\nsort_array(c(1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11)) # should return c(11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1)\nsort_array(c(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)) # should return c(12, 11, 10, 9, 8, 7,\
    \ 6, 5, 4, 3, 2, 1)\nsort_array(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))\
    \ # should return c(13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1)\nsort_array(c(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14)) # should return c(14, 13, 12, 11,\
    \ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1)\nsort", "\n  if (sum(c(array[1], array[length(array)]))\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  # your code here\n}\n",
  "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(c(array[1],\
    \ array[length(array)])) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  # your code here\n}\n",
  "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n   \
    \ # Your code here\n}\n", "\n  if(sum(array[1], array[length(array)]) %% 2 ==\
    \ 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  # your code here\n}\n", "\n  # Your code here\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(c(array[1], array[length(array)])) %% 2 == 0) {\n   \
    \ return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(c(array[1], array[length(array)])) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  # your code here\n}\nsort_array(c(1,\
    \ 2, 3, 4, 5)) # should return c(5, 3, 1, 2, 4)\nsort_array(c(0, 1, 2, 3, 4, 5))\
    \ # should return c(5, 3, 1, 0, 2, 4)\nsort_array(c(6, 7, 11, 12, 13, 14)) # should\
    \ return c(14, 12, 6, 7, 11, 13)\n", "\n  if (sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n\nsort_array(c(1, 2, 3, 4, 5))\nsort_array(c(1, 2, 3, 4, 5, 6))\n", "\n\
    \  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(c(array[1], array[length(array)])) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  #\
    \ Write your code here\n  if(sum(array[1],array[length(array)]) %% 2 == 0){\n\
    \    return(sort(array,decreasing = TRUE))\n  }else{\n    return(sort(array))\n\
    \  }\n}\n", "\n  # your code here\n}\n", "\n  if(sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if(sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}", "\n  if (sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  # your code here\n}", "\n  # Your code here\n}\n", "\n  if (sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    sort(array, decreasing = TRUE)\n  }\
    \ else {\n    sort(array)\n  }\n}\n", "\n  if(sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if(sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  # your code here\n}\n\n\
    sort_array(c(1,2,3,4,5)) # should return c(5,3,1,2,4)\nsort_array(c(1,2,3,4,5,6))\
    \ # should return c(6,4,2,1,3,5)\nsort_array(c(1,2,3,4,5,6,7)) # should return\
    \ c(7,5,3,1,2,4,6)\nsort_array(c(1,2,3,4,5,6,7,8)) # should return c(8,6,4,2,1,3,5,7)\n\
    sort_array(c(1,2,3,4,5,6,7,8,9)) # should return c(9,7,5,3,1,2,4,6,8)\nsort_array(c(1,2,3,4,5,6,7,8,9,10))\
    \ # should return c(10,8,6,4,2,1,3,5,7,9)\nsort_array(c(1,2,3,4,5,6,7,8,9,10,11))\
    \ # should return c(11,9,7,5,3,1,2,4,6,8,10)\nsort_array(c(1,2,3,4,5,6,7,8,9,10,11,12))\
    \ # should return c(12,10,8,6,4,2,1,3,5,7,9,11)\nsort_array(c(1,2,3,4,5,6,7,8,9,10,11,12,13))\
    \ # should return c(13,11,9,7,5,3,1,2,4,6,8,10,12)\nsort_array(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14))\
    \ # should return c(14,12,10,8,6,4,2,1,3,5,7,9,11,13)\nsort", "\n  # write your\
    \ code here\n  if(sum(c(array[1],array[length(array)])) %% 2 == 0){\n    return(sort(array,decreasing\
    \ = TRUE))\n  }\n  else{\n    return(sort(array))\n  }\n}", "\n  if (sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  # your code here\n}\n",
  "\n  # your code here\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 ==\
    \ 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  #\
    \ your code here\n  if(sum(array[1],array[length(array)]) %% 2 == 0){\n    return(sort(array,decreasing\
    \ = TRUE))\n  }else{\n    return(sort(array))\n  }\n}\n", "\n  # your code here\n\
    }\n\nsort_array(c(1, 2, 3, 4, 5)) # [1] 5 4 3 2 1\nsort_array(c(1, 2, 3, 4, 5,\
    \ 6)) # [1] 6 5 4 3 2 1\nsort_array(c(1, 2, 3, 4, 5, 6, 7)) # [1] 7 6 5 4 3 2\
    \ 1\nsort_array(c(1, 2, 3, 4, 5, 6, 7, 8)) # [1] 8 7 6 5 4 3 2 1\nsort_array(c(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9)) # [1] 9 8 7 6 5 4 3 2 1\nsort_array(c(1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10)) # [1] 10 9 8 7 6 5 4 3 2 1\nsort_array(c(1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11)) # [1] 11 10 9 8 7 6 5 4 3 2 1\nsort_array(c(1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12)) # [1] 12 11 10 9 8 7 6 5 4 3 2 1\nsort_array(c(1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13)) # [1] 13 12 11 10 9 8 7 6 5 4 3 2 1\n\
    sort_array(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14)) # [1] 14 13 12 11\
    \ 10 9 8 7 6 5 4 3 2 1\nsort_array(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15)) # [1] 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\nsort_array(c(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16)) # [1] 16 15 14 13 12 11 10 9", "\n\
    \  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if(sum(c(array[1],\
    \ array[length(array)])) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  # your code here\n\
    }\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if(sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  # your code here\n}\n", "\n  if (sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(c(array[1], array[length(array)])) %% 2 == 0) {\n   \
    \ return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if(sum(c(array[1],\
    \ array[length(array)])) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  # your code here\n  if(sum(array[1],array[length(array)])\
    \ %% 2 == 0){\n    return(sort(array,decreasing = TRUE))\n  }else{\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(c(array[1], array[length(array)])) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(c(array[1],\
    \ array[length(array)])) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(c(array[1], array[length(array)]))\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if(sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  # your code here\n\
    }\n\nsort_array(c(1, 2, 3, 4, 5)) # should return c(5, 4, 3, 2, 1)\nsort_array(c(1,\
    \ 2, 3, 4, 5, 6)) # should return c(6, 5, 4, 3, 2, 1)\nsort_array(c(1, 2, 3, 4,\
    \ 5, 6, 7)) # should return c(7, 6, 5, 4, 3, 2, 1)\nsort_array(c(1, 2, 3, 4, 5,\
    \ 6, 7, 8)) # should return c(8, 7, 6, 5, 4, 3, 2, 1)\nsort_array(c(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9)) # should return c(9, 8, 7, 6, 5, 4, 3, 2, 1)\nsort_array(c(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10)) # should return c(10, 9, 8, 7, 6, 5, 4, 3, 2, 1)\n\
    sort_array(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) # should return c(11, 10, 9,\
    \ 8, 7, 6, 5, 4, 3, 2, 1)\nsort_array(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))\
    \ # should return c(12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1)\nsort_array(c(1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13)) # should return c(13, 12, 11, 10, 9, 8,\
    \ 7, 6, 5, 4, 3, 2, 1)\nsort_array(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14)) # should return c(14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1)\nsort",
  "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    sort(array, decreasing\
    \ = TRUE)\n  } else {\n    sort(array)\n  }\n}\n", "\n  if (sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  #\
    \ your code here\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0)\
    \ {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  # your code here\n\
    }", "\n  if (sum(c(array[1], array[length(array)])) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if(sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  # your code here\n}\n\n\
    sort_array(c(1, 2, 3, 4, 5)) # should return c(1, 3, 5, 4, 2)\nsort_array(c(1,\
    \ 2, 3, 4, 5, 6)) # should return c(5, 3, 1, 2, 4, 6)\nsort_array(c(1, 2, 3, 4,\
    \ 5, 6, 7)) # should return c(1, 3, 5, 7, 6, 4, 2)\nsort_array(c(1, 2, 3, 4, 5,\
    \ 6, 7, 8)) # should return c(1, 3, 5, 7, 8, 6, 4, 2)\nsort_array(c(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9)) # should return c(1, 3, 5, 7, 9, 8, 6, 4, 2)\nsort_array(c(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10)) # should return c(1, 3, 5, 7, 9, 10, 8, 6, 4, 2)\n\
    sort_array(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) # should return c(1, 3, 5, 7,\
    \ 9, 11, 10, 8, 6, 4, 2)\nsort_array(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))\
    \ # should return c(1, 3, 5, 7, 9, 11, 12, 10, 8, 6, 4, 2)\nsort_array(c(1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13)) # should return c(1, 3, 5, 7, 9, 11, 13,\
    \ 12, 10, 8, 6, 4, 2)\nsort_array(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14)) # should return c(1, 3, 5, 7, 9, 11, 13, 14, 12, 10, 8, 6, 4, 2)\nsort",
  "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  # your code here\n}\n",
  "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}", "\n  if (sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  # write your code here\n\
    \  if(sum(array[1],array[length(array)])%%2==0){\n    return(sort(array,decreasing\
    \ = TRUE))\n  }else{\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  if(sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if(sum(c(array[1], array[length(array)])) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  #\
    \ your code here\n}\n\nsort_array(c(1, 2, 3, 4, 5)) # should return c(5, 3, 1,\
    \ 2, 4)\nsort_array(c(0, 1, 2, 3, 4, 5)) # should return c(5, 3, 1, 0, 2, 4)\n\
    sort_array(c(6, 7, 11, 12, 13, 14)) # should return c(14, 12, 6, 7, 11, 13)",
  "\n  # your code here\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 ==\
    \ 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if(sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if(sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  # your code here\n\
    }\n\nsort_array(c(1, 2, 3, 4, 5)) # should return c(5, 3, 1, 2, 4)\nsort_array(c(0,\
    \ 1, 2, 3, 4, 5)) # should return c(5, 3, 1, 0, 2, 4)\nsort_array(c(1, 11, 2,\
    \ 22, 3, 33)) # should return c(11, 3, 1, 2, 22, 33)\nsort_array(c(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10)) # should return c(10, 2, 4, 6, 8, 1, 3, 5, 7, 9)\nsort_array(c(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) # should return c(11, 3, 5, 7, 9, 1, 2, 4,\
    \ 6, 8, 10)\nsort_array(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)) # should return\
    \ c(12, 2, 4, 6, 8, 10, 1, 3, 5, 7, 9, 11)\nsort_array(c(1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13)) # should return c(13, 3, 5, 7, 9, 11, 1, 2, 4, 6, 8,\
    \ 10, 12)\nsort_array(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14)) # should\
    \ return c(14, 2, 4, 6, 8, 10, 12, 1, 3, 5, 7, 9, 11, 13)\nsort_array(c(1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)) # should return c(15, 3, 5, 7,\
    \ 9, 11, 13, 1, 2, 4, 6, 8, 10, 12, 14)\nsort_array(c(1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10", "\n  if (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array,\
    \ decreasing = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if\
    \ (sum(array[1], array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing\
    \ = TRUE))\n  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1],\
    \ array[length(array)]) %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n\
    \  } else {\n    return(sort(array))\n  }\n}\n", "\n  if (sum(array[1], array[length(array)])\
    \ %% 2 == 0) {\n    return(sort(array, decreasing = TRUE))\n  } else {\n    return(sort(array))\n\
    \  }\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

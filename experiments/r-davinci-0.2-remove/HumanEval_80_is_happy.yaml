name: HumanEval_80_is_happy
language: r
prompt: "# You are given a string s.\n# Your task is to check if the string is happy\
  \ or not.\n# A string is happy if its length is at least 3 and every 3 consecutive\
  \ letters are distinct\n# For example:\nis_happy <- function(s) {"
tests: "test_humaneval <- function() {\ncandidate <- is_happy\n    if(!identical(candidate('a'),\
  \ FALSE)){quit('no', 1)}\n    if(!identical(candidate('aa'), FALSE)){quit('no',\
  \ 1)}\n    if(!identical(candidate('abcd'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('aabb'),\
  \ FALSE)){quit('no', 1)}\n    if(!identical(candidate('adb'), TRUE)){quit('no',\
  \ 1)}\n    if(!identical(candidate('xyy'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('iopaxpoi'),\
  \ TRUE)){quit('no', 1)}\n    if(!identical(candidate('iopaxioi'), FALSE)){quit('no',\
  \ 1)}\n}\ntest_humaneval()"
completions: ["\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s)\
    \ - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n\
    \  if (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n",
  "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n\
    \  if (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n",
  "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"abcabcabc\"\
    )\nis_happy(\"abcabca\")\nis_happy(\"abcabcab\")\n", "\n  if (nchar(s) < 3) {\n\
    \    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i,\
    \ i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n\
    }\n\nis_happy(\"abcabc\")\nis_happy(\"abccba\")\nis_happy(\"abccaa\")\nis_happy(\"\
    abc\")\nis_happy(\"ab\")\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n\
    \  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i +\
    \ 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"\
    abcabc\")\nis_happy(\"abccba\")\nis_happy(\"abccbx\")\nis_happy(\"abc\")\nis_happy(\"\
    xxxx\")\nis_happy(\"1991\")\nis_happy(\"abcabcabc\")\nis_happy(\"abcabcabx\")\n\
    is_happy(\"abcabcab\")\nis_happy(\"abcabcx\")\nis_happy(\"aaaa\")\nis_happy(\"\
    a\")\nis_happy(\"aa\")\nis_happy(\"x\")\nis_happy(\"\")\n", "\n  if (nchar(s)\
    \ < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n \
    \ return(TRUE)\n}\n\nis_happy(\"abcabc\") # FALSE\nis_happy(\"abcabcabc\") # TRUE\n\
    is_happy(\"abcabcd\") # TRUE\nis_happy(\"abccba\") # FALSE\n", "\n  if (nchar(s)\
    \ < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n \
    \ return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"abccba\")\nis_happy(\"abccbx\"\
    )\nis_happy(\"abc\")\nis_happy(\"ab\")\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n\
    \  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"abcabcd\")\n\
    is_happy(\"abcabcabc\")\nis_happy(\"abcabcabcd\")\nis_happy(\"abccba\")\nis_happy(\"\
    abccbab\")\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s)\
    \ - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"happy\")\nis_happy(\"happ\")\nis_happy(\"\
    ha\")\nis_happy(\"happp\")\nis_happy(\"happpp\")\n", "\n  if (nchar(s) < 3) return(FALSE)\n\
    \  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i +\
    \ 1, i + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"\
    abccba\")\nis_happy(\"abccbx\")\nis_happy(\"abc\")\nis_happy(\"xxxxx\")\nis_happy(\"\
    xxxx\")\nis_happy(\"happy\")\nis_happy(\"happp\")\nis_happy(\"happ\")\n", "\n\
    \  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"happy\")\nis_happy(\"haaapy\")\n\
    is_happy(\"haaap\")\nis_happy(\"haa\")\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"\
    abcabc\")\nis_happy(\"abcabcd\")\nis_happy(\"abccba\")\nis_happy(\"abccbab\")\n",
  "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n\
    \  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  if(nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for(i in 1:(nchar(s)-2)) {\n    if(substr(s, i, i+2) == substr(s, i+1,\
    \ i+3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s)\
    \ < 3) return(FALSE)\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i\
    \ + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n", "\n\
    \  if (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n",
  "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  # Your code here\n  if(nchar(s)<3) return(FALSE)\n\
    \  for(i in 1:(nchar(s)-2)){\n    if(substr(s,i,i+2)==substr(s,i+1,i+3)) return(FALSE)\n\
    \  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n\
    \  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i +\
    \ 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n  #\
    \ Your code here\n  if(nchar(s)<3)\n    return(FALSE)\n  else\n    return(all(substr(s,1:3)==substr(s,2:4)))\n\
    }\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s)\
    \ - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"abcabcd\")\n\
    is_happy(\"abccba\")\nis_happy(\"abccbab\")\nis_happy(\"abccbabc\")\nis_happy(\"\
    abccbabcd\")\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in\
    \ 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3))\
    \ {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s)\
    \ < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n \
    \ return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for\
    \ (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i\
    \ + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s)\
    \ < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n \
    \ return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"abcabcd\")\nis_happy(\"\
    abccba\")\nis_happy(\"abccbab\")\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n\
    \  if (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i+2) == substr(s, i+1, i+3)) return(FALSE)\n  }\n  return(TRUE)\n}\n\nis_happy(\"\
    abcabc\")\nis_happy(\"abccba\")\nis_happy(\"abccbx\")\nis_happy(\"abc\")\nis_happy(\"\
    ab\")\n", "\n  if (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n \
    \ }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n\
    \  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i +\
    \ 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n  if(nchar(s)\
    \ < 3) return(FALSE)\n  for(i in 1:(nchar(s)-2)) {\n    if(substr(s, i, i+2) ==\
    \ substr(s, i+1, i+3)) return(FALSE)\n  }\n  return(TRUE)\n}\n", "\n  if(nchar(s)\
    \ < 3) return(FALSE)\n  for(i in 1:(nchar(s)-2)) {\n    if(substr(s, i, i+2) ==\
    \ substr(s, i+1, i+3)) return(FALSE)\n  }\n  return(TRUE)\n}\n\nis_happy(\"abc\"\
    )\nis_happy(\"abcc\")\nis_happy(\"abccb\")\nis_happy(\"abccba\")\nis_happy(\"\
    abccbac\")\nis_happy(\"abccbacb\")\n", "\n  if (nchar(s) < 3) return(FALSE)\n\
    \  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i +\
    \ 1, i + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"\
    abcabcd\")\nis_happy(\"abcabca\")\nis_happy(\"abccba\")\nis_happy(\"abccbab\"\
    )\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s)\
    \ - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) return(FALSE)\n  for\
    \ (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i\
    \ + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"\
    abcabcd\")\nis_happy(\"abcabcabc\")\nis_happy(\"abccba\")\nis_happy(\"abccbabccba\"\
    )\nis_happy(\"abccbabccbabccba\")\nis_happy(\"abccbabccbabccbabccba\")\nis_happy(\"\
    abccbabccbabccbabccbabccba\")\n", "\n  if (nchar(s) < 3) return(FALSE)\n  for\
    \ (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i\
    \ + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"\
    abcabcd\")\nis_happy(\"abccba\")\nis_happy(\"abcabcabc\")\nis_happy(\"abcabcabcd\"\
    )\nis_happy(\"abcabcabcabcd\")\nis_happy(\"abcabcabcabcabcd\")\n", "\n  if (nchar(s)\
    \ < 3) return(FALSE)\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i\
    \ + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n", "\n\
    \  # Write your code here\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for\
    \ (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i\
    \ + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s)\
    \ < 3) return(FALSE)\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i\
    \ + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n", "\n\
    \  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  if(nchar(s) < 3) return(FALSE)\n  for(i\
    \ in 1:(nchar(s)-2)) {\n    if(substr(s, i, i+2) == substr(s, i+1, i+3)) return(FALSE)\n\
    \  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"abcabcd\")\nis_happy(\"\
    abccba\")\nis_happy(\"abccbab\")\n", "\n    if (nchar(s) < 3) {\n        return(FALSE)\n\
    \    }\n    for (i in 1:(nchar(s) - 2)) {\n        if (substr(s, i, i + 2) ==\
    \ substr(s, i + 1, i + 3)) {\n            return(FALSE)\n        }\n    }\n  \
    \  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s)\
    \ - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n\
    \  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n\
    \  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i +\
    \ 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n  if\
    \ (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n\
    \    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"abcabcd\")\n\
    is_happy(\"aabbcc\")\nis_happy(\"aabbccdd\")\nis_happy(\"aabbccdde\")\n", "\n\
    \  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"abccba\")\n\
    is_happy(\"abccbx\")\nis_happy(\"abc\")\nis_happy(\"aaa\")\n", "\n  if (nchar(s)\
    \ < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n \
    \ return(TRUE)\n}\n", "\n  if (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s)\
    \ - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n\
    \  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"abcab\")\nis_happy(\"\
    abccba\")\nis_happy(\"abcabcabc\")\nis_happy(\"abcabcab\")\nis_happy(\"abcabcabcabc\"\
    )\nis_happy(\"abcabcabcab\")\nis_happy(\"abcabcabcabcabc\")\nis_happy(\"abcabcabcabcab\"\
    )\n", "\n  if (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s) - 2)) {\n\
    \    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n  }\n\
    \  return(TRUE)\n}\n\nis_happy(\"abc\")\nis_happy(\"abcc\")\nis_happy(\"abccc\"\
    )\nis_happy(\"abcdcba\")\nis_happy(\"abcdcbaa\")\nis_happy(\"abcdcbab\")\n", "\n\
    \  if (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n\
    \nis_happy(\"abcabc\")\nis_happy(\"abcabcabc\")\nis_happy(\"abcabcabcabc\")\n\
    is_happy(\"abcabcabcabcabc\")\nis_happy(\"abcabcabcabcabcabc\")\nis_happy(\"abcabcabcabcabcabcabc\"\
    )\nis_happy(\"abcabcabcabcabcabcabcabc\")\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in seq(1, nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"\
    abcabc\")\nis_happy(\"abcabcd\")\nis_happy(\"abcabcabc\")\nis_happy(\"abcabcab\"\
    )\nis_happy(\"abcab\")\n", "\n  # Your code here\n  if(nchar(s) < 3) return(FALSE)\n\
    \  for(i in 1:(nchar(s)-2)){\n    if(substr(s, i, i+2) == substr(s, i+1, i+3))\
    \ return(FALSE)\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n\
    \  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) return(FALSE)\n  for\
    \ (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i\
    \ + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"\
    abcabca\")\nis_happy(\"abcabcab\")\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"\
    abcabc\")\nis_happy(\"abccba\")\nis_happy(\"abc\")\nis_happy(\"ab\")\n", "\n \
    \ if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n\
    \    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) return(FALSE)\n  for\
    \ (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i\
    \ + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n\nis_happy(\"abccba\")\nis_happy(\"\
    abccbx\")\nis_happy(\"abccbxabccbxabccbxabccbx\")\nis_happy(\"abc\")\nis_happy(\"\
    ab\")\nis_happy(\"a\")\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n\
    \  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i +\
    \ 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n  if\
    \ (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n",
  "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"abcab\")\n\
    is_happy(\"abccba\")\nis_happy(\"abccbab\")\n", "\n  if (nchar(s) < 3) {\n   \
    \ return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i\
    \ + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n\
    }\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s)\
    \ - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"happy\")\nis_happy(\"happ\")\nis_happy(\"\
    ha\")\nis_happy(\"happp\")\nis_happy(\"happpy\")\n", "\n  if (nchar(s) < 3) {\n\
    \    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i,\
    \ i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n\
    }\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s)\
    \ - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"abcabcd\")\n\
    is_happy(\"abccba\")\nis_happy(\"abccbab\")\nis_happy(\"abccbabc\")\nis_happy(\"\
    abccbabcd\")\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in\
    \ 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3))\
    \ {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s)\
    \ < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n \
    \ return(TRUE)\n}\n\nis_happy(\"abc\")\nis_happy(\"abcc\")\nis_happy(\"abccc\"\
    )\nis_happy(\"abccb\")\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n\
    \  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i +\
    \ 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n  if(nchar(s)\
    \ < 3) return(FALSE)\n  for(i in 1:(nchar(s)-2)) {\n    if(substr(s, i, i+2) ==\
    \ substr(s, i+1, i+3)) return(FALSE)\n  }\n  return(TRUE)\n}", "\n  if (nchar(s)\
    \ < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n \
    \ return(TRUE)\n}\n\nis_happy(\"happy\")\nis_happy(\"happ\")\nis_happy(\"ha\"\
    )\nis_happy(\"happp\")\nis_happy(\"happpy\")\n", "\n  if (nchar(s) < 3) {\n  \
    \  return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i\
    \ + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n\
    }\n", "\n  # your code here\n}\n", "\n  # Your code here\n  if(nchar(s)<3)\n \
    \   return(FALSE)\n  else\n    return(all(substr(s,1:nchar(s)-2,3) != substr(s,2:nchar(s)-1,3))\
    \ & all(substr(s,1:nchar(s)-2,3) != substr(s,3:nchar(s),3)))\n}\n", "\n  if (nchar(s)\
    \ < 3) return(FALSE)\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i\
    \ + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n", "\n\
    \  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  # Your code here\n}\n", "\n  if (nchar(s)\
    \ < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n \
    \ return(TRUE)\n}\n", "\n  if (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s)\
    \ - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n\
    \  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n\
    \  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i+2) == substr(s, i+1,\
    \ i+3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\"\
    )\nis_happy(\"abcabcabc\")\nis_happy(\"abcabcabcabc\")\n", "\n  n <- nchar(s)\n\
    \  if (n < 3) return(FALSE)\n  for (i in 1:(n - 2)) {\n    if (substr(s, i, i\
    \ + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n\nis_happy(\"\
    abcabc\")\nis_happy(\"abcabcd\")\nis_happy(\"abcabcabc\")\nis_happy(\"abcabcabcd\"\
    )\nis_happy(\"abcabcabcabcd\")\nis_happy(\"abcabcabcabcabcd\")\n", "\n    if(nchar(s)\
    \ < 3) {\n        return(FALSE)\n    }\n    for(i in 1:(nchar(s)-2)) {\n     \
    \   if(substr(s, i, i+2) == substr(s, i+1, i+3)) {\n            return(FALSE)\n\
    \        }\n    }\n    return(TRUE)\n}\n", "\n  if (nchar(s) < 3) return(FALSE)\n\
    \  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i +\
    \ 1, i + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3)\
    \ {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n \
    \ return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for\
    \ (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i\
    \ + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\nis_happy(\"abcabc\"\
    )\nis_happy(\"abccba\")\nis_happy(\"abccbx\")\nis_happy(\"abc\")\nis_happy(\"\
    ab\")\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s)\
    \ - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i+2) == substr(s,\
    \ i+1, i+3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n  #\
    \ Your code here\n  if(nchar(s) < 3) return(FALSE)\n  for(i in 1:(nchar(s)-2)){\n\
    \    if(substr(s, i, i+2) == substr(s, i+1, i+3)) return(FALSE)\n  }\n  return(TRUE)\n\
    }\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s)\
    \ - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"abcabcd\")\n\
    is_happy(\"abccba\")\nis_happy(\"abccb\")\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n\
    \  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"abccba\")\n\
    is_happy(\"abccab\")\nis_happy(\"abc\")\nis_happy(\"ab\")\nis_happy(\"a\")\n",
  "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"ababab\")\nis_happy(\"abababa\")\n\
    is_happy(\"abababab\")\n", "\n  if (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s)\
    \ - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n\
    \  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"abccba\")\nis_happy(\"\
    abccab\")\nis_happy(\"abccaa\")\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"\
    abccba\")\nis_happy(\"abccbx\")\nis_happy(\"abc\")\nis_happy(\"ab\")\n", "\n \
    \ if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n\
    \    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"\
    abcabc\")\nis_happy(\"abcabcd\")\nis_happy(\"ababab\")\nis_happy(\"abababab\"\
    )\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s)\
    \ - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"\
    abccba\")\nis_happy(\"abccbx\")\nis_happy(\"abc\")\nis_happy(\"ab\")\n", "\n \
    \ if(nchar(s) < 3) return(FALSE)\n  for(i in 1:(nchar(s)-2)) {\n    if(substr(s,\
    \ i, i+2) == substr(s, i+1, i+3)) return(FALSE)\n  }\n  return(TRUE)\n}\n", "\n\
    \    if (nchar(s) < 3) {\n        return(FALSE)\n    }\n    for (i in 1:(nchar(s)\
    \ - 2)) {\n        if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n   \
    \         return(FALSE)\n        }\n    }\n    return(TRUE)\n}\n", "\n  if (nchar(s)\
    \ < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n \
    \ return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for\
    \ (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i\
    \ + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\"\
    )\nis_happy(\"abcabcabc\")\nis_happy(\"abcabcd\")\nis_happy(\"abccba\")\n", "\n\
    \  if (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n\
    \nis_happy(\"abcabc\") # FALSE\nis_happy(\"abcabcd\") # TRUE\nis_happy(\"abcabcc\"\
    ) # FALSE\nis_happy(\"abc\") # FALSE\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n\
    \  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n\
    \  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\nis_happy(\"abcabc\")\nis_happy(\"abccba\")\nis_happy(\"\
    abccbx\")\nis_happy(\"abc\")\n", "\n  if (nchar(s) < 3) return(FALSE)\n  for (i\
    \ in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i +\
    \ 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n   \
    \ return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i\
    \ + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n\
    }\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  } else {\n    for (i in 1:(nchar(s)\
    \ - 2)) {\n      if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n     \
    \   return(FALSE)\n      }\n    }\n    return(TRUE)\n  }\n}\n", "\n  if(nchar(s)\
    \ < 3) return(FALSE)\n  for(i in 1:(nchar(s)-2)) {\n    if(substr(s, i, i+2) ==\
    \ substr(s, i+1, i+3)) return(FALSE)\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s)\
    \ < 3) return(FALSE)\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i\
    \ + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n", "\n\
    \  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabcabc\")\nis_happy(\"abcabcab\"\
    )\nis_happy(\"abcabcabd\")\n", "\n  if (nchar(s) < 3) return(FALSE)\n  for (i\
    \ in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i +\
    \ 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")", "\n  if\
    \ (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n",
  "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"\
    abcabc\")", "\n  if (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n \
    \ }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  } else\
    \ {\n    for (i in 1:(nchar(s) - 2)) {\n      if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n        return(FALSE)\n      }\n    }\n    return(TRUE)\n\
    \  }\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s)\
    \ - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"happy\")\nis_happy(\"ababab\")\n\
    is_happy(\"abababa\")\n", "\n  if(nchar(s) < 3) return(FALSE)\n  for(i in 1:(nchar(s)-2))\
    \ {\n    if(substr(s, i, i+2) == substr(s, i+1, i+3)) return(FALSE)\n  }\n  return(TRUE)\n\
    }\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s)\
    \ - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n\
    \  if (nchar(s) < 3) return(FALSE)\n  for (i in seq(1, nchar(s) - 2)) {\n    if\
    \ (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n  }\n  return(TRUE)\n\
    }\n", "\n  if (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s) - 2)) {\n\
    \    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n  }\n\
    \  return(TRUE)\n}\n\nis_happy(\"abc\")\nis_happy(\"abca\")\nis_happy(\"abcaa\"\
    )\nis_happy(\"abcaab\")\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n\
    \  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i +\
    \ 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n  if\
    \ (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n\
    \    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"abccba\")\n\
    is_happy(\"abcdabcd\")\nis_happy(\"abcdabc\")\n", "\n  if (nchar(s) < 3) {\n \
    \   return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i,\
    \ i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n\
    }\n", "\n  if (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s) - 2)) {\n\
    \    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n  }\n\
    \  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for\
    \ (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i\
    \ + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"happy\"\
    )\nis_happy(\"happ\")\nis_happy(\"ha\")\nis_happy(\"happp\")\n", "\n  if (nchar(s)\
    \ < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n \
    \ return(TRUE)\n}\n\nis_happy(\"happy\")\nis_happy(\"happ\")\nis_happy(\"ha\"\
    )\nis_happy(\"happp\")\nis_happy(\"happpy\")\n", "\n    if (nchar(s) < 3) {\n\
    \        return(FALSE)\n    }\n    for (i in 1:(nchar(s) - 2)) {\n        if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) {\n            return(FALSE)\n       \
    \ }\n    }\n    return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"\
    abcabc\")\nis_happy(\"abcabcabc\")\nis_happy(\"abcabcd\")\nis_happy(\"abccba\"\
    )\n", "\n  if (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s) - 2)) {\n\
    \    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n  }\n\
    \  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for\
    \ (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i\
    \ + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s)\
    \ < 3) return(FALSE)\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i\
    \ + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n", "\n\
    \  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"abcabcabc\"\
    )\nis_happy(\"abcabcd\")\nis_happy(\"abccba\")\nis_happy(\"abccbx\")\n", "\n \
    \ if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n\
    \    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  # your code here\n}\n", "\n  if (nchar(s)\
    \ < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n \
    \ return(TRUE)\n}\n", "\n  if (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s)\
    \ - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n\
    \  }\n  return(TRUE)\n}\n\nis_happy(\"happy\")\nis_happy(\"happ\")\nis_happy(\"\
    haaapy\")\n", "\n  if (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s) -\
    \ 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n\
    \  }\n  return(TRUE)\n}\n", "\n  if(nchar(s) < 3) {\n    return(FALSE)\n  }\n\
    \  for(i in 1:(nchar(s)-2)) {\n    if(substr(s, i, i+2) == substr(s, i+1, i+3))\
    \ {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s)\
    \ < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n \
    \ return(TRUE)\n}\n", "\n  if (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s)\
    \ - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n\
    \  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n\
    \  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i +\
    \ 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n  if\
    \ (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n\
    \    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"\
    happy\")\nis_happy(\"happi\")\nis_happy(\"happ\")\n", "\n  if (nchar(s) < 3) return(FALSE)\n\
    \  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i +\
    \ 1, i + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"\
    abcabcd\")\nis_happy(\"abcabcabc\")\nis_happy(\"abcabcab\")\nis_happy(\"abcabcabcabc\"\
    )\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s)\
    \ - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"abcabcabc\"\
    )\nis_happy(\"abcabcd\")\nis_happy(\"abccba\")\nis_happy(\"abccbac\")\n", "\n\
    \  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n\
    \  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"abcabcd\")\n\
    is_happy(\"abcabca\")\n", "\n    if(nchar(s) < 3) return(FALSE)\n    for(i in\
    \ 1:(nchar(s)-2)) {\n        if(substr(s, i, i+2) == substr(s, i+1, i+3)) return(FALSE)\n\
    \    }\n    return(TRUE)\n}", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n\
    \  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i +\
    \ 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"\
    abcabc\")\nis_happy(\"abccba\")\nis_happy(\"abccbx\")\nis_happy(\"abc\")\nis_happy(\"\
    aaa\")\nis_happy(\"aaaa\")\nis_happy(\"aaaaa\")\nis_happy(\"aaaaaa\")\nis_happy(\"\
    abcabcabc\")\nis_happy(\"abcabcabx\")\nis_happy(\"abcabcax\")\nis_happy(\"abca\"\
    )\nis_happy(\"abcab\")\nis_happy(\"abcabx\")\n", "\n  if (nchar(s) < 3) {\n  \
    \  return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i\
    \ + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n\
    }\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s)\
    \ - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) return(FALSE)\n  for\
    \ (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i\
    \ + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n\nis_happy(\"abc\")\nis_happy(\"\
    abca\")\nis_happy(\"abcc\")\nis_happy(\"abccc\")\n", "\n  if (nchar(s) < 3) {\n\
    \    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i,\
    \ i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n\
    }\n", "\n  if (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s) - 2)) {\n\
    \    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n  }\n\
    \  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s)\
    \ - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n\
    \  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n\
    \  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i +\
    \ 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n  if\
    \ (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n\
    \    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"abcabcd\")\n\
    is_happy(\"abccb\")\nis_happy(\"abccba\")\nis_happy(\"abc\")\nis_happy(\"ab\"\
    )\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s)\
    \ - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"abccba\")\n\
    is_happy(\"abccaa\")\nis_happy(\"abc\")\nis_happy(\"ab\")\n", "\n  if (nchar(s)\
    \ < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n \
    \ return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for\
    \ (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i\
    \ + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\"\
    )\nis_happy(\"abccba\")\nis_happy(\"abccab\")\nis_happy(\"abcab\")\n", "\n  if\
    \ (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n\
    \    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abc\")\nis_happy(\"abca\")\nis_happy(\"\
    abcabc\")\nis_happy(\"abccba\")\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n\
    \  if (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n",
  "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  } else {\n    for (i in 1:(nchar(s)\
    \ - 2)) {\n      if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n     \
    \   return(FALSE)\n      }\n    }\n    return(TRUE)\n  }\n}\n", "\n  if (nchar(s)\
    \ < 3) return(FALSE)\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i\
    \ + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n\nis_happy(\"\
    abcabc\")\nis_happy(\"abcabca\")\nis_happy(\"abc\")\nis_happy(\"ab\")\n", "\n\
    \  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abc\")\nis_happy(\"abcc\")\nis_happy(\"\
    abccc\")\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s)\
    \ - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"\
    abc\")\nis_happy(\"abca\")\nis_happy(\"abcaa\")\nis_happy(\"abcabc\")\nis_happy(\"\
    abcabca\")\n", "\n  if(nchar(s) < 3) return(FALSE)\n  for(i in 1:(nchar(s)-2))\
    \ {\n    if(substr(s, i, i+2) == substr(s, i+1, i+3)) return(FALSE)\n  }\n  return(TRUE)\n\
    }\n\nis_happy(\"abcabc\")\nis_happy(\"abcabcd\")\nis_happy(\"abcabcabc\")\nis_happy(\"\
    abcabcabcd\")\n", "\n  if(nchar(s) < 3) {\n    return(FALSE)\n  }\n  for(i in\
    \ 1:(nchar(s)-2)) {\n    if(substr(s, i, i+2) == substr(s, i+1, i+3)) {\n    \
    \  return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"\
    abccba\")\nis_happy(\"abccbx\")\nis_happy(\"abc\")\nis_happy(\"ab\")\n", "\n \
    \ if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n\
    \    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) return(FALSE)\n  for\
    \ (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i\
    \ + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) return(FALSE)\n\
    \  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i +\
    \ 1, i + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"\
    abcabcd\")\nis_happy(\"abcab\")\nis_happy(\"abccba\")\n", "\n  if (nchar(s) <\
    \ 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n \
    \ return(TRUE)\n}\n\nis_happy(\"abc\")\nis_happy(\"abcc\")\nis_happy(\"abccc\"\
    )\nis_happy(\"abccca\")\nis_happy(\"abcccab\")\n", "\n  if (nchar(s) < 3) {\n\
    \    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i,\
    \ i+2) == substr(s, i+1, i+3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n\
    }\n", "\n  if (nchar(s) < 3) return(FALSE)\n  for (i in 1:(nchar(s) - 2)) {\n\
    \    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) return(FALSE)\n  }\n\
    \  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for\
    \ (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i\
    \ + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\"\
    )\nis_happy(\"abcabcd\")\nis_happy(\"abcabca\")\nis_happy(\"abccba\")\n", "\n\
    \    if (nchar(s) < 3) {\n        return(FALSE)\n    }\n    for (i in 1:(nchar(s)\
    \ - 2)) {\n        if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n   \
    \         return(FALSE)\n        }\n    }\n    return(TRUE)\n}\n", "\n  if (nchar(s)\
    \ < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s,\
    \ i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n \
    \ return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"abccba\")\nis_happy(\"abccbx\"\
    )\nis_happy(\"abc\")\nis_happy(\"aaa\")\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n\
    \  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n\
    \  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"ababab\")\n\
    is_happy(\"abccba\")\nis_happy(\"abc\")\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n\
    \  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s) - 2))\
    \ {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  if (nchar(s) < 3) return(FALSE)\n  for\
    \ (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i\
    \ + 3)) return(FALSE)\n  }\n  return(TRUE)\n}\n\nis_happy(\"abc\")\nis_happy(\"\
    abca\")\nis_happy(\"abcabc\")\nis_happy(\"abcabca\")\nis_happy(\"abcabcab\")\n\
    is_happy(\"abcabcabc\")\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n\
    \  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i +\
    \ 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"\
    happy\")\nis_happy(\"happ\")\nis_happy(\"happp\")\nis_happy(\"happpy\")\nis_happy(\"\
    happppy\")\nis_happy(\"happppyy\")\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n\
    \  }\n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i + 2) == substr(s,\
    \ i + 1, i + 3)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"\
    abcabcabc\")\nis_happy(\"abcabcab\")\nis_happy(\"abcabca\")\nis_happy(\"abca\"\
    )\n", "\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  for (i in 1:(nchar(s)\
    \ - 2)) {\n    if (substr(s, i, i + 2) == substr(s, i + 1, i + 3)) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"abcabc\")\nis_happy(\"abcabcd\")\n\
    is_happy(\"abccba\")\nis_happy(\"abccbab\")\nis_happy(\"abccbabc\")\n"]
stop_tokens:
- "\n#"
- "\n```"

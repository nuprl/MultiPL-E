name: HumanEval_108_count_nums
language: r
prompt: "# Write a function count_nums which takes an array of integers and returns\n\
  # the number of elements which has a sum of digits > 0.\n# If a number is negative,\
  \ then its first signed digit will be negative:\n# e.g. -123 has signed digits -1,\
  \ 2, and 3.\ncount_nums <- function(arr) {"
tests: "test_humaneval <- function() {\ncandidate <- count_nums\n    if(!identical(candidate(c()),\
  \ 0)){quit('no', 1)}\n    if(!identical(candidate(c(-1, -2, 0)), 0)){quit('no',\
  \ 1)}\n    if(!identical(candidate(c(1, 1, 2, -2, 3, 4, 5)), 6)){quit('no', 1)}\n\
  \    if(!identical(candidate(c(1, 6, 9, -6, 0, 1, 5)), 5)){quit('no', 1)}\n    if(!identical(candidate(c(1,\
  \ 100, 98, -7, 1, -1)), 4)){quit('no', 1)}\n    if(!identical(candidate(c(12, 23,\
  \ 34, -45, -56, 0)), 5)){quit('no', 1)}\n    if(!identical(candidate(c(0, 1)), 1)){quit('no',\
  \ 1)}\n    if(!identical(candidate(c(1)), 1)){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  # YOUR CODE HERE\n  count <- 0\n  for (i in arr) {\n    if (i <\
    \ 0) {\n      i <- -i\n    }\n    sum <- 0\n    while (i > 0) {\n      sum <-\
    \ sum + i %% 10\n      i <- i %/% 10\n    }\n    if (sum > 0) {\n      count <-\
    \ count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # Your code here\n}\n", "\n\
    \  # YOUR CODE HERE\n  count <- 0\n  for (i in arr) {\n    if (i < 0) {\n    \
    \  i <- -i\n    }\n    if (sum(as.integer(strsplit(as.character(i), \"\")[[1]]))\
    \ > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  sum(sapply(arr,\
    \ function(x) sum(abs(x)) > 0))\n}\ncount_nums(c(1, 2, 3, -4, -5, -6))\n", "\n\
    \  # YOUR CODE HERE\n  count = 0\n  for (i in arr) {\n    if (sum(abs(i)) > 0)\
    \ {\n      count = count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # Your code\
    \ here\n}\n", "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr) {\n    if (sum(abs(i))\
    \ > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # Your\
    \ code here\n  count = 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(i)) > 0) {\n      count\
    \ <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # YOUR CODE HERE\n  count\
    \ = 0\n  for (i in arr) {\n    if (i < 0) {\n      i = -i\n    }\n    while (i\
    \ > 0) {\n      count = count + i%%10\n      i = i%/%10\n    }\n  }\n  return(count)\n\
    }\n\ncount_nums(c(1, 2, 3, 4, 5))\ncount_nums(c(1, -2, 3, -4, 5))\ncount_nums(c(1,\
    \ -2, 3, -4, 5, -6, 7, -8, 9, -10))\n", "\n  # YOUR CODE HERE\n  count = 0\n \
    \ for (i in arr) {\n    if (i < 0) {\n      i = -i\n    }\n    if (sum(as.numeric(strsplit(as.character(i),\
    \ \"\")[[1]])) > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  # YOUR CODE HERE\n  count <- 0\n  for (i in arr) {\n    if (i < 0)\
    \ {\n      i <- i * -1\n    }\n    sum <- 0\n    while (i > 0) {\n      sum <-\
    \ sum + i %% 10\n      i <- i %/% 10\n    }\n    if (sum > 0) {\n      count <-\
    \ count + 1\n    }\n  }\n  return(count)\n}\n\ncount_nums(c(1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10))\ncount_nums(c(-1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\ncount_nums(c(-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10))\ncount_nums(c(1, -2, 3, -4, 5, -6, 7,\
    \ -8, 9, -10))\n", "\n  # YOUR CODE HERE\n  sum(sapply(arr, function(x) sum(abs(x))))\n\
    }\n\ncount_nums(c(1, 2, 3, -4, -5, -6))\n", "\n  count <- 0\n  for (i in arr)\
    \ {\n    if (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]]))) > 0) {\n\
    \      count <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # Your code\
    \ here\n  count <- 0\n  for (i in 1:length(arr)){\n    if (sum(abs(arr[i])) >\
    \ 0){\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # YOUR\
    \ CODE HERE\n  count <- 0\n  for (i in arr) {\n    if (i < 0) {\n      i <- -i\n\
    \    }\n    sum <- 0\n    while (i > 0) {\n      sum <- sum + i %% 10\n      i\
    \ <- i %/% 10\n    }\n    if (sum > 0) {\n      count <- count + 1\n    }\n  }\n\
    \  return(count)\n}\n", "\n  # Your code here\n  count <- 0\n  for (i in arr)\
    \ {\n    if (i < 0) {\n      i <- i * -1\n    }\n    if (sum(as.integer(unlist(strsplit(as.character(i),\
    \ \"\")))) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
  "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr) {\n    if (i < 0) {\n     \
    \ i = i * -1\n    }\n    sum = 0\n    while (i > 0) {\n      sum = sum + i %%\
    \ 10\n      i = i %/% 10\n    }\n    if (sum > 0) {\n      count = count + 1\n\
    \    }\n  }\n  return(count)\n}\n", "\n  # YOUR CODE HERE\n  count = 0\n  for\
    \ (i in arr) {\n    if (i < 0) {\n      i = -i\n    }\n    sum = 0\n    while\
    \ (i > 0) {\n      sum = sum + i %% 10\n      i = i %/% 10\n    }\n    if (sum\
    \ > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # your\
    \ code here\n}\n", "\n    # YOUR CODE HERE\n    count <- 0\n    for (i in arr)\
    \ {\n        if (i < 0) {\n            i <- -i\n        }\n        if (sum(as.numeric(strsplit(as.character(i),\
    \ \"\")[[1]])) > 0) {\n            count <- count + 1\n        }\n    }\n    return(count)\n\
    }\n", "\n  # YOUR CODE HERE\n  count <- 0\n  for (i in arr) {\n    if (i < 0)\
    \ {\n      i <- -i\n    }\n    while (i > 0) {\n      count <- count + (i %% 10)\n\
    \      i <- i %/% 10\n    }\n  }\n  return(count)\n}\n", "\n  # YOUR CODE HERE\n\
    \  count = 0\n  for (i in arr) {\n    if (i < 0) {\n      i = -i\n    }\n    sum\
    \ = 0\n    while (i > 0) {\n      sum = sum + i %% 10\n      i = i %/% 10\n  \
    \  }\n    if (sum > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n\
    }\n\ncount_nums(c(1, -1, 2, -2, 3, -3))\n", "\n  # YOUR CODE HERE\n  count <-\
    \ 0\n  for (i in arr) {\n    if (i < 0) {\n      i <- -i\n    }\n    while (i\
    \ > 0) {\n      count <- count + i %% 10\n      i <- i %/% 10\n    }\n  }\n  return(count)\n\
    }\n", "\n  count <- 0\n  for (i in arr) {\n    if (i < 0) {\n      i <- -i\n \
    \   }\n    sum <- 0\n    while (i > 0) {\n      sum <- sum + i %% 10\n      i\
    \ <- i %/% 10\n    }\n    if (sum > 0) {\n      count <- count + 1\n    }\n  }\n\
    \  return(count)\n}\n", "\n  sum(sapply(arr, function(x) sum(abs(x)) > 0))\n}\n",
  "\n  count <- 0\n  for (i in arr) {\n    if (i < 0) {\n      i <- i * -1\n    }\n\
    \    sum <- 0\n    while (i > 0) {\n      sum <- sum + i %% 10\n      i <- i %/%\
    \ 10\n    }\n    if (sum > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr) {\n    if (i < 0) {\n\
    \      i = -i\n    }\n    sum = 0\n    while (i > 0) {\n      sum = sum + i %%\
    \ 10\n      i = i %/% 10\n    }\n    if (sum > 0) {\n      count = count + 1\n\
    \    }\n  }\n  return(count)\n}\n", "\n  sum(sapply(arr, function(x) sum(abs(x))\
    \ > 0))\n}\n", "\n  # Your code here\n}\n", "\n  sum(sapply(arr, function(x) sum(abs(x))\
    \ > 0))\n}\n", "\n  # YOUR CODE HERE\n  count <- 0\n  for (i in arr) {\n    if\
    \ (i < 0) {\n      i <- -i\n    }\n    while (i > 0) {\n      count <- count +\
    \ i %% 10\n      i <- i %/% 10\n    }\n  }\n  return(count)\n}\n", "\n  sum(sapply(arr,\
    \ function(x) sum(abs(x)) > 0))\n}\n", "\n  # Your code here\n  count = 0\n  for\
    \ (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]])))\
    \ > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # Your\
    \ code here\n  return(0)\n}\n", "\n  # YOUR CODE HERE\n  sum_digits <- function(x)\
    \ {\n    if (x < 0) {\n      x <- -x\n    }\n    sum(as.integer(unlist(strsplit(as.character(x),\
    \ split = \"\"))))\n  }\n  sum(sapply(arr, sum_digits) > 0)\n}\n", "\n  sum(sapply(arr,\
    \ function(x) sum(abs(x)) > 0))\n}\n", "\n  # your code here\n}\n", "\n  # YOUR\
    \ CODE HERE\n  count = 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  # Your code here\n  count = 0\n  for (i in arr) {\n    if (sum(abs(as.numeric(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  sum(sapply(arr, function(x) sum(abs(x)) > 0))\n}\n\ncount_nums(c(1,\
    \ 2, 3, 4, 5)) # 5\ncount_nums(c(0, -1, -2, -3, -4, -5)) # 0\ncount_nums(c(1,\
    \ 2, 3, -4, -5)) # 3\n", "\n  # YOUR CODE HERE\n  sum(sapply(arr, function(x)\
    \ sum(abs(as.integer(strsplit(as.character(x), \"\")[[1]])))))\n}\n", "\n  # YOUR\
    \ CODE HERE\n  count = 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(i)) > 0) {\n      count\
    \ <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  count <- 0\n  for (i in\
    \ arr) {\n    if (i < 0) {\n      i <- -i\n    }\n    sum <- 0\n    while (i >\
    \ 0) {\n      sum <- sum + i %% 10\n      i <- i %/% 10\n    }\n    if (sum >\
    \ 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  count\
    \ <- 0\n  for (i in arr) {\n    if (sum(abs(i)) > 0) {\n      count <- count +\
    \ 1\n    }\n  }\n  return(count)\n}\n", "\n  # Your code here\n}\n", "\n  count\
    \ <- 0\n  for (i in arr) {\n    if (sum(abs(i)) > 0) {\n      count <- count +\
    \ 1\n    }\n  }\n  return(count)\n}\n", "\n  count <- 0\n  for (i in arr) {\n\
    \    if (i < 0) {\n      i <- i * -1\n    }\n    sum <- 0\n    while (i > 0) {\n\
    \      sum <- sum + i %% 10\n      i <- i %/% 10\n    }\n    if (sum > 0) {\n\
    \      count <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # Your code\
    \ here\n  count <- 0\n  for (i in arr) {\n    if (i < 0) {\n      i <- -i\n  \
    \  }\n    sum <- 0\n    while (i > 0) {\n      sum <- sum + i %% 10\n      i <-\
    \ i %/% 10\n    }\n    if (sum > 0) {\n      count <- count + 1\n    }\n  }\n\
    \  return(count)\n}\n", "\n  # Your code here\n  count = 0\n  for (i in arr) {\n\
    \    if (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]]))) > 0) {\n \
    \     count = count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # Your code here\n\
    \  count = 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  sum(sapply(arr, function(x) sum(abs(x)) > 0))\n}\n", "\n  # Your code\
    \ here\n}\n", "\n  count <- 0\n  for (i in 1:length(arr)) {\n    if (sum(abs(arr[i]))\
    \ > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  #\
    \ your code here\n}\n", "\n  # Your code here\n}\n", "\n  # Your code here\n}\n",
  "\n  # your code here\n}\n", "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr)\
    \ {\n    if (sum(abs(i)) > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  # Your code here\n  sum_digits <- function(x) {\n    if (x < 0) {\n\
    \      x <- -x\n    }\n    sum(as.integer(strsplit(as.character(x), \"\")[[1]]))\n\
    \  }\n  sum(sapply(arr, sum_digits) > 0)\n}\n", "\n  # YOUR CODE HERE\n  count\
    \ = 0\n  for (i in arr) {\n    if (sum(abs(i)) > 0) {\n      count = count + 1\n\
    \    }\n  }\n  return(count)\n}\n", "\n  sum(sapply(arr, function(x) sum(abs(x))\
    \ > 0))\n}\n", "\n  # YOUR CODE HERE\n  count <- 0\n  for (i in arr) {\n    if\
    \ (i < 0) {\n      i <- -i\n    }\n    sum <- 0\n    while (i > 0) {\n      sum\
    \ <- sum + i %% 10\n      i <- i %/% 10\n    }\n    if (sum > 0) {\n      count\
    \ <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # Your code here\n}\n",
  "\n  # Your code here\n  count <- 0\n  for (i in arr) {\n    if (i < 0) {\n    \
    \  i <- -i\n    }\n    if (sum(as.numeric(strsplit(as.character(i), \"\")[[1]]))\
    \ > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  #\
    \ YOUR CODE HERE\n  count = 0\n  for (i in arr) {\n    if (i < 0) {\n      i =\
    \ -i\n    }\n    if (sum(as.integer(strsplit(as.character(i), \"\")[[1]])) > 0)\
    \ {\n      count = count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # YOUR CODE\
    \ HERE\n  count <- 0\n  for (i in arr) {\n    if (i < 0) {\n      i <- -i\n  \
    \  }\n    if (i < 10) {\n      if (i > 0) {\n        count <- count + 1\n    \
    \  }\n    } else {\n      sum <- 0\n      while (i > 0) {\n        sum <- sum\
    \ + i %% 10\n        i <- i %/% 10\n      }\n      if (sum > 0) {\n        count\
    \ <- count + 1\n      }\n    }\n  }\n  return(count)\n}\n", "\n  # Your code here\n\
    }\n", "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  # YOUR CODE HERE\n  count <- 0\n  for (i in arr) {\n    if (i < 0)\
    \ {\n      i <- -i\n    }\n    while (i > 0) {\n      count <- count + (i %% 10)\n\
    \      i <- i %/% 10\n    }\n  }\n  return(count)\n}\n\ncount_nums(c(1, 2, 3,\
    \ -4, -5, -6))\n", "\n  sum(sapply(arr, function(x) sum(abs(x)) > 0))\n}\n", "\n\
    \  count <- 0\n  for (i in arr) {\n    if (i < 0) {\n      i <- -i\n    }\n  \
    \  sum <- 0\n    while (i > 0) {\n      sum <- sum + i %% 10\n      i <- i %/%\
    \ 10\n    }\n    if (sum > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  count <- 0\n  for (num in arr) {\n    sum <- 0\n    if (num < 0) {\n\
    \      sum <- sum + as.integer(substr(num, 1, 1))\n      num <- as.integer(substr(num,\
    \ 2, nchar(num)))\n    }\n    while (num > 0) {\n      sum <- sum + num %% 10\n\
    \      num <- num %/% 10\n    }\n    if (sum > 0) {\n      count <- count + 1\n\
    \    }\n  }\n  return(count)\n}\n", "\n  # your code here\n  sum_digits <- function(x)\
    \ {\n    x <- abs(x)\n    sum(as.integer(unlist(strsplit(as.character(x), \"\"\
    ))))\n  }\n  sum(sapply(arr, sum_digits) > 0)\n}\n", "\n  # Your code here\n}\n",
  "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(i)) > 0) {\n      count <-\
    \ count + 1\n    }\n  }\n  return(count)\n}\n", "\n  sum(sapply(arr, function(x)\
    \ {\n    sum(abs(as.integer(strsplit(as.character(x), \"\")[[1]]))) > 0\n  }))\n\
    }\n", "\n  # YOUR CODE HERE\n  count <- 0\n  for (i in arr) {\n    if (i < 0)\
    \ {\n      i <- -i\n    }\n    if (sum(as.integer(strsplit(as.character(i), \"\
    \")[[1]])) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
  "\n  # YOUR CODE HERE\n  count <- 0\n  for (i in arr) {\n    if (i < 0) {\n    \
    \  i <- -i\n    }\n    if (sum(as.numeric(strsplit(as.character(i), \"\")[[1]]))\
    \ > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  #\
    \ YOUR CODE HERE\n  count <- 0\n  for (i in arr) {\n    if (i < 0) {\n      i\
    \ <- -i\n    }\n    if (i == 0) {\n      count <- count + 1\n    }\n    while\
    \ (i > 0) {\n      count <- count + i %% 10\n      i <- i %/% 10\n    }\n  }\n\
    \  return(count)\n}\n", "\n  # Your code here\n}\n", "\n  # Your code here\n}\n",
  "\n  # YOUR CODE HERE\n  count <- 0\n  for (i in arr) {\n    if (i < 0) {\n    \
    \  i <- -i\n    }\n    sum <- 0\n    while (i > 0) {\n      sum <- sum + i %%\
    \ 10\n      i <- i %/% 10\n    }\n    if (sum > 0) {\n      count <- count + 1\n\
    \    }\n  }\n  return(count)\n}\n", "\n  # YOUR CODE HERE\n  count = 0\n  for\
    \ (i in arr) {\n    if (sum(abs(i)) > 0) {\n      count = count + 1\n    }\n \
    \ }\n  return(count)\n}\n", "\n  # Your code here\n}\n", "\n  # YOUR CODE HERE\n\
    \  count <- 0\n  for (i in arr) {\n    if (i < 0) {\n      i <- -i\n    }\n  \
    \  if (sum(as.numeric(strsplit(as.character(i), split = \"\")[[1]])) > 0) {\n\
    \      count <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  sum(sapply(arr,\
    \ function(x) sum(abs(x)) > 0))\n}\n", "\n  # Your code here\n}\n", "\n  count\
    \ <- 0\n  for (i in arr) {\n    if (i < 0) {\n      i <- -i\n    }\n    sum <-\
    \ 0\n    while (i > 0) {\n      sum <- sum + i %% 10\n      i <- i %/% 10\n  \
    \  }\n    if (sum > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr) {\n    if (sum(abs(i))\
    \ > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # Your\
    \ code here\n}\n", "\n  # Your code here\n  count <- 0\n  for (i in arr) {\n \
    \   if (i < 0) {\n      i <- -i\n    }\n    sum <- 0\n    while (i > 0) {\n  \
    \    sum <- sum + i %% 10\n      i <- i %/% 10\n    }\n    if (sum > 0) {\n  \
    \    count <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # YOUR CODE HERE\n\
    \  count = 0\n  for (i in arr) {\n    if (i < 0) {\n      i = -i\n    }\n    sum\
    \ = 0\n    while (i > 0) {\n      sum = sum + i %% 10\n      i = i %/% 10\n  \
    \  }\n    if (sum > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  sum(sapply(arr, function(x) sum(abs(x)) > 0))\n}\n", "\n  # Your code\
    \ here\n}\n", "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr) {\n    if (i\
    \ < 0) {\n      i = i * -1\n    }\n    sum = 0\n    while (i > 0) {\n      sum\
    \ = sum + i %% 10\n      i = i %/% 10\n    }\n    if (sum > 0) {\n      count\
    \ = count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # your code here\n}\n",
  "\n  # Your code here\n}\n", "\n  count <- 0\n  for (i in arr) {\n    if (i < 0)\
    \ {\n      i <- -i\n    }\n    sum <- 0\n    while (i > 0) {\n      sum <- sum\
    \ + i %% 10\n      i <- i %/% 10\n    }\n    if (sum > 0) {\n      count <- count\
    \ + 1\n    }\n  }\n  return(count)\n}\n", "\n  # Your code here\n  count <- 0\n\
    \  for (i in arr) {\n    if (i < 0) {\n      i <- -i\n    }\n    if (sum(as.numeric(strsplit(as.character(i),\
    \ \"\")[[1]])) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  # Your code here\n  count = 0\n  for (i in arr) {\n    if (sum(abs(i))\
    \ > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n}\n", "\n  sum(sapply(arr,\
    \ function(x) sum(abs(x)) > 0))\n}\n", "\n  sum(sapply(arr, function(x) sum(abs(x))\
    \ > 0))\n}\n", "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr) {\n    if\
    \ (i < 0) {\n      i = -i\n    }\n    sum = 0\n    while (i > 0) {\n      sum\
    \ = sum + i %% 10\n      i = i %/% 10\n    }\n    if (sum > 0) {\n      count\
    \ = count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # YOUR CODE HERE\n  count\
    \ = 0\n  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i),\
    \ \"\")[[1]]))) > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  count <- 0\n  for (i in 1:length(arr)) {\n    if (sum(abs(digits(arr[i])))\
    \ > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  count\
    \ <- 0\n  for (i in arr) {\n    digits <- abs(i)\n    sum <- 0\n    while (digits\
    \ > 0) {\n      sum <- sum + digits %% 10\n      digits <- digits %/% 10\n   \
    \ }\n    if (sum > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  # your code here\n  count <- 0\n  for (i in arr) {\n    if (i < 0)\
    \ {\n      i <- -i\n    }\n    sum <- 0\n    while (i > 0) {\n      sum <- sum\
    \ + i %% 10\n      i <- i %/% 10\n    }\n    if (sum > 0) {\n      count <- count\
    \ + 1\n    }\n  }\n  return(count)\n}\n", "\n  # Your code here\n}\n", "\n  #\
    \ YOUR CODE HERE\n  count <- 0\n  for (i in arr) {\n    if (i < 0) {\n      i\
    \ <- -i\n    }\n    sum <- 0\n    while (i > 0) {\n      sum <- sum + i %% 10\n\
    \      i <- i %/% 10\n    }\n    if (sum > 0) {\n      count <- count + 1\n  \
    \  }\n  }\n  return(count)\n}\n\ncount_nums(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n\
    count_nums(c(-1, -2, -3, -4, -5, -6, -7, -8, -9, -10))\ncount_nums(c(1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10))\n", "\n  # YOUR\
    \ CODE HERE\n  count <- 0\n  for (i in arr) {\n    if (i < 0) {\n      i <- -i\n\
    \    }\n    sum <- 0\n    while (i > 0) {\n      sum <- sum + i %% 10\n      i\
    \ <- i %/% 10\n    }\n    if (sum > 0) {\n      count <- count + 1\n    }\n  }\n\
    \  return(count)\n}\n", "\n  # Your code here\n}\n", "\n  # your code here\n}\n",
  "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr) {\n    if (sum(abs(i)) > 0)\
    \ {\n      count = count + 1\n    }\n  }\n  return(count)\n}\n", "\n  sum(sapply(arr,\
    \ function(x) sum(abs(x)) > 0))\n}\n", "\n  # YOUR CODE HERE\n  count <- 0\n \
    \ for (i in arr) {\n    if (i < 0) {\n      i <- i * -1\n    }\n    if (sum(as.integer(unlist(strsplit(as.character(i),\
    \ \"\")))) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
  "\n  # Your code here\n}\n", "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr)\
    \ {\n    if (i < 0) {\n      i = -i\n    }\n    sum = 0\n    while (i > 0) {\n\
    \      sum = sum + i %% 10\n      i = i %/% 10\n    }\n    if (sum > 0) {\n  \
    \    count = count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # Your code here\n\
    }\n", "\n  # your code here\n}\n", "\n  # Your code here\n  count = 0\n  for (i\
    \ in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]])))\
    \ > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # YOUR\
    \ CODE HERE\n  count <- 0\n  for (i in arr) {\n    if (i < 0) {\n      i <- -i\n\
    \    }\n    sum <- 0\n    while (i > 0) {\n      sum <- sum + i %% 10\n      i\
    \ <- i %/% 10\n    }\n    if (sum > 0) {\n      count <- count + 1\n    }\n  }\n\
    \  return(count)\n}\n", "\n  # YOUR CODE HERE\n  count <- 0\n  for (i in arr)\
    \ {\n    if (i < 0) {\n      i <- -i\n    }\n    if (sum(as.numeric(strsplit(as.character(i),\
    \ \"\")[[1]])) > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  # Your code here\n}\n", "\n  # Your code here\n}\n", "\n  # Your code\
    \ here\n}\n", "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr) {\n    if (i\
    \ < 0) {\n      i = -i\n    }\n    sum = 0\n    while (i > 0) {\n      sum = sum\
    \ + i %% 10\n      i = i %/% 10\n    }\n    if (sum > 0) {\n      count = count\
    \ + 1\n    }\n  }\n  return(count)\n}\n", "\n  sum(sapply(arr, function(x) sum(abs(x))\
    \ > 0))\n}\n", "\n  # Your code here\n}\n", "\n  sum(sapply(arr, function(x) sum(abs(x))\
    \ > 0))\n}\n", "\n  sum(sapply(arr, function(x) sum(abs(x)) > 0))\n}\n", "\n \
    \ count <- 0\n  for (i in arr) {\n    if (i < 0) {\n      i <- -i\n    }\n   \
    \ sum <- 0\n    while (i > 0) {\n      sum <- sum + i %% 10\n      i <- i %/%\
    \ 10\n    }\n    if (sum > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  sum(sapply(arr, function(x) {\n    sum(abs(x))\n  }))\n}\n", "\n  count\
    \ <- 0\n  for (i in arr) {\n    if (sum(abs(i)) > 0) {\n      count <- count +\
    \ 1\n    }\n  }\n  return(count)\n}\n", "\n    # YOUR CODE HERE\n    sum_digits\
    \ <- function(x) {\n        x <- abs(x)\n        sum(x %/% 10^(0:(floor(log10(x)))))\n\
    \    }\n    sum(sapply(arr, sum_digits) > 0)\n}\n", "\n  sum(sapply(arr, function(x)\
    \ {\n    sum(abs(x))\n  }))\n}\n", "\n  # YOUR CODE HERE\n  count <- 0\n  for\
    \ (i in arr) {\n    if (i < 0) {\n      i <- -i\n    }\n    while (i > 0) {\n\
    \      count <- count + i %% 10\n      i <- i %/% 10\n    }\n  }\n  return(count)\n\
    }\n", "\n  # Your code here\n}\n", "\n  # YOUR CODE HERE\n  count = 0\n  for (i\
    \ in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]])))\
    \ > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n}\n", "\n  sum(sapply(arr,\
    \ function(x) sum(abs(x)) > 0))\n}\n", "\n  sum(sapply(arr, function(x) sum(abs(x))\
    \ > 0))\n}\n", "\n  # Your code here\n}\n", "\n  # YOUR CODE HERE\n  count = 0\n\
    \  for (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i), \"\"\
    )[[1]]))) > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n}\n",
  "\n  # YOUR CODE HERE\n  sum_digits <- function(x) {\n    x <- abs(x)\n    sum(as.integer(unlist(strsplit(as.character(x),\
    \ \"\"))))\n  }\n  sum(sapply(arr, sum_digits) > 0)\n}\n\ncount_nums(c(1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10))\ncount_nums(c(-1, -2, -3, -4, -5, -6, -7, -8, -9, -10))\n\
    count_nums(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -1, -2, -3, -4, -5, -6, -7, -8, -9,\
    \ -10))\ncount_nums(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -1, -2, -3, -4, -5, -6, -7,\
    \ -8, -9, -10, -123))\ncount_nums(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -1, -2, -3,\
    \ -4, -5, -6, -7, -8, -9, -10, -123, -456))\ncount_nums(c(1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -123, -456, -789))\ncount_nums(c(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -123, -456,\
    \ -789, -1000))\ncount_nums(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -1, -2, -3, -4, -5,\
    \ -6, -7, -8, -9,", "\n  # Your code here\n  count <- 0\n  for (i in arr) {\n\
    \    if (i < 0) {\n      i <- -i\n    }\n    while (i > 0) {\n      count <- count\
    \ + i %% 10\n      i <- i %/% 10\n    }\n  }\n  return(count)\n}\n", "\n  sum(sapply(arr,\
    \ function(x) sum(abs(x)) > 0))\n}\n", "\n  # YOUR CODE HERE\n  count = 0\n  for\
    \ (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]])))\
    \ > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # YOUR\
    \ CODE HERE\n  sum(sapply(arr, function(x) sum(abs(x))))\n}\n", "\n  sum(sapply(arr,\
    \ function(x) sum(abs(x)) > 0))\n}\n", "\n  # Your code here\n  count = 0\n  for\
    \ (i in arr) {\n    if (sum(abs(as.integer(strsplit(as.character(i), \"\")[[1]])))\
    \ > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n}\n", "\n  sum(sapply(arr,\
    \ function(x) sum(abs(x)) > 0))\n}\n", "\n  # Your code here\n  count <- 0\n \
    \ for (i in arr) {\n    if (i < 0) {\n      i <- -i\n    }\n    sum <- 0\n   \
    \ while (i > 0) {\n      sum <- sum + i %% 10\n      i <- i %/% 10\n    }\n  \
    \  if (sum > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
  "\n  # your code here\n}\n", "\n  # Your code here\n  count <- 0\n  for (i in arr)\
    \ {\n    if (i < 0) {\n      i <- -i\n    }\n    sum <- 0\n    while (i > 0) {\n\
    \      sum <- sum + i %% 10\n      i <- i %/% 10\n    }\n    if (sum > 0) {\n\
    \      count <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # YOUR CODE\
    \ HERE\n  count = 0\n  for (i in arr) {\n    if (sum(abs(i)) > 0) {\n      count\
    \ = count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # YOUR CODE HERE\n  count\
    \ <- 0\n  for (i in arr) {\n    if (i < 0) {\n      i <- -i\n    }\n    while\
    \ (i > 0) {\n      count <- count + (i %% 10)\n      i <- i %/% 10\n    }\n  }\n\
    \  return(count)\n}\n", "\n  # Your code here\n}\n", "\n  # YOUR CODE HERE\n \
    \ count <- 0\n  for (i in arr) {\n    if (i < 0) {\n      i <- -i\n    }\n   \
    \ if (sum(as.numeric(strsplit(as.character(i), \"\")[[1]])) > 0) {\n      count\
    \ <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # Your code here\n}\n",
  "\n  sum(sapply(arr, function(x) sum(abs(x)) > 0))\n}\n", "\n  sum(sapply(arr, function(x)\
    \ sum(abs(x)) > 0))\n}\n", "\n  # YOUR CODE HERE\n  count = 0\n  for (i in arr)\
    \ {\n    if (i < 0) {\n      i = -i\n    }\n    sum = 0\n    while (i > 0) {\n\
    \      sum = sum + i %% 10\n      i = i %/% 10\n    }\n    if (sum > 0) {\n  \
    \    count = count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # Your code here\n\
    }\n", "\n  # Your code here\n  count <- 0\n  for (i in arr) {\n    if (i < 0)\
    \ {\n      i <- i * -1\n    }\n    sum <- 0\n    while (i > 0) {\n      sum <-\
    \ sum + i %% 10\n      i <- i %/% 10\n    }\n    if (sum > 0) {\n      count <-\
    \ count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # YOUR CODE HERE\n  sum(sapply(arr,\
    \ function(x) sum(abs(x))))\n}\n", "\n  # Your code here\n  count <- 0\n  for\
    \ (i in arr) {\n    if (i < 0) {\n      i <- -i\n    }\n    while (i > 0) {\n\
    \      count <- count + (i %% 10)\n      i <- i %/% 10\n    }\n  }\n  return(count)\n\
    }\n", "\n  # Your code here\n}\n", "\n  sum(sapply(arr, function(x) {\n    sum(abs(x))\
    \ > 0\n  }))\n}\n", "\n  # Your code here\n}\n", "\n  # YOUR CODE HERE\n  sum\
    \ <- 0\n  for (i in arr) {\n    if (i < 0) {\n      i <- -i\n    }\n    while\
    \ (i > 0) {\n      sum <- sum + i %% 10\n      i <- i %/% 10\n    }\n    if (sum\
    \ > 0) {\n      sum <- 0\n      count <- count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  # YOUR CODE HERE\n  count <- 0\n  for (i in arr) {\n    sum <- 0\n\
    \    if (i < 0) {\n      sum <- sum + abs(i %% 10)\n      i <- i %/% 10\n    }\n\
    \    while (i > 0) {\n      sum <- sum + i %% 10\n      i <- i %/% 10\n    }\n\
    \    if (sum > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n",
  "\n  # Your code here\n}\n", "\n    count <- 0\n    for (i in arr) {\n        if\
    \ (i < 0) {\n            i <- -i\n        }\n        sum <- 0\n        while (i\
    \ > 0) {\n            sum <- sum + i %% 10\n            i <- i %/% 10\n      \
    \  }\n        if (sum > 0) {\n            count <- count + 1\n        }\n    }\n\
    \    return(count)\n}\n", "\n  # Your code here\n}\n", "\n  # YOUR CODE HERE\n\
    \  sum(sapply(arr, function(x) sum(abs(as.integer(strsplit(as.character(x), \"\
    \")[[1]])))))\n}\n", "\n  sum(sapply(arr, function(x) sum(abs(x)) > 0))\n}\n",
  "\n  # Your code here\n}\n", "\n  count <- 0\n  for (i in arr) {\n    if (sum(abs(i))\
    \ > 0) {\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n", "\n  #\
    \ your code here\n}\n", "\n  # your code here\n}\n", "\n  # your code here\n}\n",
  "\n  # YOUR CODE HERE\n  sum(sapply(arr, function(x) sum(abs(as.integer(strsplit(as.character(x),\
    \ \"\")[[1]])))))\n}\n", "\n  # your code here\n}\n", "\n  # YOUR CODE HERE\n\
    \  count = 0\n  for (i in arr) {\n    if (i < 0) {\n      i = i * -1\n    }\n\
    \    sum = 0\n    while (i > 0) {\n      sum = sum + i %% 10\n      i = i %/%\
    \ 10\n    }\n    if (sum > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n\
    }\n", "\n  sum_digits <- function(x) {\n    if (x < 0) {\n      x <- -x\n    }\n\
    \    sum(as.integer(strsplit(as.character(x), \"\")[[1]]))\n  }\n  sum(sapply(arr,\
    \ sum_digits) > 0)\n}\n", "\n  # Your code here\n}\n", "\n  return(sum(sapply(arr,\
    \ function(x) sum(abs(x)) > 0)))\n}\n", "\n  # YOUR CODE HERE\n  count = 0\n \
    \ for (i in arr) {\n    if (i < 0) {\n      i = -i\n    }\n    sum = 0\n    while\
    \ (i > 0) {\n      sum = sum + i %% 10\n      i = i %/% 10\n    }\n    if (sum\
    \ > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n}\n", "\n  # YOUR\
    \ CODE HERE\n  count = 0\n  for (i in arr) {\n    if (i < 0) {\n      i = -i\n\
    \    }\n    sum = 0\n    while (i > 0) {\n      sum = sum + i %% 10\n      i =\
    \ i %/% 10\n    }\n    if (sum > 0) {\n      count = count + 1\n    }\n  }\n \
    \ return(count)\n}\n\ncount_nums(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\ncount_nums(c(-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10))\ncount_nums(c(1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10))\ncount_nums(c(0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0))\ncount_nums(c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -2, -3, -4,\
    \ -5, -6, -7, -8, -9, -10))\ncount_nums(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))\n", "\n  # Your\
    \ code here\n}\n", "\n  # Your code here\n}\n", "\n  # YOUR CODE HERE\n  count\
    \ = 0\n  for (i in arr) {\n    if (i < 0) {\n      i = -i\n    }\n    sum = 0\n\
    \    while (i > 0) {\n      sum = sum + i %% 10\n      i = i %/% 10\n    }\n \
    \   if (sum > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n}\n",
  "\n  sum(sapply(arr, function(x) sum(abs(x)) > 0))\n}\n", "\n  # your code here\n\
    }\n", "\n  # Write your code here\n}\n", "\n  # YOUR CODE HERE\n  sum <- 0\n \
    \ for (i in arr) {\n    if (i < 0) {\n      i <- -i\n    }\n    while (i > 0)\
    \ {\n      sum <- sum + i %% 10\n      i <- i %/% 10\n    }\n    if (sum > 0)\
    \ {\n      sum <- 0\n      count <- count + 1\n    }\n  }\n  return(count)\n}\n\
    count_nums(c(1, 2, 3, -4, -5, -6))\n", "\n  # Your code here\n  count = 0\n  for\
    \ (i in arr) {\n    if (sum(abs(as.integer(unlist(strsplit(as.character(i), \"\
    \"))))) > 0) {\n      count = count + 1\n    }\n  }\n  return(count)\n}\n", "\n\
    \  # YOUR CODE HERE\n  count <- 0\n  for (i in arr) {\n    if (i < 0) {\n    \
    \  i <- i * -1\n    }\n    sum <- 0\n    while (i > 0) {\n      sum <- sum + i\
    \ %% 10\n      i <- i %/% 10\n    }\n    if (sum > 0) {\n      count <- count\
    \ + 1\n    }\n  }\n  return(count)\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

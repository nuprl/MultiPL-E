name: HumanEval_61_correct_bracketing
language: r
prompt: "# brackets is a string of \"(\" and \")\".\n# return True if every opening\
  \ bracket has a corresponding closing bracket.\ncorrect_bracketing <- function(brackets)\
  \ {"
tests: "test_humaneval <- function() {\ncandidate <- correct_bracketing\n    if(!identical(candidate('()'),\
  \ TRUE)){quit('no', 1)}\n    if(!identical(candidate('(()())'), TRUE)){quit('no',\
  \ 1)}\n    if(!identical(candidate('()()(()())()'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('()()((()()())())(()()(()))'),\
  \ TRUE)){quit('no', 1)}\n    if(!identical(candidate('((()())))'), FALSE)){quit('no',\
  \ 1)}\n    if(!identical(candidate(')(()'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('('),\
  \ FALSE)){quit('no', 1)}\n    if(!identical(candidate('(((('), FALSE)){quit('no',\
  \ 1)}\n    if(!identical(candidate(')'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('(()'),\
  \ FALSE)){quit('no', 1)}\n    if(!identical(candidate('()()(()())())(()'), FALSE)){quit('no',\
  \ 1)}\n    if(!identical(candidate('()()(()())()))()'), FALSE)){quit('no', 1)}\n\
  }\ntest_humaneval()"
completions: []
stop_tokens:
- "\n#"
- "\n```"

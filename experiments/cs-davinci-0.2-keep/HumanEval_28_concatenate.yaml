name: HumanEval_28_concatenate
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Concatenate list of strings into a single string\n    // >>>\
  \ concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n\
  \    public static string Concatenate(List<string> strings) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Concatenate((new\
  \ List<string>())).Equals((\"\")));\n    Debug.Assert(Concatenate((new List<string>(new\
  \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"xyz\")));\n\
  \    Debug.Assert(Concatenate((new List<string>(new string[]{(string)\"x\", (string)\"\
  y\", (string)\"z\", (string)\"w\", (string)\"k\"}))).Equals((\"xyzwk\")));\n   \
  \ }\n\n}\n"
completions: ["        StringBuilder sb = new StringBuilder();\n        foreach (string\
    \ s in strings) {\n            sb.Append(s);\n        }\n        return sb.ToString();",
  '        return strings.Aggregate((a, b) => a + b);', '        return strings.Aggregate((a,
    b) => a + b);', '        return string.Concat(strings);', '        return strings.Aggregate((a,
    b) => a + b);', "        string result = \"\";\n        foreach (string s in strings)\
    \ {\n            result += s;\n        }\n        return result;", '        return
    strings.Aggregate((a, b) => a + b);', '        return strings.Aggregate((a, b)
    => a + b);', '        return strings.Aggregate((a, b) => a + b);', '        return
    strings.Aggregate(new StringBuilder(), (sb, s) => sb.Append(s)).ToString();',
  '        return strings.Aggregate((a, b) => a + b);', '        return strings.Aggregate(new
    StringBuilder(), (sb, s) => sb.Append(s)).ToString();', '        return strings.Aggregate(new
    StringBuilder(), (sb, s) => sb.Append(s)).ToString();', '        return strings.Aggregate(new
    StringBuilder(), (sb, s) => sb.Append(s)).ToString();', '        return strings.Aggregate((a,
    b) => a + b);', '        return String.Concat(strings);', '        return strings.Aggregate((a,
    b) => a + b);', '        return string.Concat(strings);', '        return strings.Aggregate((a,
    b) => a + b);', '        return strings.Aggregate(new StringBuilder(), (sb, s)
    => sb.Append(s)).ToString();']
stop_tokens:
- "\n    }\n"

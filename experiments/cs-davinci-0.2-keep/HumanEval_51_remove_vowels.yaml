name: HumanEval_51_remove_vowels
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // remove_vowels is a function that takes string and returns string\
  \ without vowels.\n    // >>> remove_vowels('')\n    // ''\n    // >>> remove_vowels('abcdef')\n\
  \    // 'bcdf'\n    // >>> remove_vowels('aaaaa')\n    // ''\n    // >>> remove_vowels('aaBAA')\n\
  \    // 'B'\n    // >>> remove_vowels('zbcd')\n    // 'zbcd'\n    public static\
  \ string RemoveVowels(string text) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\
  \")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"\
  bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\"\
  )));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"\
  acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"\
  cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\
  \n}\n"
completions: ['        return text.Replace("a", "").Replace("e", "").Replace("i",
    "").Replace("o", "").Replace("u", "");', '        return text.Replace("a", "").Replace("e",
    "").Replace("i", "").Replace("o", "").Replace("u", "");', "        string vowels\
    \ = \"aeiouAEIOU\";\n        string result = \"\";\n        for (int i = 0; i\
    \ < text.Length; i++) {\n            if (vowels.IndexOf(text[i]) == -1) {\n  \
    \              result += text[i];\n            }\n        }\n        return result;",
  "        // TODO: Implement this function.\n        return \"\";", '        return
    text.Replace("a", "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u",
    "");', '        return new string(text.Where(c => !"aeiou".Contains(c)).ToArray());',
  "        // TODO: Implement this function.\n        return \"\";", '        return
    text.Replace("a", "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u",
    "");', "        string vowels = \"aeiouAEIOU\";\n        string result = \"\"\
    ;\n        foreach (char c in text) {\n            if (vowels.IndexOf(c) == -1)\
    \ {\n                result += c;\n            }\n        }\n        return result;",
  '        return text.Replace("a", "").Replace("e", "").Replace("i", "").Replace("o",
    "").Replace("u", "");', '        return text.Replace("a", "").Replace("e", "").Replace("i",
    "").Replace("o", "").Replace("u", "");', '        return new string(text.Where(c
    => !IsVowel(c)).ToArray());', "        // TODO: Implement this function.\n   \
    \     string result = \"\";\n        for (int i = 0; i < text.Length; i++) {\n\
    \            if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i]\
    \ != 'o' && text[i] != 'u') {\n                result += text[i];\n          \
    \  }\n        }\n        return result;", '        return text.Replace("a", "").Replace("e",
    "").Replace("i", "").Replace("o", "").Replace("u", "");', '        return string.Concat(text.Where(c
    => !"aeiouAEIOU".Contains(c)));', '        return String.Concat(text.Where(c =>
    !"aeiouAEIOU".Contains(c)));', '        return String.Concat(text.Where(c => !"aeiouAEIOU".Contains(c)));',
  "        string vowels = \"aeiouAEIOU\";\n        string result = \"\";\n      \
    \  for (int i = 0; i < text.Length; i++) {\n            if (vowels.IndexOf(text[i])\
    \ == -1) {\n                result += text[i];\n            }\n        }\n   \
    \     return result;", '        return text.Replace("a", "").Replace("e", "").Replace("i",
    "").Replace("o", "").Replace("u", "");', "        string vowels = \"aeiouAEIOU\"\
    ;\n        string result = \"\";\n        foreach (char c in text) {\n       \
    \     if (vowels.IndexOf(c) == -1) {\n                result += c;\n         \
    \   }\n        }\n        return result;", "        // your code here\n      \
    \  return \"\";", '        return text.Replace("a", "").Replace("e", "").Replace("i",
    "").Replace("o", "").Replace("u", "");', '        return text.Replace("a", "").Replace("e",
    "").Replace("i", "").Replace("o", "").Replace("u", "");', "        // Your code\
    \ here\n        return \"\";", "        // TODO: Implement this function.\n  \
    \      return text;", '        return string.Concat(text.Where(c => !"aeiouAEIOU".Contains(c)));',
  "        string result = \"\";\n        foreach (char c in text) {\n           \
    \ if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n          \
    \      continue;\n            }\n            result += c;\n        }\n       \
    \ return result;", '        return text.Replace("a", "").Replace("e", "").Replace("i",
    "").Replace("o", "").Replace("u", "");', '        return text.Replace("a", "").Replace("e",
    "").Replace("i", "").Replace("o", "").Replace("u", "");', "        // TODO: Implement\
    \ this function.\n        return \"\";", '        return text.Where(c => !IsVowel(c)).Aggregate("",
    (a, b) => a + b);', "        string vowels = \"aeiou\";\n        string result\
    \ = \"\";\n        foreach (char c in text) {\n            if (vowels.IndexOf(c)\
    \ == -1) {\n                result += c;\n            }\n        }\n        return\
    \ result;", "        var vowels = new HashSet<char> { 'a', 'e', 'i', 'o', 'u',\
    \ 'A', 'E', 'I', 'O', 'U' };\n        var result = new StringBuilder();\n    \
    \    foreach (var c in text) {\n            if (!vowels.Contains(c)) {\n     \
    \           result.Append(c);\n            }\n        }\n        return result.ToString();",
  "        var vowels = new HashSet<char> { 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U' };\n        var sb = new StringBuilder();\n        foreach (var c in\
    \ text) {\n            if (!vowels.Contains(c)) {\n                sb.Append(c);\n\
    \            }\n        }\n        return sb.ToString();", '        return text.Replace("a",
    "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u", "");', " \
    \       string vowels = \"aeiou\";\n        string result = \"\";\n        foreach\
    \ (char c in text) {\n            if (vowels.IndexOf(c) == -1) {\n           \
    \     result += c;\n            }\n        }\n        return result;", '        return
    new string(text.Where(c => !"aeiou".Contains(c)).ToArray());', "        // TODO:\
    \ implement this function\n        return \"\";", '        return text.Replace("a",
    "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u", "");', '        return
    text.Replace("a", "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u",
    "");', "        // TODO: implement this function\n        return \"\";", '        return
    new string(text.Where(c => !"aeiou".Contains(c)).ToArray());', "        string\
    \ vowels = \"aeiou\";\n        string result = \"\";\n        foreach (char c\
    \ in text) {\n            if (vowels.IndexOf(c) == -1) {\n                result\
    \ += c;\n            }\n        }\n        return result;", '        return text.Replace("a",
    "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u", "");', " \
    \       string result = \"\";\n        foreach (char c in text) {\n          \
    \  if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n         \
    \       result += c;\n            }\n        }\n        return result;", "   \
    \     string vowels = \"aeiouAEIOU\";\n        string result = \"\";\n       \
    \ foreach (char c in text) {\n            if (vowels.IndexOf(c) == -1) {\n   \
    \             result += c;\n            }\n        }\n        return result;",
  '        return string.Concat(text.Where(c => !"aeiouAEIOU".Contains(c)));', " \
    \       // Your code goes here.\n        return \"\";", '        return text.Replace("a",
    "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u", "");', '        return
    new string(text.Where(c => !"aeiou".Contains(c)).ToArray());', '        return
    new string(text.Where(c => !"aeiou".Contains(c)).ToArray());', "        string\
    \ vowels = \"aeiou\";\n        string result = \"\";\n        foreach (char c\
    \ in text) {\n            if (vowels.IndexOf(c) == -1) {\n                result\
    \ += c;\n            }\n        }\n        return result;", "        // TODO:\
    \ Implement this function.\n        return \"\";", '        return text.Where(c
    => !"aeiouAEIOU".Contains(c)).Aggregate("", (s, c) => s + c);', "        // TODO:\
    \ Implement this function.\n        string vowels = \"aeiou\";\n        string\
    \ result = \"\";\n        for (int i = 0; i < text.Length; i++) {\n          \
    \  if (vowels.IndexOf(text[i]) == -1) {\n                result += text[i];\n\
    \            }\n        }\n        return result;", '        return text.Replace("a",
    "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u", "");', " \
    \       // TODO: implement\n        return text;", '        return text.Replace("a",
    "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u", "");', " \
    \       string vowels = \"aeiouAEIOU\";\n        string result = \"\";\n     \
    \   foreach (char c in text) {\n            if (vowels.IndexOf(c) == -1) {\n \
    \               result += c;\n            }\n        }\n        return result;",
  "        string vowels = \"aeiouAEIOU\";\n        string result = \"\";\n      \
    \  for (int i = 0; i < text.Length; i++) {\n            if (vowels.IndexOf(text[i])\
    \ == -1) {\n                result += text[i];\n            }\n        }\n   \
    \     return result;", "        // TODO: Implement this function.\n        return\
    \ text;", "        string vowels = \"aeiouAEIOU\";\n        string result = \"\
    \";\n        foreach (char c in text) {\n            if (vowels.IndexOf(c) ==\
    \ -1) {\n                result += c;\n            }\n        }\n        return\
    \ result;", "        string vowels = \"aeiouAEIOU\";\n        string result =\
    \ \"\";\n        foreach (char c in text) {\n            if (vowels.IndexOf(c)\
    \ == -1) {\n                result += c;\n            }\n        }\n        return\
    \ result;", '        return text.Replace("a", "").Replace("e", "").Replace("i",
    "").Replace("o", "").Replace("u", "");', "        // TODO: Implement this function.\n\
    \        return \"\";", '        return string.Concat(text.Where(c => "aeiouAEIOU".IndexOf(c)
    < 0));', '        return new string(text.Where(c => !"aeiou".Contains(c)).ToArray());',
  '        return string.Concat(text.Where(c => "aeiouAEIOU".IndexOf(c) < 0));', " \
    \       // Your code here.\n        return \"\";", "        // TODO: Implement\
    \ this function.\n        return text;", '        return text.Where(c => !"aeiouAEIOU".Contains(c)).Aggregate("",
    (a, c) => a + c);', '        return string.Concat(text.Where(c => !"aeiouAEIOU".Contains(c)));',
  "        // TODO: Implement this function.\n        return \"\";", '        return
    null;', "        // TODO: Implement this function.\n        return text;", '        return
    string.Concat(text.Where(c => !"aeiouAEIOU".Contains(c)));', "        string vowels\
    \ = \"aeiouAEIOU\";\n        string result = \"\";\n        for (int i = 0; i\
    \ < text.Length; i++) {\n            if (vowels.IndexOf(text[i]) == -1) {\n  \
    \              result += text[i];\n            }\n        }\n        return result;",
  "        string vowels = \"aeiouAEIOU\";\n        string result = \"\";\n      \
    \  for (int i = 0; i < text.Length; i++) {\n            if (vowels.IndexOf(text[i])\
    \ == -1) {\n                result += text[i];\n            }\n        }\n   \
    \     return result;", '        return text.Replace("a", "").Replace("e", "").Replace("i",
    "").Replace("o", "").Replace("u", "");', "        // TODO: implement this function\n\
    \        return \"\";", '        return text.Replace("a", "").Replace("e", "").Replace("i",
    "").Replace("o", "").Replace("u", "");', '        return new string(text.Where(c
    => !"aeiou".Contains(c)).ToArray());', '        return new string(text.Where(c
    => !"aeiou".Contains(c)).ToArray());', '        return "";', "        // Your\
    \ code goes here.\n        return \"\";", '        return text.Replace("a", "").Replace("e",
    "").Replace("i", "").Replace("o", "").Replace("u", "");', "        // TODO: Implement\
    \ this function.\n        string vowels = \"aeiouAEIOU\";\n        string result\
    \ = \"\";\n        foreach (char c in text) {\n            if (!vowels.Contains(c))\
    \ {\n                result += c;\n            }\n        }\n        return result;",
  '        return text.Replace("a", "").Replace("e", "").Replace("i", "").Replace("o",
    "").Replace("u", "");', '        return new string(text.Where(c => "aeiouAEIOU".IndexOf(c)
    == -1).ToArray());', '        return new string(text.Where(c => !"aeiou".Contains(c)).ToArray());',
  '        return string.Concat(text.Where(c => !"aeiouAEIOU".Contains(c)));', '        return
    text.Replace("a", "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u",
    "");', '        return "";', '        return text.Replace("a", "").Replace("e",
    "").Replace("i", "").Replace("o", "").Replace("u", "");', '        return "";',
  "        string vowels = \"aeiouAEIOU\";\n        string result = \"\";\n      \
    \  foreach (char c in text) {\n            if (vowels.IndexOf(c) == -1) {\n  \
    \              result += c;\n            }\n        }\n        return result;",
  '        return new string(text.Where(c => "aeiouAEIOU".IndexOf(c) == -1).ToArray());',
  '        return string.Concat(text.Where(c => "aeiouAEIOU".IndexOf(c) < 0));', '        return
    string.Concat(text.Where(c => "aeiouAEIOU".IndexOf(c) < 0));', "        string\
    \ vowels = \"aeiouAEIOU\";\n        string result = \"\";\n        foreach (char\
    \ c in text) {\n            if (vowels.IndexOf(c) == -1) {\n                result\
    \ += c;\n            }\n        }\n        return result;", '        return new
    string(text.Where(c => "aeiouAEIOU".IndexOf(c) == -1).ToArray());', '        return
    text.Replace("a", "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u",
    "");', "        // TODO: Implement this function.\n        return \"\";", "  \
    \      // TODO: implement this function.\n        string result = \"\";\n    \
    \    foreach (char c in text) {\n            if (c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u') {\n                result += c;\n            }\n\
    \        }\n        return result;", '        return text.Replace("a", "").Replace("e",
    "").Replace("i", "").Replace("o", "").Replace("u", "");', '        return text.Replace("a",
    "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u", "");', '        return
    new string(text.Where(c => "aeiouAEIOU".IndexOf(c) == -1).ToArray());', "    \
    \    string vowels = \"aeiouAEIOU\";\n        string result = \"\";\n        for\
    \ (int i = 0; i < text.Length; i++) {\n            if (vowels.IndexOf(text[i])\
    \ == -1) {\n                result += text[i];\n            }\n        }\n   \
    \     return result;", "        // TODO: Implement this function.\n        return\
    \ \"\";", "        // your code here\n        return text;", "        // TODO:\
    \ Implement this function.\n        return \"\";", '        return text.Replace("a",
    "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u", "");', '        return
    string.Concat(text.Where(c => !"aeiouAEIOU".Contains(c)));', '        return text.Replace("a",
    "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u", "");', '        return
    text.Replace("a", "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u",
    "");', "        // Your code goes here.\n        return \"\";", '        return
    new string(text.Where(c => !"aeiou".Contains(c)).ToArray());', "        string\
    \ vowels = \"aeiou\";\n        string result = \"\";\n        foreach (char c\
    \ in text) {\n            if (vowels.IndexOf(c) == -1) {\n                result\
    \ += c;\n            }\n        }\n        return result;", '        return string.Concat(text.Where(c
    => !"aeiouAEIOU".Contains(c)));', '        return text.Replace("a", "").Replace("e",
    "").Replace("i", "").Replace("o", "").Replace("u", "");', "        var vowels\
    \ = new HashSet<char> { 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U' };\n\
    \        var result = new StringBuilder();\n        foreach (var c in text) {\n\
    \            if (!vowels.Contains(c)) {\n                result.Append(c);\n \
    \           }\n        }\n        return result.ToString();", '        return
    text.Replace("a", "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u",
    "");', '        return new string(text.Where(c => "aeiouAEIOU".IndexOf(c) == -1).ToArray());',
  "        string vowels = \"aeiouAEIOU\";\n        string result = \"\";\n      \
    \  foreach (char c in text) {\n            if (vowels.IndexOf(c) == -1) {\n  \
    \              result += c;\n            }\n        }\n        return result;",
  '        return new string(text.Where(c => "aeiouAEIOU".IndexOf(c) == -1).ToArray());',
  "        // TODO: Implement this function.\n        return \"\";", '        return
    text.Replace("a", "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u",
    "");', '        return text.Replace("a", "").Replace("e", "").Replace("i", "").Replace("o",
    "").Replace("u", "");', '        return new string(text.Where(c => "aeiouAEIOU".IndexOf(c)
    == -1).ToArray());', '        return text.Replace("a", "").Replace("e", "").Replace("i",
    "").Replace("o", "").Replace("u", "");', "        string vowels = \"aeiouAEIOU\"\
    ;\n        string result = \"\";\n        for (int i = 0; i < text.Length; i++)\
    \ {\n            if (vowels.IndexOf(text[i]) == -1) {\n                result\
    \ += text[i];\n            }\n        }\n        return result;", "        //\
    \ TODO: implement this function\n        return text;", '        return text.Replace("a",
    "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u", "");', '        return
    text.Replace("a", "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u",
    "");', "        string result = \"\";\n        foreach (char c in text) {\n  \
    \          if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n \
    \               result += c;\n            }\n        }\n        return result;",
  '        return string.Concat(text.Where(c => !"aeiouAEIOU".Contains(c)));', " \
    \       // TODO: Implement this function.\n        return \"\";", "        //\
    \ TODO: implement this function.\n        return \"\";", '        return text.Replace("a",
    "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u", "");', '        return
    new string(text.Where(c => !"aeiou".Contains(c)).ToArray());', '        return
    new string(text.Where(c => "aeiouAEIOU".IndexOf(c) == -1).ToArray());', "    \
    \    // TODO: Implement this function.\n        return \"\";", "        string\
    \ vowels = \"aeiouAEIOU\";\n        string result = \"\";\n        foreach (char\
    \ c in text) {\n            if (vowels.IndexOf(c) == -1) {\n                result\
    \ += c;\n            }\n        }\n        return result;", "        // your code\
    \ here\n        return \"\";", "        string vowels = \"aeiouAEIOU\";\n    \
    \    string result = \"\";\n        foreach (char c in text) {\n            if\
    \ (vowels.IndexOf(c) == -1) {\n                result += c;\n            }\n \
    \       }\n        return result;", '        return new string(text.Where(c =>
    !"aeiou".Contains(c)).ToArray());', "        // TODO: Implement this function.\n\
    \        return \"\";", '        return "";', '        return text.Replace("a",
    "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u", "");', '        return
    text.Where(c => !"aeiouAEIOU".Contains(c)).Aggregate("", (a, b) => a + b);', '        return
    text.Where(c => "aeiouAEIOU".IndexOf(c) == -1).Aggregate("", (a, b) => a + b);',
  "        string vowels = \"aeiouAEIOU\";\n        string result = \"\";\n      \
    \  for (int i = 0; i < text.Length; i++) {\n            if (vowels.IndexOf(text[i])\
    \ == -1) {\n                result += text[i];\n            }\n        }\n   \
    \     return result;", '        return new string(text.Where(c => !"aeiou".Contains(c)).ToArray());',
  '        return new string(text.Where(c => !"aeiou".Contains(c)).ToArray());', '        return
    new string(text.Where(c => !"aeiou".Contains(c)).ToArray());', "        string\
    \ vowels = \"aeiouAEIOU\";\n        string result = \"\";\n        foreach (char\
    \ c in text) {\n            if (vowels.IndexOf(c) == -1) {\n                result\
    \ += c;\n            }\n        }\n        return result;", '        return text.Replace("a",
    "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u", "");', " \
    \       // TODO: Implement this function.\n        return \"\";", "        //\
    \ TODO: Implement this function.\n        return \"\";", '        return text.Replace("a",
    "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u", "");', " \
    \       // TODO: implement this function\n        return \"\";", '        return
    text.Replace("a", "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u",
    "");', '        return "";', "        string vowels = \"aeiouAEIOU\";\n      \
    \  string result = \"\";\n        foreach (char c in text) {\n            if (vowels.IndexOf(c)\
    \ == -1) {\n                result += c;\n            }\n        }\n        return\
    \ result;", "        // your code here\n        return \"\";", '        return
    text.Replace("a", "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u",
    "");', "        // TODO: implement this function\n        return \"\";", '        return
    text.Replace("a", "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u",
    "");', "        // TODO: Implement this function.\n        return text;", '        return
    string.Concat(text.Where(c => !"aeiou".Contains(c)));', "        // TODO: Implement\
    \ this function.\n        return \"\";", '        return text.Replace("a", "").Replace("e",
    "").Replace("i", "").Replace("o", "").Replace("u", "");', "        // TODO: Implement\
    \ this function\n        return null;", '        return text.Replace("a", "").Replace("e",
    "").Replace("i", "").Replace("o", "").Replace("u", "");', '        return text.Replace("a",
    "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u", "");', '        return
    text.Replace("a", "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u",
    "");', "        // TODO: Implement this function.\n        return \"\";", '        return
    text.Replace("a", "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u",
    "");', "        // TODO: implement this function\n        return \"\";", "   \
    \     string result = \"\";\n        foreach (char c in text) {\n            if\
    \ (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n             \
    \   result += c;\n            }\n        }\n        return result;", "       \
    \ // TODO: Implement this function.\n        string vowels = \"aeiouAEIOU\";\n\
    \        string result = \"\";\n        foreach (char c in text) {\n         \
    \   if (!vowels.Contains(c)) {\n                result += c;\n            }\n\
    \        }\n        return result;", "        // TODO: implement this function\n\
    \        return \"\";", "        // Your code here.\n        return text;", '        return
    text.Replace("a", "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u",
    "");', "        // TODO: Implement this function.\n        return \"\";", "  \
    \      string vowels = \"aeiou\";\n        string result = \"\";\n        foreach\
    \ (char c in text) {\n            if (vowels.IndexOf(c) == -1) {\n           \
    \     result += c;\n            }\n        }\n        return result;", '        return
    text.Replace("a", "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u",
    "");', '        return text.Replace("a", "").Replace("e", "").Replace("i", "").Replace("o",
    "").Replace("u", "");', '        return new string(text.Where(c => "aeiouAEIOU".IndexOf(c)
    == -1).ToArray());', '        return text.Replace("a", "").Replace("e", "").Replace("i",
    "").Replace("o", "").Replace("u", "");', '        return string.Concat(text.Where(c
    => !"aeiou".Contains(c)));', '        return text.Replace("a", "").Replace("e",
    "").Replace("i", "").Replace("o", "").Replace("u", "");', "        string vowels\
    \ = \"aeiou\";\n        string result = \"\";\n        foreach (char c in text)\
    \ {\n            if (vowels.IndexOf(c) == -1) {\n                result += c;\n\
    \            }\n        }\n        return result;", "        string vowels = \"\
    aeiouAEIOU\";\n        string result = \"\";\n        for (int i = 0; i < text.Length;\
    \ i++) {\n            if (vowels.IndexOf(text[i]) == -1) {\n                result\
    \ += text[i];\n            }\n        }\n        return result;", '        return
    new string(text.Where(c => !"aeiou".Contains(c)).ToArray());', "        string\
    \ vowels = \"aeiouAEIOU\";\n        string result = \"\";\n        foreach (char\
    \ c in text) {\n            if (vowels.IndexOf(c) == -1) {\n                result\
    \ += c;\n            }\n        }\n        return result;", '        return text.Replace("a",
    "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u", "");', '        return
    string.Concat(text.Where(c => !"aeiou".Contains(c)));', "        string vowels\
    \ = \"aeiouAEIOU\";\n        string result = \"\";\n        foreach (char c in\
    \ text) {\n            if (vowels.IndexOf(c) == -1) {\n                result\
    \ += c;\n            }\n        }\n        return result;", '        return text.Replace("a",
    "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u", "");']
stop_tokens:
- "\n    }\n"

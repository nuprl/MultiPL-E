language: cs
name: HumanEval_161_solve
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // TODO: Implement your solution here\n
    \       return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39c11cb8f16a44b09233bd860337c548>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39c11cb8f16a44b09233bd860337c548>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.All(c => !char.IsLetter(c))) {\n
    \           return new string(s.Reverse().ToArray());\n        }\n        return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n    Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n
    \   Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n    Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n
    \   Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n    Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n
    \   Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n    Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Length == 0) return s;\n        StringBuilder
    sb = new StringBuilder();\n        for (int i = 0; i < s.Length; i++) {\n            if
    (char.IsLetter(s[i])) {\n                sb.Append(char.IsUpper(s[i]) ? char.ToLower(s[i])
    : char.ToUpper(s[i]));\n            } else {\n                sb.Append(s[i]);\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <02d2e5eada374195b5a397ed888939a7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <02d2e5eada374195b5a397ed888939a7>:0
    \n"
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        var sb = new StringBuilder();\n        var
    hasLetter = false;\n        foreach (var c in s) {\n            if (char.IsLetter(c))
    {\n                hasLetter = true;\n                sb.Append(char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c));\n            } else {\n                sb.Append(c);\n
    \           }\n        }\n        return hasLetter ? sb.ToString() : new string(s.Reverse().ToArray());\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.All(c => !char.IsLetter(c)))\n
    \           return new string(s.Reverse().ToArray());\n        return new string(s.Select(c
    => char.IsLetter(c) ? (char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)) :
    c).ToArray());\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    string.Concat(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c));\n        }\n        return new string(s.Reverse().ToArray());\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.All(char.IsDigit)) {\n            return
    new string(s.Reverse().ToArray());\n        }\n        return new string(s.Select(c
    => char.IsLetter(c) ? (char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)) :
    c).ToArray());\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3a2bd0551f934bcd85f5268a5fa756d4>:0
    \n"
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Length == 0) return \"\";\n        if
    (s.Length == 1) return s;\n        if (s.All(c => !char.IsLetter(c))) return new
    string(s.Reverse().ToArray());\n        var sb = new StringBuilder();\n        for
    (int i = 0; i < s.Length; i++) {\n            if (char.IsLetter(s[i])) {\n                sb.Append(char.IsUpper(s[i])
    ? char.ToLower(s[i]) : char.ToUpper(s[i]));\n            } else {\n                sb.Append(s[i]);\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code here\n        return \"\";\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af061ec7d2a9433b81ca8467772b63b3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af061ec7d2a9433b81ca8467772b63b3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here.\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <84564c25ac0a465e84cb3994a81c0b4a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <84564c25ac0a465e84cb3994a81c0b4a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code here\n        return \"\";\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af061ec7d2a9433b81ca8467772b63b3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af061ec7d2a9433b81ca8467772b63b3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here.\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1aab537b91fb422887e911f4af6f010b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1aab537b91fb422887e911f4af6f010b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here.\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1aab537b91fb422887e911f4af6f010b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1aab537b91fb422887e911f4af6f010b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code here\n        return \"\";\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af061ec7d2a9433b81ca8467772b63b3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af061ec7d2a9433b81ca8467772b63b3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? (char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c)) : c).ToArray());\n        } else {\n            return new
    string(s.Reverse().ToArray());\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n    Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n
    \   Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n    Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n
    \   Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n    Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n
    \   Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n    Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here.\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1aab537b91fb422887e911f4af6f010b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1aab537b91fb422887e911f4af6f010b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.All(char.IsDigit)) {\n            return
    new string(s.Reverse().ToArray());\n        }\n        return new string(s.Select(c
    => char.IsLetter(c) ? (char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)) :
    c).ToArray());\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3a2bd0551f934bcd85f5268a5fa756d4>:0
    \n"
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // TODO: Implement your solution here\n
    \       return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0000b] in <30a685c3f2c8475595abff851504ac04>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0000b] in <30a685c3f2c8475595abff851504ac04>:0
    \n"
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Length == 0) return s;\n        if
    (s.All(c => !char.IsLetter(c))) return new string(s.Reverse().ToArray());\n        var
    sb = new StringBuilder();\n        foreach (var c in s) {\n            if (char.IsLetter(c))
    {\n                sb.Append(char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c));\n
    \           } else {\n                sb.Append(c);\n            }\n        }\n
    \       return sb.ToString();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n    Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n
    \   Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n    Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n
    \   Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n    Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n
    \   Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n    Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        var sb = new StringBuilder();\n        var
    isLetter = false;\n        for (int i = 0; i < s.Length; i++) {\n            if
    (char.IsLetter(s[i])) {\n                isLetter = true;\n                sb.Append(char.IsUpper(s[i])
    ? char.ToLower(s[i]) : char.ToUpper(s[i]));\n            } else {\n                sb.Append(s[i]);\n
    \           }\n        }\n        return isLetter ? sb.ToString() : new string(sb.ToString().Reverse().ToArray());\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Length == 0) return s;\n        if
    (s.All(c => !char.IsLetter(c))) return new string(s.Reverse().ToArray());\n        var
    sb = new StringBuilder();\n        foreach (var c in s) {\n            if (char.IsLetter(c))
    {\n                sb.Append(char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c));\n
    \           } else {\n                sb.Append(c);\n            }\n        }\n
    \       return sb.ToString();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n    Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n
    \   Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n    Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n
    \   Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n    Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n
    \   Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n    Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here.\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1aab537b91fb422887e911f4af6f010b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1aab537b91fb422887e911f4af6f010b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(c => char.IsLetter(c))) {\n
    \           return new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c) : c).ToArray());\n        } else {\n            return
    new string(s.Reverse().ToArray());\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n    Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n
    \   Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n    Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n
    \   Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n    Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n
    \   Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n    Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Length == 0) return s;\n        var
    sb = new StringBuilder();\n        foreach (var c in s) {\n            if (char.IsLetter(c))
    {\n                sb.Append(char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c));\n
    \           } else {\n                sb.Append(c);\n            }\n        }\n
    \       return sb.Length == 0 ? s : sb.ToString();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3c3c9f876de64788aa7c634a47f8ba30>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3c3c9f876de64788aa7c634a47f8ba30>:0
    \n"
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here.\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1aab537b91fb422887e911f4af6f010b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1aab537b91fb422887e911f4af6f010b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp31n23hzq.cs(18,26): error CS0161: ''Problem.Solve(string)'': not all code
    paths return a value

    '
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here.\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <84564c25ac0a465e84cb3994a81c0b4a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <84564c25ac0a465e84cb3994a81c0b4a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // TODO: Implement your solution here\n
    \       return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39c11cb8f16a44b09233bd860337c548>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39c11cb8f16a44b09233bd860337c548>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Length == 0) return s;\n        var
    sb = new StringBuilder();\n        for (int i = 0; i < s.Length; i++) {\n            if
    (char.IsLetter(s[i])) {\n                if (char.IsUpper(s[i])) {\n                    sb.Append(char.ToLower(s[i]));\n
    \               } else {\n                    sb.Append(char.ToUpper(s[i]));\n
    \               }\n            } else {\n                sb.Append(s[i]);\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n    Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n
    \   Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n    Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n
    \   Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n    Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n
    \   Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n    Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6a45ea94586b48f3b5a22422976019c2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6a45ea94586b48f3b5a22422976019c2>:0
    \n"
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code here\n        return \"\";\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af061ec7d2a9433b81ca8467772b63b3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af061ec7d2a9433b81ca8467772b63b3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here.\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1aab537b91fb422887e911f4af6f010b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1aab537b91fb422887e911f4af6f010b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.All(char.IsDigit)) {\n            return
    new string(s.Reverse().ToArray());\n        }\n        return new string(s.Select(c
    => char.IsLetter(c) ? (char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)) :
    c).ToArray());\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3a2bd0551f934bcd85f5268a5fa756d4>:0
    \n"
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ?\n                char.IsUpper(c) ?
    char.ToLower(c) : char.ToUpper(c) : c).ToArray());\n        }\n        return
    new string(s.Reverse().ToArray());\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n    Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n
    \   Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n    Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n
    \   Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n    Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n
    \   Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n    Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        var sb = new StringBuilder();\n        var
    isLetter = false;\n        foreach (var c in s) {\n            if (char.IsLetter(c))
    {\n                isLetter = true;\n                sb.Append(char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c));\n            } else {\n                sb.Append(c);\n
    \           }\n        }\n        return isLetter ? sb.ToString() : new string(sb.ToString().Reverse().ToArray());\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793718
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Length == 0) return s;\n        var
    sb = new StringBuilder();\n        for (int i = 0; i < s.Length; i++) {\n            if
    (char.IsLetter(s[i])) {\n                sb.Append(char.IsUpper(s[i]) ? char.ToLower(s[i])
    : char.ToUpper(s[i]));\n            } else {\n                sb.Append(s[i]);\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <43d0c329e4074e06a20788974f413b14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <43d0c329e4074e06a20788974f413b14>:0
    \n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // TODO: Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eca94234c0264dac83fa2b4a6a33b768>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eca94234c0264dac83fa2b4a6a33b768>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793718
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Length == 0) {\n            return
    s;\n        }\n        var chars = s.ToCharArray();\n        var hasLetter = false;\n
    \       for (int i = 0; i < chars.Length; i++) {\n            if (char.IsLetter(chars[i]))
    {\n                hasLetter = true;\n                chars[i] = char.IsUpper(chars[i])
    ? char.ToLower(chars[i]) : char.ToUpper(chars[i]);\n            }\n        }\n
    \       if (!hasLetter) {\n            Array.Reverse(chars);\n        }\n        return
    new string(chars);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793718
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // TODO: implement your solution here\n
    \       return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <05457367c0724c53b7d2a21438b10d5a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <05457367c0724c53b7d2a21438b10d5a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793718
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Length == 0) return s;\n        var
    sb = new StringBuilder();\n        foreach (var c in s) {\n            if (char.IsLetter(c))
    {\n                sb.Append(char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c));\n
    \           } else {\n                sb.Append(c);\n            }\n        }\n
    \       if (sb.ToString().Any(char.IsLetter)) {\n            return sb.ToString();\n
    \       } else {\n            return new string(sb.ToString().Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793718
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    string.Concat(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c));\n        }\n        return new string(s.Reverse().ToArray());\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Length == 0) return s;\n        if
    (s.All(c => !char.IsLetter(c))) return new string(s.Reverse().ToArray());\n        var
    sb = new StringBuilder();\n        foreach (var c in s) {\n            if (char.IsLetter(c))
    {\n                if (char.IsUpper(c)) sb.Append(char.ToLower(c));\n                else
    sb.Append(char.ToUpper(c));\n            } else {\n                sb.Append(c);\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793718
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.All(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n
    \       }\n        return new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c) : c).ToArray());\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <734853b5fea84fe6857b6becc265e83d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <734853b5fea84fe6857b6becc265e83d>:0
    \n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ?\n                char.IsUpper(c) ?
    char.ToLower(c) : char.ToUpper(c) : c).ToArray());\n        }\n        return
    new string(s.Reverse().ToArray());\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n    Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n
    \   Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n    Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n
    \   Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n    Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n
    \   Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n    Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.All(char.IsDigit)) {\n            return
    new string(s.Reverse().ToArray());\n        }\n        return new string(s.Select(c
    => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c) : c).ToArray());\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9d4cfcb6ab6f4966a6fbcee3ce53722e>:0
    \n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.All(c => !char.IsLetter(c))) {\n
    \           return new string(s.Reverse().ToArray());\n        }\n        var
    sb = new StringBuilder();\n        foreach (var c in s) {\n            if (char.IsLetter(c))
    {\n                sb.Append(char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c));\n
    \           } else {\n                sb.Append(c);\n            }\n        }\n
    \       return sb.ToString();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n    Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n
    \   Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n    Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n
    \   Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n    Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n
    \   Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n    Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793718
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code here\n        return \"\";\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af061ec7d2a9433b81ca8467772b63b3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af061ec7d2a9433b81ca8467772b63b3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code here\n        return \"\";\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af061ec7d2a9433b81ca8467772b63b3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af061ec7d2a9433b81ca8467772b63b3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        var result = new StringBuilder();\n        var
    noLetters = true;\n        foreach (var c in s) {\n            if (char.IsLetter(c))
    {\n                noLetters = false;\n                result.Append(char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c));\n            } else {\n                result.Append(c);\n
    \           }\n        }\n        return noLetters ? new string(result.ToString().Reverse().ToArray())
    : result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793718
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eb4582f32c6f4a0c92308c4d4e64fe1d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eb4582f32c6f4a0c92308c4d4e64fe1d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793718
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Length == 0) {\n            return
    s;\n        }\n        var sb = new StringBuilder();\n        for (int i = 0;
    i < s.Length; i++) {\n            if (char.IsLetter(s[i])) {\n                sb.Append(char.IsUpper(s[i])
    ? char.ToLower(s[i]) : char.ToUpper(s[i]));\n            } else {\n                sb.Append(s[i]);\n
    \           }\n        }\n        if (sb.ToString() == s) {\n            return
    new string(s.Reverse().ToArray());\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793718
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.All(char.IsDigit)) {\n            return
    new string(s.Reverse().ToArray());\n        }\n        var sb = new StringBuilder();\n
    \       foreach (var c in s) {\n            if (char.IsLetter(c)) {\n                sb.Append(char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c));\n            } else {\n                sb.Append(c);\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <adf7bd56a11645959140547d341aa3c6>:0
    \n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // TODO: Implement your solution here\n
    \       return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0000b] in <30a685c3f2c8475595abff851504ac04>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0000b] in <30a685c3f2c8475595abff851504ac04>:0
    \n"
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here.\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1aab537b91fb422887e911f4af6f010b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1aab537b91fb422887e911f4af6f010b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here.\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1aab537b91fb422887e911f4af6f010b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1aab537b91fb422887e911f4af6f010b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(c => char.IsLetter(c))) {\n
    \           return new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c) : c).ToArray());\n        } else {\n            return
    new string(s.Reverse().ToArray());\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n    Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n
    \   Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n    Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n
    \   Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n    Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n
    \   Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n    Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here.\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1aab537b91fb422887e911f4af6f010b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1aab537b91fb422887e911f4af6f010b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c9fc8cc650420a87d55de5d70b74e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // TODO: Implement your solution here\n
    \       return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39c11cb8f16a44b09233bd860337c548>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39c11cb8f16a44b09233bd860337c548>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.All(c => !char.IsLetter(c))) {\n
    \           return new string(s.Reverse().ToArray());\n        }\n        var
    sb = new StringBuilder();\n        foreach (var c in s) {\n            if (char.IsLetter(c))
    {\n                sb.Append(char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c));\n
    \           } else {\n                sb.Append(c);\n            }\n        }\n
    \       return sb.ToString();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n    Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n
    \   Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n    Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n
    \   Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n    Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n
    \   Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n    Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793718
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here.\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1aab537b91fb422887e911f4af6f010b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1aab537b91fb422887e911f4af6f010b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Write your code here\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29039c1125da45a6aa57ff3d259a7816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Any(char.IsLetter)) {\n            return
    new string(s.Select(c => char.IsLetter(c) ? char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c) : c).ToArray());\n        } else {\n            return new string(s.Reverse().ToArray());\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        var sb = new StringBuilder();\n        bool
    hasLetter = false;\n        foreach (var c in s) {\n            if (char.IsLetter(c))
    {\n                hasLetter = true;\n                sb.Append(char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c));\n            } else {\n                sb.Append(c);\n
    \           }\n        }\n        return hasLetter ? sb.ToString() : new string(s.Reverse().ToArray());\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793718
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        if (s.Length == 0) return s;\n        StringBuilder
    sb = new StringBuilder();\n        for (int i = 0; i < s.Length; i++) {\n            if
    (char.IsLetter(s[i])) {\n                sb.Append(char.IsUpper(s[i]) ? char.ToLower(s[i])
    : char.ToUpper(s[i]));\n            } else {\n                sb.Append(s[i]);\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <02d2e5eada374195b5a397ed888939a7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <02d2e5eada374195b5a397ed888939a7>:0
    \n"
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here.\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1aab537b91fb422887e911f4af6f010b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1aab537b91fb422887e911f4af6f010b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // your code here\n        return \"\";\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4bdeaf1f21ff47f6925de62ad26f0b78>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4bdeaf1f21ff47f6925de62ad26f0b78>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793718
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // Your code goes here.\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1aab537b91fb422887e911f4af6f010b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1aab537b91fb422887e911f4af6f010b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse
    its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n
    \   // If the string contains no letters, reverse the string.\n    // The function
    should return the resulted string.\n    // Examples\n    // solve(\"1234\") =
    \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"#a@C\") = \"#A@c\"\n    public
    static string Solve(string s) {\n        // TODO: Implement your solution here\n
    \       return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"AsDf\")).Equals((\"aSdF\")));\n
    \   Debug.Assert(Solve((\"1234\")).Equals((\"4321\")));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n
    \   Debug.Assert(Solve((\"#a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"#aSDFw^45\")));\n
    \   Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"#$a^D\")).Equals((\"#$A^d\")));\n
    \   Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39c11cb8f16a44b09233bd860337c548>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39c11cb8f16a44b09233bd860337c548>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793717

name: HumanEval_19_sort_numbers
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Input is a space-delimited string of numberals from 'zero' to\
  \ 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
  \ 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted\
  \ from smallest to largest\n    // >>> sort_numbers('three one five')\n    // 'one\
  \ three five'\n    public static string SortNumbers(string numbers) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
  \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
  )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\"\
  )));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"\
  zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five\
  \ four three two one zero\")).Equals((\"zero one two three four five six\")));\n\
  \    }\n\n}\n"
completions: ["        string[] nums = numbers.Split(' ');\n        int[] nums2 =\
    \ new int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n   \
    \         switch (nums[i]) {\n                case \"zero\":\n               \
    \     nums2[i] = 0;\n                    break;\n                case \"one\"\
    :\n                    nums2[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    nums2[i] = 2;\n                    break;\n\
    \                case \"three\":\n                    nums2[i] = 3;\n        \
    \            break;\n                case \"four\":\n                    nums2[i]\
    \ = 4;\n                    break;\n                case \"five\":\n         \
    \           nums2[i] = 5;\n                    break;\n                case \"\
    six\":\n                    nums2[i] = 6;\n                    break;\n      \
    \          case \"seven\":\n                    nums2[i] = 7;\n              \
    \      break;\n                case \"eight\":\n                    nums2[i] =\
    \ 8;\n                    break;\n                case \"nine\":\n           \
    \         nums2[i] = 9;\n                    break;\n            }\n        }\n\
    \        Array.Sort(nums2);\n        string output = \"\";\n        for (int i\
    \ = 0; i < nums2.Length; i++) {\n            switch (nums2[i]) {\n           \
    \     case 0:\n                    output += \"zero \";\n                    break;\n\
    \                case 1:\n                    output += \"one \";\n          \
    \          break;\n                case 2:\n                    output += \"two\
    \ \";\n                    break;\n                case 3:\n                 \
    \   output += \"three \";\n                    break;\n                case 4:\n\
    \                    output += \"four \";\n                    break;\n      \
    \          case 5:\n                    output += \"five \";\n               \
    \     break;\n                case 6:\n                    output += \"six \"\
    ;\n                    break;\n                case 7:\n                    output\
    \ += \"seven \";\n                    break;\n                case 8:\n      \
    \              output += \"eight \";\n                    break;\n           \
    \     case 9:\n                    output += \"nine \";\n                    break;\n\
    \            }\n        }\n        return output.Trim();", "        // Your code\
    \ goes here\n        return \"\";", "        // TODO: Implement this function\n\
    \        return \"\";", "        var nums = numbers.Split(' ');\n        Array.Sort(nums);\n\
    \        return string.Join(\" \", nums);", "        var nums = numbers.Split('\
    \ ');\n        var numsInt = new int[nums.Length];\n        for (int i = 0; i\
    \ < nums.Length; i++) {\n            numsInt[i] = int.Parse(nums[i]);\n      \
    \  }\n        Array.Sort(numsInt);\n        var result = \"\";\n        for (int\
    \ i = 0; i < numsInt.Length; i++) {\n            result += numsInt[i] + \" \"\
    ;\n        }\n        return result.Trim();", "        // Your code goes here\n\
    \        return \"\";", "        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n\
    \        var dict = new Dictionary<string, int>() {\n            {\"zero\", 0},\n\
    \            {\"one\", 1},\n            {\"two\", 2},\n            {\"three\"\
    , 3},\n            {\"four\", 4},\n            {\"five\", 5},\n            {\"\
    six\", 6},\n            {\"seven\", 7},\n            {\"eight\", 8},\n       \
    \     {\"nine\", 9}\n        };\n        var sorted = nums.Select(x => dict[x]).OrderBy(x\
    \ => x).Select(x => dict.First(y => y.Value == x).Key).ToArray();\n        return\
    \ string.Join(\" \", sorted);", "        var nums = numbers.Split(' ').Select(s\
    \ => int.Parse(s)).OrderBy(i => i).Select(i => i.ToString());\n        return\
    \ string.Join(\" \", nums);", "        // TODO: Implement this function\n    \
    \    return \"\";", "        var nums = numbers.Split(' ');\n        var nums2\
    \ = new List<int>();\n        foreach (var num in nums) {\n            nums2.Add(Convert.ToInt32(num));\n\
    \        }\n        nums2.Sort();\n        var nums3 = new List<string>();\n \
    \       foreach (var num in nums2) {\n            nums3.Add(num.ToString());\n\
    \        }\n        return string.Join(\" \", nums3);", "        string[] nums\
    \ = numbers.Split(' ');\n        int[] nums_int = new int[nums.Length];\n    \
    \    for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i]) {\n\
    \                case \"zero\":\n                    nums_int[i] = 0;\n      \
    \              break;\n                case \"one\":\n                    nums_int[i]\
    \ = 1;\n                    break;\n                case \"two\":\n          \
    \          nums_int[i] = 2;\n                    break;\n                case\
    \ \"three\":\n                    nums_int[i] = 3;\n                    break;\n\
    \                case \"four\":\n                    nums_int[i] = 4;\n      \
    \              break;\n                case \"five\":\n                    nums_int[i]\
    \ = 5;\n                    break;\n                case \"six\":\n          \
    \          nums_int[i] = 6;\n                    break;\n                case\
    \ \"seven\":\n                    nums_int[i] = 7;\n                    break;\n\
    \                case \"eight\":\n                    nums_int[i] = 8;\n     \
    \               break;\n                case \"nine\":\n                    nums_int[i]\
    \ = 9;\n                    break;\n            }\n        }\n        Array.Sort(nums_int);\n\
    \        string ret = \"\";\n        for (int i = 0; i < nums_int.Length; i++)\
    \ {\n            switch (nums_int[i]) {\n                case 0:\n           \
    \         ret += \"zero \";\n                    break;\n                case\
    \ 1:\n                    ret += \"one \";\n                    break;\n     \
    \           case 2:\n                    ret += \"two \";\n                  \
    \  break;\n                case 3:\n                    ret += \"three \";\n \
    \                   break;\n                case 4:\n                    ret +=\
    \ \"four \";\n                    break;\n                case 5:\n          \
    \          ret += \"five \";\n                    break;\n                case\
    \ 6:\n                    ret += \"six \";\n                    break;\n     \
    \           case 7:\n                    ret += \"seven \";\n                \
    \    break;\n                case 8:\n                    ret += \"eight \";\n\
    \                    break;\n                case 9:\n                    ret\
    \ += \"nine \";\n                    break;\n            }\n        }", "    \
    \    // Your code goes here\n        return \"\";", "        // Your code goes\
    \ here\n        return \"\";", "        // Your code goes here\n        return\
    \ \"\";", "        var nums = numbers.Split(' ').Select(x => int.Parse(x)).OrderBy(x\
    \ => x).Select(x => x.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);", "        string[] nums = numbers.Split(' ');\n        int[] nums2 =\
    \ new int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n   \
    \         switch (nums[i]) {\n                case \"zero\":\n               \
    \     nums2[i] = 0;\n                    break;\n                case \"one\"\
    :\n                    nums2[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    nums2[i] = 2;\n                    break;\n\
    \                case \"three\":\n                    nums2[i] = 3;\n        \
    \            break;\n                case \"four\":\n                    nums2[i]\
    \ = 4;\n                    break;\n                case \"five\":\n         \
    \           nums2[i] = 5;\n                    break;\n                case \"\
    six\":\n                    nums2[i] = 6;\n                    break;\n      \
    \          case \"seven\":\n                    nums2[i] = 7;\n              \
    \      break;\n                case \"eight\":\n                    nums2[i] =\
    \ 8;\n                    break;\n                case \"nine\":\n           \
    \         nums2[i] = 9;\n                    break;\n            }\n        }\n\
    \        Array.Sort(nums2);\n        string result = \"\";\n        for (int i\
    \ = 0; i < nums2.Length; i++) {\n            switch (nums2[i]) {\n           \
    \     case 0:\n                    result += \"zero \";\n                    break;\n\
    \                case 1:\n                    result += \"one \";\n          \
    \          break;\n                case 2:\n                    result += \"two\
    \ \";\n                    break;\n                case 3:\n                 \
    \   result += \"three \";\n                    break;\n                case 4:\n\
    \                    result += \"four \";\n                    break;\n      \
    \          case 5:\n                    result += \"five \";\n               \
    \     break;\n                case 6:\n                    result += \"six \"\
    ;\n                    break;\n                case 7:\n                    result\
    \ += \"seven \";\n                    break;\n                case 8:\n      \
    \              result += \"eight \";\n                    break;\n           \
    \     case 9:\n                    result += \"nine \";\n                    break;\n\
    \            }\n        }\n        return result.Trim();", "        // TODO: Implement\n\
    \        return \"\";", "        // TODO: Implement this method\n        return\
    \ \"\";", "        var nums = numbers.Split(' ');\n        Array.Sort(nums);\n\
    \        return string.Join(\" \", nums);", "        var nums = numbers.Split('\
    \ ').Select(x => (int)Enum.Parse(typeof(Numbers), x)).OrderBy(x => x).Select(x\
    \ => x.ToString());\n        return string.Join(\" \", nums);"]
stop_tokens:
- "\n    }\n"

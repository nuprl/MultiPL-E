name: HumanEval_24_largest_divisor
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // For a given number n, find the largest number that divides n\
  \ evenly, smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    public static\
  \ long LargestDivisor(long n) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
  \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
  \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
  \ == (7L));\n    }\n\n}\n"
completions: ["        long d = 2;\n        while (n % d != 0) {\n            d++;\n\
    \        }\n        return d;", "        for (long i = n - 1; i > 0; i--) {\n\
    \            if (n % i == 0) {\n                return i;\n            }\n   \
    \     }\n        return 1;", "        long i = n / 2;\n        while (i > 0) {\n\
    \            if (n % i == 0) {\n                return i;\n            }\n   \
    \         i--;\n        }\n        return 1;", "        for (long i = n - 1; i\
    \ > 0; i--) {\n            if (n % i == 0) {\n                return i;\n    \
    \        }\n        }\n        return 1;", "        for (long i = n - 1; i > 0;\
    \ i--) {\n            if (n % i == 0) {\n                return i;\n         \
    \   }\n        }\n        return 0;", "        long largest = 1;\n        for\
    \ (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n                largest\
    \ = i;\n            }\n        }\n        return largest;", "        long largest\
    \ = 1;\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n\
    \                largest = i;\n            }\n        }\n        return largest;",
  "        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n   \
    \             return i;\n            }\n        }\n        return 1;", "     \
    \   long max = 0;\n        for (long i = 1; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                max = i;\n            }\n        }\n        return\
    \ max;", "        long largest = 1;\n        for (long i = 2; i < n; i++) {\n\
    \            if (n % i == 0) {\n                largest = i;\n            }\n\
    \        }\n        return largest;", "        long i = n - 1;\n        while\
    \ (i > 0) {\n            if (n % i == 0) {\n                return i;\n      \
    \      }\n            i--;\n        }\n        return 1;", "        for (long\
    \ i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n                return\
    \ i;\n            }\n        }\n        return 1;", "        long largest = 1;\n\
    \        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           largest = i;\n            }\n        }\n        return largest;",
  "        long i = 2;\n        while (i < n) {\n            if (n % i == 0) {\n \
    \               return n / i;\n            }\n            i++;\n        }\n  \
    \      return 1;", "        long largest = 1;\n        for (long i = 2; i < n;\
    \ i++) {\n            if (n % i == 0) {\n                largest = i;\n      \
    \      }\n        }\n        return largest;", "        for (long i = n - 1; i\
    \ > 0; i--) {\n            if (n % i == 0) {\n                return i;\n    \
    \        }\n        }\n        return 1;", "        for (long i = n - 1; i > 0;\
    \ i--) {\n            if (n % i == 0) {\n                return i;\n         \
    \   }\n        }\n        return 1;", "        for (long i = n - 1; i > 0; i--)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \        }\n        return 1;", "        long i = n - 1;\n        while (i > 0)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \            i--;\n        }\n        return 1;", "        long largest = 1;\n\
    \        for (long i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n\
    \                largest = i;\n            }\n        }\n        return largest;"]
stop_tokens:
- "\n    }\n"

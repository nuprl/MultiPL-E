language: cs
name: HumanEval_111_histogram
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        var result = new Dictionary<string,long>();\n        var letters
    = test.Split(' ');\n        foreach (var letter in letters) {\n            if
    (result.ContainsKey(letter)) {\n                result[letter]++;\n            }
    else {\n                result[letter] = 1;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e3d75fb10f454a4493573c2c0cc4b5bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e3d75fb10f454a4493573c2c0cc4b5bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (result.ContainsKey(word)) {\n                result[word]++;\n
    \           } else {\n                result[word] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        Dictionary<string,long> letterCount
    = new Dictionary<string,long>();\n        foreach (string letter in letters) {\n
    \           if (letterCount.ContainsKey(letter)) {\n                letterCount[letter]++;\n
    \           } else {\n                letterCount[letter] = 1;\n            }\n
    \       }\n        long max = letterCount.Values.Max();\n        foreach (KeyValuePair<string,long>
    entry in letterCount) {\n            if (entry.Value == max) {\n                result[entry.Key]
    = entry.Value;\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3a06784119c54fa7999b226da58903fb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3a06784119c54fa7999b226da58903fb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]
    += 1;\n            } else {\n                result[letter] = 1;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5eeefba19e3e45c085586b341c5d6968>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5eeefba19e3e45c085586b341c5d6968>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       Dictionary<string,long> counts = new Dictionary<string,long>();\n        foreach
    (string letter in test.Split(' ')) {\n            if (counts.ContainsKey(letter))
    {\n                counts[letter]++;\n            } else {\n                counts[letter]
    = 1;\n            }\n        }\n        long max = counts.Values.Max();\n        foreach
    (string letter in counts.Keys) {\n            if (counts[letter] == max) {\n                result[letter]
    = max;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <69a71d574f2b40a08ccca2a3c0486855>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <69a71d574f2b40a08ccca2a3c0486855>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        var dict = new Dictionary<string,long>();\n        foreach (var
    letter in test.Split(' ')) {\n            if (dict.ContainsKey(letter)) {\n                dict[letter]++;\n
    \           } else {\n                dict[letter] = 1;\n            }\n        }\n
    \       return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cbfec92fc2e646768df932ca1f9e83f9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cbfec92fc2e646768df932ca1f9e83f9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (result.ContainsKey(word)) {\n                result[word]++;\n
    \           } else {\n                result[word] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        Dictionary<string,long> letterCount
    = new Dictionary<string,long>();\n        foreach (string letter in letters) {\n
    \           if (letterCount.ContainsKey(letter)) {\n                letterCount[letter]
    += 1;\n            } else {\n                letterCount[letter] = 1;\n            }\n
    \       }\n        long max = letterCount.Values.Max();\n        foreach (string
    letter in letterCount.Keys) {\n            if (letterCount[letter] == max) {\n
    \               result[letter] = max;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a4d475c0706e48c99a65f8c1c4a45f11>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a4d475c0706e48c99a65f8c1c4a45f11>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> histogram = new Dictionary<string,long>();\n
    \       foreach (string letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))
    {\n                histogram[letter]++;\n            } else {\n                histogram[letter]
    = 1;\n            }\n        }\n        return histogram;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        var dict = new Dictionary<string,long>();\n        foreach (var
    c in test.Split(' ')) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n
    \           } else {\n                dict[c] = 1;\n            }\n        }\n
    \       return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba8324c21166446d8561aeaca7c84cf6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba8324c21166446d8561aeaca7c84cf6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       if (test == \"\") {\n            return result;\n        }\n        string[]
    letters = test.Split(' ');\n        Dictionary<string,long> counts = new Dictionary<string,long>();\n
    \       foreach (string letter in letters) {\n            if (counts.ContainsKey(letter))
    {\n                counts[letter]++;\n            } else {\n                counts[letter]
    = 1;\n            }\n        }\n        long max = counts.Values.Max();\n        foreach
    (string letter in counts.Keys) {\n            if (counts[letter] == max) {\n                result[letter]
    = max;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eec8dbd93972447287a244fc0f48cd64>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eec8dbd93972447287a244fc0f48cd64>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       Dictionary<string,long> temp = new Dictionary<string,long>();\n        string[]
    words = test.Split(' ');\n        foreach (string word in words) {\n            if
    (temp.ContainsKey(word)) {\n                temp[word]++;\n            } else
    {\n                temp.Add(word, 1);\n            }\n        }\n        long
    max = 0;\n        foreach (KeyValuePair<string,long> item in temp) {\n            if
    (item.Value > max) {\n                max = item.Value;\n            }\n        }\n
    \       foreach (KeyValuePair<string,long> item in temp) {\n            if (item.Value
    == max) {\n                result.Add(item.Key, item.Value);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <85e82fb69e4a48fd89baeafb479fdd39>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <85e82fb69e4a48fd89baeafb479fdd39>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       Dictionary<string,long> temp = new Dictionary<string,long>();\n        string[]
    letters = test.Split(' ');\n        foreach (string letter in letters) {\n            if
    (temp.ContainsKey(letter)) {\n                temp[letter]++;\n            } else
    {\n                temp.Add(letter, 1);\n            }\n        }\n        long
    max = temp.Values.Max();\n        foreach (KeyValuePair<string,long> kvp in temp)
    {\n            if (kvp.Value == max) {\n                result.Add(kvp.Key, kvp.Value);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <77976a3c69864b78928ef2baf50f6e3c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <77976a3c69864b78928ef2baf50f6e3c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       Dictionary<string,long> temp = new Dictionary<string,long>();\n        string[]
    letters = test.Split(' ');\n        foreach (string letter in letters) {\n            if
    (temp.ContainsKey(letter)) {\n                temp[letter]++;\n            } else
    {\n                temp.Add(letter, 1);\n            }\n        }\n        long
    max = temp.Values.Max();\n        foreach (KeyValuePair<string,long> pair in temp)
    {\n            if (pair.Value == max) {\n                result.Add(pair.Key,
    pair.Value);\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7ab7aa875caf41ea8bb0e97b4fe84f04>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7ab7aa875caf41ea8bb0e97b4fe84f04>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> histogram = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (histogram.ContainsKey(word)) {\n                histogram[word]++;\n
    \           } else {\n                histogram[word] = 1;\n            }\n        }\n
    \       return histogram;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a58e2b2e4b244f5a252dc99d15541cd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a58e2b2e4b244f5a252dc99d15541cd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> dict = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (dict.ContainsKey(letter)) {\n                dict[letter]++;\n
    \           } else {\n                dict.Add(letter, 1);\n            }\n        }\n
    \       return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50819519169642f18a0cd78c41aa61a8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50819519169642f18a0cd78c41aa61a8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        Dictionary<string,long> counts
    = new Dictionary<string,long>();\n        foreach (string letter in letters) {\n
    \           if (counts.ContainsKey(letter)) {\n                counts[letter]
    += 1;\n            } else {\n                counts[letter] = 1;\n            }\n
    \       }\n        long max = 0;\n        foreach (KeyValuePair<string,long> pair
    in counts) {\n            if (pair.Value > max) {\n                max = pair.Value;\n
    \           }\n        }\n        foreach (KeyValuePair<string,long> pair in counts)
    {\n            if (pair.Value == max) {\n                result[pair.Key] = pair.Value;\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e5ab8367f1e54b33ab3ffeac1c2d725a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e5ab8367f1e54b33ab3ffeac1c2d725a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> dict = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (dict.ContainsKey(letter)) {\n                dict[letter]
    += 1;\n            } else {\n                dict[letter] = 1;\n            }\n
    \       }\n        return dict;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0f5a86a5f66c452b9f4011504c24373a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0f5a86a5f66c452b9f4011504c24373a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (result.ContainsKey(word)) {\n                result[word]++;\n
    \           } else {\n                result[word] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> histogram = new Dictionary<string,long>();\n
    \       foreach (string letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))
    {\n                histogram[letter] += 1;\n            } else {\n                histogram[letter]
    = 1;\n            }\n        }\n        return histogram;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eec6062ce6f141d1b675b2708dd48f80>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eec6062ce6f141d1b675b2708dd48f80>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       Dictionary<string,long> temp = new Dictionary<string,long>();\n        string[]
    words = test.Split(' ');\n        foreach (string word in words) {\n            if
    (temp.ContainsKey(word)) {\n                temp[word]++;\n            } else
    {\n                temp.Add(word, 1);\n            }\n        }\n        long
    max = temp.Values.Max();\n        foreach (KeyValuePair<string,long> pair in temp)
    {\n            if (pair.Value == max) {\n                result.Add(pair.Key,
    pair.Value);\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6e5108c8418f4c30b9da0f5bf8c99356>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6e5108c8418f4c30b9da0f5bf8c99356>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> hist = new Dictionary<string,long>();\n
    \       foreach (string s in test.Split(' ')) {\n            if (hist.ContainsKey(s))
    {\n                hist[s]++;\n            } else {\n                hist[s] =
    1;\n            }\n        }\n        return hist;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea0c3e10893b40e3b6641306887793d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea0c3e10893b40e3b6641306887793d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        long max = 0;\n        foreach
    (string letter in letters) {\n            if (result.ContainsKey(letter)) {\n
    \               result[letter]++;\n            } else {\n                result[letter]
    = 1;\n            }\n            if (result[letter] > max) {\n                max
    = result[letter];\n            }\n        }\n        Dictionary<string,long> final
    = new Dictionary<string,long>();\n        foreach (string letter in result.Keys)
    {\n            if (result[letter] == max) {\n                final[letter] = result[letter];\n
    \           }\n        }\n        return final;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <55e6344cba6a434d8a1f20149b06c59f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <55e6344cba6a434d8a1f20149b06c59f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        var result = new Dictionary<string,long>();\n        foreach
    (var letter in test.Split(' ')) {\n            if (result.ContainsKey(letter))
    {\n                result[letter]++;\n            } else {\n                result[letter]
    = 1;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <156cc1bbfdf24d9aacdf8dec597abfb4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <156cc1bbfdf24d9aacdf8dec597abfb4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        Dictionary<string,long> dict
    = new Dictionary<string,long>();\n        foreach (string word in words) {\n            if
    (dict.ContainsKey(word)) {\n                dict[word]++;\n            } else
    {\n                dict[word] = 1;\n            }\n        }\n        long max
    = 0;\n        foreach (KeyValuePair<string,long> entry in dict) {\n            if
    (entry.Value > max) {\n                max = entry.Value;\n            }\n        }\n
    \       foreach (KeyValuePair<string,long> entry in dict) {\n            if (entry.Value
    == max) {\n                result[entry.Key] = entry.Value;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <24602ca7befd42879538984ad99202b9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <24602ca7befd42879538984ad99202b9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       Dictionary<string,long> temp = new Dictionary<string,long>();\n        string[]
    letters = test.Split(' ');\n        foreach (string letter in letters) {\n            if
    (temp.ContainsKey(letter)) {\n                temp[letter]++;\n            } else
    {\n                temp.Add(letter, 1);\n            }\n        }\n        long
    max = 0;\n        foreach (KeyValuePair<string,long> pair in temp) {\n            if
    (pair.Value > max) {\n                max = pair.Value;\n            }\n        }\n
    \       foreach (KeyValuePair<string,long> pair in temp) {\n            if (pair.Value
    == max) {\n                result.Add(pair.Key, pair.Value);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f51d7a8f345d4c9d9c63c8312eeafb15>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f51d7a8f345d4c9d9c63c8312eeafb15>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] testArray = test.Split(' ');\n        foreach (string s in testArray)
    {\n            if (result.ContainsKey(s)) {\n                result[s]++;\n            }
    else {\n                result.Add(s, 1);\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dc8ff08ea7864471881df304c405e9ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dc8ff08ea7864471881df304c405e9ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> dict = new Dictionary<string,long>();\n
    \       if (test.Length == 0) {\n            return dict;\n        }\n        string[]
    letters = test.Split(' ');\n        foreach (string letter in letters) {\n            if
    (dict.ContainsKey(letter)) {\n                dict[letter] += 1;\n            }
    else {\n                dict[letter] = 1;\n            }\n        }\n        long
    max = dict.Values.Max();\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       foreach (KeyValuePair<string,long> entry in dict) {\n            if (entry.Value
    == max) {\n                result[entry.Key] = entry.Value;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <961ef8e4c1004b1da102a1a57c5599c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <961ef8e4c1004b1da102a1a57c5599c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       if (test.Length == 0) return result;\n        string[] words = test.Split('
    ');\n        Dictionary<string,long> dict = new Dictionary<string,long>();\n        foreach
    (string word in words) {\n            if (dict.ContainsKey(word)) {\n                dict[word]++;\n
    \           } else {\n                dict[word] = 1;\n            }\n        }\n
    \       long max = dict.Values.Max();\n        foreach (KeyValuePair<string,long>
    pair in dict) {\n            if (pair.Value == max) {\n                result[pair.Key]
    = pair.Value;\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <947b62caeeae4161a1a12dfe31047ad2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <947b62caeeae4161a1a12dfe31047ad2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        long max = 0;\n        foreach
    (string letter in letters) {\n            if (result.ContainsKey(letter)) {\n
    \               result[letter]++;\n            } else {\n                result[letter]
    = 1;\n            }\n            if (result[letter] > max) {\n                max
    = result[letter];\n            }\n        }\n        Dictionary<string,long> result2
    = new Dictionary<string,long>();\n        foreach (KeyValuePair<string,long> pair
    in result) {\n            if (pair.Value == max) {\n                result2[pair.Key]
    = pair.Value;\n            }\n        }\n        return result2;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <917ae10856554daab16548763f657f1c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <917ae10856554daab16548763f657f1c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       if (test.Length == 0) {\n            return result;\n        }\n        string[]
    words = test.Split(' ');\n        Dictionary<string,long> count = new Dictionary<string,long>();\n
    \       foreach (string word in words) {\n            if (count.ContainsKey(word))
    {\n                count[word]++;\n            } else {\n                count[word]
    = 1;\n            }\n        }\n        long max = count.Values.Max();\n        foreach
    (string word in count.Keys) {\n            if (count[word] == max) {\n                result[word]
    = max;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f2d51f6a60de477abb1fb709b9bf94b0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f2d51f6a60de477abb1fb709b9bf94b0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (result.ContainsKey(word)) {\n                result[word]++;\n
    \           } else {\n                result[word] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        var result = new Dictionary<string,long>();\n        var letters
    = test.Split(' ');\n        foreach (var letter in letters) {\n            if
    (result.ContainsKey(letter)) {\n                result[letter]++;\n            }
    else {\n                result[letter] = 1;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e3d75fb10f454a4493573c2c0cc4b5bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e3d75fb10f454a4493573c2c0cc4b5bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> histogram = new Dictionary<string,long>();\n
    \       foreach (string letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))
    {\n                histogram[letter] += 1;\n            } else {\n                histogram[letter]
    = 1;\n            }\n        }\n        return histogram;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eec6062ce6f141d1b675b2708dd48f80>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eec6062ce6f141d1b675b2708dd48f80>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> dict = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (dict.ContainsKey(word)) {\n                dict[word] += 1;\n
    \           } else {\n                dict[word] = 1;\n            }\n        }\n
    \       return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <106be8862a2c4031b550243405818b6f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <106be8862a2c4031b550243405818b6f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> d = new Dictionary<string,long>();\n
    \       if (test.Length == 0) return d;\n        string[] words = test.Split('
    ');\n        foreach (string word in words) {\n            if (d.ContainsKey(word))
    {\n                d[word]++;\n            } else {\n                d[word] =
    1;\n            }\n        }\n        long max = d.Values.Max();\n        Dictionary<string,long>
    result = new Dictionary<string,long>();\n        foreach (KeyValuePair<string,long>
    kvp in d) {\n            if (kvp.Value == max) {\n                result[kvp.Key]
    = kvp.Value;\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53dd0e0b3bfc4a679635094c59ba3201>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53dd0e0b3bfc4a679635094c59ba3201>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       if (test.Length == 0) {\n            return result;\n        }\n        string[]
    words = test.Split(' ');\n        Dictionary<string,long> hist = new Dictionary<string,long>();\n
    \       foreach (string word in words) {\n            if (hist.ContainsKey(word))
    {\n                hist[word]++;\n            } else {\n                hist[word]
    = 1;\n            }\n        }\n        long max = hist.Values.Max();\n        foreach
    (KeyValuePair<string,long> entry in hist) {\n            if (entry.Value == max)
    {\n                result[entry.Key] = entry.Value;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f76ec1baf0a423b8f5f93b90cc157ec>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f76ec1baf0a423b8f5f93b90cc157ec>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       foreach (string s in test.Split(' ')) {\n            if (result.ContainsKey(s))
    {\n                result[s]++;\n            } else {\n                result[s]
    = 1;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <16f8fe0b343c4f3a91e8a024b2d93d3d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <16f8fe0b343c4f3a91e8a024b2d93d3d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> histogram = new Dictionary<string,long>();\n
    \       foreach (string letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))
    {\n                histogram[letter]++;\n            } else {\n                histogram[letter]
    = 1;\n            }\n        }\n        return histogram;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (result.ContainsKey(word)) {\n                result[word]++;\n
    \           } else {\n                result[word] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]
    += 1;\n            } else {\n                result[letter] = 1;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5eeefba19e3e45c085586b341c5d6968>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5eeefba19e3e45c085586b341c5d6968>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        var dict = new Dictionary<string,long>();\n        foreach (var
    c in test.Split(' ')) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n
    \           } else {\n                dict[c] = 1;\n            }\n        }\n
    \       var max = dict.Values.Max();\n        var result = new Dictionary<string,long>();\n
    \       foreach (var kvp in dict) {\n            if (kvp.Value == max) {\n                result[kvp.Key]
    = kvp.Value;\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ce67ed314f7e4a249884a7ae8c639350>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ce67ed314f7e4a249884a7ae8c639350>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> dict = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (dict.ContainsKey(letter)) {\n                dict[letter]++;\n
    \           } else {\n                dict.Add(letter, 1);\n            }\n        }\n
    \       return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50819519169642f18a0cd78c41aa61a8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50819519169642f18a0cd78c41aa61a8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        Dictionary<string,long> counts
    = new Dictionary<string,long>();\n        foreach (string letter in letters) {\n
    \           if (counts.ContainsKey(letter)) {\n                counts[letter]
    += 1;\n            } else {\n                counts[letter] = 1;\n            }\n
    \       }\n        long max = counts.Values.Max();\n        foreach (string letter
    in counts.Keys) {\n            if (counts[letter] == max) {\n                result[letter]
    = max;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0b2c8f13284d437c8e4a7b538f013957>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0b2c8f13284d437c8e4a7b538f013957>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> histogram = new Dictionary<string,long>();\n
    \       foreach (string letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))
    {\n                histogram[letter] += 1;\n            } else {\n                histogram[letter]
    = 1;\n            }\n        }\n        return histogram;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eec6062ce6f141d1b675b2708dd48f80>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eec6062ce6f141d1b675b2708dd48f80>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        Dictionary<string,long> counts
    = new Dictionary<string,long>();\n        foreach (string letter in letters) {\n
    \           if (counts.ContainsKey(letter)) {\n                counts[letter]++;\n
    \           } else {\n                counts[letter] = 1;\n            }\n        }\n
    \       long max = counts.Values.Max();\n        foreach (KeyValuePair<string,long>
    kvp in counts) {\n            if (kvp.Value == max) {\n                result[kvp.Key]
    = kvp.Value;\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7b711114faac4707bc9af62981c95f8b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7b711114faac4707bc9af62981c95f8b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       if (test.Length == 0) {\n            return result;\n        }\n        string[]
    letters = test.Split(' ');\n        Dictionary<string,long> letterCount = new
    Dictionary<string,long>();\n        foreach (string letter in letters) {\n            if
    (letterCount.ContainsKey(letter)) {\n                letterCount[letter]++;\n
    \           } else {\n                letterCount[letter] = 1;\n            }\n
    \       }\n        long max = letterCount.Values.Max();\n        foreach (string
    letter in letterCount.Keys) {\n            if (letterCount[letter] == max) {\n
    \               result[letter] = max;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7fac4561a4534e848cacbe56f4203a8c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7fac4561a4534e848cacbe56f4203a8c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> histogram = new Dictionary<string,long>();\n
    \       foreach (string letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))
    {\n                histogram[letter]++;\n            } else {\n                histogram[letter]
    = 1;\n            }\n        }\n        return histogram;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> hist = new Dictionary<string,long>();\n
    \       foreach (string s in test.Split(' ')) {\n            if (hist.ContainsKey(s))
    {\n                hist[s]++;\n            } else {\n                hist[s] =
    1;\n            }\n        }\n        return hist;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea0c3e10893b40e3b6641306887793d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea0c3e10893b40e3b6641306887793d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       if (test.Length == 0) {\n            return result;\n        }\n        string[]
    letters = test.Split(' ');\n        Dictionary<string,long> counts = new Dictionary<string,long>();\n
    \       foreach (string letter in letters) {\n            if (counts.ContainsKey(letter))
    {\n                counts[letter]++;\n            } else {\n                counts[letter]
    = 1;\n            }\n        }\n        long max = counts.Values.Max();\n        foreach
    (KeyValuePair<string,long> entry in counts) {\n            if (entry.Value ==
    max) {\n                result[entry.Key] = entry.Value;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a6509c0e9304841ad490331b45446aa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a6509c0e9304841ad490331b45446aa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (result.ContainsKey(word)) {\n                result[word]++;\n
    \           } else {\n                result[word] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        long max = 0;\n        foreach
    (string letter in letters) {\n            if (result.ContainsKey(letter)) {\n
    \               result[letter]++;\n            } else {\n                result[letter]
    = 1;\n            }\n            if (result[letter] > max) {\n                max
    = result[letter];\n            }\n        }\n        Dictionary<string,long> final
    = new Dictionary<string,long>();\n        foreach (KeyValuePair<string,long> pair
    in result) {\n            if (pair.Value == max) {\n                final[pair.Key]
    = pair.Value;\n            }\n        }\n        return final;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <649e33bba3a64725b568b2585a2a6dec>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <649e33bba3a64725b568b2585a2a6dec>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> histogram = new Dictionary<string,long>();\n
    \       foreach (var letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))
    {\n                histogram[letter]++;\n            } else {\n                histogram[letter]
    = 1;\n            }\n        }\n        return histogram;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71c1007eedd54fc89658992514925e51>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71c1007eedd54fc89658992514925e51>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (result.ContainsKey(word)) {\n                result[word]++;\n
    \           } else {\n                result[word] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (result.ContainsKey(word)) {\n                result[word]++;\n
    \           } else {\n                result[word] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        if (letters.Length == 0)
    {\n            return result;\n        }\n        long max = 0;\n        foreach
    (string letter in letters) {\n            if (result.ContainsKey(letter)) {\n
    \               result[letter]++;\n            } else {\n                result[letter]
    = 1;\n            }\n            if (result[letter] > max) {\n                max
    = result[letter];\n            }\n        }\n        Dictionary<string,long> maxResult
    = new Dictionary<string,long>();\n        foreach (string letter in result.Keys)
    {\n            if (result[letter] == max) {\n                maxResult[letter]
    = max;\n            }\n        }\n        return maxResult;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53cec91584864a9287df9941d9e9755d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53cec91584864a9287df9941d9e9755d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (result.ContainsKey(word)) {\n                result[word]++;\n
    \           } else {\n                result[word] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       if (test.Length == 0) {\n            return result;\n        }\n        string[]
    letters = test.Split(' ');\n        Dictionary<string,long> letterCount = new
    Dictionary<string,long>();\n        foreach (string letter in letters) {\n            if
    (letterCount.ContainsKey(letter)) {\n                letterCount[letter] += 1;\n
    \           } else {\n                letterCount[letter] = 1;\n            }\n
    \       }\n        long maxCount = letterCount.Values.Max();\n        foreach
    (KeyValuePair<string,long> kvp in letterCount) {\n            if (kvp.Value ==
    maxCount) {\n                result[kvp.Key] = kvp.Value;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9c1321eb18ce4399900ee876bd4c8f82>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9c1321eb18ce4399900ee876bd4c8f82>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       if (test.Length == 0) {\n            return result;\n        }\n        string[]
    letters = test.Split(' ');\n        Dictionary<string,long> counts = new Dictionary<string,long>();\n
    \       foreach (string letter in letters) {\n            if (counts.ContainsKey(letter))
    {\n                counts[letter]++;\n            } else {\n                counts[letter]
    = 1;\n            }\n        }\n        long max = counts.Values.Max();\n        foreach
    (string letter in counts.Keys) {\n            if (counts[letter] == max) {\n                result[letter]
    = max;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e0eb466151dd47eab850987cd2871f4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e0eb466151dd47eab850987cd2871f4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       var letters = test.Split(' ');\n        foreach (var letter in letters)
    {\n            if (result.ContainsKey(letter)) {\n                result[letter]
    += 1;\n            } else {\n                result[letter] = 1;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5433a49145b14ddb81e3437a417c538d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5433a49145b14ddb81e3437a417c538d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        for (int i = 0; i < letters.Length;
    i++) {\n            if (result.ContainsKey(letters[i])) {\n                result[letters[i]]++;\n
    \           } else {\n                result.Add(letters[i], 1);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66734b0151cb43d893c560c8cea575dd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66734b0151cb43d893c560c8cea575dd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> histogram = new Dictionary<string,long>();\n
    \       foreach (string letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))
    {\n                histogram[letter]++;\n            } else {\n                histogram[letter]
    = 1;\n            }\n        }\n        return histogram;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> hist = new Dictionary<string,long>();\n
    \       foreach (string s in test.Split(' ')) {\n            if (hist.ContainsKey(s))
    {\n                hist[s]++;\n            } else {\n                hist[s] =
    1;\n            }\n        }\n        return hist;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea0c3e10893b40e3b6641306887793d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea0c3e10893b40e3b6641306887793d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> hist = new Dictionary<string,long>();\n
    \       foreach (string s in test.Split(' ')) {\n            if (hist.ContainsKey(s))
    {\n                hist[s]++;\n            } else {\n                hist[s] =
    1;\n            }\n        }\n        return hist;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea0c3e10893b40e3b6641306887793d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea0c3e10893b40e3b6641306887793d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (result.ContainsKey(word)) {\n                result[word]++;\n
    \           } else {\n                result[word] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       Dictionary<string,long> counts = new Dictionary<string,long>();\n        string[]
    letters = test.Split(' ');\n        foreach (string letter in letters) {\n            if
    (counts.ContainsKey(letter)) {\n                counts[letter]++;\n            }
    else {\n                counts[letter] = 1;\n            }\n        }\n        long
    max = 0;\n        foreach (KeyValuePair<string,long> pair in counts) {\n            if
    (pair.Value > max) {\n                max = pair.Value;\n            }\n        }\n
    \       foreach (KeyValuePair<string,long> pair in counts) {\n            if (pair.Value
    == max) {\n                result[pair.Key] = pair.Value;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8d718f5f50da4703a77b5259faa48f1c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8d718f5f50da4703a77b5259faa48f1c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       if (test == \"\") {\n            return result;\n        }\n        string[]
    letters = test.Split(' ');\n        Dictionary<string,long> counts = new Dictionary<string,long>();\n
    \       foreach (string letter in letters) {\n            if (counts.ContainsKey(letter))
    {\n                counts[letter]++;\n            } else {\n                counts[letter]
    = 1;\n            }\n        }\n        long max = counts.Values.Max();\n        foreach
    (string letter in counts.Keys) {\n            if (counts[letter] == max) {\n                result[letter]
    = max;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eec8dbd93972447287a244fc0f48cd64>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eec8dbd93972447287a244fc0f48cd64>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> hist = new Dictionary<string,long>();\n
    \       foreach (string s in test.Split(' ')) {\n            if (hist.ContainsKey(s))
    {\n                hist[s]++;\n            } else {\n                hist[s] =
    1;\n            }\n        }\n        return hist;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea0c3e10893b40e3b6641306887793d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea0c3e10893b40e3b6641306887793d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (result.ContainsKey(word)) {\n                result[word]++;\n
    \           } else {\n                result[word] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       if (test.Length == 0) return result;\n        string[] letters = test.Split('
    ');\n        Dictionary<string,long> counts = new Dictionary<string,long>();\n
    \       foreach (string letter in letters) {\n            if (counts.ContainsKey(letter))
    {\n                counts[letter]++;\n            } else {\n                counts[letter]
    = 1;\n            }\n        }\n        long max = counts.Values.Max();\n        foreach
    (KeyValuePair<string,long> kvp in counts) {\n            if (kvp.Value == max)
    {\n                result[kvp.Key] = kvp.Value;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cd92b926f2cc4d06ae3b78a18de26e2c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cd92b926f2cc4d06ae3b78a18de26e2c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       if (test.Length == 0) {\n            return result;\n        }\n        string[]
    letters = test.Split(' ');\n        Dictionary<string,long> counts = new Dictionary<string,long>();\n
    \       foreach (string letter in letters) {\n            if (counts.ContainsKey(letter))
    {\n                counts[letter] += 1;\n            } else {\n                counts[letter]
    = 1;\n            }\n        }\n        long max = counts.Values.Max();\n        foreach
    (KeyValuePair<string,long> pair in counts) {\n            if (pair.Value == max)
    {\n                result[pair.Key] = pair.Value;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b12d8d6527e54874b474469c52273374>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b12d8d6527e54874b474469c52273374>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       if (test == \"\") {\n            return result;\n        }\n        string[]
    letters = test.Split(' ');\n        Dictionary<string,long> counts = new Dictionary<string,long>();\n
    \       foreach (string letter in letters) {\n            if (counts.ContainsKey(letter))
    {\n                counts[letter]++;\n            } else {\n                counts[letter]
    = 1;\n            }\n        }\n        long max = counts.Values.Max();\n        foreach
    (string letter in counts.Keys) {\n            if (counts[letter] == max) {\n                result[letter]
    = max;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eec8dbd93972447287a244fc0f48cd64>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eec8dbd93972447287a244fc0f48cd64>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       if (test.Length == 0) {\n            return result;\n        }\n        string[]
    letters = test.Split(' ');\n        Dictionary<string,long> counts = new Dictionary<string,long>();\n
    \       foreach (string letter in letters) {\n            if (counts.ContainsKey(letter))
    {\n                counts[letter]++;\n            } else {\n                counts[letter]
    = 1;\n            }\n        }\n        long max = counts.Values.Max();\n        foreach
    (string letter in counts.Keys) {\n            if (counts[letter] == max) {\n                result[letter]
    = max;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e0eb466151dd47eab850987cd2871f4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e0eb466151dd47eab850987cd2871f4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> histogram = new Dictionary<string,long>();\n
    \       foreach (string letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))
    {\n                histogram[letter]++;\n            } else {\n                histogram[letter]
    = 1;\n            }\n        }\n        return histogram;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> hist = new Dictionary<string,long>();\n
    \       foreach (string s in test.Split(' ')) {\n            if (hist.ContainsKey(s))
    {\n                hist[s]++;\n            } else {\n                hist[s] =
    1;\n            }\n        }\n        return hist;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea0c3e10893b40e3b6641306887793d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea0c3e10893b40e3b6641306887793d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> histogram = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (histogram.ContainsKey(letter)) {\n                histogram[letter]++;\n
    \           } else {\n                histogram[letter] = 1;\n            }\n
    \       }\n        return histogram;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <87c3c3edaf3d4412911eb03bca4b749d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <87c3c3edaf3d4412911eb03bca4b749d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> histogram = new Dictionary<string,long>();\n
    \       foreach (string letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))
    {\n                histogram[letter]++;\n            } else {\n                histogram[letter]
    = 1;\n            }\n        }\n        return histogram;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        var dict = new Dictionary<string,long>();\n        var max =
    0;\n        var max_key = \"\";\n        foreach (var c in test.Split(' ')) {\n
    \           if (dict.ContainsKey(c)) {\n                dict[c] += 1;\n            }
    else {\n                dict[c] = 1;\n            }\n            if (dict[c] >
    max) {\n                max = (int)dict[c];\n                max_key = c;\n            }\n
    \       }\n        var result = new Dictionary<string,long>();\n        foreach
    (var key in dict.Keys) {\n            if (dict[key] == max) {\n                result[key]
    = max;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b7b801efdfb94048b8e26950f58b4db2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b7b801efdfb94048b8e26950f58b4db2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        Dictionary<string,long> count
    = new Dictionary<string,long>();\n        foreach (string letter in letters) {\n
    \           if (count.ContainsKey(letter)) {\n                count[letter]++;\n
    \           } else {\n                count[letter] = 1;\n            }\n        }\n
    \       long max = count.Values.Max();\n        foreach (KeyValuePair<string,long>
    entry in count) {\n            if (entry.Value == max) {\n                result[entry.Key]
    = entry.Value;\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9e51cd11e1cb4b29bb36f61cf52756c2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9e51cd11e1cb4b29bb36f61cf52756c2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        long max = 0;\n        foreach
    (string letter in letters) {\n            if (result.ContainsKey(letter)) {\n
    \               result[letter]++;\n            } else {\n                result[letter]
    = 1;\n            }\n            if (result[letter] > max) {\n                max
    = result[letter];\n            }\n        }\n        Dictionary<string,long> final
    = new Dictionary<string,long>();\n        foreach (KeyValuePair<string,long> entry
    in result) {\n            if (entry.Value == max) {\n                final[entry.Key]
    = entry.Value;\n            }\n        }\n        return final;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <174fb8c27cbd4cb58baf69e043b8fd86>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <174fb8c27cbd4cb58baf69e043b8fd86>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        long max = 0;\n        foreach
    (string letter in letters) {\n            if (result.ContainsKey(letter)) {\n
    \               result[letter]++;\n            } else {\n                result[letter]
    = 1;\n            }\n            if (result[letter] > max) {\n                max
    = result[letter];\n            }\n        }\n        Dictionary<string,long> maxes
    = new Dictionary<string,long>();\n        foreach (KeyValuePair<string,long> kvp
    in result) {\n            if (kvp.Value == max) {\n                maxes[kvp.Key]
    = kvp.Value;\n            }\n        }\n        return maxes;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8c6acbc35cf2476b8e4c72bda1014f6d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8c6acbc35cf2476b8e4c72bda1014f6d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       Dictionary<string,long> temp = new Dictionary<string,long>();\n        string[]
    letters = test.Split(' ');\n        long max = 0;\n        foreach (string letter
    in letters) {\n            if (temp.ContainsKey(letter)) {\n                temp[letter]++;\n
    \           } else {\n                temp.Add(letter, 1);\n            }\n            if
    (temp[letter] > max) {\n                max = temp[letter];\n            }\n        }\n
    \       foreach (KeyValuePair<string,long> entry in temp) {\n            if (entry.Value
    == max) {\n                result.Add(entry.Key, entry.Value);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bdd7572c3da8479c9df8ce4b391db310>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bdd7572c3da8479c9df8ce4b391db310>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (result.ContainsKey(word)) {\n                result[word]++;\n
    \           } else {\n                result[word] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       if (test.Length == 0) {\n            return result;\n        }\n        string[]
    letters = test.Split(' ');\n        Dictionary<string,long> counts = new Dictionary<string,long>();\n
    \       foreach (string letter in letters) {\n            if (counts.ContainsKey(letter))
    {\n                counts[letter]++;\n            } else {\n                counts[letter]
    = 1;\n            }\n        }\n        long max = counts.Values.Max();\n        foreach
    (string letter in counts.Keys) {\n            if (counts[letter] == max) {\n                result[letter]
    = max;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e0eb466151dd47eab850987cd2871f4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e0eb466151dd47eab850987cd2871f4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        // Your code here\n        return null;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0002b] in <7c5c0581d383486599cb66fccd4421df>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0002b] in <7c5c0581d383486599cb66fccd4421df>:0
    \n"
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        var dict = new Dictionary<string,long>();\n        foreach (var
    c in test.Split(' ')) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n
    \           } else {\n                dict[c] = 1;\n            }\n        }\n
    \       return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba8324c21166446d8561aeaca7c84cf6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba8324c21166446d8561aeaca7c84cf6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> histogram = new Dictionary<string,long>();\n
    \       foreach (string letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))
    {\n                histogram[letter]++;\n            } else {\n                histogram[letter]
    = 1;\n            }\n        }\n        return histogram;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> dict = new Dictionary<string,long>();\n
    \       foreach (string s in test.Split(' ')) {\n            if (dict.ContainsKey(s))
    {\n                dict[s]++;\n            } else {\n                dict[s] =
    1;\n            }\n        }\n        return dict;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <68debb442f7049b4b731de5087f96186>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <68debb442f7049b4b731de5087f96186>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (result.ContainsKey(word)) {\n                result[word]++;\n
    \           } else {\n                result[word] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       Dictionary<string,long> temp = new Dictionary<string,long>();\n        string[]
    letters = test.Split(' ');\n        long max = 0;\n        foreach (string letter
    in letters) {\n            if (temp.ContainsKey(letter)) {\n                temp[letter]++;\n
    \           } else {\n                temp.Add(letter, 1);\n            }\n            if
    (temp[letter] > max) {\n                max = temp[letter];\n            }\n        }\n
    \       foreach (KeyValuePair<string,long> entry in temp) {\n            if (entry.Value
    == max) {\n                result.Add(entry.Key, entry.Value);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bdd7572c3da8479c9df8ce4b391db310>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bdd7572c3da8479c9df8ce4b391db310>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        var dict = new Dictionary<string,long>();\n        foreach (var
    c in test.Split(' ')) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n
    \           } else {\n                dict[c] = 1;\n            }\n        }\n
    \       return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba8324c21166446d8561aeaca7c84cf6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba8324c21166446d8561aeaca7c84cf6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       Dictionary<string,long> temp = new Dictionary<string,long>();\n        string[]
    letters = test.Split(' ');\n        long max = 0;\n        foreach (string letter
    in letters) {\n            if (temp.ContainsKey(letter)) {\n                temp[letter]++;\n
    \           } else {\n                temp.Add(letter, 1);\n            }\n            if
    (temp[letter] > max) {\n                max = temp[letter];\n            }\n        }\n
    \       foreach (KeyValuePair<string,long> kvp in temp) {\n            if (kvp.Value
    == max) {\n                result.Add(kvp.Key, kvp.Value);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f58507d7346d434f911feba10d4b6893>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f58507d7346d434f911feba10d4b6893>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> dict = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (dict.ContainsKey(letter)) {\n                dict[letter]++;\n
    \           } else {\n                dict.Add(letter, 1);\n            }\n        }\n
    \       return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50819519169642f18a0cd78c41aa61a8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50819519169642f18a0cd78c41aa61a8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       if (test == \"\") {\n            return result;\n        }\n        string[]
    letters = test.Split(' ');\n        Dictionary<string,long> count = new Dictionary<string,long>();\n
    \       foreach (string letter in letters) {\n            if (count.ContainsKey(letter))
    {\n                count[letter] += 1;\n            } else {\n                count[letter]
    = 1;\n            }\n        }\n        long max = count.Values.Max();\n        foreach
    (KeyValuePair<string,long> entry in count) {\n            if (entry.Value == max)
    {\n                result[entry.Key] = entry.Value;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bfe1e44e794e42f483e40980ffdcecac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bfe1e44e794e42f483e40980ffdcecac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       Dictionary<string,long> counts = new Dictionary<string,long>();\n        string[]
    words = test.Split(' ');\n        foreach (string word in words) {\n            if
    (counts.ContainsKey(word)) {\n                counts[word]++;\n            } else
    {\n                counts[word] = 1;\n            }\n        }\n        long max
    = counts.Values.Max();\n        foreach (string key in counts.Keys) {\n            if
    (counts[key] == max) {\n                result[key] = max;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <05e9e5946bdb4c41b8c40db0e9174dda>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <05e9e5946bdb4c41b8c40db0e9174dda>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       long max = 0;\n        foreach (string letter in test.Split(' ')) {\n
    \           if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n            if
    (result[letter] > max) {\n                max = result[letter];\n            }\n
    \       }\n        Dictionary<string,long> final = new Dictionary<string,long>();\n
    \       foreach (KeyValuePair<string,long> kvp in result) {\n            if (kvp.Value
    == max) {\n                final[kvp.Key] = kvp.Value;\n            }\n        }\n
    \       return final;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7e93ac4e7a68466ca496ebc02bb10ce7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7e93ac4e7a68466ca496ebc02bb10ce7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (result.ContainsKey(word)) {\n                result[word] +=
    1;\n            } else {\n                result[word] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <41cdcbcb55c946b49351f33765faa842>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <41cdcbcb55c946b49351f33765faa842>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (result.ContainsKey(word)) {\n                result[word] +=
    1;\n            } else {\n                result[word] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <41cdcbcb55c946b49351f33765faa842>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <41cdcbcb55c946b49351f33765faa842>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> histogram = new Dictionary<string,long>();\n
    \       foreach (string letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))
    {\n                histogram[letter]++;\n            } else {\n                histogram[letter]
    = 1;\n            }\n        }\n        return histogram;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        Dictionary<string,long> letterCount
    = new Dictionary<string,long>();\n        foreach (string letter in letters) {\n
    \           if (letterCount.ContainsKey(letter)) {\n                letterCount[letter]++;\n
    \           } else {\n                letterCount[letter] = 1;\n            }\n
    \       }\n        long max = letterCount.Values.Max();\n        foreach (KeyValuePair<string,long>
    pair in letterCount) {\n            if (pair.Value == max) {\n                result[pair.Key]
    = pair.Value;\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3bdc78817ea4c7ab2ee82568620df25>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3bdc78817ea4c7ab2ee82568620df25>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> hist = new Dictionary<string,long>();\n
    \       foreach (string s in test.Split(' ')) {\n            if (hist.ContainsKey(s))
    {\n                hist[s]++;\n            } else {\n                hist[s] =
    1;\n            }\n        }\n        return hist;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea0c3e10893b40e3b6641306887793d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea0c3e10893b40e3b6641306887793d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        Dictionary<string,long> count
    = new Dictionary<string,long>();\n        foreach (string letter in letters) {\n
    \           if (count.ContainsKey(letter)) {\n                count[letter]++;\n
    \           } else {\n                count[letter] = 1;\n            }\n        }\n
    \       long max = count.Values.Max();\n        foreach (KeyValuePair<string,long>
    pair in count) {\n            if (pair.Value == max) {\n                result[pair.Key]
    = pair.Value;\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <42a22c1f0363447f9406b1399a03306f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <42a22c1f0363447f9406b1399a03306f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        long max = 0;\n        foreach
    (string word in words) {\n            if (result.ContainsKey(word)) {\n                result[word]++;\n
    \           } else {\n                result[word] = 1;\n            }\n            if
    (result[word] > max) {\n                max = result[word];\n            }\n        }\n
    \       Dictionary<string,long> result2 = new Dictionary<string,long>();\n        foreach
    (string word in result.Keys) {\n            if (result[word] == max) {\n                result2[word]
    = max;\n            }\n        }\n        return result2;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c311993bdf084a418ee85be774bbe055>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c311993bdf084a418ee85be774bbe055>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> histogram = new Dictionary<string,long>();\n
    \       foreach (string letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))
    {\n                histogram[letter] += 1;\n            } else {\n                histogram[letter]
    = 1;\n            }\n        }\n        return histogram;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eec6062ce6f141d1b675b2708dd48f80>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eec6062ce6f141d1b675b2708dd48f80>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> histogram = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (histogram.ContainsKey(word)) {\n                histogram[word]++;\n
    \           } else {\n                histogram[word] = 1;\n            }\n        }\n
    \       return histogram;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a58e2b2e4b244f5a252dc99d15541cd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a58e2b2e4b244f5a252dc99d15541cd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> histogram = new Dictionary<string,long>();\n
    \       foreach (string letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))
    {\n                histogram[letter]++;\n            } else {\n                histogram[letter]
    = 1;\n            }\n        }\n        return histogram;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> histogram = new Dictionary<string,long>();\n
    \       foreach (string letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))
    {\n                histogram[letter]++;\n            } else {\n                histogram[letter]
    = 1;\n            }\n        }\n        return histogram;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> dict = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (dict.ContainsKey(letter)) {\n                dict[letter]++;\n
    \           } else {\n                dict.Add(letter, 1);\n            }\n        }\n
    \       return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50819519169642f18a0cd78c41aa61a8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50819519169642f18a0cd78c41aa61a8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        var dict = new Dictionary<string,long>();\n        var max =
    0;\n        foreach (var c in test.Split(' ')) {\n            if (dict.ContainsKey(c))
    {\n                dict[c]++;\n            } else {\n                dict[c] =
    1;\n            }\n            if (dict[c] > max) {\n                max = (int)dict[c];\n
    \           }\n        }\n        var result = new Dictionary<string,long>();\n
    \       foreach (var k in dict.Keys) {\n            if (dict[k] == max) {\n                result[k]
    = max;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <054337fa1f1c485b805f92d59da8acf0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <054337fa1f1c485b805f92d59da8acf0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        long max = 0;\n        foreach
    (string letter in letters) {\n            if (result.ContainsKey(letter)) {\n
    \               result[letter]++;\n            } else {\n                result[letter]
    = 1;\n            }\n            if (result[letter] > max) {\n                max
    = result[letter];\n            }\n        }\n        Dictionary<string,long> final
    = new Dictionary<string,long>();\n        foreach (KeyValuePair<string,long> kvp
    in result) {\n            if (kvp.Value == max) {\n                final[kvp.Key]
    = kvp.Value;\n            }\n        }\n        return final;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e06d5b77964f409ca73c88b4a81ed5b2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e06d5b77964f409ca73c88b4a81ed5b2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> histogram = new Dictionary<string,long>();\n
    \       foreach (string letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))
    {\n                histogram[letter]++;\n            } else {\n                histogram[letter]
    = 1;\n            }\n        }\n        return histogram;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (result.ContainsKey(word)) {\n                result[word]++;\n
    \           } else {\n                result[word] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> d = new Dictionary<string,long>();\n
    \       string[] s = test.Split(' ');\n        foreach (string str in s) {\n            if
    (d.ContainsKey(str)) {\n                d[str]++;\n            } else {\n                d.Add(str,
    1);\n            }\n        }\n        return d;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0015371e27f84ae0bac5a9b2943cf3ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0015371e27f84ae0bac5a9b2943cf3ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       Dictionary<string,long> count = new Dictionary<string,long>();\n        string[]
    letters = test.Split(' ');\n        long max = 0;\n        foreach (string letter
    in letters) {\n            if (count.ContainsKey(letter)) {\n                count[letter]++;\n
    \           } else {\n                count[letter] = 1;\n            }\n            if
    (count[letter] > max) {\n                max = count[letter];\n            }\n
    \       }\n        foreach (string letter in count.Keys) {\n            if (count[letter]
    == max) {\n                result[letter] = max;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fa68036b8ab24891a1804ca1eb24bbe7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fa68036b8ab24891a1804ca1eb24bbe7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> dict = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (dict.ContainsKey(letter)) {\n                dict[letter]++;\n
    \           } else {\n                dict.Add(letter, 1);\n            }\n        }\n
    \       return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50819519169642f18a0cd78c41aa61a8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50819519169642f18a0cd78c41aa61a8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> histogram = new Dictionary<string,long>();\n
    \       foreach (string letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))
    {\n                histogram[letter]++;\n            } else {\n                histogram[letter]
    = 1;\n            }\n        }\n        return histogram;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> dict = new Dictionary<string,long>();\n
    \       string[] arr = test.Split(' ');\n        foreach (string s in arr) {\n
    \           if (dict.ContainsKey(s)) {\n                dict[s]++;\n            }
    else {\n                dict.Add(s, 1);\n            }\n        }\n        return
    dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <706ae92721ac48f5b86684209ce68687>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <706ae92721ac48f5b86684209ce68687>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799398
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> histogram = new Dictionary<string,long>();\n
    \       foreach (string letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))
    {\n                histogram[letter] += 1;\n            } else {\n                histogram[letter]
    = 1;\n            }\n        }\n        return histogram;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eec6062ce6f141d1b675b2708dd48f80>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eec6062ce6f141d1b675b2708dd48f80>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       Dictionary<string,long> temp = new Dictionary<string,long>();\n        string[]
    words = test.Split(' ');\n        foreach (string word in words) {\n            if
    (temp.ContainsKey(word)) {\n                temp[word]++;\n            } else
    {\n                temp.Add(word, 1);\n            }\n        }\n        long
    max = temp.Values.Max();\n        foreach (KeyValuePair<string,long> item in temp)
    {\n            if (item.Value == max) {\n                result.Add(item.Key,
    item.Value);\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8aca58b9e28c4e79a04cbcc276605eed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8aca58b9e28c4e79a04cbcc276605eed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799398
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (result.ContainsKey(word)) {\n                result[word]++;\n
    \           } else {\n                result[word] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> hist = new Dictionary<string,long>();\n
    \       foreach (string s in test.Split(' ')) {\n            if (hist.ContainsKey(s))
    {\n                hist[s]++;\n            } else {\n                hist[s] =
    1;\n            }\n        }\n        return hist;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea0c3e10893b40e3b6641306887793d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea0c3e10893b40e3b6641306887793d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (result.ContainsKey(word)) {\n                result[word]++;\n
    \           } else {\n                result[word] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> dict = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (dict.ContainsKey(word)) {\n                dict[word]++;\n
    \           } else {\n                dict[word] = 1;\n            }\n        }\n
    \       return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <76aa39b37c044ab7b71ef08507b527a6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <76aa39b37c044ab7b71ef08507b527a6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799398
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (result.ContainsKey(word)) {\n                result[word]++;\n
    \           } else {\n                result[word] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       if (test.Length == 0) {\n            return result;\n        }\n        string[]
    letters = test.Split(' ');\n        Dictionary<string,long> histogram = new Dictionary<string,long>();\n
    \       foreach (string letter in letters) {\n            if (histogram.ContainsKey(letter))
    {\n                histogram[letter]++;\n            } else {\n                histogram[letter]
    = 1;\n            }\n        }\n        long max = histogram.Values.Max();\n        foreach
    (KeyValuePair<string,long> entry in histogram) {\n            if (entry.Value
    == max) {\n                result[entry.Key] = entry.Value;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <508217c81f5b474cac0a153c3454c076>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <508217c81f5b474cac0a153c3454c076>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799398
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        Dictionary<string,long> letterCount
    = new Dictionary<string,long>();\n        foreach (string letter in letters) {\n
    \           if (letterCount.ContainsKey(letter)) {\n                letterCount[letter]++;\n
    \           } else {\n                letterCount[letter] = 1;\n            }\n
    \       }\n        long max = letterCount.Values.Max();\n        foreach (KeyValuePair<string,long>
    entry in letterCount) {\n            if (entry.Value == max) {\n                result[entry.Key]
    = entry.Value;\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3a06784119c54fa7999b226da58903fb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3a06784119c54fa7999b226da58903fb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> dict = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (dict.ContainsKey(word)) {\n                dict[word]++;\n
    \           } else {\n                dict[word] = 1;\n            }\n        }\n
    \       return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <76aa39b37c044ab7b71ef08507b527a6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <76aa39b37c044ab7b71ef08507b527a6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799398
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       if (test == \"\") {\n            return result;\n        }\n        string[]
    letters = test.Split(' ');\n        Dictionary<string,long> count = new Dictionary<string,long>();\n
    \       long max = 0;\n        foreach (string letter in letters) {\n            if
    (count.ContainsKey(letter)) {\n                count[letter]++;\n            }
    else {\n                count[letter] = 1;\n            }\n            if (count[letter]
    > max) {\n                max = count[letter];\n            }\n        }\n        foreach
    (string letter in count.Keys) {\n            if (count[letter] == max) {\n                result[letter]
    = max;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ac2a8c62f3d64e1d830c81f336855201>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ac2a8c62f3d64e1d830c81f336855201>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799398
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        var dict = new Dictionary<string,long>();\n        foreach (var
    c in test.Split(' ')) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n
    \           } else {\n                dict[c] = 1;\n            }\n        }\n
    \       return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba8324c21166446d8561aeaca7c84cf6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba8324c21166446d8561aeaca7c84cf6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       if (test.Length == 0) {\n            return result;\n        }\n        string[]
    letters = test.Split(' ');\n        Dictionary<string,long> counts = new Dictionary<string,long>();\n
    \       foreach (string letter in letters) {\n            if (counts.ContainsKey(letter))
    {\n                counts[letter]++;\n            } else {\n                counts[letter]
    = 1;\n            }\n        }\n        long max = counts.Values.Max();\n        foreach
    (KeyValuePair<string,long> entry in counts) {\n            if (entry.Value ==
    max) {\n                result[entry.Key] = entry.Value;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a6509c0e9304841ad490331b45446aa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a6509c0e9304841ad490331b45446aa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (result.ContainsKey(word)) {\n                result[word] +=
    1;\n            } else {\n                result[word] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <41cdcbcb55c946b49351f33765faa842>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <41cdcbcb55c946b49351f33765faa842>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> hist = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (hist.ContainsKey(letter)) {\n                hist[letter]++;\n
    \           } else {\n                hist[letter] = 1;\n            }\n        }\n
    \       return hist;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d4c2b68986544fb086027411ef34a1de>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d4c2b68986544fb086027411ef34a1de>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799398
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       Dictionary<string,long> temp = new Dictionary<string,long>();\n        string[]
    letters = test.Split(' ');\n        long max = 0;\n        foreach (string letter
    in letters) {\n            if (temp.ContainsKey(letter)) {\n                temp[letter]++;\n
    \           } else {\n                temp.Add(letter, 1);\n            }\n            if
    (temp[letter] > max) {\n                max = temp[letter];\n            }\n        }\n
    \       foreach (KeyValuePair<string,long> kvp in temp) {\n            if (kvp.Value
    == max) {\n                result.Add(kvp.Key, kvp.Value);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f58507d7346d434f911feba10d4b6893>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f58507d7346d434f911feba10d4b6893>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> histogram = new Dictionary<string,long>();\n
    \       foreach (string letter in test.Split(' ')) {\n            if (histogram.ContainsKey(letter))
    {\n                histogram[letter]++;\n            } else {\n                histogram[letter]
    = 1;\n            }\n        }\n        return histogram;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c9a0f6f19440089e6ce193a4fb71e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> d = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (d.ContainsKey(letter)) {\n                d[letter]++;\n
    \           } else {\n                d[letter] = 1;\n            }\n        }\n
    \       return d;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c5497f88c0f847d59949b883c29b9342>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c5497f88c0f847d59949b883c29b9342>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799398
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> hist = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (hist.ContainsKey(word)) {\n                hist[word] += 1;\n
    \           } else {\n                hist[word] = 1;\n            }\n        }\n
    \       return hist;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a3b368c06f3547f395e0f2c87e8030bb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a3b368c06f3547f395e0f2c87e8030bb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799398
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> hist = new Dictionary<string,long>();\n
    \       foreach (string s in test.Split(' ')) {\n            if (hist.ContainsKey(s))
    {\n                hist[s]++;\n            } else {\n                hist[s] =
    1;\n            }\n        }\n        return hist;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea0c3e10893b40e3b6641306887793d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea0c3e10893b40e3b6641306887793d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> dict = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (dict.ContainsKey(letter)) {\n                dict[letter]
    += 1;\n            } else {\n                dict[letter] = 1;\n            }\n
    \       }\n        return dict;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0f5a86a5f66c452b9f4011504c24373a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0f5a86a5f66c452b9f4011504c24373a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> dict = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (dict.ContainsKey(letter)) {\n                dict[letter]++;\n
    \           } else {\n                dict.Add(letter, 1);\n            }\n        }\n
    \       return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50819519169642f18a0cd78c41aa61a8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50819519169642f18a0cd78c41aa61a8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]
    += 1;\n            } else {\n                result[letter] = 1;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5eeefba19e3e45c085586b341c5d6968>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5eeefba19e3e45c085586b341c5d6968>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       Dictionary<string,long> count = new Dictionary<string,long>();\n        string[]
    letters = test.Split(' ');\n        foreach (string letter in letters) {\n            if
    (count.ContainsKey(letter)) {\n                count[letter]++;\n            }
    else {\n                count[letter] = 1;\n            }\n        }\n        long
    max = count.Values.Max();\n        foreach (KeyValuePair<string,long> pair in
    count) {\n            if (pair.Value == max) {\n                result[pair.Key]
    = pair.Value;\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58d1384b21644c6393f89a5296713d56>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58d1384b21644c6393f89a5296713d56>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799398
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> hist = new Dictionary<string,long>();\n
    \       foreach (string letter in test.Split(' ')) {\n            if (hist.ContainsKey(letter))
    {\n                hist[letter]++;\n            } else {\n                hist[letter]
    = 1;\n            }\n        }\n        return hist;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4cc6318063764a4597d52a4dbb23280f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4cc6318063764a4597d52a4dbb23280f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799398
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> hist = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (hist.ContainsKey(letter)) {\n                hist[letter]++;\n
    \           } else {\n                hist[letter] = 1;\n            }\n        }\n
    \       return hist;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d4c2b68986544fb086027411ef34a1de>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d4c2b68986544fb086027411ef34a1de>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799398
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (result.ContainsKey(word)) {\n                result[word]++;\n
    \           } else {\n                result[word] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       Dictionary<string,long> temp = new Dictionary<string,long>();\n        string[]
    words = test.Split(' ');\n        foreach (string word in words) {\n            if
    (temp.ContainsKey(word)) {\n                temp[word]++;\n            } else
    {\n                temp.Add(word, 1);\n            }\n        }\n        long
    max = temp.Values.Max();\n        foreach (KeyValuePair<string,long> entry in
    temp) {\n            if (entry.Value == max) {\n                result.Add(entry.Key,
    entry.Value);\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <032d55533c654c699f890ee803c8fab9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <032d55533c654c699f890ee803c8fab9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799398
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       Dictionary<string,long> count = new Dictionary<string,long>();\n        string[]
    letters = test.Split(' ');\n        foreach (string letter in letters) {\n            if
    (count.ContainsKey(letter)) {\n                count[letter]++;\n            }
    else {\n                count[letter] = 1;\n            }\n        }\n        long
    max = 0;\n        foreach (KeyValuePair<string,long> pair in count) {\n            if
    (pair.Value > max) {\n                max = pair.Value;\n            }\n        }\n
    \       foreach (KeyValuePair<string,long> pair in count) {\n            if (pair.Value
    == max) {\n                result[pair.Key] = pair.Value;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <47d8e886230c4395bf119c091b1b6615>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <47d8e886230c4395bf119c091b1b6615>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799398
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       if (test.Length == 0) return result;\n        string[] words = test.Split('
    ');\n        Dictionary<string,long> counts = new Dictionary<string,long>();\n
    \       foreach (string word in words) {\n            if (counts.ContainsKey(word))
    {\n                counts[word]++;\n            } else {\n                counts[word]
    = 1;\n            }\n        }\n        long max = counts.Values.Max();\n        foreach
    (KeyValuePair<string,long> pair in counts) {\n            if (pair.Value == max)
    {\n                result[pair.Key] = pair.Value;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <89ddeb3c46b44521b67dc34d5d31025e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <89ddeb3c46b44521b67dc34d5d31025e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799398
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        var dict = new Dictionary<string,long>();\n        foreach (var
    c in test.Split(' ')) {\n            if (dict.ContainsKey(c)) {\n                dict[c]
    += 1;\n            } else {\n                dict[c] = 1;\n            }\n        }\n
    \       return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <24e1a4d728644332981eaf721e777853>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <24e1a4d728644332981eaf721e777853>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799398
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       if (test.Length == 0) {\n            return result;\n        }\n        string[]
    words = test.Split(' ');\n        Dictionary<string,long> wordCount = new Dictionary<string,long>();\n
    \       foreach (string word in words) {\n            if (wordCount.ContainsKey(word))
    {\n                wordCount[word]++;\n            } else {\n                wordCount[word]
    = 1;\n            }\n        }\n        long maxCount = wordCount.Values.Max();\n
    \       foreach (string word in wordCount.Keys) {\n            if (wordCount[word]
    == maxCount) {\n                result[word] = maxCount;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <369d7eb925444f0ebb7dc00998a37e11>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <369d7eb925444f0ebb7dc00998a37e11>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799398
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        // Your code here\n        return null;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0002b] in <7c5c0581d383486599cb66fccd4421df>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0002b] in <7c5c0581d383486599cb66fccd4421df>:0
    \n"
  stdout: ''
  timestamp: 1659799397
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       if (test.Length == 0) {\n            return result;\n        }\n        string[]
    letters = test.Split(' ');\n        Dictionary<string,long> counts = new Dictionary<string,long>();\n
    \       foreach (string letter in letters) {\n            if (counts.ContainsKey(letter))
    {\n                counts[letter]++;\n            } else {\n                counts[letter]
    = 1;\n            }\n        }\n        long max = counts.Values.Max();\n        foreach
    (string letter in counts.Keys) {\n            if (counts[letter] == max) {\n                result[letter]
    = max;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e0eb466151dd47eab850987cd2871f4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e0eb466151dd47eab850987cd2871f4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> dict = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (dict.ContainsKey(word)) {\n                dict[word]++;\n
    \           } else {\n                dict[word] = 1;\n            }\n        }\n
    \       return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <76aa39b37c044ab7b71ef08507b527a6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <76aa39b37c044ab7b71ef08507b527a6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799398
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       if (test.Length == 0) {\n            return result;\n        }\n        string[]
    letters = test.Split(' ');\n        Dictionary<string,long> counts = new Dictionary<string,long>();\n
    \       foreach (string letter in letters) {\n            if (counts.ContainsKey(letter))
    {\n                counts[letter]++;\n            } else {\n                counts[letter]
    = 1;\n            }\n        }\n        long max = 0;\n        foreach (KeyValuePair<string,long>
    kvp in counts) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n
    \           }\n        }\n        foreach (KeyValuePair<string,long> kvp in counts)
    {\n            if (kvp.Value == max) {\n                result[kvp.Key] = kvp.Value;\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <30315123e46e4058a58f9cf7b981a6fa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <30315123e46e4058a58f9cf7b981a6fa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799398
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> histogram = new Dictionary<string,long>();\n
    \       Dictionary<string,long> max = new Dictionary<string,long>();\n        long
    maxCount = 0;\n        foreach (string letter in test.Split(' ')) {\n            if
    (histogram.ContainsKey(letter)) {\n                histogram[letter] += 1;\n            }
    else {\n                histogram[letter] = 1;\n            }\n            if
    (histogram[letter] > maxCount) {\n                maxCount = histogram[letter];\n
    \               max = new Dictionary<string,long>();\n                max[letter]
    = maxCount;\n            } else if (histogram[letter] == maxCount) {\n                max[letter]
    = maxCount;\n            }\n        }\n        return max;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <666002fa094c45b0ae33dc9bff08bad8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <666002fa094c45b0ae33dc9bff08bad8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799398
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> hist = new Dictionary<string,long>();\n
    \       foreach (string s in test.Split(' ')) {\n            if (hist.ContainsKey(s))
    {\n                hist[s] += 1;\n            } else {\n                hist[s]
    = 1;\n            }\n        }\n        return hist;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f26f0c4d90e74492bb9bf14eec5b23bc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f26f0c4d90e74492bb9bf14eec5b23bc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799398
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] words = test.Split(' ');\n        foreach (string word in words)
    {\n            if (result.ContainsKey(word)) {\n                result[word]++;\n
    \           } else {\n                result[word] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <866afeb73f9e4548b1a6d6e215333134>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       if (test == \"\") {\n            return result;\n        }\n        string[]
    letters = test.Split(' ');\n        Dictionary<string,long> count = new Dictionary<string,long>();\n
    \       foreach (string letter in letters) {\n            if (count.ContainsKey(letter))
    {\n                count[letter] += 1;\n            } else {\n                count[letter]
    = 1;\n            }\n        }\n        long max = count.Values.Max();\n        foreach
    (KeyValuePair<string,long> kvp in count) {\n            if (kvp.Value == max)
    {\n                result[kvp.Key] = kvp.Value;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a
    b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L},
    {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new
    Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t
    g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <892551bc495042d3aa1e05179e954864>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <892551bc495042d3aa1e05179e954864>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799398
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       string[] letters = test.Split(' ');\n        foreach (string letter in
    letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter]++;\n
    \           } else {\n                result[letter] = 1;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\",
    2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\",
    1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new
    Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b
    b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n
    \   Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28709d26f5144962a830d7ae0bcb9764>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799395
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a string representing a space separated lowercase letters,
    return a dictionary\n    // of the letter with the most repetition and containing
    the corresponding count.\n    // If several letters have the same occurrence,
    return all of them.\n    // Example:\n    // histogram('a b c') == {'a': 1, 'b':
    1, 'c': 1}\n    // histogram('a b b a') == {'a': 2, 'b': 2}\n    // histogram('a
    b c a b') == {'a': 2, 'b': 2}\n    // histogram('b b b b a') == {'b': 4}\n    //
    histogram('') == {}\n    public static Dictionary<string,long> Histogram(string
    test) {\n        Dictionary<string,long> result = new Dictionary<string,long>();\n
    \       if (test.Length == 0) {\n            return result;\n        }\n        string[]
    letters = test.Split(' ');\n        Dictionary<string,long> counts = new Dictionary<string,long>();\n
    \       foreach (string letter in letters) {\n            if (counts.ContainsKey(letter))
    {\n                counts[letter]++;\n            } else {\n                counts[letter]
    = 1;\n            }\n        }\n        long max = counts.Values.Max();\n        foreach
    (string letter in counts.Keys) {\n            if (counts[letter] == max) {\n                result[letter]
    = max;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a
    b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n
    \   Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\",
    1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r
    t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\",
    1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\",
    4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\",
    1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new
    Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new
    Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e0eb466151dd47eab850987cd2871f4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e0eb466151dd47eab850987cd2871f4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799396

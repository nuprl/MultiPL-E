language: cs
name: HumanEval_122_add_elements
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this method\n        //throw new\
    \ NotImplementedException();\n        long sum = 0;\n        for (int i = 0; i\
    \ < k; i++)\n        {\n            if (arr[i] < 100)\n            {\n       \
    \         sum += arr[i];\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] > 99) {\n                sum += arr[i];\n            }\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1b220a6be1f14a9f90362c138e168da4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1b220a6be1f14a9f90362c138e168da4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L,\
    \ (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b82c24f07cc4da7bc74ae8c4c8c221c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b82c24f07cc4da7bc74ae8c4c8c221c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this method\n        //throw new\
    \ NotImplementedException();\n        long sum = 0;\n        for (int i = 0; i\
    \ < k; i++)\n        {\n            if (arr[i] < 100)\n            {\n       \
    \         sum += arr[i];\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L,\
    \ (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b82c24f07cc4da7bc74ae8c4c8c221c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b82c24f07cc4da7bc74ae8c4c8c221c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this function\n        return 0;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <185fa55bd3a246ec9315dadb83e575dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <185fa55bd3a246ec9315dadb83e575dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // Your code here\n        long sum = 0;\n        for\
    \ (int i = 0; i < k; i++) {\n            if (arr[i] < 100) {\n               \
    \ sum += arr[i];\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L,\
    \ (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this method\n        //throw new\
    \ NotImplementedException();\n        long sum = 0;\n        for (int i = 0; i\
    \ < k; i++)\n        {\n            if (arr[i] < 100)\n            {\n       \
    \         sum += arr[i];\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement your solution here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a12bfe9ef9f14dd2adc424bdd3cab76c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a12bfe9ef9f14dd2adc424bdd3cab76c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement AddElements\n        return 0;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b299d430f4f44d8b36eae9ebc1c4666>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b299d430f4f44d8b36eae9ebc1c4666>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] > 99) {\n                continue;\n            }\n  \
    \          sum += arr[i];\n        }\n        return sum;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L,\
    \ (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this function\n        return 0;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <185fa55bd3a246ec9315dadb83e575dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <185fa55bd3a246ec9315dadb83e575dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement me\n        return 0;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <adb26df0974146b9afa61c9349002d2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <adb26df0974146b9afa61c9349002d2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L,\
    \ (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b82c24f07cc4da7bc74ae8c4c8c221c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b82c24f07cc4da7bc74ae8c4c8c221c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement your solution here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a12bfe9ef9f14dd2adc424bdd3cab76c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a12bfe9ef9f14dd2adc424bdd3cab76c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement your solution here\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr[i] < 100)\
    \ {\n                sum += arr[i];\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long result = 0;\n        for (int i = 0; i < k; i++)\
    \ {\n            if (arr[i] < 100) {\n                result += arr[i];\n    \
    \        }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // Your code here\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L,\
    \ (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f40ff83d8884d8099bbe5025f5134a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f40ff83d8884d8099bbe5025f5134a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: implement this method\n        // Note: you\
    \ can use Console.WriteLine for debugging purposes, e.g.\n        // Console.WriteLine(\"\
    this is a debug message\");\n        long sum = 0;\n        for (int i = 0; i\
    \ < k; i++) {\n            if (arr[i] < 100) {\n                sum += arr[i];\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L,\
    \ (long)-2L, (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L,\
    \ (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})),\
    \ (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L,\
    \ (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement AddElements\n        long sum = 0;\n\
    \        for (int i = 0; i < k; i++) {\n            if (arr[i] < 100) {\n    \
    \            sum += arr[i];\n            }\n        }\n        return sum;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this method\n        // 1. Iterate\
    \ through the array\n        // 2. If the number is less than 100, add it to the\
    \ sum\n        // 3. If the number is greater than 100, break out of the loop\n\
    \        // 4. Return the sum\n        long sum = 0;\n        for (int i = 0;\
    \ i < k; i++) {\n            if (arr[i] < 100) {\n                sum += arr[i];\n\
    \            } else {\n                break;\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <be65158ca7e04bfd8fdd3cdde8c9cf0d>:0 \n"
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement your solution here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a12bfe9ef9f14dd2adc424bdd3cab76c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a12bfe9ef9f14dd2adc424bdd3cab76c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this method\n        //throw new\
    \ NotImplementedException();\n        long sum = 0;\n        for (int i = 0; i\
    \ < k; i++)\n        {\n            if (arr[i] < 100)\n            {\n       \
    \         sum += arr[i];\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this method\n        // This method\
    \ should return the sum of the elements with at most two digits\n        // from\
    \ the first k elements of arr.\n        // You can assume that k is less than\
    \ or equal to the length of arr.\n        // You can assume that k is greater\
    \ than 0.\n        // You can assume that arr is non-empty.\n        // You can\
    \ assume that all elements of arr are positive.\n        // You can assume that\
    \ all elements of arr are less than or equal to 100000.\n        // You can assume\
    \ that all elements of arr are integers.\n        long sum = 0;\n        for (int\
    \ i = 0; i < k; i++) {\n            if (arr[i] < 100) {\n                sum +=\
    \ arr[i];\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L,\
    \ (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement your solution here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a12bfe9ef9f14dd2adc424bdd3cab76c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a12bfe9ef9f14dd2adc424bdd3cab76c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement your solution here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a12bfe9ef9f14dd2adc424bdd3cab76c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a12bfe9ef9f14dd2adc424bdd3cab76c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L,\
    \ (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b82c24f07cc4da7bc74ae8c4c8c221c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b82c24f07cc4da7bc74ae8c4c8c221c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this method.\n        long sum =\
    \ 0;\n        for (int i = 0; i < k; i++) {\n            if (arr[i] < 100) {\n\
    \                sum += arr[i];\n            }\n        }\n        return sum;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this method\n        //throw new\
    \ NotImplementedException();\n        long sum = 0;\n        for (int i = 0; i\
    \ < k; i++)\n        {\n            if (arr[i] < 100)\n            {\n       \
    \         sum += arr[i];\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this method\n        // This method\
    \ should return the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n        long sum = 0;\n        for (int i = 0; i < k; i++)\
    \ {\n            if (arr[i] < 100) {\n                sum += arr[i];\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement your solution here\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr[i] < 100)\
    \ {\n                sum += arr[i];\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement your solution here\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr[i] < 100)\
    \ {\n                sum += arr[i];\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement your solution here\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr[i] < 100)\
    \ {\n                sum += arr[i];\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement your solution here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a12bfe9ef9f14dd2adc424bdd3cab76c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a12bfe9ef9f14dd2adc424bdd3cab76c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement me\n        return 0;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <adb26df0974146b9afa61c9349002d2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <adb26df0974146b9afa61c9349002d2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this method\n        // This method\
    \ should return the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n        // You can assume that k <= len(arr).\n        //\
    \ You can assume that all elements of arr are positive.\n        long sum = 0;\n\
    \        for (int i = 0; i < k; i++) {\n            if (arr[i] < 100) {\n    \
    \            sum += arr[i];\n            }\n        }\n        return sum;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement your solution here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a12bfe9ef9f14dd2adc424bdd3cab76c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a12bfe9ef9f14dd2adc424bdd3cab76c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement your solution here\n        return\
    \ 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a12bfe9ef9f14dd2adc424bdd3cab76c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a12bfe9ef9f14dd2adc424bdd3cab76c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement solution here\n        long sum =\
    \ 0;\n        for (int i = 0; i < k; i++) {\n            if (arr[i] < 100) {\n\
    \                sum += arr[i];\n            }\n        }\n        return sum;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L,\
    \ (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b82c24f07cc4da7bc74ae8c4c8c221c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b82c24f07cc4da7bc74ae8c4c8c221c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement solution\n        return 0;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16c7016771f44040890b511fd91a4acc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16c7016771f44040890b511fd91a4acc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L,\
    \ (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b82c24f07cc4da7bc74ae8c4c8c221c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b82c24f07cc4da7bc74ae8c4c8c221c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this method\n        //throw new\
    \ NotImplementedException();\n        long sum = 0;\n        for (int i = 0; i\
    \ < k; i++)\n        {\n            if (arr[i] < 100)\n            {\n       \
    \         sum += arr[i];\n            }\n        }\n        return sum;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement this function\n        return 0;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <185fa55bd3a246ec9315dadb83e575dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <185fa55bd3a246ec9315dadb83e575dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement solution\n        return 0;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16c7016771f44040890b511fd91a4acc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16c7016771f44040890b511fd91a4acc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L,\
    \ (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b82c24f07cc4da7bc74ae8c4c8c221c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b82c24f07cc4da7bc74ae8c4c8c221c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement me\n        return 0;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <adb26df0974146b9afa61c9349002d2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <adb26df0974146b9afa61c9349002d2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        // TODO: Implement your solution\
    \ here\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6855e6a2e254401c8cf4c49f5d627e3a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6855e6a2e254401c8cf4c49f5d627e3a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L,\
    \ (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b82c24f07cc4da7bc74ae8c4c8c221c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b82c24f07cc4da7bc74ae8c4c8c221c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] > 99) {\n                sum += arr[i];\n            }\n\
    \        }\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1b220a6be1f14a9f90362c138e168da4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1b220a6be1f14a9f90362c138e168da4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO:\n        return 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L,\
    \ (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bf8d2e43bc9243ff8499d82f499bd509>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bf8d2e43bc9243ff8499d82f499bd509>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794297
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr[i] < 100) {\n                sum += arr[i];\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L, (long)-2L,\
    \ (long)-3L, (long)41L, (long)57L, (long)76L, (long)87L, (long)88L, (long)99L})),\
    \ (3L)) == (-4L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)121L, (long)3L, (long)4000L, (long)5L, (long)6L})), (2L)) == (0L));\n\
    \    Debug.Assert(AddElements((new List<long>(new long[]{(long)11L, (long)21L,\
    \ (long)3L, (long)90L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})), (4L))\
    \ == (125L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)111L,\
    \ (long)21L, (long)3L, (long)4000L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L})),\
    \ (4L)) == (24L));\n    Debug.Assert(AddElements((new List<long>(new long[]{(long)1L})),\
    \ (1L)) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement AddElements\n        return 0;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b299d430f4f44d8b36eae9ebc1c4666>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b299d430f4f44d8b36eae9ebc1c4666>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long AddElements(List<long>\
    \ arr, long k) {\n        // TODO: Implement solution\n        return 0;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L, (long)-2L, (long)-3L, (long)41L, (long)57L,\
    \ (long)76L, (long)87L, (long)88L, (long)99L})), (3L)) == (-4L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)121L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L})), (2L)) == (0L));\n    Debug.Assert(AddElements((new List<long>(new\
    \ long[]{(long)11L, (long)21L, (long)3L, (long)90L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L})), (4L)) == (125L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)111L, (long)21L, (long)3L, (long)4000L, (long)5L,\
    \ (long)6L, (long)7L, (long)8L, (long)9L})), (4L)) == (24L));\n    Debug.Assert(AddElements((new\
    \ List<long>(new long[]{(long)1L})), (1L)) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16c7016771f44040890b511fd91a4acc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <16c7016771f44040890b511fd91a4acc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794296

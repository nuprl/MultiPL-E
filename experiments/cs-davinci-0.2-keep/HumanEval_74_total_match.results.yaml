language: cs
name: HumanEval_74_total_match
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        return lst1.Sum(x => x.Length) < lst2.Sum(x => x.Length) ?\
    \ lst1 : lst2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3fd98eb427b1441e985f6c51d96c74ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3fd98eb427b1441e985f6c51d96c74ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Count = 0;\n        int lst2Count = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Count += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Count += s.Length;\n        }\n\
    \        if (lst1Count < lst2Count) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b8978b38bec84226b3c726384e6e4ba5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b8978b38bec84226b3c726384e6e4ba5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total == lst2Total) {\n            return lst1;\n\
    \        } else if (lst1Total < lst2Total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <db0841c0064043288e49fb8800ad2aff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <db0841c0064043288e49fb8800ad2aff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Sum = 0;\n        int lst2Sum = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Sum += s.Length;\n        }\n        foreach\
    \ (string s in lst2) {\n            lst2Sum += s.Length;\n        }\n        if\
    \ (lst1Sum < lst2Sum) {\n            return lst1;\n        } else {\n        \
    \    return lst2;\n        }\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c3ac9040d5c4999bb0fa035498c7045>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c3ac9040d5c4999bb0fa035498c7045>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string word in lst1) {\n            lst1Total += word.Length;\n        }\n\
    \        foreach (string word in lst2) {\n            lst2Total += word.Length;\n\
    \        }\n        if (lst1Total == lst2Total) {\n            return lst1;\n\
    \        } else if (lst1Total < lst2Total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <94f4345341d0497cbe2f9fc3369c4819>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <94f4345341d0497cbe2f9fc3369c4819>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n        foreach (string\
    \ s in lst1) {\n            sum1 += s.Length;\n        }\n        foreach (string\
    \ s in lst2) {\n            sum2 += s.Length;\n        }\n        if (sum1 < sum2)\
    \ {\n            return lst1;\n        } else {\n            return lst2;\n  \
    \      }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d1c3909fd1cc465ab688f71dfaf4b931>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d1c3909fd1cc465ab688f71dfaf4b931>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string item in lst1) {\n            lst1Total += item.Length;\n        }\n\
    \        foreach (string item in lst2) {\n            lst2Total += item.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69f391f0a7d0466dbf3c0e69e303d898>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69f391f0a7d0466dbf3c0e69e303d898>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string item in lst1) {\n            lst1Total += item.Length;\n        }\n\
    \        foreach (string item in lst2) {\n            lst2Total += item.Length;\n\
    \        }\n        return lst1Total < lst2Total ? lst1 : lst2Total < lst1Total\
    \ ? lst2 : lst1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85f5dd91903c45e38a6669f2eb02f260>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85f5dd91903c45e38a6669f2eb02f260>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int total1 = 0;\n        int total2 = 0;\n        foreach (string\
    \ s in lst1) {\n            total1 += s.Length;\n        }\n        foreach (string\
    \ s in lst2) {\n            total2 += s.Length;\n        }\n        if (total1\
    \ < total2) {\n            return lst1;\n        } else if (total2 < total1) {\n\
    \            return lst2;\n        } else {\n            return lst1;\n      \
    \  }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1898556440644638a0d9866308755991>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1898556440644638a0d9866308755991>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1_total += str.Length;\n        }\n \
    \       foreach (string str in lst2) {\n            lst2_total += str.Length;\n\
    \        }\n        if (lst1_total == lst2_total) {\n            return lst1;\n\
    \        }\n        if (lst1_total < lst2_total) {\n            return lst1;\n\
    \        }\n        return lst2;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4226c57446e643ce8661b92f5b5808da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4226c57446e643ce8661b92f5b5808da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string item in lst1) {\n            lst1Total += item.Length;\n        }\n\
    \        foreach (string item in lst2) {\n            lst2Total += item.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69f391f0a7d0466dbf3c0e69e303d898>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69f391f0a7d0466dbf3c0e69e303d898>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n        foreach (string\
    \ s in lst1) {\n            sum1 += s.Length;\n        }\n        foreach (string\
    \ s in lst2) {\n            sum2 += s.Length;\n        }\n        if (sum1 < sum2)\
    \ {\n            return lst1;\n        } else {\n            return lst2;\n  \
    \      }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d1c3909fd1cc465ab688f71dfaf4b931>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d1c3909fd1cc465ab688f71dfaf4b931>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int total1 = 0;\n        int total2 = 0;\n        foreach (string\
    \ s in lst1) {\n            total1 += s.Length;\n        }\n        foreach (string\
    \ s in lst2) {\n            total2 += s.Length;\n        }\n        if (total1\
    \ < total2) {\n            return lst1;\n        } else {\n            return\
    \ lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <342f91b2bf6e4944bbb4497c2d385214>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <342f91b2bf6e4944bbb4497c2d385214>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int total1 = 0;\n        int total2 = 0;\n        foreach (string\
    \ s in lst1) {\n            total1 += s.Length;\n        }\n        foreach (string\
    \ s in lst2) {\n            total2 += s.Length;\n        }\n        if (total1\
    \ < total2) {\n            return lst1;\n        } else if (total2 < total1) {\n\
    \            return lst2;\n        } else {\n            return lst1;\n      \
    \  }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1898556440644638a0d9866308755991>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1898556440644638a0d9866308755991>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        return lst1.Sum(x => x.Length) < lst2.Sum(x => x.Length) ?\
    \ lst1 : lst2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3fd98eb427b1441e985f6c51d96c74ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3fd98eb427b1441e985f6c51d96c74ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string item in lst1) {\n            lst1Total += item.Length;\n        }\n\
    \        foreach (string item in lst2) {\n            lst2Total += item.Length;\n\
    \        }\n        if (lst1Total == lst2Total) {\n            return lst1;\n\
    \        } else if (lst1Total < lst2Total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1385f403f024fb69581c8875269fa3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1385f403f024fb69581c8875269fa3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int total1 = 0;\n        int total2 = 0;\n        foreach (string\
    \ s in lst1) {\n            total1 += s.Length;\n        }\n        foreach (string\
    \ s in lst2) {\n            total2 += s.Length;\n        }\n        if (total1\
    \ < total2) {\n            return lst1;\n        } else {\n            return\
    \ lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <342f91b2bf6e4944bbb4497c2d385214>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <342f91b2bf6e4944bbb4497c2d385214>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total == lst2_total) {\n            return lst1;\n    \
    \    }\n        if (lst1_total < lst2_total) {\n            return lst1;\n   \
    \     }\n        return lst2;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4f635cc4ed514d0a9e5545ef4178dcbf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4f635cc4ed514d0a9e5545ef4178dcbf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1_total += str.Length;\n        }\n \
    \       foreach (string str in lst2) {\n            lst2_total += str.Length;\n\
    \        }\n        if (lst1_total < lst2_total) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cb4ba6c037d4f68ad06fff540f3d2ec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cb4ba6c037d4f68ad06fff540f3d2ec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1_total += str.Length;\n        }\n \
    \       foreach (string str in lst2) {\n            lst2_total += str.Length;\n\
    \        }\n        if (lst1_total < lst2_total) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cb4ba6c037d4f68ad06fff540f3d2ec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cb4ba6c037d4f68ad06fff540f3d2ec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string item in lst1) {\n            lst1Total += item.Length;\n        }\n\
    \        foreach (string item in lst2) {\n            lst2Total += item.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69f391f0a7d0466dbf3c0e69e303d898>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69f391f0a7d0466dbf3c0e69e303d898>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1_total += str.Length;\n        }\n \
    \       foreach (string str in lst2) {\n            lst2_total += str.Length;\n\
    \        }\n        if (lst1_total < lst2_total) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cb4ba6c037d4f68ad06fff540f3d2ec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cb4ba6c037d4f68ad06fff540f3d2ec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        return lst1.Sum(x => x.Length) < lst2.Sum(x => x.Length) ?\
    \ lst1 : lst2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3fd98eb427b1441e985f6c51d96c74ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3fd98eb427b1441e985f6c51d96c74ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string item in lst1) {\n            lst1Total += item.Length;\n        }\n\
    \        foreach (string item in lst2) {\n            lst2Total += item.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69f391f0a7d0466dbf3c0e69e303d898>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69f391f0a7d0466dbf3c0e69e303d898>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_sum = 0;\n        int lst2_sum = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1_sum += str.Length;\n        }\n   \
    \     foreach (string str in lst2) {\n            lst2_sum += str.Length;\n  \
    \      }\n        if (lst1_sum < lst2_sum) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <83b4ebda58354b60b3dc94f6c1175058>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <83b4ebda58354b60b3dc94f6c1175058>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int count1 = 0;\n        int count2 = 0;\n        foreach (string\
    \ s in lst1) {\n            count1 += s.Length;\n        }\n        foreach (string\
    \ s in lst2) {\n            count2 += s.Length;\n        }\n        if (count1\
    \ < count2) {\n            return lst1;\n        } else {\n            return\
    \ lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3b6966a52abc42d9a1bc9b77dc9231d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3b6966a52abc42d9a1bc9b77dc9231d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        for\
    \ (int i = 0; i < lst1.Count; i++) {\n            lst1_total += lst1[i].Length;\n\
    \        }\n        for (int i = 0; i < lst2.Count; i++) {\n            lst2_total\
    \ += lst2[i].Length;\n        }\n        if (lst1_total < lst2_total) {\n    \
    \        return lst1;\n        } else {\n            return lst2;\n        }\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4a0c9c2d68541149ecd4ac26a6c126c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4a0c9c2d68541149ecd4ac26a6c126c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total == lst2_total) {\n            return lst1;\n    \
    \    }\n        if (lst1_total < lst2_total) {\n            return lst1;\n   \
    \     }\n        return lst2;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4f635cc4ed514d0a9e5545ef4178dcbf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4f635cc4ed514d0a9e5545ef4178dcbf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n        foreach (string\
    \ s in lst1) {\n            sum1 += s.Length;\n        }\n        foreach (string\
    \ s in lst2) {\n            sum2 += s.Length;\n        }\n        if (sum1 ==\
    \ sum2) {\n            return lst1;\n        }\n        if (sum1 < sum2) {\n \
    \           return lst1;\n        }\n        return lst2;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9a0d93a0556644a786fc25b53b3bcc2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9a0d93a0556644a786fc25b53b3bcc2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int count1 = 0;\n        int count2 = 0;\n        foreach (string\
    \ s in lst1) {\n            count1 += s.Length;\n        }\n        foreach (string\
    \ s in lst2) {\n            count2 += s.Length;\n        }\n        if (count1\
    \ < count2) {\n            return lst1;\n        } else {\n            return\
    \ lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3b6966a52abc42d9a1bc9b77dc9231d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3b6966a52abc42d9a1bc9b77dc9231d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Count = 0;\n        int lst2Count = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Count += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Count += s.Length;\n        }\n\
    \        if (lst1Count < lst2Count) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b8978b38bec84226b3c726384e6e4ba5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b8978b38bec84226b3c726384e6e4ba5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n        foreach (string\
    \ s in lst1) {\n            sum1 += s.Length;\n        }\n        foreach (string\
    \ s in lst2) {\n            sum2 += s.Length;\n        }\n        if (sum1 < sum2)\
    \ {\n            return lst1;\n        } else {\n            return lst2;\n  \
    \      }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d1c3909fd1cc465ab688f71dfaf4b931>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d1c3909fd1cc465ab688f71dfaf4b931>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n        foreach (string\
    \ s in lst1) {\n            sum1 += s.Length;\n        }\n        foreach (string\
    \ s in lst2) {\n            sum2 += s.Length;\n        }\n        if (sum1 < sum2)\
    \ {\n            return lst1;\n        } else {\n            return lst2;\n  \
    \      }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d1c3909fd1cc465ab688f71dfaf4b931>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d1c3909fd1cc465ab688f71dfaf4b931>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1_total += str.Length;\n        }\n \
    \       foreach (string str in lst2) {\n            lst2_total += str.Length;\n\
    \        }\n        if (lst1_total == lst2_total) {\n            return lst1;\n\
    \        }\n        if (lst1_total < lst2_total) {\n            return lst1;\n\
    \        }\n        return lst2;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4226c57446e643ce8661b92f5b5808da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4226c57446e643ce8661b92f5b5808da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int len1 = 0;\n        int len2 = 0;\n        foreach (string\
    \ s in lst1) {\n            len1 += s.Length;\n        }\n        foreach (string\
    \ s in lst2) {\n            len2 += s.Length;\n        }\n        if (len1 < len2)\
    \ {\n            return lst1;\n        } else {\n            return lst2;\n  \
    \      }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aeb8811a67af4b45874b692556a6b2c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aeb8811a67af4b45874b692556a6b2c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Count = 0;\n        int lst2Count = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Count += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Count += s.Length;\n        }\n\
    \        if (lst1Count < lst2Count) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b8978b38bec84226b3c726384e6e4ba5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b8978b38bec84226b3c726384e6e4ba5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total == lst2_total) {\n            return lst1;\n    \
    \    }\n        else if (lst1_total < lst2_total) {\n            return lst1;\n\
    \        }\n        else {\n            return lst2;\n        }\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c8856a148244e3486b92793ab15c23e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c8856a148244e3486b92793ab15c23e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int len1 = 0;\n        int len2 = 0;\n        foreach (string\
    \ s in lst1) {\n            len1 += s.Length;\n        }\n        foreach (string\
    \ s in lst2) {\n            len2 += s.Length;\n        }\n        if (len1 < len2)\
    \ {\n            return lst1;\n        } else {\n            return lst2;\n  \
    \      }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aeb8811a67af4b45874b692556a6b2c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aeb8811a67af4b45874b692556a6b2c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Count = 0;\n        int lst2Count = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Count += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Count += s.Length;\n        }\n\
    \        if (lst1Count < lst2Count) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b8978b38bec84226b3c726384e6e4ba5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b8978b38bec84226b3c726384e6e4ba5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n        foreach (string\
    \ s in lst1) {\n            sum1 += s.Length;\n        }\n        foreach (string\
    \ s in lst2) {\n            sum2 += s.Length;\n        }\n        if (sum1 < sum2)\
    \ {\n            return lst1;\n        } else {\n            return lst2;\n  \
    \      }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d1c3909fd1cc465ab688f71dfaf4b931>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d1c3909fd1cc465ab688f71dfaf4b931>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Count = 0;\n        int lst2Count = 0;\n        foreach\
    \ (string item in lst1) {\n            lst1Count += item.Length;\n        }\n\
    \        foreach (string item in lst2) {\n            lst2Count += item.Length;\n\
    \        }\n        if (lst1Count < lst2Count) {\n            return lst1;\n \
    \       } else if (lst1Count > lst2Count) {\n            return lst2;\n      \
    \  } else {\n            return lst1;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71a206e130047afb6fda9218c4b6585>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f71a206e130047afb6fda9218c4b6585>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799477
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1_total += str.Length;\n        }\n \
    \       foreach (string str in lst2) {\n            lst2_total += str.Length;\n\
    \        }\n        if (lst1_total < lst2_total) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cb4ba6c037d4f68ad06fff540f3d2ec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cb4ba6c037d4f68ad06fff540f3d2ec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string item in lst1) {\n            lst1Total += item.Length;\n        }\n\
    \        foreach (string item in lst2) {\n            lst2Total += item.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else if (lst1Total > lst2Total) {\n            return lst2;\n      \
    \  } else {\n            return lst1;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8781356cb40649369e4c83bb2fbd7e46>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8781356cb40649369e4c83bb2fbd7e46>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799477
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string item in lst1) {\n            lst1Total += item.Length;\n        }\n\
    \        foreach (string item in lst2) {\n            lst2Total += item.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else if (lst1Total > lst2Total) {\n            return lst2;\n      \
    \  } else {\n            return lst1;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8781356cb40649369e4c83bb2fbd7e46>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8781356cb40649369e4c83bb2fbd7e46>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799477
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        for\
    \ (int i = 0; i < lst1.Count; i++) {\n            lst1_total += lst1[i].Length;\n\
    \        }\n        for (int i = 0; i < lst2.Count; i++) {\n            lst2_total\
    \ += lst2[i].Length;\n        }\n        if (lst1_total < lst2_total) {\n    \
    \        return lst1;\n        } else {\n            return lst2;\n        }\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4a0c9c2d68541149ecd4ac26a6c126c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4a0c9c2d68541149ecd4ac26a6c126c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        return lst1_total <= lst2_total ? lst1 : lst2;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ae9587573ccf4916ba0b3d7abbfed6ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ae9587573ccf4916ba0b3d7abbfed6ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799477
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string item in lst1) {\n            lst1Total += item.Length;\n        }\n\
    \        foreach (string item in lst2) {\n            lst2Total += item.Length;\n\
    \        }\n        return lst1Total < lst2Total ? lst1 : lst2Total < lst1Total\
    \ ? lst2 : lst1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85f5dd91903c45e38a6669f2eb02f260>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85f5dd91903c45e38a6669f2eb02f260>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n        for (int i =\
    \ 0; i < lst1.Count; i++) {\n            sum1 += lst1[i].Length;\n        }\n\
    \        for (int i = 0; i < lst2.Count; i++) {\n            sum2 += lst2[i].Length;\n\
    \        }\n        if (sum1 < sum2) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a435304de83b42f3bb0cf624f30b61cf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a435304de83b42f3bb0cf624f30b61cf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799477
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n        foreach (string\
    \ s in lst1) {\n            sum1 += s.Length;\n        }\n        foreach (string\
    \ s in lst2) {\n            sum2 += s.Length;\n        }\n        if (sum1 < sum2)\
    \ {\n            return lst1;\n        } else {\n            return lst2;\n  \
    \      }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d1c3909fd1cc465ab688f71dfaf4b931>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d1c3909fd1cc465ab688f71dfaf4b931>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        return lst1.Sum(x => x.Length) < lst2.Sum(x => x.Length) ?\
    \ lst1 : lst2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3fd98eb427b1441e985f6c51d96c74ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3fd98eb427b1441e985f6c51d96c74ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Sum = 0;\n        int lst2Sum = 0;\n        foreach\
    \ (string item in lst1) {\n            lst1Sum += item.Length;\n        }\n  \
    \      foreach (string item in lst2) {\n            lst2Sum += item.Length;\n\
    \        }\n        if (lst1Sum < lst2Sum) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <621525445ec5483fb8715f85408c4046>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <621525445ec5483fb8715f85408c4046>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799477
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        return lst1.Sum(x => x.Length) < lst2.Sum(x => x.Length) ?\
    \ lst1 : lst2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3fd98eb427b1441e985f6c51d96c74ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3fd98eb427b1441e985f6c51d96c74ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string item in lst1) {\n            lst1_total += item.Length;\n        }\n\
    \        foreach (string item in lst2) {\n            lst2_total += item.Length;\n\
    \        }\n        if (lst1_total < lst2_total) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <86e4d875e412463a825d5ce38ff4501f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <86e4d875e412463a825d5ce38ff4501f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799477
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string item in lst1) {\n            lst1Total += item.Length;\n        }\n\
    \        foreach (string item in lst2) {\n            lst2Total += item.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69f391f0a7d0466dbf3c0e69e303d898>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69f391f0a7d0466dbf3c0e69e303d898>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n        foreach (string\
    \ s in lst1) {\n            sum1 += s.Length;\n        }\n        foreach (string\
    \ s in lst2) {\n            sum2 += s.Length;\n        }\n        if (sum1 < sum2)\
    \ {\n            return lst1;\n        } else {\n            return lst2;\n  \
    \      }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d1c3909fd1cc465ab688f71dfaf4b931>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d1c3909fd1cc465ab688f71dfaf4b931>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total == lst2Total) {\n            return lst1;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        }\n \
    \       return lst2;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8c230a2ca93449599b115c3afab0f78d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8c230a2ca93449599b115c3afab0f78d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799477
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string item in lst1) {\n            lst1Total += item.Length;\n        }\n\
    \        foreach (string item in lst2) {\n            lst2Total += item.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69f391f0a7d0466dbf3c0e69e303d898>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69f391f0a7d0466dbf3c0e69e303d898>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        return lst1.Sum(x => x.Length) < lst2.Sum(x => x.Length) ?\
    \ lst1 : lst2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3fd98eb427b1441e985f6c51d96c74ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3fd98eb427b1441e985f6c51d96c74ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string item in lst1) {\n            lst1Total += item.Length;\n        }\n\
    \        foreach (string item in lst2) {\n            lst2Total += item.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69f391f0a7d0466dbf3c0e69e303d898>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69f391f0a7d0466dbf3c0e69e303d898>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string item in lst1) {\n            lst1Total += item.Length;\n        }\n\
    \        foreach (string item in lst2) {\n            lst2Total += item.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69f391f0a7d0466dbf3c0e69e303d898>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69f391f0a7d0466dbf3c0e69e303d898>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string word in lst1) {\n            lst1Total += word.Length;\n        }\n\
    \        foreach (string word in lst2) {\n            lst2Total += word.Length;\n\
    \        }\n        if (lst1Total > lst2Total) {\n            return lst2;\n \
    \       } else {\n            return lst1;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <165b7d5a44bc4aefba50c82ef12778d2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <165b7d5a44bc4aefba50c82ef12778d2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799477
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total == lst2Total) {\n            return lst1;\n        }\n\
    \        return lst1Total < lst2Total ? lst1 : lst2;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f244e090dcf41b190bf281dae099d03>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f244e090dcf41b190bf281dae099d03>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799477
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total == lst2Total) {\n            return lst1;\n\
    \        } else if (lst1Total < lst2Total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <db0841c0064043288e49fb8800ad2aff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <db0841c0064043288e49fb8800ad2aff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string item in lst1) {\n            lst1Total += item.Length;\n        }\n\
    \        foreach (string item in lst2) {\n            lst2Total += item.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69f391f0a7d0466dbf3c0e69e303d898>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69f391f0a7d0466dbf3c0e69e303d898>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Count = 0;\n        int lst2Count = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Count += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Count += s.Length;\n        }\n\
    \        if (lst1Count < lst2Count) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b8978b38bec84226b3c726384e6e4ba5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b8978b38bec84226b3c726384e6e4ba5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n        foreach (string\
    \ s in lst1) {\n            sum1 += s.Length;\n        }\n        foreach (string\
    \ s in lst2) {\n            sum2 += s.Length;\n        }\n        if (sum1 < sum2)\
    \ {\n            return lst1;\n        } else {\n            return lst2;\n  \
    \      }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d1c3909fd1cc465ab688f71dfaf4b931>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d1c3909fd1cc465ab688f71dfaf4b931>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total == lst2_total) {\n            return lst1;\n    \
    \    }\n        if (lst1_total < lst2_total) {\n            return lst1;\n   \
    \     }\n        return lst2;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4f635cc4ed514d0a9e5545ef4178dcbf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4f635cc4ed514d0a9e5545ef4178dcbf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_count = 0;\n        int lst2_count = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_count += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_count += s.Length;\n      \
    \  }\n        if (lst1_count < lst2_count) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5361c318797d4c219c4bb8ef40af8649>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5361c318797d4c219c4bb8ef40af8649>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799477
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        return lst1.Sum(s => s.Length) < lst2.Sum(s => s.Length) ?\
    \ lst1 : lst2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dbce7779c63d4359944cc318a35dad93>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dbce7779c63d4359944cc318a35dad93>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799477
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string item in lst1) {\n            lst1Total += item.Length;\n        }\n\
    \        foreach (string item in lst2) {\n            lst2Total += item.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69f391f0a7d0466dbf3c0e69e303d898>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69f391f0a7d0466dbf3c0e69e303d898>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string item in lst1) {\n            lst1Total += item.Length;\n        }\n\
    \        foreach (string item in lst2) {\n            lst2Total += item.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69f391f0a7d0466dbf3c0e69e303d898>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69f391f0a7d0466dbf3c0e69e303d898>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int count1 = 0;\n        int count2 = 0;\n        foreach (string\
    \ s in lst1) {\n            count1 += s.Length;\n        }\n        foreach (string\
    \ s in lst2) {\n            count2 += s.Length;\n        }\n        if (count1\
    \ < count2) {\n            return lst1;\n        } else {\n            return\
    \ lst2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3b6966a52abc42d9a1bc9b77dc9231d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3b6966a52abc42d9a1bc9b77dc9231d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        return lst1_total < lst2_total ? lst1 : lst2;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c74f921e8021423e9b938019bad5f98c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c74f921e8021423e9b938019bad5f98c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799477
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int total1 = 0;\n        int total2 = 0;\n        foreach (string\
    \ s in lst1) {\n            total1 += s.Length;\n        }\n        foreach (string\
    \ s in lst2) {\n            total2 += s.Length;\n        }\n        if (total1\
    \ < total2) {\n            return lst1;\n        } else if (total2 < total1) {\n\
    \            return lst2;\n        } else {\n            return lst1;\n      \
    \  }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1898556440644638a0d9866308755991>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1898556440644638a0d9866308755991>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string item in lst1) {\n            lst1Total += item.Length;\n        }\n\
    \        foreach (string item in lst2) {\n            lst2Total += item.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69f391f0a7d0466dbf3c0e69e303d898>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69f391f0a7d0466dbf3c0e69e303d898>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total == lst2_total) {\n            return lst1;\n    \
    \    }\n        if (lst1_total < lst2_total) {\n            return lst1;\n   \
    \     }\n        return lst2;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4f635cc4ed514d0a9e5545ef4178dcbf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4f635cc4ed514d0a9e5545ef4178dcbf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n        foreach (string\
    \ s in lst1) {\n            sum1 += s.Length;\n        }\n        foreach (string\
    \ s in lst2) {\n            sum2 += s.Length;\n        }\n        if (sum1 < sum2)\
    \ {\n            return lst1;\n        } else {\n            return lst2;\n  \
    \      }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d1c3909fd1cc465ab688f71dfaf4b931>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d1c3909fd1cc465ab688f71dfaf4b931>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1_total += str.Length;\n        }\n \
    \       foreach (string str in lst2) {\n            lst2_total += str.Length;\n\
    \        }\n        if (lst1_total < lst2_total) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cb4ba6c037d4f68ad06fff540f3d2ec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cb4ba6c037d4f68ad06fff540f3d2ec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Total += s.Length;\n        }\n      \
    \  foreach (string s in lst2) {\n            lst2Total += s.Length;\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new List<string>())).Equals((new\
    \ List<string>())));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\"}))).Equals((new List<string>(new string[]{(string)\"hi\", (string)\"hi\"\
    }))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
    hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821416d3c0c04c668815cb412fab4379>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int total1 = 0;\n        int total2 = 0;\n        foreach (string\
    \ s in lst1) {\n            total1 += s.Length;\n        }\n        foreach (string\
    \ s in lst2) {\n            total2 += s.Length;\n        }\n        if (total1\
    \ == total2) {\n            return lst1;\n        }\n        if (total1 < total2)\
    \ {\n            return lst1;\n        }\n        return lst2;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2fe9de8a1adc471d9b8e46754adc9723>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2fe9de8a1adc471d9b8e46754adc9723>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799477
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1_total = 0;\n        int lst2_total = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1_total += s.Length;\n        }\n     \
    \   foreach (string s in lst2) {\n            lst2_total += s.Length;\n      \
    \  }\n        if (lst1_total < lst2_total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()), (new\
    \ List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c121b9476d24629a7b68298a39cce2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int total1 = 0;\n        int total2 = 0;\n        foreach (string\
    \ s in lst1) {\n            total1 += s.Length;\n        }\n        foreach (string\
    \ s in lst2) {\n            total2 += s.Length;\n        }\n        if (total1\
    \ < total2) {\n            return lst1;\n        } else if (total2 < total1) {\n\
    \            return lst2;\n        } else {\n            return lst1;\n      \
    \  }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
    \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1898556440644638a0d9866308755991>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1898556440644638a0d9866308755991>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = lst1.Sum(x => x.Length);\n        int lst2Total\
    \ = lst2.Sum(x => x.Length);\n        if (lst1Total < lst2Total) {\n         \
    \   return lst1;\n        } else if (lst1Total > lst2Total) {\n            return\
    \ lst2;\n        } else {\n            return lst1;\n        }\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <71370b4fbac64810b5f75a18ed8aa9da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <71370b4fbac64810b5f75a18ed8aa9da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799477
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts two lists of strings and\
    \ returns the list that has \n    // total number of chars in the all strings\
    \ of the list less than the other list.\n    // if the two lists have the same\
    \ number of chars, return the first list.\n    // Examples\n    // total_match([],\
    \ []) \u279E []\n    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI',\
    \ 'Hi']\n    // total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\n    // total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'], ['1', '2', '3', '4', '5'])\
    \ \u279E ['4']\n    public static List<string> TotalMatch(List<string> lst1, List<string>\
    \ lst2) {\n        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hi\", (string)\"hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"\
    1\", (string)\"2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new\
    \ List<string>(new string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new\
    \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
    \ string[]{(string)\"hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
    \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
    hI\", (string)\"hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"\
    hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()),\
    \ (new List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
    \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
    \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <819ee5eed3f148648a9473b453cda4fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799476

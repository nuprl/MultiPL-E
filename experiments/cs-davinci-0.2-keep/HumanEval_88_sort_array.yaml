name: HumanEval_88_sort_array
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given an array of non-negative integers, return a copy of the\
  \ given array after sorting,\n    // you will sort the given array in ascending\
  \ order if the sum( first index value, last index value) is odd,\n    // or sort\
  \ it in descending order if the sum( first index value, last index value) is even.\n\
  \    // Note:\n    // * don't change the given array.\n    // Examples:\n    //\
  \ * sort_array([]) => []\n    // * sort_array([5]) => [5]\n    // * sort_array([2,\
  \ 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    // * sort_array([2, 4, 3, 0, 1, 5,\
  \ 6]) => [6, 5, 4, 3, 2, 1, 0]\n    public static List<long> SortArray(List<long>\
  \ array) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortArray((new\
  \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(SortArray((new List<long>(new\
  \ long[]{(long)5L}))).Equals((new List<long>(new long[]{(long)5L}))));\n    Debug.Assert(SortArray((new\
  \ List<long>(new long[]{(long)2L, (long)4L, (long)3L, (long)0L, (long)1L, (long)5L}))).Equals((new\
  \ List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))));\n\
  \    Debug.Assert(SortArray((new List<long>(new long[]{(long)2L, (long)4L, (long)3L,\
  \ (long)0L, (long)1L, (long)5L, (long)6L}))).Equals((new List<long>(new long[]{(long)6L,\
  \ (long)5L, (long)4L, (long)3L, (long)2L, (long)1L, (long)0L}))));\n    Debug.Assert(SortArray((new\
  \ List<long>(new long[]{(long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
  \ (long)2L}))));\n    Debug.Assert(SortArray((new List<long>(new long[]{(long)15L,\
  \ (long)42L, (long)87L, (long)32L, (long)11L, (long)0L}))).Equals((new List<long>(new\
  \ long[]{(long)0L, (long)11L, (long)15L, (long)32L, (long)42L, (long)87L}))));\n\
  \    Debug.Assert(SortArray((new List<long>(new long[]{(long)21L, (long)14L, (long)23L,\
  \ (long)11L}))).Equals((new List<long>(new long[]{(long)23L, (long)21L, (long)14L,\
  \ (long)11L}))));\n    }\n\n}\n"
completions: ["        if (array.Count == 0) return array;\n        if (array.Count\
    \ == 1) return array;\n        if (array.Count == 2) {\n            if (array[0]\
    \ > array[1]) {\n                var temp = array[0];\n                array[0]\
    \ = array[1];\n                array[1] = temp;\n            }\n            return\
    \ array;\n        }\n        var sum = array[0] + array[array.Count - 1];\n  \
    \      if (sum % 2 == 0) {\n            array.Sort();\n            array.Reverse();\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        if (array.Count == 0) {\n            return array;\n        }\n       \
    \ if (array.Count == 1) {\n            return array;\n        }\n        if ((array[0]\
    \ + array[array.Count - 1]) % 2 == 0) {\n            array.Sort();\n         \
    \   array.Reverse();\n        } else {\n            array.Sort();\n        }\n\
    \        return array;", "        var result = new List<long>();\n        if (array.Count\
    \ == 0) {\n            return result;\n        }\n        if (array.Count == 1)\
    \ {\n            result.Add(array[0]);\n            return result;\n        }\n\
    \        var sum = array[0] + array[array.Count - 1];\n        if (sum % 2 ==\
    \ 0) {\n            array.Sort();\n            array.Reverse();\n        } else\
    \ {\n            array.Sort();\n        }\n        return array;", "        //\
    \ Your code here\n        return null;", "        // Your code goes here\n   \
    \     return array;", "        // your code here\n        return array;", "  \
    \      // Write your code here\n        return array;", "        if (array.Count\
    \ == 0) return array;\n        if (array.Count == 1) return array;\n        if\
    \ (array.Count == 2) {\n            if (array[0] > array[1]) {\n             \
    \   long temp = array[0];\n                array[0] = array[1];\n            \
    \    array[1] = temp;\n            }\n            return array;\n        }\n \
    \       bool isEven = (array[0] + array[array.Count - 1]) % 2 == 0;\n        if\
    \ (isEven) {\n            array.Sort();\n            array.Reverse();\n      \
    \  } else {\n            array.Sort();\n        }\n        return array;", " \
    \       // Write your code here\n        return array;", "        if (array.Count\
    \ == 0) return array;\n        if (array.Count == 1) return array;\n        if\
    \ (array.Count == 2) {\n            if (array[0] > array[1]) {\n             \
    \   var temp = array[0];\n                array[0] = array[1];\n             \
    \   array[1] = temp;\n            }\n            return array;\n        }\n  \
    \      var sum = array[0] + array[array.Count - 1];\n        if (sum % 2 == 0)\
    \ {\n            array.Sort((a, b) => (int)(b - a));\n        } else {\n     \
    \       array.Sort((a, b) => (int)(a - b));\n        }\n        return array;",
  "        // Your code here\n        return array;", "        if (array.Count ==\
    \ 0) return array;\n        if (array.Count == 1) return array;\n        if (array.Count\
    \ == 2) {\n            if (array[0] > array[1]) {\n                var temp =\
    \ array[0];\n                array[0] = array[1];\n                array[1] =\
    \ temp;\n            }\n            return array;\n        }\n        var sum\
    \ = array[0] + array[array.Count - 1];\n        if (sum % 2 == 0) {\n        \
    \    array.Sort((a, b) => b.CompareTo(a));\n        } else {\n            array.Sort((a,\
    \ b) => a.CompareTo(b));\n        }\n        return array;", "        if (array.Count\
    \ == 0) {\n            return array;\n        }\n        if (array.Count == 1)\
    \ {\n            return array;\n        }\n        if (array.Count == 2) {\n \
    \           if (array[0] > array[1]) {\n                long temp = array[0];\n\
    \                array[0] = array[1];\n                array[1] = temp;\n    \
    \        }\n            return array;\n        }\n        if ((array[0] + array[array.Count\
    \ - 1]) % 2 == 0) {\n            array.Sort();\n            array.Reverse();\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        if (array.Count == 0) return array;\n        if (array.Count == 1) return\
    \ array;\n        if (array.Count == 2) {\n            if (array[0] > array[1])\
    \ {\n                long temp = array[0];\n                array[0] = array[1];\n\
    \                array[1] = temp;\n            }\n            return array;\n\
    \        }\n        long sum = array[0] + array[array.Count - 1];\n        if\
    \ (sum % 2 == 0) {\n            array.Sort((a, b) => b.CompareTo(a));\n      \
    \  } else {\n            array.Sort((a, b) => a.CompareTo(b));\n        }\n  \
    \      return array;", "        // Write your code here\n        return array;",
  "        // Write your code here\n        return array;", "        // Write your\
    \ code here\n        return array;", "        List<long> result = new List<long>();\n\
    \        if (array.Count == 0) {\n            return result;\n        }\n    \
    \    if (array.Count == 1) {\n            result.Add(array[0]);\n            return\
    \ result;\n        }\n        if ((array[0] + array[array.Count - 1]) % 2 == 0)\
    \ {\n            array.Sort();\n            array.Reverse();\n        } else {\n\
    \            array.Sort();\n        }\n        return array;", "        // Write\
    \ your code here\n        return array;", "        List<long> result = new List<long>();\n\
    \        if (array.Count == 0) {\n            return result;\n        }\n    \
    \    if (array.Count == 1) {\n            result.Add(array[0]);\n            return\
    \ result;\n        }\n        if ((array[0] + array[array.Count - 1]) % 2 == 0)\
    \ {\n            array.Sort();\n            array.Reverse();\n        } else {\n\
    \            array.Sort();\n        }\n        return array;", "        // Your\
    \ code goes here.\n        return array;", "        // Your code goes here\n \
    \       return array;", "        // Write your code here\n        return array;",
  "        var result = new List<long>();\n        if (array.Count == 0) {\n     \
    \       return result;\n        }\n        if (array.Count == 1) {\n         \
    \   result.Add(array[0]);\n            return result;\n        }\n        var\
    \ sum = array[0] + array[array.Count - 1];\n        if (sum % 2 == 0) {\n    \
    \        result = array.OrderByDescending(x => x).ToList();\n        } else {\n\
    \            result = array.OrderBy(x => x).ToList();\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        if (array.Count\
    \ == 0) {\n            return result;\n        }\n        if (array.Count == 1)\
    \ {\n            result.Add(array[0]);\n            return result;\n        }\n\
    \        if ((array[0] + array[array.Count - 1]) % 2 == 0) {\n            array.Sort();\n\
    \            array.Reverse();\n        } else {\n            array.Sort();\n \
    \       }\n        return array;", "        // Your code goes here\n        return\
    \ array;", "        // Your code goes here\n        return null;", "        //\
    \ Write your code here\n        return array;", "        if (array.Count == 0)\
    \ {\n            return array;\n        }\n        if (array.Count == 1) {\n \
    \           return array;\n        }\n        if ((array[0] + array[array.Count\
    \ - 1]) % 2 == 0) {\n            array.Sort();\n            array.Reverse();\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        // Write your code here\n        return array;", "        // Write your\
    \ code here\n        return array;", "        List<long> result = new List<long>();\n\
    \        if (array.Count == 0) {\n            return result;\n        }\n    \
    \    if (array.Count == 1) {\n            result.Add(array[0]);\n            return\
    \ result;\n        }\n        long sum = array[0] + array[array.Count - 1];\n\
    \        if (sum % 2 == 0) {\n            array.Sort();\n            array.Reverse();\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        var sum = array[0] + array[array.Count - 1];\n        if (sum % 2 == 0)\
    \ {\n            array.Sort((a, b) => (int)(b - a));\n        } else {\n     \
    \       array.Sort((a, b) => (int)(a - b));\n        }\n        return array;",
  "        // Write your code here\n        return array;", "        if (array.Count\
    \ == 0) {\n            return array;\n        }\n        if (array.Count == 1)\
    \ {\n            return array;\n        }\n        if ((array[0] + array[array.Count\
    \ - 1]) % 2 == 0) {\n            array.Sort();\n            array.Reverse();\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        if (array.Count == 0) {\n            return array;\n        }\n       \
    \ if (array.Count == 1) {\n            return array;\n        }\n        if (array.Count\
    \ == 2) {\n            if (array[0] > array[1]) {\n                long temp =\
    \ array[0];\n                array[0] = array[1];\n                array[1] =\
    \ temp;\n            }\n            return array;\n        }\n        if ((array[0]\
    \ + array[array.Count - 1]) % 2 == 0) {\n            array.Sort();\n         \
    \   array.Reverse();\n        } else {\n            array.Sort();\n        }\n\
    \        return array;", "        List<long> result = new List<long>();\n    \
    \    if (array.Count == 0) {\n            return result;\n        }\n        if\
    \ (array.Count == 1) {\n            result.Add(array[0]);\n            return\
    \ result;\n        }\n        if ((array[0] + array[array.Count - 1]) % 2 == 0)\
    \ {\n            array.Sort();\n            array.Reverse();\n        } else {\n\
    \            array.Sort();\n        }\n        return array;", "        // Write\
    \ your code here\n        return array;", "        if (array.Count == 0) {\n \
    \           return array;\n        }\n        if (array.Count == 1) {\n      \
    \      return array;\n        }\n        if (array.Count == 2) {\n           \
    \ if (array[0] > array[1]) {\n                long temp = array[0];\n        \
    \        array[0] = array[1];\n                array[1] = temp;\n            }\n\
    \            return array;\n        }\n        if ((array[0] + array[array.Count\
    \ - 1]) % 2 == 0) {\n            array.Sort();\n            array.Reverse();\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        List<long> result = new List<long>();\n        if (array.Count == 0) {\n\
    \            return result;\n        }\n        if (array.Count == 1) {\n    \
    \        result.Add(array[0]);\n            return result;\n        }\n      \
    \  if ((array[0] + array[array.Count - 1]) % 2 == 0) {\n            array.Sort();\n\
    \            array.Reverse();\n        } else {\n            array.Sort();\n \
    \       }\n        return array;", "        // Write your code here\n        return\
    \ array;", "        if (array.Count == 0) {\n            return array;\n     \
    \   }\n        if (array.Count == 1) {\n            return array;\n        }\n\
    \        if (array.Count == 2) {\n            if (array[0] > array[1]) {\n   \
    \             long temp = array[0];\n                array[0] = array[1];\n  \
    \              array[1] = temp;\n            }\n            return array;\n  \
    \      }\n        if ((array[0] + array[array.Count - 1]) % 2 == 0) {\n      \
    \      array.Sort();\n            array.Reverse();\n        } else {\n       \
    \     array.Sort();\n        }\n        return array;", "        // Your code\
    \ goes here\n        return array;", "        if (array.Count == 0) {\n      \
    \      return array;\n        }\n        if (array.Count == 1) {\n           \
    \ return array;\n        }\n        if (array.Count == 2) {\n            if (array[0]\
    \ > array[1]) {\n                var temp = array[0];\n                array[0]\
    \ = array[1];\n                array[1] = temp;\n            }\n            return\
    \ array;\n        }\n        var sum = array[0] + array[array.Count - 1];\n  \
    \      if (sum % 2 == 0) {\n            array.Sort((a, b) => b.CompareTo(a));\n\
    \        } else {\n            array.Sort((a, b) => a.CompareTo(b));\n       \
    \ }\n        return array;", "        List<long> result = new List<long>();\n\
    \        if (array.Count == 0) {\n            return result;\n        }\n    \
    \    if (array.Count == 1) {\n            result.Add(array[0]);\n            return\
    \ result;\n        }\n        if ((array[0] + array[array.Count - 1]) % 2 == 0)\
    \ {\n            array.Sort();\n            array.Reverse();\n        } else {\n\
    \            array.Sort();\n        }\n        return array;", "        // your\
    \ code here\n        return array;", "        // Write your code here.\n     \
    \   return array;", "        var sum = array[0] + array[array.Count - 1];\n  \
    \      var sorted = array.OrderBy(x => x).ToList();\n        if (sum % 2 == 0)\
    \ {\n            sorted.Reverse();\n        }\n        return sorted;", "    \
    \    if (array.Count == 0) {\n            return array;\n        }\n        if\
    \ (array.Count == 1) {\n            return array;\n        }\n        if ((array[0]\
    \ + array[array.Count - 1]) % 2 == 0) {\n            array.Sort();\n         \
    \   array.Reverse();\n        } else {\n            array.Sort();\n        }\n\
    \        return array;", "        // Write your code here\n        return array;",
  "        if (array.Count == 0) {\n            return array;\n        }\n       \
    \ if (array.Count == 1) {\n            return array;\n        }\n        if ((array[0]\
    \ + array[array.Count - 1]) % 2 == 0) {\n            array.Sort();\n         \
    \   array.Reverse();\n        } else {\n            array.Sort();\n        }\n\
    \        return array;", "        List<long> result = new List<long>();\n    \
    \    if (array.Count == 0) {\n            return result;\n        }\n        if\
    \ (array.Count == 1) {\n            result.Add(array[0]);\n            return\
    \ result;\n        }\n        long sum = array[0] + array[array.Count - 1];\n\
    \        if (sum % 2 == 0) {\n            array.Sort();\n            array.Reverse();\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        // Your code goes here\n        return array;", "        // Write your\
    \ code here.\n        return array;", '        return array;', "        // Your\
    \ code goes here\n        return array;", "        List<long> result = new List<long>();\n\
    \        if (array.Count == 0) {\n            return result;\n        }\n    \
    \    if (array.Count == 1) {\n            result.Add(array[0]);\n            return\
    \ result;\n        }\n        long sum = array[0] + array[array.Count - 1];\n\
    \        if (sum % 2 == 0) {\n            array.Sort();\n            array.Reverse();\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        if (array.Count == 0) return array;\n        if (array.Count == 1) return\
    \ array;\n        if (array.Count == 2) {\n            if (array[0] > array[1])\
    \ {\n                var temp = array[0];\n                array[0] = array[1];\n\
    \                array[1] = temp;\n            }\n            return array;\n\
    \        }\n        var sum = array[0] + array[array.Count - 1];\n        if (sum\
    \ % 2 == 0) {\n            array.Sort((a, b) => (int)(b - a));\n        } else\
    \ {\n            array.Sort((a, b) => (int)(a - b));\n        }\n        return\
    \ array;", "        List<long> result = new List<long>();\n        if (array.Count\
    \ == 0) {\n            return result;\n        }\n        if (array.Count == 1)\
    \ {\n            result.Add(array[0]);\n            return result;\n        }\n\
    \        if ((array[0] + array[array.Count - 1]) % 2 == 0) {\n            array.Sort();\n\
    \            array.Reverse();\n        } else {\n            array.Sort();\n \
    \       }\n        return array;", "        List<long> result = new List<long>();\n\
    \        if (array.Count == 0) {\n            return result;\n        }\n    \
    \    if (array.Count == 1) {\n            result.Add(array[0]);\n            return\
    \ result;\n        }\n        if ((array[0] + array[array.Count - 1]) % 2 == 0)\
    \ {\n            array.Sort();\n            array.Reverse();\n        } else {\n\
    \            array.Sort();\n        }\n        return array;", "        // Write\
    \ your code here\n        return null;", "        // Write your code here\n  \
    \      return array;", "        // Write your code here\n        return null;",
  "        // Write your code here.\n        return array;", "        if (array.Count\
    \ == 0) {\n            return array;\n        }\n        if (array.Count == 1)\
    \ {\n            return array;\n        }\n        if (array.Count == 2) {\n \
    \           if (array[0] > array[1]) {\n                long temp = array[0];\n\
    \                array[0] = array[1];\n                array[1] = temp;\n    \
    \        }\n            return array;\n        }\n        if ((array[0] + array[array.Count\
    \ - 1]) % 2 == 0) {\n            array.Sort();\n            array.Reverse();\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        List<long> result = new List<long>();\n        if (array.Count == 0) return\
    \ result;\n        if (array.Count == 1) return array;\n        if ((array[0]\
    \ + array[array.Count - 1]) % 2 == 0) {\n            array.Sort();\n         \
    \   array.Reverse();\n        } else {\n            array.Sort();\n        }\n\
    \        return array;", "        List<long> result = new List<long>();\n    \
    \    if (array.Count == 0) {\n            return result;\n        }\n        if\
    \ (array.Count == 1) {\n            result.Add(array[0]);\n            return\
    \ result;\n        }\n        int sum = (int)(array[0] + array[array.Count - 1]);\n\
    \        if (sum % 2 == 0) {\n            array.Sort();\n            array.Reverse();\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        List<long> sorted = new List<long>();\n        if (array.Count == 0) {\n\
    \            return sorted;\n        }\n        if (array.Count == 1) {\n    \
    \        sorted.Add(array[0]);\n            return sorted;\n        }\n      \
    \  if ((array[0] + array[array.Count - 1]) % 2 == 0) {\n            sorted = array.OrderByDescending(x\
    \ => x).ToList();\n        } else {\n            sorted = array.OrderBy(x => x).ToList();\n\
    \        }\n        return sorted;", "        // TODO: Implement this method\n\
    \        return array;", "        if (array.Count == 0) return array;\n      \
    \  if (array.Count == 1) return array;\n        if (array.Count == 2) {\n    \
    \        if (array[0] > array[1]) {\n                long temp = array[0];\n \
    \               array[0] = array[1];\n                array[1] = temp;\n     \
    \       }\n            return array;\n        }\n        long sum = array[0] +\
    \ array[array.Count - 1];\n        if (sum % 2 == 0) {\n            array.Sort();\n\
    \            array.Reverse();\n        } else {\n            array.Sort();\n \
    \       }\n        return array;", "        if (array.Count == 0) {\n        \
    \    return array;\n        }\n        if (array.Count == 1) {\n            return\
    \ array;\n        }\n        if (array.Count == 2) {\n            if (array[0]\
    \ > array[1]) {\n                long temp = array[0];\n                array[0]\
    \ = array[1];\n                array[1] = temp;\n            }\n            return\
    \ array;\n        }\n        if ((array[0] + array[array.Count - 1]) % 2 == 0)\
    \ {\n            return SortArrayDescending(array);\n        } else {\n      \
    \      return SortArrayAscending(array);\n        }", "        // Your code goes\
    \ here\n        return array;", "        if (array.Count == 0) return array;\n\
    \        if (array.Count == 1) return array;\n        if (array.Count == 2) {\n\
    \            if (array[0] > array[1]) {\n                long temp = array[0];\n\
    \                array[0] = array[1];\n                array[1] = temp;\n    \
    \        }\n            return array;\n        }\n        if ((array[0] + array[array.Count\
    \ - 1]) % 2 == 0) {\n            array.Sort((a, b) => (int)(b - a));\n       \
    \ } else {\n            array.Sort((a, b) => (int)(a - b));\n        }\n     \
    \   return array;", "        // Your code goes here\n        return array;", " \
    \       List<long> result = new List<long>();\n        if (array.Count == 0) return\
    \ result;\n        if (array.Count == 1) return array;\n        if ((array[0]\
    \ + array[array.Count - 1]) % 2 == 0) {\n            array.Sort();\n         \
    \   array.Reverse();\n        } else {\n            array.Sort();\n        }\n\
    \        return array;", "        // Write your code here.\n        return array;",
  "        // your code here\n        return array;", "        // Your code here\n\
    \        return array;", "        // Your code here\n        return array;", " \
    \       if (array.Count == 0) {\n            return array;\n        }\n      \
    \  if (array.Count == 1) {\n            return array;\n        }\n        if (array.Count\
    \ == 2) {\n            if (array[0] > array[1]) {\n                long temp =\
    \ array[0];\n                array[0] = array[1];\n                array[1] =\
    \ temp;\n            }\n            return array;\n        }\n        if ((array[0]\
    \ + array[array.Count - 1]) % 2 == 0) {\n            array.Sort();\n         \
    \   array.Reverse();\n        } else {\n            array.Sort();\n        }\n\
    \        return array;", "        if (array.Count == 0) {\n            return\
    \ array;\n        }\n        if (array.Count == 1) {\n            return array;\n\
    \        }\n        if (array.Count == 2) {\n            if (array[0] > array[1])\
    \ {\n                long temp = array[0];\n                array[0] = array[1];\n\
    \                array[1] = temp;\n            }\n            return array;\n\
    \        }\n        if ((array[0] + array[array.Count - 1]) % 2 == 0) {\n    \
    \        array.Sort();\n            array.Reverse();\n        } else {\n     \
    \       array.Sort();\n        }\n        return array;", "        if (array.Count\
    \ == 0) return array;\n        if (array.Count == 1) return array;\n        if\
    \ (array.Count == 2) {\n            if (array[0] > array[1]) {\n             \
    \   var temp = array[0];\n                array[0] = array[1];\n             \
    \   array[1] = temp;\n            }\n            return array;\n        }\n  \
    \      var sum = array[0] + array[array.Count - 1];\n        var isOdd = sum %\
    \ 2 == 1;\n        var sorted = array.OrderBy(x => x).ToList();\n        if (isOdd)\
    \ return sorted;\n        sorted.Reverse();\n        return sorted;", "      \
    \  // Write your code here\n        return array;", "        if (array.Count ==\
    \ 0) return array;\n        if (array.Count == 1) return array;\n        if (array.Count\
    \ == 2) {\n            if (array[0] > array[1]) {\n                var temp =\
    \ array[0];\n                array[0] = array[1];\n                array[1] =\
    \ temp;\n            }\n            return array;\n        }\n        var sum\
    \ = array[0] + array[array.Count - 1];\n        if (sum % 2 == 0) {\n        \
    \    array.Sort();\n            array.Reverse();\n        } else {\n         \
    \   array.Sort();\n        }\n        return array;", "        // Your code goes\
    \ here.\n        return null;", "        // your code here\n        return array;",
  "        // Write your code here\n        return array;", "        // Your code\
    \ goes here\n        return array;", "        // Write your code here\n      \
    \  return array;", "        if (array.Count == 0) {\n            return array;\n\
    \        }\n        if (array.Count == 1) {\n            return array;\n     \
    \   }\n        if ((array[0] + array[array.Count - 1]) % 2 == 0) {\n         \
    \   array.Sort();\n            array.Reverse();\n        } else {\n          \
    \  array.Sort();\n        }\n        return array;", "        if (array.Count\
    \ == 0) {\n            return array;\n        }\n        if (array.Count == 1)\
    \ {\n            return array;\n        }\n        if ((array[0] + array[array.Count\
    \ - 1]) % 2 == 0) {\n            array.Sort();\n            array.Reverse();\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        if (array.Count == 0) {\n            return array;\n        }\n       \
    \ if (array.Count == 1) {\n            return array;\n        }\n        if (array.Count\
    \ == 2) {\n            if (array[0] > array[1]) {\n                long temp =\
    \ array[0];\n                array[0] = array[1];\n                array[1] =\
    \ temp;\n            }\n            return array;\n        }\n        if ((array[0]\
    \ + array[array.Count - 1]) % 2 == 0) {\n            array.Sort();\n         \
    \   array.Reverse();\n        } else {\n            array.Sort();\n        }\n\
    \        return array;", "        if (array.Count == 0) {\n            return\
    \ array;\n        }\n        if (array.Count == 1) {\n            return array;\n\
    \        }\n        if (array.Count == 2) {\n            if (array[0] > array[1])\
    \ {\n                long temp = array[0];\n                array[0] = array[1];\n\
    \                array[1] = temp;\n            }\n            return array;\n\
    \        }\n        if ((array[0] + array[array.Count - 1]) % 2 == 0) {\n    \
    \        array.Sort();\n            array.Reverse();\n        } else {\n     \
    \       array.Sort();\n        }\n        return array;", "        if (array.Count\
    \ == 0) {\n            return array;\n        }\n        if (array.Count == 1)\
    \ {\n            return array;\n        }\n        if (array.Count == 2) {\n \
    \           if (array[0] > array[1]) {\n                var temp = array[0];\n\
    \                array[0] = array[1];\n                array[1] = temp;\n    \
    \        }\n            return array;\n        }\n        if ((array[0] + array[array.Count\
    \ - 1]) % 2 == 0) {\n            array.Sort();\n            array.Reverse();\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        List<long> result = new List<long>();\n        if (array.Count == 0) {\n\
    \            return result;\n        }\n        if (array.Count == 1) {\n    \
    \        result.Add(array[0]);\n            return result;\n        }\n      \
    \  if ((array[0] + array[array.Count - 1]) % 2 == 0) {\n            array.Sort();\n\
    \            array.Reverse();\n            return array;\n        }\n        array.Sort();\n\
    \        return array;", "        // TODO: Implement this method\n        return\
    \ array;", "        if (array.Count == 0) {\n            return array;\n     \
    \   }\n        if (array.Count == 1) {\n            return array;\n        }\n\
    \        if (array.Count == 2) {\n            if (array[0] > array[1]) {\n   \
    \             var temp = array[0];\n                array[0] = array[1];\n   \
    \             array[1] = temp;\n            }\n            return array;\n   \
    \     }\n        var first = array[0];\n        var last = array[array.Count -\
    \ 1];\n        var sum = first + last;\n        if (sum % 2 == 0) {\n        \
    \    array.Sort((a, b) => b.CompareTo(a));\n        } else {\n            array.Sort((a,\
    \ b) => a.CompareTo(b));\n        }\n        return array;", "        var sum\
    \ = array[0] + array[array.Count - 1];\n        if (sum % 2 == 0) {\n        \
    \    array.Sort((a, b) => b.CompareTo(a));\n        } else {\n            array.Sort();\n\
    \        }\n        return array;", "        if (array.Count == 0) {\n       \
    \     return array;\n        }\n        if (array.Count == 1) {\n            return\
    \ array;\n        }\n        var sum = array[0] + array[array.Count - 1];\n  \
    \      var isEven = sum % 2 == 0;\n        if (isEven) {\n            array.Sort((a,\
    \ b) => (int)(b - a));\n        } else {\n            array.Sort((a, b) => (int)(a\
    \ - b));\n        }\n        return array;", "        // Write your code here\n\
    \        return null;", "        // Write your code here\n        return array;",
  "        if (array.Count == 0) {\n            return array;\n        }\n       \
    \ if (array.Count == 1) {\n            return array;\n        }\n        if ((array[0]\
    \ + array[array.Count - 1]) % 2 == 0) {\n            array.Sort();\n         \
    \   array.Reverse();\n        } else {\n            array.Sort();\n        }\n\
    \        return array;", "        List<long> result = new List<long>();\n    \
    \    if (array.Count == 0) {\n            return result;\n        }\n        if\
    \ (array.Count == 1) {\n            result.Add(array[0]);\n            return\
    \ result;\n        }\n        if ((array[0] + array[array.Count - 1]) % 2 == 0)\
    \ {\n            array.Sort();\n            array.Reverse();\n            return\
    \ array;\n        }\n        array.Sort();\n        return array;", "        List<long>\
    \ result = new List<long>();\n        if (array.Count == 0) return result;\n \
    \       if (array.Count == 1) return array;\n        if ((array[0] + array[array.Count\
    \ - 1]) % 2 == 0) {\n            array.Sort();\n            array.Reverse();\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        List<long> result = new List<long>();\n        if (array.Count == 0) {\n\
    \            return result;\n        }\n        if (array.Count == 1) {\n    \
    \        result.Add(array[0]);\n            return result;\n        }\n      \
    \  if ((array[0] + array[array.Count - 1]) % 2 == 0) {\n            array.Sort();\n\
    \            array.Reverse();\n        } else {\n            array.Sort();\n \
    \       }\n        return array;", "        if (array.Count == 0) {\n        \
    \    return array;\n        }\n        if (array.Count == 1) {\n            return\
    \ array;\n        }\n        if (array.Count == 2) {\n            if (array[0]\
    \ > array[1]) {\n                long temp = array[0];\n                array[0]\
    \ = array[1];\n                array[1] = temp;\n            }\n            return\
    \ array;\n        }\n        List<long> left = new List<long>();\n        List<long>\
    \ right = new List<long>();\n        for (int i = 0; i < array.Count; i++) {\n\
    \            if (i < array.Count / 2) {\n                left.Add(array[i]);\n\
    \            } else {\n                right.Add(array[i]);\n            }\n \
    \       }\n        left = SortArray(left);\n        right = SortArray(right);\n\
    \        return Merge(left, right);", "        if (array.Count == 0) return array;\n\
    \        if (array.Count == 1) return array;\n        if (array.Count == 2) {\n\
    \            if (array[0] > array[1]) {\n                long temp = array[0];\n\
    \                array[0] = array[1];\n                array[1] = temp;\n    \
    \        }\n            return array;\n        }\n        if ((array[0] + array[array.Count\
    \ - 1]) % 2 == 0) {\n            array.Sort();\n            array.Reverse();\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        // Your code goes here\n        return array;", "        // Write your\
    \ code here\n        return array;", "        // Your code goes here.\n      \
    \  return array;", "        if (array.Count == 0) {\n            return array;\n\
    \        }\n        if (array.Count == 1) {\n            return array;\n     \
    \   }\n        if ((array[0] + array[array.Count - 1]) % 2 == 0) {\n         \
    \   array.Sort();\n            array.Reverse();\n        } else {\n          \
    \  array.Sort();\n        }\n        return array;", "        var result = new\
    \ List<long>();\n        if (array.Count == 0) return result;\n        if (array.Count\
    \ == 1) return array;\n        var sum = array[0] + array[array.Count - 1];\n\
    \        if (sum % 2 == 0) {\n            result = array.OrderByDescending(x =>\
    \ x).ToList();\n        } else {\n            result = array.OrderBy(x => x).ToList();\n\
    \        }\n        return result;", "        // your code here\n        return\
    \ array;", "        if (array.Count == 0) {\n            return array;\n     \
    \   }\n        if (array.Count == 1) {\n            return array;\n        }\n\
    \        if ((array[0] + array[array.Count - 1]) % 2 == 0) {\n            array.Sort();\n\
    \            array.Reverse();\n        } else {\n            array.Sort();\n \
    \       }\n        return array;", "        // Write your code here\n        return\
    \ array;", "        if (array.Count == 0) {\n            return array;\n     \
    \   }\n        if (array.Count == 1) {\n            return array;\n        }\n\
    \        if ((array[0] + array[array.Count - 1]) % 2 == 0) {\n            array.Sort();\n\
    \            array.Reverse();\n        } else {\n            array.Sort();\n \
    \       }\n        return array;", "        // Write your code here\n        return\
    \ array;", "        if (array.Count == 0) {\n            return array;\n     \
    \   }\n        if (array.Count == 1) {\n            return array;\n        }\n\
    \        if (array.Count == 2) {\n            if (array[0] > array[1]) {\n   \
    \             long temp = array[0];\n                array[0] = array[1];\n  \
    \              array[1] = temp;\n            }\n            return array;\n  \
    \      }\n        if ((array[0] + array[array.Count - 1]) % 2 == 0) {\n      \
    \      array.Sort();\n            array.Reverse();\n        } else {\n       \
    \     array.Sort();\n        }\n        return array;", "        List<long> result\
    \ = new List<long>();\n        if (array.Count == 0) {\n            return result;\n\
    \        }\n        if (array.Count == 1) {\n            result.Add(array[0]);\n\
    \            return result;\n        }\n        if ((array[0] + array[array.Count\
    \ - 1]) % 2 == 0) {\n            array.Sort();\n            array.Reverse();\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        // Write your code here\n        return array;", "        // your code\
    \ here\n        return array;", "        if (array.Count == 0) return array;\n\
    \        if (array.Count == 1) return array;\n        if (array.Count == 2) {\n\
    \            if (array[0] > array[1]) {\n                var tmp = array[0];\n\
    \                array[0] = array[1];\n                array[1] = tmp;\n     \
    \       }\n            return array;\n        }\n        var sum = array[0] +\
    \ array[array.Count - 1];\n        if (sum % 2 == 0) {\n            array.Sort((a,\
    \ b) => (int)(b - a));\n        } else {\n            array.Sort((a, b) => (int)(a\
    \ - b));\n        }\n        return array;", "        // TODO: Implement this\
    \ method\n        return null;", "        List<long> result = new List<long>();\n\
    \        if (array.Count == 0) {\n            return result;\n        }\n    \
    \    if (array.Count == 1) {\n            result.Add(array[0]);\n            return\
    \ result;\n        }\n        long sum = array[0] + array[array.Count - 1];\n\
    \        if (sum % 2 == 0) {\n            array.Sort();\n            array.Reverse();\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        if (array.Count == 0) return array;\n        if (array.Count == 1) return\
    \ array;\n        if (array.Count == 2) {\n            if (array[0] > array[1])\
    \ {\n                var temp = array[0];\n                array[0] = array[1];\n\
    \                array[1] = temp;\n            }\n            return array;\n\
    \        }\n        var sum = array[0] + array[array.Count - 1];\n        if (sum\
    \ % 2 == 0) {\n            array.Sort((a, b) => (int)(b - a));\n        } else\
    \ {\n            array.Sort((a, b) => (int)(a - b));\n        }\n        return\
    \ array;", "        // your code here\n        return array;", "        if (array.Count\
    \ == 0) {\n            return array;\n        }\n        if (array.Count == 1)\
    \ {\n            return array;\n        }\n        if (array.Count == 2) {\n \
    \           if (array[0] > array[1]) {\n                long temp = array[0];\n\
    \                array[0] = array[1];\n                array[1] = temp;\n    \
    \        }\n            return array;\n        }\n        if ((array[0] + array[array.Count\
    \ - 1]) % 2 == 0) {\n            array.Sort();\n            array.Reverse();\n\
    \        } else {\n            array.Sort();\n        }\n        return array;",
  "        // Write your code here\n        return array;", "        // your code\
    \ here\n        return array;", "        // your code here\n        return array;",
  "        // Write your code here\n        return array;", "        // Write your\
    \ code here.\n        return null;"]
stop_tokens:
- "\n    }\n"

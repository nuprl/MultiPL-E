language: cs
name: HumanEval_97_multiply
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        long result = 1;\n        while (a > 0) {\n          \
    \  result *= a % 10;\n            a /= 10;\n        }\n        while (b > 0) {\n\
    \            result *= b % 10;\n            b /= 10;\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <daf8c4c5bdb941faa4aaa18a7f857816>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <daf8c4c5bdb941faa4aaa18a7f857816>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a%10)*(b%10);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n    Debug.Assert(Multiply((19L),\
    \ (28L)) == (72L));\n    Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n \
    \   Debug.Assert(Multiply((14L), (-15L)) == (20L));\n    Debug.Assert(Multiply((76L),\
    \ (67L)) == (42L));\n    Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f43add8ae368427fb3ce1b9625c0652d>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a) % 10 * Math.Abs(b) % 10;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1227b9a5090e44159dd576d7c2eb606e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1227b9a5090e44159dd576d7c2eb606e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        long a1 = a % 10;\n        long b1 = b % 10;\n       \
    \ return a1 * b1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf82bbb5b2d4b2b842436defd30b0a6>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        long a1 = a % 10;\n        long b1 = b % 10;\n       \
    \ return a1 * b1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf82bbb5b2d4b2b842436defd30b0a6>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        var a_units = a % 10;\n        var b_units = b % 10;\n\
    \        return a_units * b_units;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n    Debug.Assert(Multiply((19L),\
    \ (28L)) == (72L));\n    Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n \
    \   Debug.Assert(Multiply((14L), (-15L)) == (20L));\n    Debug.Assert(Multiply((76L),\
    \ (67L)) == (42L));\n    Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <86de0a18d2ce4d2893c083a3695bedda>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        // your code here\n        return (a % 10) * (b % 10);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3a1becd935c94e838a639564a1be22a6>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a) % 10 * Math.Abs(b) % 10;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1227b9a5090e44159dd576d7c2eb606e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1227b9a5090e44159dd576d7c2eb606e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        var aa = Math.Abs(a);\n        var bb = Math.Abs(b);\n\
    \        var aaa = aa % 10;\n        var bbb = bb % 10;\n        var result =\
    \ aaa * bbb;\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n    Debug.Assert(Multiply((19L),\
    \ (28L)) == (72L));\n    Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n \
    \   Debug.Assert(Multiply((14L), (-15L)) == (20L));\n    Debug.Assert(Multiply((76L),\
    \ (67L)) == (42L));\n    Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        long a1 = a % 10;\n        long b1 = b % 10;\n       \
    \ return a1 * b1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6bf82bbb5b2d4b2b842436defd30b0a6>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a) % 10 * Math.Abs(b) % 10;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1227b9a5090e44159dd576d7c2eb606e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1227b9a5090e44159dd576d7c2eb606e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        // your code here\n        return (a % 10) * (b % 10);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3a1becd935c94e838a639564a1be22a6>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        var a_str = a.ToString();\n        var b_str = b.ToString();\n\
    \        var a_unit = a_str[a_str.Length - 1];\n        var b_unit = b_str[b_str.Length\
    \ - 1];\n        return int.Parse(a_unit.ToString()) * int.Parse(b_unit.ToString());\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        long result = 0;\n        if (a < 0) {\n            a\
    \ = -a;\n        }\n        if (b < 0) {\n            b = -b;\n        }\n   \
    \     result = a % 10 * b % 10;\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a3fdc6d52918416c9bcc8164960fdbbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a3fdc6d52918416c9bcc8164960fdbbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        // your code here\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L))\
    \ == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <80d6e42d06f54e238ef7d1656d062d79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <80d6e42d06f54e238ef7d1656d062d79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        // your code here\n        return (a%10) * (b%10);\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ebcd2293f51444c86ca9f29b8659060>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a) % 10 * Math.Abs(b) % 10;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1227b9a5090e44159dd576d7c2eb606e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1227b9a5090e44159dd576d7c2eb606e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        // your code here\n        return 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L))\
    \ == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <80d6e42d06f54e238ef7d1656d062d79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <80d6e42d06f54e238ef7d1656d062d79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a%10) * (b%10);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4e4aadc60bd349c98c0977af3497b8a9>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return Math.Abs(a % 10) * Math.Abs(b % 10);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        // your code here\n        return (a % 10) * (b % 10);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Multiply((148L),\
    \ (412L)) == (16L));\n    Debug.Assert(Multiply((19L), (28L)) == (72L));\n   \
    \ Debug.Assert(Multiply((2020L), (1851L)) == (0L));\n    Debug.Assert(Multiply((14L),\
    \ (-15L)) == (20L));\n    Debug.Assert(Multiply((76L), (67L)) == (42L));\n   \
    \ Debug.Assert(Multiply((17L), (27L)) == (49L));\n    Debug.Assert(Multiply((0L),\
    \ (1L)) == (0L));\n    Debug.Assert(Multiply((0L), (0L)) == (0L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3a1becd935c94e838a639564a1be22a6>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // multiply(148, 412) should return 16.\n    //\
    \ multiply(19, 28) should return 72.\n    // multiply(2020, 1851) should return\
    \ 0.\n    // multiply(14,-15) should return 20.\n    public static long Multiply(long\
    \ a, long b) {\n        return (a % 10) * (b % 10);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Multiply((148L), (412L)) == (16L));\n\
    \    Debug.Assert(Multiply((19L), (28L)) == (72L));\n    Debug.Assert(Multiply((2020L),\
    \ (1851L)) == (0L));\n    Debug.Assert(Multiply((14L), (-15L)) == (20L));\n  \
    \  Debug.Assert(Multiply((76L), (67L)) == (42L));\n    Debug.Assert(Multiply((17L),\
    \ (27L)) == (49L));\n    Debug.Assert(Multiply((0L), (1L)) == (0L));\n    Debug.Assert(Multiply((0L),\
    \ (0L)) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc1006b5c8294961a8a952c4188174b0>:0 \n"
  stdout: ''
  timestamp: 1659799107

name: HumanEval_74_total_match
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Write a function that accepts two lists of strings and returns\
  \ the list that has \n    // total number of chars in the all strings of the list\
  \ less than the other list.\n    // if the two lists have the same number of chars,\
  \ return the first list.\n    // Examples\n    // total_match([], []) \u279E []\n\
  \    // total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n    // total_match(['hi',\
  \ 'admin'], ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n    // total_match(['hi',\
  \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n    // total_match(['4'],\
  \ ['1', '2', '3', '4', '5']) \u279E ['4']\n    public static List<string> TotalMatch(List<string>\
  \ lst1, List<string> lst2) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(TotalMatch((new\
  \ List<string>()), (new List<string>())).Equals((new List<string>())));\n    Debug.Assert(TotalMatch((new\
  \ List<string>(new string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new\
  \ string[]{(string)\"hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"\
  hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
  hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hi\", (string)\"\
  hi\", (string)\"admin\", (string)\"project\"}))).Equals((new List<string>(new string[]{(string)\"\
  hi\", (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
  \ string[]{(string)\"4\"})), (new List<string>(new string[]{(string)\"1\", (string)\"\
  2\", (string)\"3\", (string)\"4\", (string)\"5\"}))).Equals((new List<string>(new\
  \ string[]{(string)\"4\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new\
  \ string[]{(string)\"hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"\
  hI\", (string)\"Hi\"}))).Equals((new List<string>(new string[]{(string)\"hI\", (string)\"\
  Hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
  hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
  hi\", (string)\"hi\"}))).Equals((new List<string>(new string[]{(string)\"hI\", (string)\"\
  hi\", (string)\"hi\"}))));\n    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"\
  hi\", (string)\"admin\"})), (new List<string>(new string[]{(string)\"hI\", (string)\"\
  hi\", (string)\"hii\"}))).Equals((new List<string>(new string[]{(string)\"hi\",\
  \ (string)\"admin\"}))));\n    Debug.Assert(TotalMatch((new List<string>()), (new\
  \ List<string>(new string[]{(string)\"this\"}))).Equals((new List<string>())));\n\
  \    Debug.Assert(TotalMatch((new List<string>(new string[]{(string)\"this\"})),\
  \ (new List<string>())).Equals((new List<string>())));\n    }\n\n}\n"
completions: ['        return lst1.Sum(x => x.Length) < lst2.Sum(x => x.Length) ?
    lst1 : lst2;', "        int lst1_total = 0;\n        int lst2_total = 0;\n   \
    \     foreach (string s in lst1) {\n            lst1_total += s.Length;\n    \
    \    }\n        foreach (string s in lst2) {\n            lst2_total += s.Length;\n\
    \        }\n        if (lst1_total < lst2_total) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }", "        int lst1Total\
    \ = 0;\n        int lst2Total = 0;\n        foreach (string s in lst1) {\n   \
    \         lst1Total += s.Length;\n        }\n        foreach (string s in lst2)\
    \ {\n            lst2Total += s.Length;\n        }\n        if (lst1Total < lst2Total)\
    \ {\n            return lst1;\n        } else {\n            return lst2;\n  \
    \      }", "        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }", "        int lst1_total\
    \ = 0;\n        int lst2_total = 0;\n        foreach (string s in lst1) {\n  \
    \          lst1_total += s.Length;\n        }\n        foreach (string s in lst2)\
    \ {\n            lst2_total += s.Length;\n        }\n        if (lst1_total <\
    \ lst2_total) {\n            return lst1;\n        } else {\n            return\
    \ lst2;\n        }", "        int lst1_total = 0;\n        int lst2_total = 0;\n\
    \        foreach (string s in lst1) {\n            lst1_total += s.Length;\n \
    \       }\n        foreach (string s in lst2) {\n            lst2_total += s.Length;\n\
    \        }\n        if (lst1_total < lst2_total) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }", "        int lst1Count\
    \ = 0;\n        int lst2Count = 0;\n        foreach (string s in lst1) {\n   \
    \         lst1Count += s.Length;\n        }\n        foreach (string s in lst2)\
    \ {\n            lst2Count += s.Length;\n        }\n        if (lst1Count < lst2Count)\
    \ {\n            return lst1;\n        } else {\n            return lst2;\n  \
    \      }", "        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string str in lst1) {\n            lst1Total += str.Length;\n        }\n  \
    \      foreach (string str in lst2) {\n            lst2Total += str.Length;\n\
    \        }\n        if (lst1Total == lst2Total) {\n            return lst1;\n\
    \        } else if (lst1Total < lst2Total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }", "        int lst1Total = 0;\n\
    \        int lst2Total = 0;\n        foreach (string s in lst1) {\n          \
    \  lst1Total += s.Length;\n        }\n        foreach (string s in lst2) {\n \
    \           lst2Total += s.Length;\n        }\n        if (lst1Total < lst2Total)\
    \ {\n            return lst1;\n        } else {\n            return lst2;\n  \
    \      }", "        int lst1Sum = 0;\n        int lst2Sum = 0;\n        foreach\
    \ (string s in lst1) {\n            lst1Sum += s.Length;\n        }\n        foreach\
    \ (string s in lst2) {\n            lst2Sum += s.Length;\n        }\n        if\
    \ (lst1Sum < lst2Sum) {\n            return lst1;\n        } else {\n        \
    \    return lst2;\n        }", "        int lst1Total = 0;\n        int lst2Total\
    \ = 0;\n        foreach (string word in lst1) {\n            lst1Total += word.Length;\n\
    \        }\n        foreach (string word in lst2) {\n            lst2Total +=\
    \ word.Length;\n        }\n        if (lst1Total == lst2Total) {\n           \
    \ return lst1;\n        } else if (lst1Total < lst2Total) {\n            return\
    \ lst1;\n        } else {\n            return lst2;\n        }", "        int\
    \ sum1 = 0;\n        int sum2 = 0;\n        foreach (string s in lst1) {\n   \
    \         sum1 += s.Length;\n        }\n        foreach (string s in lst2) {\n\
    \            sum2 += s.Length;\n        }\n        if (sum1 < sum2) {\n      \
    \      return lst1;\n        } else {\n            return lst2;\n        }", " \
    \       int lst1Total = 0;\n        int lst2Total = 0;\n        foreach (string\
    \ str in lst1) {\n            lst1Total += str.Length;\n        }\n        foreach\
    \ (string str in lst2) {\n            lst2Total += str.Length;\n        }\n  \
    \      if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }", "        int lst1Total = 0;\n     \
    \   int lst2Total = 0;\n        foreach (string item in lst1) {\n            lst1Total\
    \ += item.Length;\n        }\n        foreach (string item in lst2) {\n      \
    \      lst2Total += item.Length;\n        }\n        if (lst1Total < lst2Total)\
    \ {\n            return lst1;\n        } else {\n            return lst2;\n  \
    \      }", "        int lst1Total = 0;\n        int lst2Total = 0;\n        foreach\
    \ (string item in lst1) {\n            lst1Total += item.Length;\n        }\n\
    \        foreach (string item in lst2) {\n            lst2Total += item.Length;\n\
    \        }\n        return lst1Total < lst2Total ? lst1 : lst2Total < lst1Total\
    \ ? lst2 : lst1;", "        int lst1Total = 0;\n        int lst2Total = 0;\n \
    \       foreach (string s in lst1) {\n            lst1Total += s.Length;\n   \
    \     }\n        foreach (string s in lst2) {\n            lst2Total += s.Length;\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }", "        int lst1_total\
    \ = 0;\n        int lst2_total = 0;\n        foreach (string s in lst1) {\n  \
    \          lst1_total += s.Length;\n        }\n        foreach (string s in lst2)\
    \ {\n            lst2_total += s.Length;\n        }\n        if (lst1_total <\
    \ lst2_total) {\n            return lst1;\n        } else {\n            return\
    \ lst2;\n        }", "        int lst1_total = 0;\n        int lst2_total = 0;\n\
    \        foreach (string s in lst1) {\n            lst1_total += s.Length;\n \
    \       }\n        foreach (string s in lst2) {\n            lst2_total += s.Length;\n\
    \        }\n        if (lst1_total < lst2_total) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }", "        int total1 =\
    \ 0;\n        int total2 = 0;\n        foreach (string s in lst1) {\n        \
    \    total1 += s.Length;\n        }\n        foreach (string s in lst2) {\n  \
    \          total2 += s.Length;\n        }\n        if (total1 < total2) {\n  \
    \          return lst1;\n        } else if (total2 < total1) {\n            return\
    \ lst2;\n        } else {\n            return lst1;\n        }", "        int\
    \ lst1Total = 0;\n        int lst2Total = 0;\n        foreach (string str in lst1)\
    \ {\n            lst1Total += str.Length;\n        }\n        foreach (string\
    \ str in lst2) {\n            lst2Total += str.Length;\n        }\n        if\
    \ (lst1Total < lst2Total) {\n            return lst1;\n        } else {\n    \
    \        return lst2;\n        }"]
stop_tokens:
- "\n    }\n"

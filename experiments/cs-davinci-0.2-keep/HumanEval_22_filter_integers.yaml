name: HumanEval_22_filter_integers
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Filter given list of any python values only for integers\n \
  \   // >>> filter_integers(['a', 3.14, 5])\n    // [5]\n    // >>> filter_integers([1,\
  \ 2, 3, 'abc', {}, []])\n    // [1, 2, 3]\n    public static List<long> FilterIntegers(List<object>\
  \ values) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new\
  \ List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new\
  \ List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new\
  \ List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new\
  \ List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new\
  \ long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
completions: ['        return values.Where(x => x is long).Select(x => (long)x).ToList();',
  "        List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", '        return values.Where(x
    => x is long).Select(x => (long)x).ToList();', '        return values.OfType<long>().ToList();',
  "        List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is long) {\n                result.Add((long)value);\n          \
    \  }\n        }\n        return result;", '        return values.Where(x => x
    is long).Select(x => (long)x).ToList();', "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is long) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", '        return values.Where(x
    => x is long).Select(x => (long)x).ToList();', "        List<long> result = new\
    \ List<long>();\n        foreach (object value in values) {\n            if (value\
    \ is long) {\n                result.Add((long)value);\n            }\n      \
    \  }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is long) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", '        return values.Where(x => x is long).Select(x => (long)x).ToList();',
  '        return values.Where(x => x is long).Select(x => (long)x).ToList();', '        return
    values.Where(x => x is long).Select(x => (long)x).ToList();', '        return
    values.OfType<long>().ToList();', '        return values.Where(v => v is long).Select(v
    => (long)v).ToList();', "        List<long> result = new List<long>();\n     \
    \   foreach (object value in values) {\n            if (value is long) {\n   \
    \             result.Add((long)value);\n            }\n        }\n        return\
    \ result;", '        return values.Where(v => v is long).Select(v => (long)v).ToList();',
  "        List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is long) {\n                result.Add((long)value);\n          \
    \  }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is long) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", '        return values.Where(x
    => x is long).Select(x => (long)x).ToList();', '        return values.OfType<long>().ToList();',
  '        return values.Where(x => x is long).Select(x => (long)x).ToList();', " \
    \       List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is long) {\n                result.Add((long)value);\n          \
    \  }\n        }\n        return result;", '        return values.Where(x => x
    is long).Select(x => (long)x).ToList();', '        return values.Where(x => x
    is long).Select(x => (long)x).ToList();', '        return values.OfType<long>().ToList();',
  '        return values.Where(x => x is long).Select(x => (long)x).ToList();', " \
    \       var result = new List<long>();\n        foreach (var value in values)\
    \ {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", '        return values.OfType<long>().ToList();',
  '        return values.Where(x => x is long).Select(x => (long)x).ToList();', " \
    \       List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is long) {\n                result.Add((long)value);\n          \
    \  }\n        }\n        return result;", '        return values.Where(x => x
    is long).Select(x => (long)x).ToList();', '        return values.OfType<long>().ToList();',
  "        List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", '        return values.OfType<long>().ToList();',
  '        return values.Where(x => x is long).Select(x => (long)x).ToList();', '        return
    values.Where(x => x is long).Select(x => (long)x).ToList();', "        List<long>\
    \ result = new List<long>();\n        foreach (object value in values) {\n   \
    \         if (value is long) {\n                result.Add((long)value);\n   \
    \         }\n        }\n        return result;", '        return values.Where(x
    => x is long).Select(x => (long)x).ToList();', "        List<long> result = new\
    \ List<long>();\n        foreach (object value in values) {\n            if (value\
    \ is long) {\n                result.Add((long)value);\n            }\n      \
    \  }\n        return result;", '        return values.Where(x => x is long).Select(x
    => (long)x).ToList();', '        return values.Where(x => x is long).Select(x
    => (long)x).ToList();', "        List<long> result = new List<long>();\n     \
    \   foreach (object value in values) {\n            if (value is long) {\n   \
    \             result.Add((long)value);\n            }\n        }\n        return\
    \ result;", '        return values.OfType<long>().ToList();', "        List<long>\
    \ result = new List<long>();\n        foreach (object value in values) {\n   \
    \         if (value is long) {\n                result.Add((long)value);\n   \
    \         }\n        }\n        return result;", "        List<long> result =\
    \ new List<long>();\n        foreach (object value in values) {\n            if\
    \ (value is long) {\n                result.Add((long)value);\n            }\n\
    \        }\n        return result;", '        return values.Where(x => x is long).Select(x
    => (long)x).ToList();', "        List<long> result = new List<long>();\n     \
    \   foreach (object value in values) {\n            if (value is long) {\n   \
    \             result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", '        return values.OfType<long>().ToList();',
  '        return values.Where(x => x is long).Select(x => (long)x).ToList();', '        return
    values.Where(x => x is long).Select(x => (long)x).ToList();', '        return
    values.Where(x => x is long).Select(x => (long)x).ToList();', '        return
    values.Where(x => x is long).Select(x => (long)x).ToList();', '        return
    values.Where(x => x is long).Select(x => (long)x).ToList();', "        List<long>\
    \ result = new List<long>();\n        foreach (object value in values) {\n   \
    \         if (value is long) {\n                result.Add((long)value);\n   \
    \         }\n        }\n        return result;", '        return values.Where(x
    => x is long).Select(x => (long)x).ToList();', '        return values.Where(x
    => x is long).Select(x => (long)x).ToList();', '        return values.Where(x
    => x is long).Select(x => (long)x).ToList();', "        var result = new List<long>();\n\
    \        foreach (var value in values) {\n            if (value is long) {\n \
    \               result.Add((long)value);\n            }\n        }\n        return\
    \ result;", '        return values.Where(x => x is long).Select(x => (long)x).ToList();',
  "        List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", '        return values.Where(x
    => x is long).Select(x => (long)x).ToList();', '        return values.Where(x
    => x is long).Select(x => (long)x).ToList();', '        return values.OfType<long>().ToList();',
  "        List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", '        return values.Where(x
    => x is long).Select(x => (long)x).ToList();', '        return values.Where(x
    => x is long).Select(x => (long)x).ToList();', '        return values.OfType<long>().ToList();',
  '        return values.Where(x => x is long).Select(x => (long)x).ToList();', '        return
    values.OfType<long>().ToList();', '        return values.Where(v => v is long).Select(v
    => (long)v).ToList();', '        return values.Where(x => x is long).Select(x
    => (long)x).ToList();', '        return values.Where(x => x is long).Select(x
    => (long)x).ToList();', "        List<long> result = new List<long>();\n     \
    \   foreach (object value in values) {\n            if (value is long) {\n   \
    \             result.Add((long)value);\n            }\n        }\n        return\
    \ result;", '        return values.Where(x => x is long).Select(x => (long)x).ToList();',
  '        return values.OfType<long>().ToList();', "        List<long> result = new\
    \ List<long>();\n        foreach (object value in values) {\n            if (value\
    \ is long) {\n                result.Add((long)value);\n            }\n      \
    \  }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is long) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", '        return values.Where(value => value is long).Select(value
    => (long)value).ToList();', "        List<long> result = new List<long>();\n \
    \       foreach (object value in values) {\n            if (value is long) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", '        return values.Where(x => x is long).Select(x => (long)x).ToList();',
  "        List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is long) {\n                result.Add((long)value);\n          \
    \  }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is long) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", '        return values.Where(x => x is long).Select(x => (long)x).ToList();',
  '        return values.OfType<long>().ToList();', "        List<long> result = new\
    \ List<long>();\n        foreach (object value in values) {\n            if (value\
    \ is long) {\n                result.Add((long)value);\n            }\n      \
    \  }\n        return result;", '        return values.Where(x => x is long).Select(x
    => (long)x).ToList();', "        List<long> result = new List<long>();\n     \
    \   foreach (object value in values) {\n            if (value is long) {\n   \
    \             result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", '        return values.Where(v
    => v is long).Select(v => (long)v).ToList();', '        return values.OfType<long>().ToList();',
  "        List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is long) {\n                result.Add((long)value);\n          \
    \  }\n        }\n        return result;", '        return values.Where(v => v
    is long).Select(v => (long)v).ToList();', '        return values.Where(x => x
    is long).Select(x => (long)x).ToList();', "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is long) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;"]
stop_tokens:
- "\n    }\n"

name: HumanEval_156_int_to_mini_roman
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given a positive integer, obtain its roman numeral equivalent\
  \ as a string,\n    // and return it in lowercase.\n    // Restrictions: 1 <= num\
  \ <= 1000\n    // Examples:\n    // >>> int_to_mini_roman(19) == 'xix'\n    // >>>\
  \ int_to_mini_roman(152) == 'clii'\n    // >>> int_to_mini_roman(426) == 'cdxxvi'\n\
  \    public static string IntToMiniRoman(long number) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(IntToMiniRoman((19L)).Equals((\"\
  xix\")));\n    Debug.Assert(IntToMiniRoman((152L)).Equals((\"clii\")));\n    Debug.Assert(IntToMiniRoman((251L)).Equals((\"\
  ccli\")));\n    Debug.Assert(IntToMiniRoman((426L)).Equals((\"cdxxvi\")));\n   \
  \ Debug.Assert(IntToMiniRoman((500L)).Equals((\"d\")));\n    Debug.Assert(IntToMiniRoman((1L)).Equals((\"\
  i\")));\n    Debug.Assert(IntToMiniRoman((4L)).Equals((\"iv\")));\n    Debug.Assert(IntToMiniRoman((43L)).Equals((\"\
  xliii\")));\n    Debug.Assert(IntToMiniRoman((90L)).Equals((\"xc\")));\n    Debug.Assert(IntToMiniRoman((94L)).Equals((\"\
  xciv\")));\n    Debug.Assert(IntToMiniRoman((532L)).Equals((\"dxxxii\")));\n   \
  \ Debug.Assert(IntToMiniRoman((900L)).Equals((\"cm\")));\n    Debug.Assert(IntToMiniRoman((994L)).Equals((\"\
  cmxciv\")));\n    Debug.Assert(IntToMiniRoman((1000L)).Equals((\"m\")));\n    }\n\
  \n}\n"
completions: ["        string[] roman = new string[] { \"m\", \"cm\", \"d\", \"cd\"\
    , \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\" };\n     \
    \   int[] decimal_values = new int[] { 1000, 900, 500, 400, 100, 90, 50, 40, 10,\
    \ 9, 5, 4, 1 };\n        StringBuilder result = new StringBuilder();\n       \
    \ for (int i = 0; i < decimal_values.Length; i++) {\n            while (number\
    \ >= decimal_values[i]) {\n                number -= decimal_values[i];\n    \
    \            result.Append(roman[i]);\n            }\n        }\n        return\
    \ result.ToString();", "        var roman = new StringBuilder();\n        var\
    \ digits = new[] {\n            new { Value = 1000, Symbol = \"m\" },\n      \
    \      new { Value = 900, Symbol = \"cm\" },\n            new { Value = 500, Symbol\
    \ = \"d\" },\n            new { Value = 400, Symbol = \"cd\" },\n            new\
    \ { Value = 100, Symbol = \"c\" },\n            new { Value = 90, Symbol = \"\
    xc\" },\n            new { Value = 50, Symbol = \"l\" },\n            new { Value\
    \ = 40, Symbol = \"xl\" },\n            new { Value = 10, Symbol = \"x\" },\n\
    \            new { Value = 9, Symbol = \"ix\" },\n            new { Value = 5,\
    \ Symbol = \"v\" },\n            new { Value = 4, Symbol = \"iv\" },\n       \
    \     new { Value = 1, Symbol = \"i\" },\n        };\n        foreach (var digit\
    \ in digits) {\n            while (number >= digit.Value) {\n                roman.Append(digit.Symbol);\n\
    \                number -= digit.Value;\n            }\n        }\n        return\
    \ roman.ToString();", "        var sb = new StringBuilder();\n        while (number\
    \ > 0) {\n            if (number >= 1000) {\n                sb.Append('m');\n\
    \                number -= 1000;\n            } else if (number >= 900) {\n  \
    \              sb.Append(\"cm\");\n                number -= 900;\n          \
    \  } else if (number >= 500) {\n                sb.Append('d');\n            \
    \    number -= 500;\n            } else if (number >= 400) {\n               \
    \ sb.Append(\"cd\");\n                number -= 400;\n            } else if (number\
    \ >= 100) {\n                sb.Append('c');\n                number -= 100;\n\
    \            } else if (number >= 90) {\n                sb.Append(\"xc\");\n\
    \                number -= 90;\n            } else if (number >= 50) {\n     \
    \           sb.Append('l');\n                number -= 50;\n            } else\
    \ if (number >= 40) {\n                sb.Append(\"xl\");\n                number\
    \ -= 40;\n            } else if (number >= 10) {\n                sb.Append('x');\n\
    \                number -= 10;\n            } else if (number >= 9) {\n      \
    \          sb.Append(\"ix\");\n                number -= 9;\n            } else\
    \ if (number >= 5) {\n                sb.Append('v');\n                number\
    \ -= 5;\n            } else if (number >= 4) {\n                sb.Append(\"iv\"\
    );\n                number -= 4;\n            } else if (number >= 1) {\n    \
    \            sb.Append('i');\n                number -= 1;\n            }\n  \
    \      }\n        return sb.ToString();", "        if (number < 1 || number >\
    \ 1000) {\n            throw new ArgumentOutOfRangeException(\"number\", \"Number\
    \ must be between 1 and 1000\");\n        }\n        var roman = new StringBuilder();\n\
    \        var digits = new[] {\n            new { Value = 100, Symbol = 'c' },\n\
    \            new { Value = 10, Symbol = 'x' },\n            new { Value = 1, Symbol\
    \ = 'i' }\n        };\n        foreach (var digit in digits) {\n            var\
    \ count = number / digit.Value;\n            if (count > 0) {\n              \
    \  if (count == 9) {\n                    roman.Append(digit.Symbol);\n      \
    \              roman.Append((char)(digit.Symbol - 1));\n                } else\
    \ if (count >= 5) {\n                    roman.Append((char)(digit.Symbol - 1));\n\
    \                    roman.Append(new string(digit.Symbol, count - 5));\n    \
    \            } else if (count == 4) {\n                    roman.Append(digit.Symbol);\n\
    \                    roman.Append((char)(digit.Symbol - 1));\n               \
    \ } else {\n                    roman.Append(new string(digit.Symbol, count));\n\
    \                }\n            }\n            number %= digit.Value;\n      \
    \  }\n        return roman.ToString();", "        string result = \"\";\n    \
    \    while (number > 0) {\n            if (number >= 1000) {\n               \
    \ result += \"m\";\n                number -= 1000;\n            } else if (number\
    \ >= 900) {\n                result += \"cm\";\n                number -= 900;\n\
    \            } else if (number >= 500) {\n                result += \"d\";\n \
    \               number -= 500;\n            } else if (number >= 400) {\n    \
    \            result += \"cd\";\n                number -= 400;\n            }\
    \ else if (number >= 100) {\n                result += \"c\";\n              \
    \  number -= 100;\n            } else if (number >= 90) {\n                result\
    \ += \"xc\";\n                number -= 90;\n            } else if (number >=\
    \ 50) {\n                result += \"l\";\n                number -= 50;\n   \
    \         } else if (number >= 40) {\n                result += \"xl\";\n    \
    \            number -= 40;\n            } else if (number >= 10) {\n         \
    \       result += \"x\";\n                number -= 10;\n            } else if\
    \ (number >= 9) {\n                result += \"ix\";\n                number -=\
    \ 9;\n            } else if (number >= 5) {\n                result += \"v\";\n\
    \                number -= 5;\n            } else if (number >= 4) {\n       \
    \         result += \"iv\";\n                number -= 4;\n            } else\
    \ if (number >= 1) {\n                result += \"i\";\n                number\
    \ -= 1;\n            }\n        }\n        return result;", "        var roman\
    \ = new StringBuilder();\n        var digits = new List<int>();\n        while\
    \ (number > 0) {\n            digits.Add((int)(number % 10));\n            number\
    \ /= 10;\n        }\n        digits.Reverse();\n        for (int i = 0; i < digits.Count;\
    \ i++) {\n            var digit = digits[i];\n            if (digit == 0) {\n\
    \                continue;\n            }\n            if (digit <= 3) {\n   \
    \             roman.Append(new string('i', digit));\n            } else if (digit\
    \ == 4) {\n                roman.Append(\"iv\");\n            } else if (digit\
    \ == 5) {\n                roman.Append(\"v\");\n            } else if (digit\
    \ <= 8) {\n                roman.Append(\"v\" + new string('i', digit - 5));\n\
    \            } else if (digit == 9) {\n                roman.Append(\"ix\");\n\
    \            }\n            if (i == 0) {\n                roman.Append(new string('x',\
    \ digits.Count - 1));\n            } else if (i == 1) {\n                roman.Append(new\
    \ string('x', digits.Count - 2));\n            } else if (i == 2) {\n        \
    \        roman.Append(new string('c', digits.Count - 3));\n            } else\
    \ if (i == 3) {\n                roman.Append(new string('m', digits.Count - 4));\n\
    \            }\n        }\n        return roman.ToString();", "        string[]\
    \ roman = new string[] { \"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
    xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\" };\n        int[] arabic = new int[]\
    \ { 1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1 };\n        string result\
    \ = \"\";\n        for (int i = 0; i < arabic.Length; i++) {\n            while\
    \ (number >= arabic[i]) {\n                number -= arabic[i];\n            \
    \    result += roman[i];\n            }\n        }\n        return result;", " \
    \       string[] roman = { \"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\"\
    , \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\" };\n        int[] values = { 1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1 };\n        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < values.Length; i++) {\n\
    \            while (number >= values[i]) {\n                number -= values[i];\n\
    \                result.Append(roman[i]);\n            }\n        }\n        return\
    \ result.ToString();", "        var result = new StringBuilder();\n        while\
    \ (number > 0) {\n            if (number >= 1000) {\n                result.Append('m');\n\
    \                number -= 1000;\n            } else if (number >= 900) {\n  \
    \              result.Append(\"cm\");\n                number -= 900;\n      \
    \      } else if (number >= 500) {\n                result.Append('d');\n    \
    \            number -= 500;\n            } else if (number >= 400) {\n       \
    \         result.Append(\"cd\");\n                number -= 400;\n           \
    \ } else if (number >= 100) {\n                result.Append('c');\n         \
    \       number -= 100;\n            } else if (number >= 90) {\n             \
    \   result.Append(\"xc\");\n                number -= 90;\n            } else\
    \ if (number >= 50) {\n                result.Append('l');\n                number\
    \ -= 50;\n            } else if (number >= 40) {\n                result.Append(\"\
    xl\");\n                number -= 40;\n            } else if (number >= 10) {\n\
    \                result.Append('x');\n                number -= 10;\n        \
    \    } else if (number >= 9) {\n                result.Append(\"ix\");\n     \
    \           number -= 9;\n            } else if (number >= 5) {\n            \
    \    result.Append('v');\n                number -= 5;\n            } else if\
    \ (number >= 4) {\n                result.Append(\"iv\");\n                number\
    \ -= 4;\n            } else if (number >= 1) {\n                result.Append('i');\n\
    \                number -= 1;\n            }\n        }\n        return result.ToString();",
  "        // Your code goes here.\n        return \"\";", "        string result\
    \ = \"\";\n        while (number > 0) {\n            if (number >= 1000) {\n \
    \               result += \"m\";\n                number -= 1000;\n          \
    \  } else if (number >= 900) {\n                result += \"cm\";\n          \
    \      number -= 900;\n            } else if (number >= 500) {\n             \
    \   result += \"d\";\n                number -= 500;\n            } else if (number\
    \ >= 400) {\n                result += \"cd\";\n                number -= 400;\n\
    \            } else if (number >= 100) {\n                result += \"c\";\n \
    \               number -= 100;\n            } else if (number >= 90) {\n     \
    \           result += \"xc\";\n                number -= 90;\n            } else\
    \ if (number >= 50) {\n                result += \"l\";\n                number\
    \ -= 50;\n            } else if (number >= 40) {\n                result += \"\
    xl\";\n                number -= 40;\n            } else if (number >= 10) {\n\
    \                result += \"x\";\n                number -= 10;\n           \
    \ } else if (number >= 9) {\n                result += \"ix\";\n             \
    \   number -= 9;\n            } else if (number >= 5) {\n                result\
    \ += \"v\";\n                number -= 5;\n            } else if (number >= 4)\
    \ {\n                result += \"iv\";\n                number -= 4;\n       \
    \     } else if (number >= 1) {\n                result += \"i\";\n          \
    \      number -= 1;\n            }\n        }\n        return result;", "    \
    \    string[] roman = { \"i\", \"v\", \"x\", \"l\", \"c\", \"d\", \"m\" };\n \
    \       string result = \"\";\n        int i = 0;\n        while (number > 0)\
    \ {\n            int digit = (int)(number % 10);\n            if (digit == 0)\
    \ {\n                // do nothing\n            } else if (digit <= 3) {\n   \
    \             result = new string(roman[i][0], digit) + result;\n            }\
    \ else if (digit == 4) {\n                result = roman[i] + roman[i + 1] + result;\n\
    \            } else if (digit <= 8) {\n                result = roman[i + 1] +\
    \ new string(roman[i][0], digit - 5) + result;\n            } else {\n       \
    \         result = roman[i] + roman[i + 2] + result;\n            }\n        \
    \    number /= 10;\n            i += 2;\n        }\n        return result;", " \
    \       string[] roman = new string[] { \"m\", \"cm\", \"d\", \"cd\", \"c\", \"\
    xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\" };\n        int[] arabic\
    \ = new int[] { 1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1 };\n    \
    \    StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < arabic.Length;\
    \ i++) {\n            while (number >= arabic[i]) {\n                number -=\
    \ arabic[i];\n                sb.Append(roman[i]);\n            }\n        }\n\
    \        return sb.ToString();", "        if (number < 1 || number > 1000) {\n\
    \            throw new ArgumentOutOfRangeException();\n        }\n        var\
    \ roman = new StringBuilder();\n        var digits = new List<int>();\n      \
    \  while (number > 0) {\n            digits.Add((int)(number % 10));\n       \
    \     number /= 10;\n        }\n        for (int i = digits.Count - 1; i >= 0;\
    \ i--) {\n            var digit = digits[i];\n            if (digit == 0) {\n\
    \                continue;\n            }\n            if (digit < 4) {\n    \
    \            roman.Append(new string('i', digit));\n            } else if (digit\
    \ == 4) {\n                roman.Append(\"iv\");\n            } else if (digit\
    \ == 5) {\n                roman.Append(\"v\");\n            } else if (digit\
    \ < 9) {\n                roman.Append(\"v\" + new string('i', digit - 5));\n\
    \            } else {\n                roman.Append(\"ix\");\n            }\n\
    \            if (i == 2) {\n                roman.Append(new string('c', digit));\n\
    \            } else if (i == 1) {\n                roman.Append(new string('x',\
    \ digit));\n            }\n        }\n        return roman.ToString();", "   \
    \     string result = \"\";\n        while (number > 0) {\n            if (number\
    \ >= 1000) {\n                result += \"m\";\n                number -= 1000;\n\
    \            } else if (number >= 900) {\n                result += \"cm\";\n\
    \                number -= 900;\n            } else if (number >= 500) {\n   \
    \             result += \"d\";\n                number -= 500;\n            }\
    \ else if (number >= 400) {\n                result += \"cd\";\n             \
    \   number -= 400;\n            } else if (number >= 100) {\n                result\
    \ += \"c\";\n                number -= 100;\n            } else if (number >=\
    \ 90) {\n                result += \"xc\";\n                number -= 90;\n  \
    \          } else if (number >= 50) {\n                result += \"l\";\n    \
    \            number -= 50;\n            } else if (number >= 40) {\n         \
    \       result += \"xl\";\n                number -= 40;\n            } else if\
    \ (number >= 10) {\n                result += \"x\";\n                number -=\
    \ 10;\n            } else if (number >= 9) {\n                result += \"ix\"\
    ;\n                number -= 9;\n            } else if (number >= 5) {\n     \
    \           result += \"v\";\n                number -= 5;\n            } else\
    \ if (number >= 4) {\n                result += \"iv\";\n                number\
    \ -= 4;\n            } else if (number >= 1) {\n                result += \"i\"\
    ;\n                number -= 1;\n            }\n        }\n        return result;",
  "        if (number < 1 || number > 1000) {\n            throw new ArgumentOutOfRangeException(\"\
    number\");\n        }\n        var sb = new StringBuilder();\n        while (number\
    \ >= 1000) {\n            sb.Append('m');\n            number -= 1000;\n     \
    \   }\n        if (number >= 900) {\n            sb.Append(\"cm\");\n        \
    \    number -= 900;\n        }\n        if (number >= 500) {\n            sb.Append('d');\n\
    \            number -= 500;\n        }\n        if (number >= 400) {\n       \
    \     sb.Append(\"cd\");\n            number -= 400;\n        }\n        while\
    \ (number >= 100) {\n            sb.Append('c');\n            number -= 100;\n\
    \        }\n        if (number >= 90) {\n            sb.Append(\"xc\");\n    \
    \        number -= 90;\n        }\n        if (number >= 50) {\n            sb.Append('l');\n\
    \            number -= 50;\n        }\n        if (number >= 40) {\n         \
    \   sb.Append(\"xl\");\n            number -= 40;\n        }\n        while (number\
    \ >= 10) {\n            sb.Append('x');\n            number -= 10;\n        }\n\
    \        if (number >= 9) {\n            sb.Append(\"ix\");\n            number\
    \ -= 9;\n        }\n        if (number >= 5) {\n            sb.Append('v');\n\
    \            number -= 5;\n        }\n        if (number >= 4) {\n           \
    \ sb.Append(\"iv\");\n            number -= 4;\n        }\n        while (number\
    \ >= 1) {\n            sb.Append('i');\n            number -= 1;\n        }\n\
    \        return sb.ToString();", "        string[] roman = new string[] { \"m\"\
    , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
    iv\", \"i\" };\n        int[] values = new int[] { 1000, 900, 500, 400, 100, 90,\
    \ 50, 40, 10, 9, 5, 4, 1 };\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < values.Length; i++) {\n            while (number\
    \ >= values[i]) {\n                number -= values[i];\n                sb.Append(roman[i]);\n\
    \            }\n        }\n        return sb.ToString();", "        string[] roman\
    \ = new string[] { \"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\"\
    , \"x\", \"ix\", \"v\", \"iv\", \"i\" };\n        int[] arabic = new int[] { 1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1 };\n        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < arabic.Length; i++) {\n\
    \            while (number >= arabic[i]) {\n                number -= arabic[i];\n\
    \                result.Append(roman[i]);\n            }\n        }\n        return\
    \ result.ToString();", "        var roman = new StringBuilder();\n        var\
    \ numeral = new Dictionary<int, string> {\n            { 1, \"i\" },\n       \
    \     { 5, \"v\" },\n            { 10, \"x\" },\n            { 50, \"l\" },\n\
    \            { 100, \"c\" },\n            { 500, \"d\" },\n            { 1000,\
    \ \"m\" }\n        };\n        var numeral_keys = numeral.Keys.ToList();\n   \
    \     numeral_keys.Sort();\n        numeral_keys.Reverse();\n        foreach (var\
    \ key in numeral_keys) {\n            var count = number / key;\n            number\
    \ %= key;\n            if (count == 4) {\n                roman.Append(numeral[key]);\n\
    \                roman.Append(numeral[key * 5]);\n            } else if (count\
    \ == 9) {\n                roman.Append(numeral[key]);\n                roman.Append(numeral[key\
    \ * 10]);\n            } else {\n                if (count >= 5) {\n         \
    \           roman.Append(numeral[key * 5]);\n                    count -= 5;\n\
    \                }\n                for (var i = 0; i < count; i++) {\n      \
    \              roman.Append(numeral[key]);\n                }\n            }\n\
    \        }\n        return roman.ToString();", "        string[] romans = new\
    \ string[] { \"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\"\
    , \"ix\", \"v\", \"iv\", \"i\" };\n        int[] numbers = new int[] { 1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1 };\n        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < numbers.Length; i++) {\n     \
    \       while (number >= numbers[i]) {\n                sb.Append(romans[i]);\n\
    \                number -= numbers[i];\n            }\n        }\n        return\
    \ sb.ToString();", "        string[] roman = new string[] { \"m\", \"cm\", \"\
    d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"\
    \ };\n        int[] values = new int[] { 1000, 900, 500, 400, 100, 90, 50, 40,\
    \ 10, 9, 5, 4, 1 };\n        StringBuilder result = new StringBuilder();\n   \
    \     for (int i = 0; i < values.Length; i++) {\n            while (number >=\
    \ values[i]) {\n                number -= values[i];\n                result.Append(roman[i]);\n\
    \            }\n        }\n        return result.ToString();", "        string[]\
    \ roman = { \"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\"\
    , \"ix\", \"v\", \"iv\", \"i\" };\n        int[] arabic = { 1000, 900, 500, 400,\
    \ 100, 90, 50, 40, 10, 9, 5, 4, 1 };\n        string result = \"\";\n        for\
    \ (int i = 0; i < arabic.Length; i++) {\n            while (number >= arabic[i])\
    \ {\n                number -= arabic[i];\n                result += roman[i];\n\
    \            }\n        }\n        return result;", "        string result = \"\
    \";\n        while (number > 0) {\n            if (number >= 1000) {\n       \
    \         result += \"m\";\n                number -= 1000;\n            } else\
    \ if (number >= 900) {\n                result += \"cm\";\n                number\
    \ -= 900;\n            } else if (number >= 500) {\n                result +=\
    \ \"d\";\n                number -= 500;\n            } else if (number >= 400)\
    \ {\n                result += \"cd\";\n                number -= 400;\n     \
    \       } else if (number >= 100) {\n                result += \"c\";\n      \
    \          number -= 100;\n            } else if (number >= 90) {\n          \
    \      result += \"xc\";\n                number -= 90;\n            } else if\
    \ (number >= 50) {\n                result += \"l\";\n                number -=\
    \ 50;\n            } else if (number >= 40) {\n                result += \"xl\"\
    ;\n                number -= 40;\n            } else if (number >= 10) {\n   \
    \             result += \"x\";\n                number -= 10;\n            } else\
    \ if (number >= 9) {\n                result += \"ix\";\n                number\
    \ -= 9;\n            } else if (number >= 5) {\n                result += \"v\"\
    ;\n                number -= 5;\n            } else if (number >= 4) {\n     \
    \           result += \"iv\";\n                number -= 4;\n            } else\
    \ if (number >= 1) {\n                result += \"i\";\n                number\
    \ -= 1;\n            }\n        }\n        return result;", "        // Your code\
    \ here\n        return \"\";", "        string[] roman = new string[] { \"m\"\
    , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
    iv\", \"i\" };\n        int[] arabic = new int[] { 1000, 900, 500, 400, 100, 90,\
    \ 50, 40, 10, 9, 5, 4, 1 };\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < arabic.Length; i++) {\n            while (number\
    \ >= arabic[i]) {\n                number -= arabic[i];\n                sb.Append(roman[i]);\n\
    \            }\n        }\n        return sb.ToString();", "        var roman\
    \ = new StringBuilder();\n        var digits = new[] {\n            new { value\
    \ = 1000, symbol = \"m\" },\n            new { value = 900, symbol = \"cm\" },\n\
    \            new { value = 500, symbol = \"d\" },\n            new { value = 400,\
    \ symbol = \"cd\" },\n            new { value = 100, symbol = \"c\" },\n     \
    \       new { value = 90, symbol = \"xc\" },\n            new { value = 50, symbol\
    \ = \"l\" },\n            new { value = 40, symbol = \"xl\" },\n            new\
    \ { value = 10, symbol = \"x\" },\n            new { value = 9, symbol = \"ix\"\
    \ },\n            new { value = 5, symbol = \"v\" },\n            new { value\
    \ = 4, symbol = \"iv\" },\n            new { value = 1, symbol = \"i\" },\n  \
    \      };\n        foreach (var digit in digits) {\n            while (number\
    \ >= digit.value) {\n                roman.Append(digit.symbol);\n           \
    \     number -= digit.value;\n            }\n        }\n        return roman.ToString();",
  "        // Your code here\n        return \"\";", "        // TODO: Implement this\
    \ method\n        return \"\";", "        string[] roman = { \"m\", \"cm\", \"\
    d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"\
    \ };\n        int[] arabic = { 1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5,\
    \ 4, 1 };\n        StringBuilder sb = new StringBuilder();\n        for (int i\
    \ = 0; i < arabic.Length; i++) {\n            while (number >= arabic[i]) {\n\
    \                number -= arabic[i];\n                sb.Append(roman[i]);\n\
    \            }\n        }\n        return sb.ToString();", "        string result\
    \ = \"\";\n        while (number > 0) {\n            if (number >= 1000) {\n \
    \               result += \"m\";\n                number -= 1000;\n          \
    \  } else if (number >= 900) {\n                result += \"cm\";\n          \
    \      number -= 900;\n            } else if (number >= 500) {\n             \
    \   result += \"d\";\n                number -= 500;\n            } else if (number\
    \ >= 400) {\n                result += \"cd\";\n                number -= 400;\n\
    \            } else if (number >= 100) {\n                result += \"c\";\n \
    \               number -= 100;\n            } else if (number >= 90) {\n     \
    \           result += \"xc\";\n                number -= 90;\n            } else\
    \ if (number >= 50) {\n                result += \"l\";\n                number\
    \ -= 50;\n            } else if (number >= 40) {\n                result += \"\
    xl\";\n                number -= 40;\n            } else if (number >= 10) {\n\
    \                result += \"x\";\n                number -= 10;\n           \
    \ } else if (number >= 9) {\n                result += \"ix\";\n             \
    \   number -= 9;\n            } else if (number >= 5) {\n                result\
    \ += \"v\";\n                number -= 5;\n            } else if (number >= 4)\
    \ {\n                result += \"iv\";\n                number -= 4;\n       \
    \     } else if (number >= 1) {\n                result += \"i\";\n          \
    \      number -= 1;\n            }\n        }\n        return result;", "    \
    \    var roman = \"\";\n        while (number > 0) {\n            if (number >=\
    \ 1000) {\n                roman += \"m\";\n                number -= 1000;\n\
    \            } else if (number >= 900) {\n                roman += \"cm\";\n \
    \               number -= 900;\n            } else if (number >= 500) {\n    \
    \            roman += \"d\";\n                number -= 500;\n            } else\
    \ if (number >= 400) {\n                roman += \"cd\";\n                number\
    \ -= 400;\n            } else if (number >= 100) {\n                roman += \"\
    c\";\n                number -= 100;\n            } else if (number >= 90) {\n\
    \                roman += \"xc\";\n                number -= 90;\n           \
    \ } else if (number >= 50) {\n                roman += \"l\";\n              \
    \  number -= 50;\n            } else if (number >= 40) {\n                roman\
    \ += \"xl\";\n                number -= 40;\n            } else if (number >=\
    \ 10) {\n                roman += \"x\";\n                number -= 10;\n    \
    \        } else if (number >= 9) {\n                roman += \"ix\";\n       \
    \         number -= 9;\n            } else if (number >= 5) {\n              \
    \  roman += \"v\";\n                number -= 5;\n            } else if (number\
    \ >= 4) {\n                roman += \"iv\";\n                number -= 4;\n  \
    \          } else if (number >= 1) {\n                roman += \"i\";\n      \
    \          number -= 1;\n            }\n        }\n        return roman;", " \
    \       var roman = new StringBuilder();\n        var digits = new List<int>();\n\
    \        while (number > 0) {\n            digits.Add((int)(number % 10));\n \
    \           number /= 10;\n        }\n        digits.Reverse();\n        for (int\
    \ i = 0; i < digits.Count; i++) {\n            var digit = digits[i];\n      \
    \      if (digit == 0) {\n                continue;\n            }\n         \
    \   if (digit <= 3) {\n                roman.Append(new string('i', digit));\n\
    \            } else if (digit == 4) {\n                roman.Append(\"iv\");\n\
    \            } else if (digit <= 8) {\n                roman.Append(\"v\");\n\
    \                roman.Append(new string('i', digit - 5));\n            } else\
    \ {\n                roman.Append(\"ix\");\n            }\n            if (i ==\
    \ 0) {\n                roman.Append(new string('x', digits.Count - 1));\n   \
    \         } else if (i == 1) {\n                roman.Append(new string('x', digits.Count\
    \ - 2));\n            } else if (i == 2) {\n                roman.Append(new string('x',\
    \ digits.Count - 3));\n            } else if (i == 3) {\n                roman.Append(new\
    \ string('x', digits.Count - 4));\n            }\n        }\n        return roman.ToString();",
  "        string result = \"\";\n        while (number > 0) {\n            if (number\
    \ >= 1000) {\n                result += \"m\";\n                number -= 1000;\n\
    \            } else if (number >= 900) {\n                result += \"cm\";\n\
    \                number -= 900;\n            } else if (number >= 500) {\n   \
    \             result += \"d\";\n                number -= 500;\n            }\
    \ else if (number >= 400) {\n                result += \"cd\";\n             \
    \   number -= 400;\n            } else if (number >= 100) {\n                result\
    \ += \"c\";\n                number -= 100;\n            } else if (number >=\
    \ 90) {\n                result += \"xc\";\n                number -= 90;\n  \
    \          } else if (number >= 50) {\n                result += \"l\";\n    \
    \            number -= 50;\n            } else if (number >= 40) {\n         \
    \       result += \"xl\";\n                number -= 40;\n            } else if\
    \ (number >= 10) {\n                result += \"x\";\n                number -=\
    \ 10;\n            } else if (number >= 9) {\n                result += \"ix\"\
    ;\n                number -= 9;\n            } else if (number >= 5) {\n     \
    \           result += \"v\";\n                number -= 5;\n            } else\
    \ if (number >= 4) {\n                result += \"iv\";\n                number\
    \ -= 4;\n            } else if (number >= 1) {\n                result += \"i\"\
    ;\n                number -= 1;\n            }\n        }\n        return result;",
  "        // Your code goes here.\n        return \"\";", "        string result\
    \ = \"\";\n        while (number > 0) {\n            if (number >= 1000) {\n \
    \               result += \"m\";\n                number -= 1000;\n          \
    \  } else if (number >= 900) {\n                result += \"cm\";\n          \
    \      number -= 900;\n            } else if (number >= 500) {\n             \
    \   result += \"d\";\n                number -= 500;\n            } else if (number\
    \ >= 400) {\n                result += \"cd\";\n                number -= 400;\n\
    \            } else if (number >= 100) {\n                result += \"c\";\n \
    \               number -= 100;\n            } else if (number >= 90) {\n     \
    \           result += \"xc\";\n                number -= 90;\n            } else\
    \ if (number >= 50) {\n                result += \"l\";\n                number\
    \ -= 50;\n            } else if (number >= 40) {\n                result += \"\
    xl\";\n                number -= 40;\n            } else if (number >= 10) {\n\
    \                result += \"x\";\n                number -= 10;\n           \
    \ } else if (number >= 9) {\n                result += \"ix\";\n             \
    \   number -= 9;\n            } else if (number >= 5) {\n                result\
    \ += \"v\";\n                number -= 5;\n            } else if (number >= 4)\
    \ {\n                result += \"iv\";\n                number -= 4;\n       \
    \     } else if (number >= 1) {\n                result += \"i\";\n          \
    \      number -= 1;\n            }\n        }\n        return result;", "    \
    \    // TODO: Implement this function\n        return \"\";", "        // TODO:\
    \ Implement this method\n        return \"\";", "        string[] roman = { \"\
    m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\"\
    , \"iv\", \"i\" };\n        int[] arabic = { 1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1 };\n        StringBuilder result = new StringBuilder();\n\
    \        for (int i = 0; i < arabic.Length; i++) {\n            while (number\
    \ >= arabic[i]) {\n                number -= arabic[i];\n                result.Append(roman[i]);\n\
    \            }\n        }\n        return result.ToString();", "        var roman\
    \ = new StringBuilder();\n        while (number > 0) {\n            if (number\
    \ >= 1000) {\n                roman.Append('m');\n                number -= 1000;\n\
    \            } else if (number >= 900) {\n                roman.Append(\"cm\"\
    );\n                number -= 900;\n            } else if (number >= 500) {\n\
    \                roman.Append('d');\n                number -= 500;\n        \
    \    } else if (number >= 400) {\n                roman.Append(\"cd\");\n    \
    \            number -= 400;\n            } else if (number >= 100) {\n       \
    \         roman.Append('c');\n                number -= 100;\n            } else\
    \ if (number >= 90) {\n                roman.Append(\"xc\");\n               \
    \ number -= 90;\n            } else if (number >= 50) {\n                roman.Append('l');\n\
    \                number -= 50;\n            } else if (number >= 40) {\n     \
    \           roman.Append(\"xl\");\n                number -= 40;\n           \
    \ } else if (number >= 10) {\n                roman.Append('x');\n           \
    \     number -= 10;\n            } else if (number >= 9) {\n                roman.Append(\"\
    ix\");\n                number -= 9;\n            } else if (number >= 5) {\n\
    \                roman.Append('v');\n                number -= 5;\n          \
    \  } else if (number >= 4) {\n                roman.Append(\"iv\");\n        \
    \        number -= 4;\n            } else if (number >= 1) {\n               \
    \ roman.Append('i');\n                number -= 1;\n            }\n        }\n\
    \        return roman.ToString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (number > 0) {\n            if (number >= 1000) {\n           \
    \     sb.Append('m');\n                number -= 1000;\n            } else if\
    \ (number >= 900) {\n                sb.Append(\"cm\");\n                number\
    \ -= 900;\n            } else if (number >= 500) {\n                sb.Append('d');\n\
    \                number -= 500;\n            } else if (number >= 400) {\n   \
    \             sb.Append(\"cd\");\n                number -= 400;\n           \
    \ } else if (number >= 100) {\n                sb.Append('c');\n             \
    \   number -= 100;\n            } else if (number >= 90) {\n                sb.Append(\"\
    xc\");\n                number -= 90;\n            } else if (number >= 50) {\n\
    \                sb.Append('l');\n                number -= 50;\n            }\
    \ else if (number >= 40) {\n                sb.Append(\"xl\");\n             \
    \   number -= 40;\n            } else if (number >= 10) {\n                sb.Append('x');\n\
    \                number -= 10;\n            } else if (number >= 9) {\n      \
    \          sb.Append(\"ix\");\n                number -= 9;\n            } else\
    \ if (number >= 5) {\n                sb.Append('v');\n                number\
    \ -= 5;\n            } else if (number >= 4) {\n                sb.Append(\"iv\"\
    );\n                number -= 4;\n            } else if (number >= 1) {\n    \
    \            sb.Append('i');\n                number -= 1;\n            }\n  \
    \      }\n        return sb.ToString();", "        if (number < 1 || number >\
    \ 1000) {\n            throw new ArgumentOutOfRangeException(\"number\");\n  \
    \      }\n        var sb = new StringBuilder();\n        while (number >= 1000)\
    \ {\n            sb.Append('m');\n            number -= 1000;\n        }\n   \
    \     if (number >= 900) {\n            sb.Append(\"cm\");\n            number\
    \ -= 900;\n        }\n        if (number >= 500) {\n            sb.Append('d');\n\
    \            number -= 500;\n        }\n        if (number >= 400) {\n       \
    \     sb.Append(\"cd\");\n            number -= 400;\n        }\n        while\
    \ (number >= 100) {\n            sb.Append('c');\n            number -= 100;\n\
    \        }\n        if (number >= 90) {\n            sb.Append(\"xc\");\n    \
    \        number -= 90;\n        }\n        if (number >= 50) {\n            sb.Append('l');\n\
    \            number -= 50;\n        }\n        if (number >= 40) {\n         \
    \   sb.Append(\"xl\");\n            number -= 40;\n        }\n        while (number\
    \ >= 10) {\n            sb.Append('x');\n            number -= 10;\n        }\n\
    \        if (number >= 9) {\n            sb.Append(\"ix\");\n            number\
    \ -= 9;\n        }\n        if (number >= 5) {\n            sb.Append('v');\n\
    \            number -= 5;\n        }\n        if (number >= 4) {\n           \
    \ sb.Append(\"iv\");\n            number -= 4;\n        }\n        while (number\
    \ >= 1) {\n            sb.Append('i');\n            number -= 1;\n        }\n\
    \        return sb.ToString();", "        string[] roman = new string[] { \"m\"\
    , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
    iv\", \"i\" };\n        int[] arabic = new int[] { 1000, 900, 500, 400, 100, 90,\
    \ 50, 40, 10, 9, 5, 4, 1 };\n        string result = \"\";\n        for (int i\
    \ = 0; i < arabic.Length; i++) {\n            while (number >= arabic[i]) {\n\
    \                number -= arabic[i];\n                result += roman[i];\n \
    \           }\n        }\n        return result;", "        string result = \"\
    \";\n        long[] values = { 1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5,\
    \ 4, 1 };\n        string[] numerals = { \"m\", \"cm\", \"d\", \"cd\", \"c\",\
    \ \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\" };\n        for (int\
    \ i = 0; i < values.Length; i++) {\n            while (number >= values[i]) {\n\
    \                number -= values[i];\n                result += numerals[i];\n\
    \            }\n        }\n        return result;", "        string[] roman =\
    \ new string[] { \"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"\
    x\", \"ix\", \"v\", \"iv\", \"i\" };\n        int[] decimal_value = new int[]\
    \ { 1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1 };\n        string result\
    \ = \"\";\n        for (int i = 0; i < decimal_value.Length; i++) {\n        \
    \    while (number >= decimal_value[i]) {\n                number -= decimal_value[i];\n\
    \                result += roman[i];\n            }\n        }\n        return\
    \ result;", "        // TODO: Implement this function\n        return \"\";",
  "        var result = new StringBuilder();\n        var symbols = new[] { \"m\"\
    , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
    iv\", \"i\" };\n        var values = new[] { 1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1 };\n        for (int i = 0; i < values.Length; i++) {\n \
    \           while (number >= values[i]) {\n                number -= values[i];\n\
    \                result.Append(symbols[i]);\n            }\n        }\n      \
    \  return result.ToString();", "        StringBuilder sb = new StringBuilder();\n\
    \        while (number > 0) {\n            if (number >= 1000) {\n           \
    \     sb.Append('m');\n                number -= 1000;\n            } else if\
    \ (number >= 900) {\n                sb.Append(\"cm\");\n                number\
    \ -= 900;\n            } else if (number >= 500) {\n                sb.Append('d');\n\
    \                number -= 500;\n            } else if (number >= 400) {\n   \
    \             sb.Append(\"cd\");\n                number -= 400;\n           \
    \ } else if (number >= 100) {\n                sb.Append('c');\n             \
    \   number -= 100;\n            } else if (number >= 90) {\n                sb.Append(\"\
    xc\");\n                number -= 90;\n            } else if (number >= 50) {\n\
    \                sb.Append('l');\n                number -= 50;\n            }\
    \ else if (number >= 40) {\n                sb.Append(\"xl\");\n             \
    \   number -= 40;\n            } else if (number >= 10) {\n                sb.Append('x');\n\
    \                number -= 10;\n            } else if (number >= 9) {\n      \
    \          sb.Append(\"ix\");\n                number -= 9;\n            } else\
    \ if (number >= 5) {\n                sb.Append('v');\n                number\
    \ -= 5;\n            } else if (number >= 4) {\n                sb.Append(\"iv\"\
    );\n                number -= 4;\n            } else if (number >= 1) {\n    \
    \            sb.Append('i');\n                number -= 1;\n            }\n  \
    \      }\n        return sb.ToString();", '        return "";', "        if (number\
    \ < 1 || number > 1000) {\n            throw new ArgumentOutOfRangeException(\"\
    number\");\n        }\n        var sb = new StringBuilder();\n        var symbols\
    \ = new Dictionary<int, string> {\n            { 1000, \"m\" },\n            {\
    \ 500, \"d\" },\n            { 100, \"c\" },\n            { 50, \"l\" },\n   \
    \         { 10, \"x\" },\n            { 5, \"v\" },\n            { 1, \"i\" }\n\
    \        };\n        foreach (var symbol in symbols) {\n            var count\
    \ = number / symbol.Key;\n            for (var i = 0; i < count; i++) {\n    \
    \            sb.Append(symbol.Value);\n            }\n            number %= symbol.Key;\n\
    \        }\n        return sb.ToString();", "        string[] roman = { \"m\"\
    , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
    iv\", \"i\" };\n        int[] arabic = { 1000, 900, 500, 400, 100, 90, 50, 40,\
    \ 10, 9, 5, 4, 1 };\n        string result = \"\";\n        for (int i = 0; i\
    \ < arabic.Length; i++) {\n            while (number >= arabic[i]) {\n       \
    \         number -= arabic[i];\n                result += roman[i];\n        \
    \    }\n        }\n        return result;", "        string result = \"\";\n \
    \       while (number > 0) {\n            if (number >= 1000) {\n            \
    \    result += \"m\";\n                number -= 1000;\n            } else if\
    \ (number >= 900) {\n                result += \"cm\";\n                number\
    \ -= 900;\n            } else if (number >= 500) {\n                result +=\
    \ \"d\";\n                number -= 500;\n            } else if (number >= 400)\
    \ {\n                result += \"cd\";\n                number -= 400;\n     \
    \       } else if (number >= 100) {\n                result += \"c\";\n      \
    \          number -= 100;\n            } else if (number >= 90) {\n          \
    \      result += \"xc\";\n                number -= 90;\n            } else if\
    \ (number >= 50) {\n                result += \"l\";\n                number -=\
    \ 50;\n            } else if (number >= 40) {\n                result += \"xl\"\
    ;\n                number -= 40;\n            } else if (number >= 10) {\n   \
    \             result += \"x\";\n                number -= 10;\n            } else\
    \ if (number >= 9) {\n                result += \"ix\";\n                number\
    \ -= 9;\n            } else if (number >= 5) {\n                result += \"v\"\
    ;\n                number -= 5;\n            } else if (number >= 4) {\n     \
    \           result += \"iv\";\n                number -= 4;\n            } else\
    \ if (number >= 1) {\n                result += \"i\";\n                number\
    \ -= 1;\n            }\n        }\n        return result;", "        var roman\
    \ = new StringBuilder();\n        var digits = new List<int>();\n        while\
    \ (number > 0) {\n            digits.Add((int)(number % 10));\n            number\
    \ /= 10;\n        }\n        digits.Reverse();\n        for (int i = 0; i < digits.Count;\
    \ i++) {\n            var digit = digits[i];\n            if (digit == 0) {\n\
    \                continue;\n            }\n            if (digit == 4) {\n   \
    \             roman.Append(GetRomanDigit(i));\n                roman.Append(GetRomanDigit(i\
    \ + 1));\n            } else if (digit == 9) {\n                roman.Append(GetRomanDigit(i));\n\
    \                roman.Append(GetRomanDigit(i + 2));\n            } else {\n \
    \               if (digit >= 5) {\n                    roman.Append(GetRomanDigit(i\
    \ + 1));\n                    digit -= 5;\n                }\n               \
    \ for (int j = 0; j < digit; j++) {\n                    roman.Append(GetRomanDigit(i));\n\
    \                }\n            }\n        }\n        return roman.ToString();",
  "        var roman = new StringBuilder();\n        var digits = new List<int>();\n\
    \        while (number > 0) {\n            digits.Add((int)(number % 10));\n \
    \           number /= 10;\n        }\n        digits.Reverse();\n        for (int\
    \ i = 0; i < digits.Count; i++) {\n            var digit = digits[i];\n      \
    \      if (digit == 0) continue;\n            if (digit == 4) {\n            \
    \    roman.Append(RomanDigit(i + 1));\n                roman.Append(RomanDigit(i));\n\
    \            } else if (digit == 9) {\n                roman.Append(RomanDigit(i\
    \ + 1));\n                roman.Append(RomanDigit(i + 2));\n            } else\
    \ {\n                if (digit >= 5) {\n                    roman.Append(RomanDigit(i));\n\
    \                    digit -= 5;\n                }\n                for (int\
    \ j = 0; j < digit; j++) {\n                    roman.Append(RomanDigit(i + 1));\n\
    \                }\n            }\n        }\n        return roman.ToString();",
  "        // Your code here\n        return \"\";", "        string result = \"\"\
    ;\n        while (number > 0) {\n            if (number >= 1000) {\n         \
    \       result += \"m\";\n                number -= 1000;\n            } else\
    \ if (number >= 900) {\n                result += \"cm\";\n                number\
    \ -= 900;\n            } else if (number >= 500) {\n                result +=\
    \ \"d\";\n                number -= 500;\n            } else if (number >= 400)\
    \ {\n                result += \"cd\";\n                number -= 400;\n     \
    \       } else if (number >= 100) {\n                result += \"c\";\n      \
    \          number -= 100;\n            } else if (number >= 90) {\n          \
    \      result += \"xc\";\n                number -= 90;\n            } else if\
    \ (number >= 50) {\n                result += \"l\";\n                number -=\
    \ 50;\n            } else if (number >= 40) {\n                result += \"xl\"\
    ;\n                number -= 40;\n            } else if (number >= 10) {\n   \
    \             result += \"x\";\n                number -= 10;\n            } else\
    \ if (number >= 9) {\n                result += \"ix\";\n                number\
    \ -= 9;\n            } else if (number >= 5) {\n                result += \"v\"\
    ;\n                number -= 5;\n            } else if (number >= 4) {\n     \
    \           result += \"iv\";\n                number -= 4;\n            } else\
    \ if (number >= 1) {\n                result += \"i\";\n                number\
    \ -= 1;\n            }\n        }\n        return result;", "        string result\
    \ = \"\";\n        while (number > 0) {\n            if (number >= 1000) {\n \
    \               result += \"m\";\n                number -= 1000;\n          \
    \  } else if (number >= 900) {\n                result += \"cm\";\n          \
    \      number -= 900;\n            } else if (number >= 500) {\n             \
    \   result += \"d\";\n                number -= 500;\n            } else if (number\
    \ >= 400) {\n                result += \"cd\";\n                number -= 400;\n\
    \            } else if (number >= 100) {\n                result += \"c\";\n \
    \               number -= 100;\n            } else if (number >= 90) {\n     \
    \           result += \"xc\";\n                number -= 90;\n            } else\
    \ if (number >= 50) {\n                result += \"l\";\n                number\
    \ -= 50;\n            } else if (number >= 40) {\n                result += \"\
    xl\";\n                number -= 40;\n            } else if (number >= 10) {\n\
    \                result += \"x\";\n                number -= 10;\n           \
    \ } else if (number >= 9) {\n                result += \"ix\";\n             \
    \   number -= 9;\n            } else if (number >= 5) {\n                result\
    \ += \"v\";\n                number -= 5;\n            } else if (number >= 4)\
    \ {\n                result += \"iv\";\n                number -= 4;\n       \
    \     } else if (number >= 1) {\n                result += \"i\";\n          \
    \      number -= 1;\n            }\n        }\n        return result;", "    \
    \    StringBuilder sb = new StringBuilder();\n        while (number > 0) {\n \
    \           if (number >= 1000) {\n                sb.Append('m');\n         \
    \       number -= 1000;\n            } else if (number >= 900) {\n           \
    \     sb.Append(\"cm\");\n                number -= 900;\n            } else if\
    \ (number >= 500) {\n                sb.Append('d');\n                number -=\
    \ 500;\n            } else if (number >= 400) {\n                sb.Append(\"\
    cd\");\n                number -= 400;\n            } else if (number >= 100)\
    \ {\n                sb.Append('c');\n                number -= 100;\n       \
    \     } else if (number >= 90) {\n                sb.Append(\"xc\");\n       \
    \         number -= 90;\n            } else if (number >= 50) {\n            \
    \    sb.Append('l');\n                number -= 50;\n            } else if (number\
    \ >= 40) {\n                sb.Append(\"xl\");\n                number -= 40;\n\
    \            } else if (number >= 10) {\n                sb.Append('x');\n   \
    \             number -= 10;\n            } else if (number >= 9) {\n         \
    \       sb.Append(\"ix\");\n                number -= 9;\n            } else if\
    \ (number >= 5) {\n                sb.Append('v');\n                number -=\
    \ 5;\n            } else if (number >= 4) {\n                sb.Append(\"iv\"\
    );\n                number -= 4;\n            } else if (number >= 1) {\n    \
    \            sb.Append('i');\n                number -= 1;\n            }\n  \
    \      }\n        return sb.ToString();", "        var result = new StringBuilder();\n\
    \        var roman = new Dictionary<long, string>() {\n            { 1, \"i\"\
    \ },\n            { 5, \"v\" },\n            { 10, \"x\" },\n            { 50,\
    \ \"l\" },\n            { 100, \"c\" },\n            { 500, \"d\" },\n       \
    \     { 1000, \"m\" }\n        };\n        var keys = roman.Keys.ToList();\n \
    \       keys.Sort();\n        keys.Reverse();\n        foreach (var key in keys)\
    \ {\n            while (number >= key) {\n                result.Append(roman[key]);\n\
    \                number -= key;\n            }\n        }\n        return result.ToString();",
  "        var roman = new StringBuilder();\n        var digits = new List<int>();\n\
    \        while (number > 0) {\n            digits.Add((int)(number % 10));\n \
    \           number /= 10;\n        }\n        digits.Reverse();\n        for (int\
    \ i = 0; i < digits.Count; i++) {\n            var digit = digits[i];\n      \
    \      if (digit == 0) {\n                continue;\n            }\n         \
    \   if (digit == 4) {\n                roman.Append(new string(new char[] { 'i',\
    \ 'v' }));\n            } else if (digit == 9) {\n                roman.Append(new\
    \ string(new char[] { 'i', 'x' }));\n            } else {\n                if\
    \ (digit >= 5) {\n                    roman.Append('v');\n                   \
    \ digit -= 5;\n                }\n                roman.Append(new string('i',\
    \ digit));\n            }\n            if (i < digits.Count - 1) {\n         \
    \       roman.Append(new string('x', digits.Count - i - 1));\n            }\n\
    \        }\n        return roman.ToString();", "        var result = new StringBuilder();\n\
    \        var roman = new Dictionary<long, string> {\n            {1, \"i\"}, {4,\
    \ \"iv\"}, {5, \"v\"}, {9, \"ix\"},\n            {10, \"x\"}, {40, \"xl\"}, {50,\
    \ \"l\"}, {90, \"xc\"},\n            {100, \"c\"}, {400, \"cd\"}, {500, \"d\"\
    }, {900, \"cm\"},\n            {1000, \"m\"}\n        };\n        var keys = roman.Keys.ToList();\n\
    \        keys.Sort();\n        keys.Reverse();\n        foreach (var key in keys)\
    \ {\n            while (number >= key) {\n                result.Append(roman[key]);\n\
    \                number -= key;\n            }\n        }\n        return result.ToString();",
  "        string[] roman = new string[] { \"m\", \"cm\", \"d\", \"cd\", \"c\", \"\
    xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\" };\n        int[] arabic\
    \ = new int[] { 1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1 };\n    \
    \    StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < arabic.Length;\
    \ i++) {\n            while (number >= arabic[i]) {\n                number -=\
    \ arabic[i];\n                sb.Append(roman[i]);\n            }\n        }\n\
    \        return sb.ToString();", "        // Your code here\n        return \"\
    \";", "        string result = \"\";\n        while (number > 0) {\n         \
    \   if (number >= 1000) {\n                result += \"m\";\n                number\
    \ -= 1000;\n            } else if (number >= 900) {\n                result +=\
    \ \"cm\";\n                number -= 900;\n            } else if (number >= 500)\
    \ {\n                result += \"d\";\n                number -= 500;\n      \
    \      } else if (number >= 400) {\n                result += \"cd\";\n      \
    \          number -= 400;\n            } else if (number >= 100) {\n         \
    \       result += \"c\";\n                number -= 100;\n            } else if\
    \ (number >= 90) {\n                result += \"xc\";\n                number\
    \ -= 90;\n            } else if (number >= 50) {\n                result += \"\
    l\";\n                number -= 50;\n            } else if (number >= 40) {\n\
    \                result += \"xl\";\n                number -= 40;\n          \
    \  } else if (number >= 10) {\n                result += \"x\";\n            \
    \    number -= 10;\n            } else if (number >= 9) {\n                result\
    \ += \"ix\";\n                number -= 9;\n            } else if (number >= 5)\
    \ {\n                result += \"v\";\n                number -= 5;\n        \
    \    } else if (number >= 4) {\n                result += \"iv\";\n          \
    \      number -= 4;\n            } else if (number >= 1) {\n                result\
    \ += \"i\";\n                number -= 1;\n            }\n        }\n        return\
    \ result;", "        string result = \"\";\n        while (number > 0) {\n   \
    \         if (number >= 1000) {\n                result += \"m\";\n          \
    \      number -= 1000;\n            } else if (number >= 900) {\n            \
    \    result += \"cm\";\n                number -= 900;\n            } else if\
    \ (number >= 500) {\n                result += \"d\";\n                number\
    \ -= 500;\n            } else if (number >= 400) {\n                result +=\
    \ \"cd\";\n                number -= 400;\n            } else if (number >= 100)\
    \ {\n                result += \"c\";\n                number -= 100;\n      \
    \      } else if (number >= 90) {\n                result += \"xc\";\n       \
    \         number -= 90;\n            } else if (number >= 50) {\n            \
    \    result += \"l\";\n                number -= 50;\n            } else if (number\
    \ >= 40) {\n                result += \"xl\";\n                number -= 40;\n\
    \            } else if (number >= 10) {\n                result += \"x\";\n  \
    \              number -= 10;\n            } else if (number >= 9) {\n        \
    \        result += \"ix\";\n                number -= 9;\n            } else if\
    \ (number >= 5) {\n                result += \"v\";\n                number -=\
    \ 5;\n            } else if (number >= 4) {\n                result += \"iv\"\
    ;\n                number -= 4;\n            } else if (number >= 1) {\n     \
    \           result += \"i\";\n                number -= 1;\n            }\n  \
    \      }\n        return result;", "        var roman = new StringBuilder();\n\
    \        var digits = new List<int>();\n        while (number > 0) {\n       \
    \     digits.Add((int)(number % 10));\n            number /= 10;\n        }\n\
    \        digits.Reverse();\n        for (int i = 0; i < digits.Count; i++) {\n\
    \            var digit = digits[i];\n            if (digit == 0) {\n         \
    \       continue;\n            }\n            if (digit == 4) {\n            \
    \    roman.Append(GetRomanDigit(i));\n                roman.Append(GetRomanDigit(i\
    \ + 1));\n            } else if (digit == 9) {\n                roman.Append(GetRomanDigit(i));\n\
    \                roman.Append(GetRomanDigit(i + 2));\n            } else {\n \
    \               if (digit >= 5) {\n                    roman.Append(GetRomanDigit(i\
    \ + 1));\n                    digit -= 5;\n                }\n               \
    \ for (int j = 0; j < digit; j++) {\n                    roman.Append(GetRomanDigit(i));\n\
    \                }\n            }\n        }\n        return roman.ToString();",
  "        var roman = new StringBuilder();\n        var numeral = new Dictionary<int,\
    \ string> {\n            {1, \"i\"}, {4, \"iv\"}, {5, \"v\"}, {9, \"ix\"},\n \
    \           {10, \"x\"}, {40, \"xl\"}, {50, \"l\"}, {90, \"xc\"},\n          \
    \  {100, \"c\"}, {400, \"cd\"}, {500, \"d\"}, {900, \"cm\"},\n            {1000,\
    \ \"m\"}\n        };\n        var keys = numeral.Keys.OrderByDescending(x => x).ToList();\n\
    \        foreach (var key in keys) {\n            while (number >= key) {\n  \
    \              roman.Append(numeral[key]);\n                number -= key;\n \
    \           }\n        }\n        return roman.ToString();", "        string result\
    \ = \"\";\n        while (number > 0) {\n            if (number >= 1000) {\n \
    \               result += \"m\";\n                number -= 1000;\n          \
    \  } else if (number >= 900) {\n                result += \"cm\";\n          \
    \      number -= 900;\n            } else if (number >= 500) {\n             \
    \   result += \"d\";\n                number -= 500;\n            } else if (number\
    \ >= 400) {\n                result += \"cd\";\n                number -= 400;\n\
    \            } else if (number >= 100) {\n                result += \"c\";\n \
    \               number -= 100;\n            } else if (number >= 90) {\n     \
    \           result += \"xc\";\n                number -= 90;\n            } else\
    \ if (number >= 50) {\n                result += \"l\";\n                number\
    \ -= 50;\n            } else if (number >= 40) {\n                result += \"\
    xl\";\n                number -= 40;\n            } else if (number >= 10) {\n\
    \                result += \"x\";\n                number -= 10;\n           \
    \ } else if (number >= 9) {\n                result += \"ix\";\n             \
    \   number -= 9;\n            } else if (number >= 5) {\n                result\
    \ += \"v\";\n                number -= 5;\n            } else if (number >= 4)\
    \ {\n                result += \"iv\";\n                number -= 4;\n       \
    \     } else if (number >= 1) {\n                result += \"i\";\n          \
    \      number -= 1;\n            }\n        }\n        return result;", "    \
    \    // TODO: Implement this function.\n        return \"\";", "        var roman\
    \ = new StringBuilder();\n        var digits = new[] { \"i\", \"v\", \"x\", \"\
    l\", \"c\", \"d\", \"m\" };\n        var digit = 0;\n        while (number > 0)\
    \ {\n            var digit_value = number % 10;\n            number /= 10;\n \
    \           if (digit_value == 0) {\n                digit += 2;\n           \
    \     continue;\n            }\n            var digit_roman = digits[digit];\n\
    \            if (digit_value == 4) {\n                roman.Insert(0, digit_roman\
    \ + digits[digit + 1]);\n            } else if (digit_value == 9) {\n        \
    \        roman.Insert(0, digit_roman + digits[digit + 2]);\n            } else\
    \ {\n                var digit_roman_5 = digits[digit + 1];\n                if\
    \ (digit_value >= 5) {\n                    roman.Insert(0, digit_roman_5);\n\
    \                    digit_value -= 5;\n                }\n                roman.Insert(0,\
    \ digit_roman.Repeat(digit_value));\n            }\n            digit += 2;\n\
    \        }\n        return roman.ToString();", "        var result = new StringBuilder();\n\
    \        var symbols = new[] { \"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"\
    l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\" };\n        var values = new[]\
    \ { 1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1 };\n        for (int\
    \ i = 0; i < values.Length; i++) {\n            while (number >= values[i]) {\n\
    \                number -= values[i];\n                result.Append(symbols[i]);\n\
    \            }\n        }\n        return result.ToString();", "        if (number\
    \ < 1 || number > 1000) {\n            throw new ArgumentOutOfRangeException(\"\
    number\", \"must be between 1 and 1000\");\n        }\n        var sb = new StringBuilder();\n\
    \        var digits = new[] {\n            new { Value = 1000, Symbol = \"m\"\
    \ },\n            new { Value = 500, Symbol = \"d\" },\n            new { Value\
    \ = 100, Symbol = \"c\" },\n            new { Value = 50, Symbol = \"l\" },\n\
    \            new { Value = 10, Symbol = \"x\" },\n            new { Value = 5,\
    \ Symbol = \"v\" },\n            new { Value = 1, Symbol = \"i\" },\n        };\n\
    \        var digitIndex = 0;\n        while (number > 0) {\n            var digit\
    \ = digits[digitIndex];\n            if (number >= digit.Value) {\n          \
    \      sb.Append(digit.Symbol);\n                number -= digit.Value;\n    \
    \        } else if (digitIndex % 2 == 0 && digitIndex < digits.Length - 2) {\n\
    \                var nextDigit = digits[digitIndex + 2];\n                if (number\
    \ >= digit.Value - nextDigit.Value) {\n                    sb.Append(nextDigit.Symbol);\n\
    \                    sb.Append(digit.Symbol);\n                    number -= digit.Value\
    \ - nextDigit.Value;\n                } else {\n                    digitIndex++;\n\
    \                }\n            } else {\n                digitIndex++;\n    \
    \        }\n        }\n        return sb.ToString();", "        var roman = new\
    \ StringBuilder();\n        var numeral = new Dictionary<int, string> {\n    \
    \        {1, \"i\"}, {5, \"v\"}, {10, \"x\"}, {50, \"l\"}, {100, \"c\"}, {500,\
    \ \"d\"}, {1000, \"m\"}\n        };\n        var numeral_keys = numeral.Keys.ToList();\n\
    \        numeral_keys.Sort();\n        numeral_keys.Reverse();\n        foreach\
    \ (var key in numeral_keys) {\n            while (number >= key) {\n         \
    \       roman.Append(numeral[key]);\n                number -= key;\n        \
    \    }\n        }\n        return roman.ToString();", "        var roman = new\
    \ StringBuilder();\n        var digits = new int[] { 1, 4, 5, 9, 10, 40, 50, 90,\
    \ 100, 400, 500, 900, 1000 };\n        var romanDigits = new string[] { \"i\"\
    , \"iv\", \"v\", \"ix\", \"x\", \"xl\", \"l\", \"xc\", \"c\", \"cd\", \"d\", \"\
    cm\", \"m\" };\n        for (int i = digits.Length - 1; i >= 0; i--) {\n     \
    \       while (number >= digits[i]) {\n                roman.Append(romanDigits[i]);\n\
    \                number -= digits[i];\n            }\n        }\n        return\
    \ roman.ToString();", "        var result = new StringBuilder();\n        var\
    \ roman = new Dictionary<int, string> {\n            { 1, \"i\" },\n         \
    \   { 5, \"v\" },\n            { 10, \"x\" },\n            { 50, \"l\" },\n  \
    \          { 100, \"c\" },\n            { 500, \"d\" },\n            { 1000, \"\
    m\" }\n        };\n        var digits = new List<int>();\n        while (number\
    \ > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n\
    \        }\n        digits.Reverse();\n        for (int i = 0; i < digits.Count;\
    \ i++) {\n            var digit = digits[i];\n            if (digit == 0) {\n\
    \                continue;\n            }\n            var base_value = (int)Math.Pow(10,\
    \ i);\n            if (digit <= 3) {\n                result.Append(roman[base_value].Repeat(digit));\n\
    \            } else if (digit == 4) {\n                result.Append(roman[base_value]\
    \ + roman[base_value * 5]);\n            } else if (digit <= 8) {\n          \
    \      result.Append(roman[base_value * 5] + roman[base_value].Repeat(digit -\
    \ 5));\n            } else {\n                result.Append(roman[base_value]\
    \ + roman[base_value * 10]);\n            }\n        }\n        return result.ToString();",
  "        // Your code here\n        return \"\";", "        var sb = new StringBuilder();\n\
    \        var m = number / 1000;\n        if (m > 0) {\n            sb.Append('m',\
    \ (int)m);\n            number -= m * 1000;\n        }\n        var c = number\
    \ / 100;\n        if (c > 0) {\n            sb.Append('c', (int)c);\n        \
    \    number -= c * 100;\n        }\n        var x = number / 10;\n        if (x\
    \ > 0) {\n            sb.Append('x', (int)x);\n            number -= x * 10;\n\
    \        }\n        if (number > 0) {\n            sb.Append('i', (int)number);\n\
    \        }\n        return sb.ToString();", "        var roman = new StringBuilder();\n\
    \        var num = number;\n        while (num > 0) {\n            if (num >=\
    \ 1000) {\n                roman.Append('m');\n                num -= 1000;\n\
    \            } else if (num >= 900) {\n                roman.Append(\"cm\");\n\
    \                num -= 900;\n            } else if (num >= 500) {\n         \
    \       roman.Append('d');\n                num -= 500;\n            } else if\
    \ (num >= 400) {\n                roman.Append(\"cd\");\n                num -=\
    \ 400;\n            } else if (num >= 100) {\n                roman.Append('c');\n\
    \                num -= 100;\n            } else if (num >= 90) {\n          \
    \      roman.Append(\"xc\");\n                num -= 90;\n            } else if\
    \ (num >= 50) {\n                roman.Append('l');\n                num -= 50;\n\
    \            } else if (num >= 40) {\n                roman.Append(\"xl\");\n\
    \                num -= 40;\n            } else if (num >= 10) {\n           \
    \     roman.Append('x');\n                num -= 10;\n            } else if (num\
    \ >= 9) {\n                roman.Append(\"ix\");\n                num -= 9;\n\
    \            } else if (num >= 5) {\n                roman.Append('v');\n    \
    \            num -= 5;\n            } else if (num >= 4) {\n                roman.Append(\"\
    iv\");\n                num -= 4;\n            } else if (num >= 1) {\n      \
    \          roman.Append('i');\n                num -= 1;\n            }\n    \
    \    }\n        return roman.ToString();", "        var result = new StringBuilder();\n\
    \        var numeral = new Dictionary<long, string> {\n            { 1, \"i\"\
    \ },\n            { 4, \"iv\" },\n            { 5, \"v\" },\n            { 9,\
    \ \"ix\" },\n            { 10, \"x\" },\n            { 40, \"xl\" },\n       \
    \     { 50, \"l\" },\n            { 90, \"xc\" },\n            { 100, \"c\" },\n\
    \            { 400, \"cd\" },\n            { 500, \"d\" },\n            { 900,\
    \ \"cm\" },\n            { 1000, \"m\" }\n        };\n        var keys = numeral.Keys.ToList();\n\
    \        keys.Sort();\n        keys.Reverse();\n        foreach (var key in keys)\
    \ {\n            while (number >= key) {\n                result.Append(numeral[key]);\n\
    \                number -= key;\n            }\n        }\n        return result.ToString();",
  "        string[] roman = { \"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\",\
    \ \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\" };\n        int[] arabic = { 1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1 };\n        string result = \"\
    \";\n        for (int i = 0; i < arabic.Length; i++) {\n            while (number\
    \ >= arabic[i]) {\n                number -= arabic[i];\n                result\
    \ += roman[i];\n            }\n        }\n        return result;", "        string\
    \ result = \"\";\n        while (number >= 1000) {\n            result += \"m\"\
    ;\n            number -= 1000;\n        }\n        if (number >= 900) {\n    \
    \        result += \"cm\";\n            number -= 900;\n        }\n        if\
    \ (number >= 500) {\n            result += \"d\";\n            number -= 500;\n\
    \        }\n        if (number >= 400) {\n            result += \"cd\";\n    \
    \        number -= 400;\n        }\n        while (number >= 100) {\n        \
    \    result += \"c\";\n            number -= 100;\n        }\n        if (number\
    \ >= 90) {\n            result += \"xc\";\n            number -= 90;\n       \
    \ }\n        if (number >= 50) {\n            result += \"l\";\n            number\
    \ -= 50;\n        }\n        if (number >= 40) {\n            result += \"xl\"\
    ;\n            number -= 40;\n        }\n        while (number >= 10) {\n    \
    \        result += \"x\";\n            number -= 10;\n        }\n        if (number\
    \ >= 9) {\n            result += \"ix\";\n            number -= 9;\n        }\n\
    \        if (number >= 5) {\n            result += \"v\";\n            number\
    \ -= 5;\n        }\n        if (number >= 4) {\n            result += \"iv\";\n\
    \            number -= 4;\n        }\n        while (number >= 1) {\n        \
    \    result += \"i\";\n            number -= 1;\n        }\n        return result;",
  "        string result = \"\";\n        while (number > 0) {\n            if (number\
    \ >= 1000) {\n                result += \"m\";\n                number -= 1000;\n\
    \            } else if (number >= 900) {\n                result += \"cm\";\n\
    \                number -= 900;\n            } else if (number >= 500) {\n   \
    \             result += \"d\";\n                number -= 500;\n            }\
    \ else if (number >= 400) {\n                result += \"cd\";\n             \
    \   number -= 400;\n            } else if (number >= 100) {\n                result\
    \ += \"c\";\n                number -= 100;\n            } else if (number >=\
    \ 90) {\n                result += \"xc\";\n                number -= 90;\n  \
    \          } else if (number >= 50) {\n                result += \"l\";\n    \
    \            number -= 50;\n            } else if (number >= 40) {\n         \
    \       result += \"xl\";\n                number -= 40;\n            } else if\
    \ (number >= 10) {\n                result += \"x\";\n                number -=\
    \ 10;\n            } else if (number >= 9) {\n                result += \"ix\"\
    ;\n                number -= 9;\n            } else if (number >= 5) {\n     \
    \           result += \"v\";\n                number -= 5;\n            } else\
    \ if (number >= 4) {\n                result += \"iv\";\n                number\
    \ -= 4;\n            } else if (number >= 1) {\n                result += \"i\"\
    ;\n                number -= 1;\n            }\n        }\n        return result;",
  "        string[] roman = { \"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\",\
    \ \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\" };\n        int[] arabic = { 1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1 };\n        string result = \"\
    \";\n        for (int i = 0; i < arabic.Length; i++) {\n            while (number\
    \ >= arabic[i]) {\n                number -= arabic[i];\n                result\
    \ += roman[i];\n            }\n        }\n        return result;", "        var\
    \ roman = new StringBuilder();\n        var digits = new[] {\n            new\
    \ { Value = 1000, Symbol = \"m\" },\n            new { Value = 900, Symbol = \"\
    cm\" },\n            new { Value = 500, Symbol = \"d\" },\n            new { Value\
    \ = 400, Symbol = \"cd\" },\n            new { Value = 100, Symbol = \"c\" },\n\
    \            new { Value = 90, Symbol = \"xc\" },\n            new { Value = 50,\
    \ Symbol = \"l\" },\n            new { Value = 40, Symbol = \"xl\" },\n      \
    \      new { Value = 10, Symbol = \"x\" },\n            new { Value = 9, Symbol\
    \ = \"ix\" },\n            new { Value = 5, Symbol = \"v\" },\n            new\
    \ { Value = 4, Symbol = \"iv\" },\n            new { Value = 1, Symbol = \"i\"\
    \ },\n        };\n        foreach (var digit in digits) {\n            while (number\
    \ >= digit.Value) {\n                roman.Append(digit.Symbol);\n           \
    \     number -= digit.Value;\n            }\n        }\n        return roman.ToString();",
  "        var sb = new StringBuilder();\n        while (number > 0) {\n         \
    \   if (number >= 1000) {\n                sb.Append('m');\n                number\
    \ -= 1000;\n            } else if (number >= 900) {\n                sb.Append(\"\
    cm\");\n                number -= 900;\n            } else if (number >= 500)\
    \ {\n                sb.Append('d');\n                number -= 500;\n       \
    \     } else if (number >= 400) {\n                sb.Append(\"cd\");\n      \
    \          number -= 400;\n            } else if (number >= 100) {\n         \
    \       sb.Append('c');\n                number -= 100;\n            } else if\
    \ (number >= 90) {\n                sb.Append(\"xc\");\n                number\
    \ -= 90;\n            } else if (number >= 50) {\n                sb.Append('l');\n\
    \                number -= 50;\n            } else if (number >= 40) {\n     \
    \           sb.Append(\"xl\");\n                number -= 40;\n            } else\
    \ if (number >= 10) {\n                sb.Append('x');\n                number\
    \ -= 10;\n            } else if (number >= 9) {\n                sb.Append(\"\
    ix\");\n                number -= 9;\n            } else if (number >= 5) {\n\
    \                sb.Append('v');\n                number -= 5;\n            }\
    \ else if (number >= 4) {\n                sb.Append(\"iv\");\n              \
    \  number -= 4;\n            } else if (number >= 1) {\n                sb.Append('i');\n\
    \                number -= 1;\n            }\n        }\n        return sb.ToString();",
  "        // Your code here\n        return \"\";", "        // Fill in the code\
    \ here.\n        return \"\";", "        var sb = new StringBuilder();\n     \
    \   var num = number;\n        while (num >= 1000) {\n            sb.Append('m');\n\
    \            num -= 1000;\n        }\n        if (num >= 900) {\n            sb.Append(\"\
    cm\");\n            num -= 900;\n        }\n        if (num >= 500) {\n      \
    \      sb.Append('d');\n            num -= 500;\n        }\n        if (num >=\
    \ 400) {\n            sb.Append(\"cd\");\n            num -= 400;\n        }\n\
    \        while (num >= 100) {\n            sb.Append('c');\n            num -=\
    \ 100;\n        }\n        if (num >= 90) {\n            sb.Append(\"xc\");\n\
    \            num -= 90;\n        }\n        if (num >= 50) {\n            sb.Append('l');\n\
    \            num -= 50;\n        }\n        if (num >= 40) {\n            sb.Append(\"\
    xl\");\n            num -= 40;\n        }\n        while (num >= 10) {\n     \
    \       sb.Append('x');\n            num -= 10;\n        }\n        if (num >=\
    \ 9) {\n            sb.Append(\"ix\");\n            num -= 9;\n        }\n   \
    \     if (num >= 5) {\n            sb.Append('v');\n            num -= 5;\n  \
    \      }\n        if (num >= 4) {\n            sb.Append(\"iv\");\n          \
    \  num -= 4;\n        }\n        while (num >= 1) {\n            sb.Append('i');\n\
    \            num -= 1;\n        }\n        return sb.ToString();", "        //\
    \ YOUR CODE HERE\n        return \"\";", "        string roman = \"\";\n     \
    \   while (number > 0) {\n            if (number >= 1000) {\n                roman\
    \ += \"m\";\n                number -= 1000;\n            } else if (number >=\
    \ 900) {\n                roman += \"cm\";\n                number -= 900;\n \
    \           } else if (number >= 500) {\n                roman += \"d\";\n   \
    \             number -= 500;\n            } else if (number >= 400) {\n      \
    \          roman += \"cd\";\n                number -= 400;\n            } else\
    \ if (number >= 100) {\n                roman += \"c\";\n                number\
    \ -= 100;\n            } else if (number >= 90) {\n                roman += \"\
    xc\";\n                number -= 90;\n            } else if (number >= 50) {\n\
    \                roman += \"l\";\n                number -= 50;\n            }\
    \ else if (number >= 40) {\n                roman += \"xl\";\n               \
    \ number -= 40;\n            } else if (number >= 10) {\n                roman\
    \ += \"x\";\n                number -= 10;\n            } else if (number >= 9)\
    \ {\n                roman += \"ix\";\n                number -= 9;\n        \
    \    } else if (number >= 5) {\n                roman += \"v\";\n            \
    \    number -= 5;\n            } else if (number >= 4) {\n                roman\
    \ += \"iv\";\n                number -= 4;\n            } else if (number >= 1)\
    \ {\n                roman += \"i\";\n                number -= 1;\n         \
    \   }\n        }\n        return roman;", "        if (number < 1 || number >\
    \ 1000) {\n            throw new ArgumentOutOfRangeException(\"number\");\n  \
    \      }\n        var roman = new StringBuilder();\n        var digits = new List<int>();\n\
    \        while (number > 0) {\n            digits.Add((int)(number % 10));\n \
    \           number /= 10;\n        }\n        for (int i = digits.Count - 1; i\
    \ >= 0; i--) {\n            var digit = digits[i];\n            if (digit == 0)\
    \ {\n                continue;\n            }\n            if (digit == 4) {\n\
    \                roman.Append(RomanDigit(i, 1));\n                roman.Append(RomanDigit(i,\
    \ 5));\n            } else if (digit == 9) {\n                roman.Append(RomanDigit(i,\
    \ 1));\n                roman.Append(RomanDigit(i, 10));\n            } else {\n\
    \                if (digit >= 5) {\n                    roman.Append(RomanDigit(i,\
    \ 5));\n                    digit -= 5;\n                }\n                for\
    \ (int j = 0; j < digit; j++) {\n                    roman.Append(RomanDigit(i,\
    \ 1));\n                }\n            }\n        }\n        return roman.ToString();",
  "        // TODO: Implement this function.\n        return \"\";", "        var\
    \ result = new StringBuilder();\n        var roman = new Dictionary<long, string>()\
    \ {\n            { 1, \"i\" },\n            { 5, \"v\" },\n            { 10, \"\
    x\" },\n            { 50, \"l\" },\n            { 100, \"c\" },\n            {\
    \ 500, \"d\" },\n            { 1000, \"m\" }\n        };\n        var keys = roman.Keys.ToList();\n\
    \        keys.Sort();\n        keys.Reverse();\n        foreach (var key in keys)\
    \ {\n            while (number >= key) {\n                result.Append(roman[key]);\n\
    \                number -= key;\n            }\n        }\n        return result.ToString();",
  "        // Your code here\n        return \"\";", "        string result = \"\"\
    ;\n        while (number > 0) {\n            if (number >= 1000) {\n         \
    \       result += \"m\";\n                number -= 1000;\n            } else\
    \ if (number >= 900) {\n                result += \"cm\";\n                number\
    \ -= 900;\n            } else if (number >= 500) {\n                result +=\
    \ \"d\";\n                number -= 500;\n            } else if (number >= 400)\
    \ {\n                result += \"cd\";\n                number -= 400;\n     \
    \       } else if (number >= 100) {\n                result += \"c\";\n      \
    \          number -= 100;\n            } else if (number >= 90) {\n          \
    \      result += \"xc\";\n                number -= 90;\n            } else if\
    \ (number >= 50) {\n                result += \"l\";\n                number -=\
    \ 50;\n            } else if (number >= 40) {\n                result += \"xl\"\
    ;\n                number -= 40;\n            } else if (number >= 10) {\n   \
    \             result += \"x\";\n                number -= 10;\n            } else\
    \ if (number >= 9) {\n                result += \"ix\";\n                number\
    \ -= 9;\n            } else if (number >= 5) {\n                result += \"v\"\
    ;\n                number -= 5;\n            } else if (number >= 4) {\n     \
    \           result += \"iv\";\n                number -= 4;\n            } else\
    \ if (number >= 1) {\n                result += \"i\";\n                number\
    \ -= 1;\n            }\n        }\n        return result;", "        // TODO:\
    \ Implement this function.\n        return \"\";", "        // Your code here\n\
    \        return \"\";", "        string result = \"\";\n        while (number\
    \ > 0) {\n            if (number >= 1000) {\n                result += \"m\";\n\
    \                number -= 1000;\n            } else if (number >= 900) {\n  \
    \              result += \"cm\";\n                number -= 900;\n           \
    \ } else if (number >= 500) {\n                result += \"d\";\n            \
    \    number -= 500;\n            } else if (number >= 400) {\n               \
    \ result += \"cd\";\n                number -= 400;\n            } else if (number\
    \ >= 100) {\n                result += \"c\";\n                number -= 100;\n\
    \            } else if (number >= 90) {\n                result += \"xc\";\n \
    \               number -= 90;\n            } else if (number >= 50) {\n      \
    \          result += \"l\";\n                number -= 50;\n            } else\
    \ if (number >= 40) {\n                result += \"xl\";\n                number\
    \ -= 40;\n            } else if (number >= 10) {\n                result += \"\
    x\";\n                number -= 10;\n            } else if (number >= 9) {\n \
    \               result += \"ix\";\n                number -= 9;\n            }\
    \ else if (number >= 5) {\n                result += \"v\";\n                number\
    \ -= 5;\n            } else if (number >= 4) {\n                result += \"iv\"\
    ;\n                number -= 4;\n            } else if (number >= 1) {\n     \
    \           result += \"i\";\n                number -= 1;\n            }\n  \
    \      }\n        return result;", "        var result = new StringBuilder();\n\
    \        var digits = new List<int>();\n        while (number > 0) {\n       \
    \     digits.Add((int)(number % 10));\n            number /= 10;\n        }\n\
    \        digits.Reverse();\n        for (int i = 0; i < digits.Count; i++) {\n\
    \            var digit = digits[i];\n            if (digit == 0) {\n         \
    \       continue;\n            }\n            if (digit == 4) {\n            \
    \    result.Append(new string(new char[] { (char)('i' + i), (char)('i' + i + 1)\
    \ }));\n            } else if (digit == 9) {\n                result.Append(new\
    \ string(new char[] { (char)('i' + i), (char)('i' + i + 2) }));\n            }\
    \ else {\n                if (digit >= 5) {\n                    result.Append((char)('v'\
    \ + i));\n                    digit -= 5;\n                }\n               \
    \ result.Append(new string((char)('i' + i), digit));\n            }\n        }\n\
    \        return result.ToString();", "        if (number < 1 || number > 1000)\
    \ {\n            throw new ArgumentOutOfRangeException(\"number\", \"number must\
    \ be between 1 and 1000\");\n        }\n        var sb = new StringBuilder();\n\
    \        var digits = new[] { \"i\", \"v\", \"x\", \"l\", \"c\", \"d\", \"m\"\
    \ };\n        var digit = 0;\n        while (number > 0) {\n            var digitValue\
    \ = (int)Math.Pow(10, digit);\n            var digitChar = digits[digit * 2];\n\
    \            var nextDigitChar = digits[digit * 2 + 2];\n            var halfDigitChar\
    \ = digits[digit * 2 + 1];\n            var digitCount = number / digitValue;\n\
    \            if (digitCount == 9) {\n                sb.Append(digitChar + nextDigitChar);\n\
    \            } else if (digitCount >= 5) {\n                sb.Append(halfDigitChar\
    \ + new string(digitChar, digitCount - 5));\n            } else if (digitCount\
    \ == 4) {\n                sb.Append(digitChar + halfDigitChar);\n           \
    \ } else {\n                sb.Append(new string(digitChar, digitCount));\n  \
    \          }\n            number %= digitValue;\n            digit++;\n      \
    \  }\n        return sb.ToString();", "        string result = \"\";\n       \
    \ while (number > 0) {\n            if (number >= 1000) {\n                result\
    \ += \"m\";\n                number -= 1000;\n            } else if (number >=\
    \ 900) {\n                result += \"cm\";\n                number -= 900;\n\
    \            } else if (number >= 500) {\n                result += \"d\";\n \
    \               number -= 500;\n            } else if (number >= 400) {\n    \
    \            result += \"cd\";\n                number -= 400;\n            }\
    \ else if (number >= 100) {\n                result += \"c\";\n              \
    \  number -= 100;\n            } else if (number >= 90) {\n                result\
    \ += \"xc\";\n                number -= 90;\n            } else if (number >=\
    \ 50) {\n                result += \"l\";\n                number -= 50;\n   \
    \         } else if (number >= 40) {\n                result += \"xl\";\n    \
    \            number -= 40;\n            } else if (number >= 10) {\n         \
    \       result += \"x\";\n                number -= 10;\n            } else if\
    \ (number >= 9) {\n                result += \"ix\";\n                number -=\
    \ 9;\n            } else if (number >= 5) {\n                result += \"v\";\n\
    \                number -= 5;\n            } else if (number >= 4) {\n       \
    \         result += \"iv\";\n                number -= 4;\n            } else\
    \ if (number >= 1) {\n                result += \"i\";\n                number\
    \ -= 1;\n            }\n        }\n        return result;", "        string[]\
    \ roman = new string[] { \"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
    xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\" };\n        int[] arabic = new int[]\
    \ { 1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1 };\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < arabic.Length; i++) {\n\
    \            while (number >= arabic[i]) {\n                number -= arabic[i];\n\
    \                sb.Append(roman[i]);\n            }\n        }\n        return\
    \ sb.ToString();", "        var roman = new StringBuilder();\n        var roman_numerals\
    \ = new Dictionary<int, string> {\n            { 1000, \"m\" },\n            {\
    \ 900, \"cm\" },\n            { 500, \"d\" },\n            { 400, \"cd\" },\n\
    \            { 100, \"c\" },\n            { 90, \"xc\" },\n            { 50, \"\
    l\" },\n            { 40, \"xl\" },\n            { 10, \"x\" },\n            {\
    \ 9, \"ix\" },\n            { 5, \"v\" },\n            { 4, \"iv\" },\n      \
    \      { 1, \"i\" }\n        };\n        foreach (var pair in roman_numerals)\
    \ {\n            while (number >= pair.Key) {\n                roman.Append(pair.Value);\n\
    \                number -= pair.Key;\n            }\n        }\n        return\
    \ roman.ToString();", "        // Your code here\n        return \"\";", "   \
    \     string[] roman = { \"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
    xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\" };\n        int[] arabic = { 1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1 };\n        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < arabic.Length; i++) {\n      \
    \      while (number >= arabic[i]) {\n                number -= arabic[i];\n \
    \               sb.Append(roman[i]);\n            }\n        }\n        return\
    \ sb.ToString();", "        string[] roman = { \"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\" };\n        int[]\
    \ arabic = { 1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1 };\n       \
    \ StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < arabic.Length;\
    \ i++) {\n            while (number >= arabic[i]) {\n                number -=\
    \ arabic[i];\n                sb.Append(roman[i]);\n            }\n        }\n\
    \        return sb.ToString();", "        string result = \"\";\n        while\
    \ (number > 0) {\n            if (number >= 1000) {\n                result +=\
    \ \"m\";\n                number -= 1000;\n            } else if (number >= 900)\
    \ {\n                result += \"cm\";\n                number -= 900;\n     \
    \       } else if (number >= 500) {\n                result += \"d\";\n      \
    \          number -= 500;\n            } else if (number >= 400) {\n         \
    \       result += \"cd\";\n                number -= 400;\n            } else\
    \ if (number >= 100) {\n                result += \"c\";\n                number\
    \ -= 100;\n            } else if (number >= 90) {\n                result += \"\
    xc\";\n                number -= 90;\n            } else if (number >= 50) {\n\
    \                result += \"l\";\n                number -= 50;\n           \
    \ } else if (number >= 40) {\n                result += \"xl\";\n            \
    \    number -= 40;\n            } else if (number >= 10) {\n                result\
    \ += \"x\";\n                number -= 10;\n            } else if (number >= 9)\
    \ {\n                result += \"ix\";\n                number -= 9;\n       \
    \     } else if (number >= 5) {\n                result += \"v\";\n          \
    \      number -= 5;\n            } else if (number >= 4) {\n                result\
    \ += \"iv\";\n                number -= 4;\n            } else if (number >= 1)\
    \ {\n                result += \"i\";\n                number -= 1;\n        \
    \    }\n        }\n        return result;", "        string result = \"\";\n \
    \       while (number > 0) {\n            if (number >= 1000) {\n            \
    \    result += \"m\";\n                number -= 1000;\n            } else if\
    \ (number >= 900) {\n                result += \"cm\";\n                number\
    \ -= 900;\n            } else if (number >= 500) {\n                result +=\
    \ \"d\";\n                number -= 500;\n            } else if (number >= 400)\
    \ {\n                result += \"cd\";\n                number -= 400;\n     \
    \       } else if (number >= 100) {\n                result += \"c\";\n      \
    \          number -= 100;\n            } else if (number >= 90) {\n          \
    \      result += \"xc\";\n                number -= 90;\n            } else if\
    \ (number >= 50) {\n                result += \"l\";\n                number -=\
    \ 50;\n            } else if (number >= 40) {\n                result += \"xl\"\
    ;\n                number -= 40;\n            } else if (number >= 10) {\n   \
    \             result += \"x\";\n                number -= 10;\n            } else\
    \ if (number >= 9) {\n                result += \"ix\";\n                number\
    \ -= 9;\n            } else if (number >= 5) {\n                result += \"v\"\
    ;\n                number -= 5;\n            } else if (number >= 4) {\n     \
    \           result += \"iv\";\n                number -= 4;\n            } else\
    \ if (number >= 1) {\n                result += \"i\";\n                number\
    \ -= 1;\n            }\n        }\n        return result;", "        string[]\
    \ roman = new string[] { \"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
    xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\" };\n        int[] arabic = new int[]\
    \ { 1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1 };\n        StringBuilder\
    \ result = new StringBuilder();\n        for (int i = 0; i < arabic.Length; i++)\
    \ {\n            while (number >= arabic[i]) {\n                number -= arabic[i];\n\
    \                result.Append(roman[i]);\n            }\n        }\n        return\
    \ result.ToString();", "        var roman = new StringBuilder();\n        var\
    \ digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number\
    \ % 10));\n            number /= 10;\n        }\n        digits.Reverse();\n \
    \       for (int i = 0; i < digits.Count; i++) {\n            var digit = digits[i];\n\
    \            if (digit == 0) {\n                continue;\n            }\n   \
    \         if (digit == 4) {\n                roman.Append(GetRomanDigit(i, 1));\n\
    \                roman.Append(GetRomanDigit(i, 5));\n            } else if (digit\
    \ == 9) {\n                roman.Append(GetRomanDigit(i, 1));\n              \
    \  roman.Append(GetRomanDigit(i + 1, 1));\n            } else {\n            \
    \    if (digit >= 5) {\n                    roman.Append(GetRomanDigit(i, 5));\n\
    \                    digit -= 5;\n                }\n                for (int\
    \ j = 0; j < digit; j++) {\n                    roman.Append(GetRomanDigit(i,\
    \ 1));\n                }\n            }\n        }\n        return roman.ToString();",
  "        string result = \"\";\n        while (number > 0) {\n            if (number\
    \ >= 1000) {\n                result += \"m\";\n                number -= 1000;\n\
    \            } else if (number >= 900) {\n                result += \"cm\";\n\
    \                number -= 900;\n            } else if (number >= 500) {\n   \
    \             result += \"d\";\n                number -= 500;\n            }\
    \ else if (number >= 400) {\n                result += \"cd\";\n             \
    \   number -= 400;\n            } else if (number >= 100) {\n                result\
    \ += \"c\";\n                number -= 100;\n            } else if (number >=\
    \ 90) {\n                result += \"xc\";\n                number -= 90;\n  \
    \          } else if (number >= 50) {\n                result += \"l\";\n    \
    \            number -= 50;\n            } else if (number >= 40) {\n         \
    \       result += \"xl\";\n                number -= 40;\n            } else if\
    \ (number >= 10) {\n                result += \"x\";\n                number -=\
    \ 10;\n            } else if (number >= 9) {\n                result += \"ix\"\
    ;\n                number -= 9;\n            } else if (number >= 5) {\n     \
    \           result += \"v\";\n                number -= 5;\n            } else\
    \ if (number >= 4) {\n                result += \"iv\";\n                number\
    \ -= 4;\n            } else if (number >= 1) {\n                result += \"i\"\
    ;\n                number -= 1;\n            }\n        }\n        return result;",
  "        var result = new StringBuilder();\n        var roman = new Dictionary<int,\
    \ string> {\n            {1, \"i\"}, {5, \"v\"}, {10, \"x\"}, {50, \"l\"}, {100,\
    \ \"c\"}, {500, \"d\"}, {1000, \"m\"}\n        };\n        var digits = new List<int>();\n\
    \        while (number > 0) {\n            digits.Add((int)(number % 10));\n \
    \           number /= 10;\n        }\n        digits.Reverse();\n        for (int\
    \ i = 0; i < digits.Count; i++) {\n            var digit = digits[i];\n      \
    \      var base10 = (int)Math.Pow(10, i);\n            if (digit == 4) {\n   \
    \             result.Append(roman[base10]);\n                result.Append(roman[5\
    \ * base10]);\n            } else if (digit == 9) {\n                result.Append(roman[base10]);\n\
    \                result.Append(roman[10 * base10]);\n            } else {\n  \
    \              if (digit >= 5) {\n                    result.Append(roman[5 *\
    \ base10]);\n                    digit -= 5;\n                }\n            \
    \    for (int j = 0; j < digit; j++) {\n                    result.Append(roman[base10]);\n\
    \                }\n            }\n        }\n        return result.ToString();",
  "        // Your code here\n        return \"\";", "        // Your code here\n\
    \        return \"\";", "        string result = \"\";\n        while (number\
    \ > 0) {\n            if (number >= 1000) {\n                result += \"m\";\n\
    \                number -= 1000;\n            } else if (number >= 900) {\n  \
    \              result += \"cm\";\n                number -= 900;\n           \
    \ } else if (number >= 500) {\n                result += \"d\";\n            \
    \    number -= 500;\n            } else if (number >= 400) {\n               \
    \ result += \"cd\";\n                number -= 400;\n            } else if (number\
    \ >= 100) {\n                result += \"c\";\n                number -= 100;\n\
    \            } else if (number >= 90) {\n                result += \"xc\";\n \
    \               number -= 90;\n            } else if (number >= 50) {\n      \
    \          result += \"l\";\n                number -= 50;\n            } else\
    \ if (number >= 40) {\n                result += \"xl\";\n                number\
    \ -= 40;\n            } else if (number >= 10) {\n                result += \"\
    x\";\n                number -= 10;\n            } else if (number >= 9) {\n \
    \               result += \"ix\";\n                number -= 9;\n            }\
    \ else if (number >= 5) {\n                result += \"v\";\n                number\
    \ -= 5;\n            } else if (number >= 4) {\n                result += \"iv\"\
    ;\n                number -= 4;\n            } else if (number >= 1) {\n     \
    \           result += \"i\";\n                number -= 1;\n            }\n  \
    \      }\n        return result;", "        var roman = new StringBuilder();\n\
    \        var digits = new List<int>();\n        while (number > 0) {\n       \
    \     digits.Add((int)(number % 10));\n            number /= 10;\n        }\n\
    \        digits.Reverse();\n        for (int i = 0; i < digits.Count; i++) {\n\
    \            var digit = digits[i];\n            if (digit == 0) {\n         \
    \       continue;\n            }\n            if (digit == 4) {\n            \
    \    roman.Append(GetRomanDigit(i));\n                roman.Append(GetRomanDigit(i\
    \ + 1));\n            } else if (digit == 9) {\n                roman.Append(GetRomanDigit(i));\n\
    \                roman.Append(GetRomanDigit(i + 2));\n            } else {\n \
    \               if (digit >= 5) {\n                    roman.Append(GetRomanDigit(i\
    \ + 1));\n                    digit -= 5;\n                }\n               \
    \ for (int j = 0; j < digit; j++) {\n                    roman.Append(GetRomanDigit(i));\n\
    \                }\n            }\n        }\n        return roman.ToString();",
  "        StringBuilder sb = new StringBuilder();\n        while (number > 0) {\n\
    \            if (number >= 1000) {\n                sb.Append('m');\n        \
    \        number -= 1000;\n            } else if (number >= 900) {\n          \
    \      sb.Append(\"cm\");\n                number -= 900;\n            } else\
    \ if (number >= 500) {\n                sb.Append('d');\n                number\
    \ -= 500;\n            } else if (number >= 400) {\n                sb.Append(\"\
    cd\");\n                number -= 400;\n            } else if (number >= 100)\
    \ {\n                sb.Append('c');\n                number -= 100;\n       \
    \     } else if (number >= 90) {\n                sb.Append(\"xc\");\n       \
    \         number -= 90;\n            } else if (number >= 50) {\n            \
    \    sb.Append('l');\n                number -= 50;\n            } else if (number\
    \ >= 40) {\n                sb.Append(\"xl\");\n                number -= 40;\n\
    \            } else if (number >= 10) {\n                sb.Append('x');\n   \
    \             number -= 10;\n            } else if (number >= 9) {\n         \
    \       sb.Append(\"ix\");\n                number -= 9;\n            } else if\
    \ (number >= 5) {\n                sb.Append('v');\n                number -=\
    \ 5;\n            } else if (number >= 4) {\n                sb.Append(\"iv\"\
    );\n                number -= 4;\n            } else if (number >= 1) {\n    \
    \            sb.Append('i');\n                number -= 1;\n            }\n  \
    \      }\n        return sb.ToString();", "        var roman = new StringBuilder();\n\
    \        var num = number;\n        while (num >= 1000) {\n            roman.Append('m');\n\
    \            num -= 1000;\n        }\n        if (num >= 900) {\n            roman.Append(\"\
    cm\");\n            num -= 900;\n        }\n        if (num >= 500) {\n      \
    \      roman.Append('d');\n            num -= 500;\n        }\n        if (num\
    \ >= 400) {\n            roman.Append(\"cd\");\n            num -= 400;\n    \
    \    }\n        while (num >= 100) {\n            roman.Append('c');\n       \
    \     num -= 100;\n        }\n        if (num >= 90) {\n            roman.Append(\"\
    xc\");\n            num -= 90;\n        }\n        if (num >= 50) {\n        \
    \    roman.Append('l');\n            num -= 50;\n        }\n        if (num >=\
    \ 40) {\n            roman.Append(\"xl\");\n            num -= 40;\n        }\n\
    \        while (num >= 10) {\n            roman.Append('x');\n            num\
    \ -= 10;\n        }\n        if (num >= 9) {\n            roman.Append(\"ix\"\
    );\n            num -= 9;\n        }\n        if (num >= 5) {\n            roman.Append('v');\n\
    \            num -= 5;\n        }\n        if (num >= 4) {\n            roman.Append(\"\
    iv\");\n            num -= 4;\n        }\n        while (num >= 1) {\n       \
    \     roman.Append('i');\n            num -= 1;\n        }\n        return roman.ToString();",
  "        string result = \"\";\n        while (number > 0) {\n            if (number\
    \ >= 1000) {\n                result += \"m\";\n                number -= 1000;\n\
    \            } else if (number >= 900) {\n                result += \"cm\";\n\
    \                number -= 900;\n            } else if (number >= 500) {\n   \
    \             result += \"d\";\n                number -= 500;\n            }\
    \ else if (number >= 400) {\n                result += \"cd\";\n             \
    \   number -= 400;\n            } else if (number >= 100) {\n                result\
    \ += \"c\";\n                number -= 100;\n            } else if (number >=\
    \ 90) {\n                result += \"xc\";\n                number -= 90;\n  \
    \          } else if (number >= 50) {\n                result += \"l\";\n    \
    \            number -= 50;\n            } else if (number >= 40) {\n         \
    \       result += \"xl\";\n                number -= 40;\n            } else if\
    \ (number >= 10) {\n                result += \"x\";\n                number -=\
    \ 10;\n            } else if (number >= 9) {\n                result += \"ix\"\
    ;\n                number -= 9;\n            } else if (number >= 5) {\n     \
    \           result += \"v\";\n                number -= 5;\n            } else\
    \ if (number >= 4) {\n                result += \"iv\";\n                number\
    \ -= 4;\n            } else if (number >= 1) {\n                result += \"i\"\
    ;\n                number -= 1;\n            }\n        }\n        return result;",
  "        var roman = new StringBuilder();\n        var romanNumerals = new Dictionary<int,\
    \ string>() {\n            { 1000, \"m\" },\n            { 900, \"cm\" },\n  \
    \          { 500, \"d\" },\n            { 400, \"cd\" },\n            { 100, \"\
    c\" },\n            { 90, \"xc\" },\n            { 50, \"l\" },\n            {\
    \ 40, \"xl\" },\n            { 10, \"x\" },\n            { 9, \"ix\" },\n    \
    \        { 5, \"v\" },\n            { 4, \"iv\" },\n            { 1, \"i\" }\n\
    \        };\n        foreach (var numeral in romanNumerals) {\n            while\
    \ (number >= numeral.Key) {\n                roman.Append(numeral.Value);\n  \
    \              number -= numeral.Key;\n            }\n        }\n        return\
    \ roman.ToString();", "        string result = \"\";\n        while (number >\
    \ 0) {\n            if (number >= 1000) {\n                result += \"m\";\n\
    \                number -= 1000;\n            } else if (number >= 900) {\n  \
    \              result += \"cm\";\n                number -= 900;\n           \
    \ } else if (number >= 500) {\n                result += \"d\";\n            \
    \    number -= 500;\n            } else if (number >= 400) {\n               \
    \ result += \"cd\";\n                number -= 400;\n            } else if (number\
    \ >= 100) {\n                result += \"c\";\n                number -= 100;\n\
    \            } else if (number >= 90) {\n                result += \"xc\";\n \
    \               number -= 90;\n            } else if (number >= 50) {\n      \
    \          result += \"l\";\n                number -= 50;\n            } else\
    \ if (number >= 40) {\n                result += \"xl\";\n                number\
    \ -= 40;\n            } else if (number >= 10) {\n                result += \"\
    x\";\n                number -= 10;\n            } else if (number >= 9) {\n \
    \               result += \"ix\";\n                number -= 9;\n            }\
    \ else if (number >= 5) {\n                result += \"v\";\n                number\
    \ -= 5;\n            } else if (number >= 4) {\n                result += \"iv\"\
    ;\n                number -= 4;\n            } else if (number >= 1) {\n     \
    \           result += \"i\";\n                number -= 1;\n            }\n  \
    \      }\n        return result;", "        // TODO: Implement this function.\n\
    \        return \"\";", "        if (number < 1 || number > 1000) {\n        \
    \    throw new ArgumentOutOfRangeException(\"number\", \"Number must be in range\
    \ [1, 1000]\");\n        }\n        var roman = new StringBuilder();\n       \
    \ var digits = new[] { \"i\", \"v\", \"x\", \"l\", \"c\", \"d\", \"m\" };\n  \
    \      var digit = 0;\n        while (number > 0) {\n            var digitValue\
    \ = number % 10;\n            var digit1 = digits[digit];\n            var digit5\
    \ = digits[digit + 1];\n            var digit10 = digits[digit + 2];\n       \
    \     if (digitValue == 9) {\n                roman.Insert(0, digit1 + digit10);\n\
    \            } else if (digitValue >= 5) {\n                roman.Insert(0, digit5\
    \ + new string(digit1[0], digitValue - 5));\n            } else if (digitValue\
    \ == 4) {\n                roman.Insert(0, digit1 + digit5);\n            } else\
    \ {\n                roman.Insert(0, new string(digit1[0], digitValue));\n   \
    \         }\n            number /= 10;\n            digit += 2;\n        }\n \
    \       return roman.ToString();", "        var roman = new StringBuilder();\n\
    \        var digits = new[] { 'i', 'v', 'x', 'l', 'c', 'd', 'm' };\n        var\
    \ digit = 0;\n        while (number > 0) {\n            var digitValue = number\
    \ % 10;\n            if (digitValue == 4) {\n                roman.Insert(0, digits[digit]);\n\
    \                roman.Insert(0, digits[digit + 1]);\n            } else if (digitValue\
    \ == 9) {\n                roman.Insert(0, digits[digit]);\n                roman.Insert(0,\
    \ digits[digit + 2]);\n            } else {\n                if (digitValue >=\
    \ 5) {\n                    roman.Insert(0, digits[digit + 1]);\n            \
    \        digitValue -= 5;\n                }\n                for (var i = 0;\
    \ i < digitValue; i++) {\n                    roman.Insert(0, digits[digit]);\n\
    \                }\n            }\n            number /= 10;\n            digit\
    \ += 2;\n        }\n        return roman.ToString();", "        string[] roman\
    \ = { \"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\" };\n        int[] arabic = { 1000, 900, 500, 400, 100,\
    \ 90, 50, 40, 10, 9, 5, 4, 1 };\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < arabic.Length; i++) {\n            while (number\
    \ >= arabic[i]) {\n                number -= arabic[i];\n                sb.Append(roman[i]);\n\
    \            }\n        }\n        return sb.ToString();", "        if (number\
    \ < 1 || number > 1000) {\n            throw new ArgumentOutOfRangeException(\"\
    number\", number, \"Number must be between 1 and 1000\");\n        }\n       \
    \ var sb = new StringBuilder();\n        while (number > 0) {\n            if\
    \ (number >= 1000) {\n                sb.Append('m');\n                number\
    \ -= 1000;\n            } else if (number >= 900) {\n                sb.Append(\"\
    cm\");\n                number -= 900;\n            } else if (number >= 500)\
    \ {\n                sb.Append('d');\n                number -= 500;\n       \
    \     } else if (number >= 400) {\n                sb.Append(\"cd\");\n      \
    \          number -= 400;\n            } else if (number >= 100) {\n         \
    \       sb.Append('c');\n                number -= 100;\n            } else if\
    \ (number >= 90) {\n                sb.Append(\"xc\");\n                number\
    \ -= 90;\n            } else if (number >= 50) {\n                sb.Append('l');\n\
    \                number -= 50;\n            } else if (number >= 40) {\n     \
    \           sb.Append(\"xl\");\n                number -= 40;\n            } else\
    \ if (number >= 10) {\n                sb.Append('x');\n                number\
    \ -= 10;\n            } else if (number >= 9) {\n                sb.Append(\"\
    ix\");\n                number -= 9;\n            } else if (number >= 5) {\n\
    \                sb.Append('v');\n                number -= 5;\n            }\
    \ else if (number >= 4) {\n                sb.Append(\"iv\");\n              \
    \  number -= 4;\n            } else if (number >= 1) {\n                sb.Append('i');\n\
    \                number -= 1;\n            }\n        }\n        return sb.ToString();",
  "        string result = \"\";\n        while (number > 0) {\n            if (number\
    \ >= 1000) {\n                result += \"m\";\n                number -= 1000;\n\
    \            } else if (number >= 900) {\n                result += \"cm\";\n\
    \                number -= 900;\n            } else if (number >= 500) {\n   \
    \             result += \"d\";\n                number -= 500;\n            }\
    \ else if (number >= 400) {\n                result += \"cd\";\n             \
    \   number -= 400;\n            } else if (number >= 100) {\n                result\
    \ += \"c\";\n                number -= 100;\n            } else if (number >=\
    \ 90) {\n                result += \"xc\";\n                number -= 90;\n  \
    \          } else if (number >= 50) {\n                result += \"l\";\n    \
    \            number -= 50;\n            } else if (number >= 40) {\n         \
    \       result += \"xl\";\n                number -= 40;\n            } else if\
    \ (number >= 10) {\n                result += \"x\";\n                number -=\
    \ 10;\n            } else if (number >= 9) {\n                result += \"ix\"\
    ;\n                number -= 9;\n            } else if (number >= 5) {\n     \
    \           result += \"v\";\n                number -= 5;\n            } else\
    \ if (number >= 4) {\n                result += \"iv\";\n                number\
    \ -= 4;\n            } else if (number >= 1) {\n                result += \"i\"\
    ;\n                number -= 1;\n            }\n        }\n        return result;",
  "        var roman = new StringBuilder();\n        var digits = new List<int>();\n\
    \        while (number > 0) {\n            digits.Add((int)(number % 10));\n \
    \           number /= 10;\n        }\n        digits.Reverse();\n        for (int\
    \ i = 0; i < digits.Count; i++) {\n            var digit = digits[i];\n      \
    \      if (digit == 0) {\n                continue;\n            }\n         \
    \   if (digit == 4) {\n                roman.Append(new string(new char[] { 'i',\
    \ 'v' }));\n            } else if (digit == 9) {\n                roman.Append(new\
    \ string(new char[] { 'i', 'x' }));\n            } else {\n                if\
    \ (digit >= 5) {\n                    roman.Append('v');\n                   \
    \ digit -= 5;\n                }\n                roman.Append(new string('i',\
    \ digit));\n            }\n            if (i < digits.Count - 1) {\n         \
    \       roman.Append(new string('x', digits.Count - i - 1));\n            }\n\
    \        }\n        return roman.ToString();", "        var sb = new StringBuilder();\n\
    \        while (number > 0) {\n            if (number >= 1000) {\n           \
    \     sb.Append('m');\n                number -= 1000;\n            } else if\
    \ (number >= 900) {\n                sb.Append(\"cm\");\n                number\
    \ -= 900;\n            } else if (number >= 500) {\n                sb.Append('d');\n\
    \                number -= 500;\n            } else if (number >= 400) {\n   \
    \             sb.Append(\"cd\");\n                number -= 400;\n           \
    \ } else if (number >= 100) {\n                sb.Append('c');\n             \
    \   number -= 100;\n            } else if (number >= 90) {\n                sb.Append(\"\
    xc\");\n                number -= 90;\n            } else if (number >= 50) {\n\
    \                sb.Append('l');\n                number -= 50;\n            }\
    \ else if (number >= 40) {\n                sb.Append(\"xl\");\n             \
    \   number -= 40;\n            } else if (number >= 10) {\n                sb.Append('x');\n\
    \                number -= 10;\n            } else if (number >= 9) {\n      \
    \          sb.Append(\"ix\");\n                number -= 9;\n            } else\
    \ if (number >= 5) {\n                sb.Append('v');\n                number\
    \ -= 5;\n            } else if (number >= 4) {\n                sb.Append(\"iv\"\
    );\n                number -= 4;\n            } else if (number >= 1) {\n    \
    \            sb.Append('i');\n                number -= 1;\n            }\n  \
    \      }\n        return sb.ToString();", "        string[] roman = new string[]\
    \ { \"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\" };\n        int[] arabic = new int[] { 1000, 900, 500,\
    \ 400, 100, 90, 50, 40, 10, 9, 5, 4, 1 };\n        StringBuilder result = new\
    \ StringBuilder();\n        for (int i = 0; i < arabic.Length; i++) {\n      \
    \      while (number >= arabic[i]) {\n                number -= arabic[i];\n \
    \               result.Append(roman[i]);\n            }\n        }\n        return\
    \ result.ToString();", "        // TODO: Implement this function\n        return\
    \ \"\";", "        if (number < 1 || number > 1000) {\n            throw new ArgumentOutOfRangeException(\"\
    number\");\n        }\n        var result = new StringBuilder();\n        var\
    \ digits = new[] {\n            new { Value = 1000, Symbol = \"m\" },\n      \
    \      new { Value = 500, Symbol = \"d\" },\n            new { Value = 100, Symbol\
    \ = \"c\" },\n            new { Value = 50, Symbol = \"l\" },\n            new\
    \ { Value = 10, Symbol = \"x\" },\n            new { Value = 5, Symbol = \"v\"\
    \ },\n            new { Value = 1, Symbol = \"i\" },\n        };\n        foreach\
    \ (var digit in digits) {\n            var count = number / digit.Value;\n   \
    \         number %= digit.Value;\n            if (count == 4) {\n            \
    \    if (result.Length > 0 && result[result.Length - 1] == digit.Symbol[0]) {\n\
    \                    result.Length -= 1;\n                    result.Append(digit.Symbol[0]\
    \ == 'i' ? \"iv\" : \"ix\");\n                } else {\n                    result.Append(digit.Symbol[0]\
    \ == 'i' ? \"iv\" : \"ix\");\n                }\n            } else {\n      \
    \          result.Append(digit.Symbol[0], (int)count);\n            }\n      \
    \  }\n        return result.ToString();", "        string[] roman = new string[]\
    \ { \"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\" };\n        int[] arabic = new int[] { 1000, 900, 500,\
    \ 400, 100, 90, 50, 40, 10, 9, 5, 4, 1 };\n        string result = \"\";\n   \
    \     for (int i = 0; i < arabic.Length; i++) {\n            while (number >=\
    \ arabic[i]) {\n                number -= arabic[i];\n                result +=\
    \ roman[i];\n            }\n        }\n        return result;"]
stop_tokens:
- "\n    }\n"

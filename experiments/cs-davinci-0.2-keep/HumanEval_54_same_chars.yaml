name: HumanEval_54_same_chars
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Check if two words have the same characters.\n    // >>> same_chars('eabcdzzzz',\
  \ 'dddzzzzzzzddeddabc')\n    // True\n    // >>> same_chars('abcd', 'dddddddabc')\n\
  \    // True\n    // >>> same_chars('dddddddabc', 'abcd')\n    // True\n    // >>>\
  \ same_chars('eabcd', 'dddddddabc')\n    // False\n    // >>> same_chars('abcd',\
  \ 'dddddddabce')\n    // False\n    // >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n\
  \    // False\n    public static bool SameChars(string s0, string s1) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(SameChars((\"\
  eabcdzzzz\"), (\"dddzzzzzzzddeddabc\")) == (true));\n    Debug.Assert(SameChars((\"\
  abcd\"), (\"dddddddabc\")) == (true));\n    Debug.Assert(SameChars((\"dddddddabc\"\
  ), (\"abcd\")) == (true));\n    Debug.Assert(SameChars((\"eabcd\"), (\"dddddddabc\"\
  )) == (false));\n    Debug.Assert(SameChars((\"abcd\"), (\"dddddddabcf\")) == (false));\n\
  \    Debug.Assert(SameChars((\"eabcdzzzz\"), (\"dddzzzzzzzddddabc\")) == (false));\n\
  \    Debug.Assert(SameChars((\"aabb\"), (\"aaccc\")) == (false));\n    }\n\n}\n"
completions: ["        var c0 = new int[26];\n        var c1 = new int[26];\n    \
    \    foreach (var c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach\
    \ (var c in s1) {\n            c1[c - 'a']++;\n        }\n        for (int i =\
    \ 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n                return\
    \ false;\n            }\n        }\n        return true;", "        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        if (s0.Length !=\
    \ s1.Length) {\n            return false;\n        }\n        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        var c0 = s0.GroupBy(c\
    \ => c).Select(g => new { c = g.Key, n = g.Count() });\n        var c1 = s1.GroupBy(c\
    \ => c).Select(g => new { c = g.Key, n = g.Count() });\n        return c0.All(x\
    \ => c1.Any(y => y.c == x.c && y.n >= x.n)) && c1.All(x => c0.Any(y => y.c ==\
    \ x.c && y.n >= x.n));", "        var c0 = s0.ToCharArray();\n        var c1 =\
    \ s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n      \
    \  return new string(c0) == new string(c1);", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        var c0 = new int[26];\n   \
    \     var c1 = new int[26];\n        for (int i = 0; i < s0.Length; i++) {\n \
    \           c0[s0[i] - 'a']++;\n            c1[s1[i] - 'a']++;\n        }\n  \
    \      for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n   \
    \             return false;\n            }\n        }\n        return true;",
  "        var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var\
    \ c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in\
    \ s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        var c0 = s0.GroupBy(c => c).ToDictionary(g\
    \ => g.Key, g => g.Count());\n        var c1 = s1.GroupBy(c => c).ToDictionary(g\
    \ => g.Key, g => g.Count());\n        foreach (var kv in c0) {\n            if\
    \ (!c1.ContainsKey(kv.Key) || c1[kv.Key] != kv.Value) {\n                return\
    \ false;\n            }\n        }\n        return true;", "        var c0 = new\
    \ int[26];\n        var c1 = new int[26];\n        foreach (var c in s0) {\n \
    \           c0[c - 'a']++;\n        }\n        foreach (var c in s1) {\n     \
    \       c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n  \
    \          if (c0[i] != c1[i]) {\n                return false;\n            }\n\
    \        }\n        return true;", "        var c0 = s0.ToCharArray();\n     \
    \   var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        var c0 = new int[26];\n\
    \        var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        int[] cnt0 = new int[26];\n        int[] cnt1 = new int[26];\n        foreach\
    \ (char c in s0) {\n            cnt0[c - 'a']++;\n        }\n        foreach (char\
    \ c in s1) {\n            cnt1[c - 'a']++;\n        }\n        for (int i = 0;\
    \ i < 26; i++) {\n            if (cnt0[i] != cnt1[i]) {\n                return\
    \ false;\n            }\n        }\n        return true;", "        if (s0.Length\
    \ != s1.Length) {\n            return false;\n        }\n        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        var c0 = new int[256];\n\
    \        var c1 = new int[256];\n        foreach (var c in s0) {\n           \
    \ c0[c]++;\n        }\n        foreach (var c in s1) {\n            c1[c]++;\n\
    \        }\n        for (int i = 0; i < 256; i++) {\n            if (c0[i] !=\
    \ c1[i]) {\n                return false;\n            }\n        }\n        return\
    \ true;", "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n\
    \        Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0)\
    \ == new string(c1);", "        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        foreach (var c in s0) {\n            c0[c - 'a']++;\n        }\n    \
    \    foreach (var c in s1) {\n            c1[c - 'a']++;\n        }\n        for\
    \ (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n            \
    \    return false;\n            }\n        }\n        return true;", "       \
    \ var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n\
    \        Array.Sort(c1);\n        return c0.SequenceEqual(c1);", "        var\
    \ c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n\
    \        Array.Sort(c1);\n        return new string(c0) == new string(c1);", " \
    \       var c0 = new int[26];\n        var c1 = new int[26];\n        foreach\
    \ (var c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var\
    \ c in s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i\
    \ < 26; i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        int[] c0 = new int[26];\n\
    \        int[] c1 = new int[26];\n        foreach (char c in s0) {\n         \
    \   c0[c - 'a']++;\n        }\n        foreach (char c in s1) {\n            c1[c\
    \ - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n            if\
    \ (c0[i] != c1[i]) {\n                return false;\n            }\n        }\n\
    \        return true;", "        if (s0.Length != s1.Length) {\n            return\
    \ false;\n        }\n        var c0 = new int[256];\n        var c1 = new int[256];\n\
    \        foreach (var c in s0) {\n            c0[c]++;\n        }\n        foreach\
    \ (var c in s1) {\n            c1[c]++;\n        }\n        for (int i = 0; i\
    \ < 256; i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        var c0 = new int[26];\n\
    \        var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var\
    \ c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in\
    \ s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return c0.SequenceEqual(c1);", "        if (s0.Length != s1.Length) {\n\
    \            return false;\n        }\n        var c0 = new int[26];\n       \
    \ var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c - 'a']++;\n\
    \        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n    \
    \    }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        if (s0.Length != s1.Length) {\n            return false;\n        }\n \
    \       var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n     \
    \   Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0) ==\
    \ new string(c1);", "        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        foreach (var c in s0) {\n            c0[c - 'a']++;\n        }\n    \
    \    foreach (var c in s1) {\n            c1[c - 'a']++;\n        }\n        for\
    \ (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n            \
    \    return false;\n            }\n        }\n        return true;", "       \
    \ var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var c\
    \ in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in s1)\
    \ {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26; i++)\
    \ {\n            if (c0[i] != c1[i]) {\n                return false;\n      \
    \      }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        var c0 = new int[26];\n   \
    \     var c1 = new int[26];\n        for (int i = 0; i < s0.Length; i++) {\n \
    \           c0[s0[i] - 'a']++;\n            c1[s1[i] - 'a']++;\n        }\n  \
    \      for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n   \
    \             return false;\n            }\n        }\n        return true;",
  "        var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var\
    \ c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in\
    \ s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        for (int i = 0; i < c0.Length; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var counts0 = new int[26];\n        var counts1 = new int[26];\n      \
    \  foreach (var c in s0) {\n            counts0[c - 'a']++;\n        }\n     \
    \   foreach (var c in s1) {\n            counts1[c - 'a']++;\n        }\n    \
    \    for (int i = 0; i < 26; i++) {\n            if (counts0[i] != counts1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        if (s0.Length != s1.Length) {\n            return false;\n        }\n \
    \       var c0 = new int[26];\n        var c1 = new int[26];\n        for (int\
    \ i = 0; i < s0.Length; i++) {\n            c0[s0[i] - 'a']++;\n            c1[s1[i]\
    \ - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n            if\
    \ (c0[i] != c1[i]) {\n                return false;\n            }\n        }\n\
    \        return true;", "        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        foreach (var c in s0) {\n            c0[c - 'a']++;\n        }\n    \
    \    foreach (var c in s1) {\n            c1[c - 'a']++;\n        }\n        for\
    \ (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n            \
    \    return false;\n            }\n        }\n        return true;", "       \
    \ if (s0.Length != s1.Length) {\n            return false;\n        }\n      \
    \  var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n\
    \        Array.Sort(c1);\n        return new string(c0) == new string(c1);", " \
    \       var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n     \
    \   Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0) ==\
    \ new string(c1);", "        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        foreach (var c in s0) {\n            c0[c - 'a']++;\n        }\n    \
    \    foreach (var c in s1) {\n            c1[c - 'a']++;\n        }\n        for\
    \ (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n            \
    \    return false;\n            }\n        }\n        return true;", "       \
    \ var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n\
    \        Array.Sort(c1);\n        return new string(c0) == new string(c1);", " \
    \       var c0 = new int[26];\n        var c1 = new int[26];\n        foreach\
    \ (var c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var\
    \ c in s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i\
    \ < 26; i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return c0.SequenceEqual(c1);", "        var c0 = new int[26];\n     \
    \   var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c -\
    \ 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n      \
    \  Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0) ==\
    \ new string(c1);", "        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        foreach (var c in s0) {\n            c0[c - 'a']++;\n        }\n    \
    \    foreach (var c in s1) {\n            c1[c - 'a']++;\n        }\n        for\
    \ (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n            \
    \    return false;\n            }\n        }\n        return true;", "       \
    \ var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var c\
    \ in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in s1)\
    \ {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26; i++)\
    \ {\n            if (c0[i] != c1[i]) {\n                return false;\n      \
    \      }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        var c0 = new int[26];\n   \
    \     var c1 = new int[26];\n        for (int i = 0; i < s0.Length; i++) {\n \
    \           c0[s0[i] - 'a']++;\n            c1[s1[i] - 'a']++;\n        }\n  \
    \      for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n   \
    \             return false;\n            }\n        }\n        return true;",
  "        if (s0.Length != s1.Length) return false;\n        var c0 = s0.GroupBy(c\
    \ => c).ToDictionary(g => g.Key, g => g.Count());\n        var c1 = s1.GroupBy(c\
    \ => c).ToDictionary(g => g.Key, g => g.Count());\n        foreach (var k in c0.Keys)\
    \ {\n            if (!c1.ContainsKey(k) || c0[k] != c1[k]) return false;\n   \
    \     }\n        return true;", "        var c0 = new int[26];\n        var c1\
    \ = new int[26];\n        foreach (var c in s0) {\n            c0[c - 'a']++;\n\
    \        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n    \
    \    }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n      \
    \  Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0) ==\
    \ new string(c1);", "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n\
    \        Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0)\
    \ == new string(c1);", "        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        for (int i = 0; i < s0.Length; i++) {\n            c0[s0[i] - 'a']++;\n\
    \        }\n        for (int i = 0; i < s1.Length; i++) {\n            c1[s1[i]\
    \ - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n            if\
    \ (c0[i] != c1[i]) {\n                return false;\n            }\n        }\n\
    \        return true;", "        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        foreach (var c in s0) {\n            c0[c - 'a']++;\n        }\n    \
    \    foreach (var c in s1) {\n            c1[c - 'a']++;\n        }\n        for\
    \ (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n            \
    \    return false;\n            }\n        }\n        return true;", "       \
    \ var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var c\
    \ in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in s1)\
    \ {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26; i++)\
    \ {\n            if (c0[i] != c1[i]) {\n                return false;\n      \
    \      }\n        }\n        return true;", "        var c0 = new int[26];\n \
    \       var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n      \
    \  Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0) ==\
    \ new string(c1);", "        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        for (int i = 0; i < s0.Length; i++) {\n            c0[s0[i] - 'a']++;\n\
    \        }\n        for (int i = 0; i < s1.Length; i++) {\n            c1[s1[i]\
    \ - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n            if\
    \ (c0[i] != c1[i]) {\n                return false;\n            }\n        }\n\
    \        return true;", "        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        foreach (var c in s0) {\n            c0[c - 'a']++;\n        }\n    \
    \    foreach (var c in s1) {\n            c1[c - 'a']++;\n        }\n        for\
    \ (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n            \
    \    return false;\n            }\n        }\n        return true;", "       \
    \ var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var c\
    \ in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in s1)\
    \ {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26; i++)\
    \ {\n            if (c0[i] != c1[i]) {\n                return false;\n      \
    \      }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ return false;\n        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n\
    \        Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0)\
    \ == new string(c1);", "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n\
    \        Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0)\
    \ == new string(c1);", "        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        foreach (var c in s0) {\n            c0[c - 'a']++;\n        }\n    \
    \    foreach (var c in s1) {\n            c1[c - 'a']++;\n        }\n        for\
    \ (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n            \
    \    return false;\n            }\n        }\n        return true;", "       \
    \ var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var c\
    \ in s0) c0[c - 'a']++;\n        foreach (var c in s1) c1[c - 'a']++;\n      \
    \  for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) return false;\n\
    \        }\n        return true;", "        var c0 = new int[26];\n        var\
    \ c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c - 'a']++;\n\
    \        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n    \
    \    }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var\
    \ c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in\
    \ s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        var c0 = new int[26];\n   \
    \     var c1 = new int[26];\n        for (int i = 0; i < s0.Length; i++) {\n \
    \           c0[s0[i] - 'a']++;\n            c1[s1[i] - 'a']++;\n        }\n  \
    \      for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n   \
    \             return false;\n            }\n        }\n        return true;",
  "        var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var\
    \ c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in\
    \ s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        if (s0.Length !=\
    \ s1.Length) return false;\n        var c0 = s0.ToCharArray();\n        var c1\
    \ = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n    \
    \    return new string(c0) == new string(c1);", "        var c0 = new int[26];\n\
    \        var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var\
    \ c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in\
    \ s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        var c0 = new int[26];\n\
    \        var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n      \
    \  Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0) ==\
    \ new string(c1);", "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n\
    \        Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0)\
    \ == new string(c1);", "        if (s0.Length != s1.Length) {\n            return\
    \ false;\n        }\n        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n\
    \        Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0)\
    \ == new string(c1);", "        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        foreach (var c in s0) {\n            c0[c - 'a']++;\n        }\n    \
    \    foreach (var c in s1) {\n            c1[c - 'a']++;\n        }\n        for\
    \ (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n            \
    \    return false;\n            }\n        }\n        return true;", "       \
    \ var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var c\
    \ in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in s1)\
    \ {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26; i++)\
    \ {\n            if (c0[i] != c1[i]) {\n                return false;\n      \
    \      }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        int[] c0 = new int[26];\n \
    \       int[] c1 = new int[26];\n        for (int i = 0; i < s0.Length; i++) {\n\
    \            c0[s0[i] - 'a']++;\n            c1[s1[i] - 'a']++;\n        }\n \
    \       for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n  \
    \              return false;\n            }\n        }\n        return true;",
  "        int[] c0 = new int[26];\n        int[] c1 = new int[26];\n        foreach\
    \ (char c in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (char\
    \ c in s1) {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i\
    \ < 26; i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ return false;\n        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n\
    \        Array.Sort(c0);\n        Array.Sort(c1);\n        return c0.SequenceEqual(c1);",
  "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n      \
    \  Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0) ==\
    \ new string(c1);", "        if (s0.Length != s1.Length) {\n            return\
    \ false;\n        }\n        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n\
    \        Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0)\
    \ == new string(c1);", "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n\
    \        Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0)\
    \ == new string(c1);", "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n\
    \        Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0)\
    \ == new string(c1);", "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n\
    \        Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0)\
    \ == new string(c1);", "        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        foreach (var c in s0) {\n            c0[c - 'a']++;\n        }\n    \
    \    foreach (var c in s1) {\n            c1[c - 'a']++;\n        }\n        for\
    \ (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n            \
    \    return false;\n            }\n        }\n        return true;", "       \
    \ var c0 = new int[26];\n        var c1 = new int[26];\n        foreach (var c\
    \ in s0) {\n            c0[c - 'a']++;\n        }\n        foreach (var c in s1)\
    \ {\n            c1[c - 'a']++;\n        }\n        for (int i = 0; i < 26; i++)\
    \ {\n            if (c0[i] != c1[i]) {\n                return false;\n      \
    \      }\n        }\n        return true;", "        var c0 = new int[26];\n \
    \       var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n      \
    \  Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0) ==\
    \ new string(c1);", "        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        foreach (var c in s0) {\n            c0[c - 'a']++;\n        }\n    \
    \    foreach (var c in s1) {\n            c1[c - 'a']++;\n        }\n        for\
    \ (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n            \
    \    return false;\n            }\n        }\n        return true;", "       \
    \ var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n\
    \        Array.Sort(c1);\n        return new string(c0) == new string(c1);", " \
    \       var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n     \
    \   Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0) ==\
    \ new string(c1);", "        var c0 = new int[26];\n        var c1 = new int[26];\n\
    \        foreach (var c in s0) {\n            c0[c - 'a']++;\n        }\n    \
    \    foreach (var c in s1) {\n            c1[c - 'a']++;\n        }\n        for\
    \ (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n            \
    \    return false;\n            }\n        }\n        return true;", "       \
    \ if (s0.Length != s1.Length) return false;\n        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        for (int i = 0; i < c0.Length; i++) {\n            if (c0[i] != c1[i])\
    \ return false;\n        }\n        return true;", "        if (s0.Length != s1.Length)\
    \ {\n            return false;\n        }\n        var c0 = new int[26];\n   \
    \     var c1 = new int[26];\n        for (int i = 0; i < s0.Length; i++) {\n \
    \           c0[s0[i] - 'a']++;\n            c1[s1[i] - 'a']++;\n        }\n  \
    \      for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n   \
    \             return false;\n            }\n        }\n        return true;",
  "        var c0 = s0.GroupBy(c => c).Select(g => g.Count()).OrderBy(c => c);\n \
    \       var c1 = s1.GroupBy(c => c).Select(g => g.Count()).OrderBy(c => c);\n\
    \        return c0.SequenceEqual(c1);", "        var c0 = new int[26];\n     \
    \   var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c -\
    \ 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n      \
    \  Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0) ==\
    \ new string(c1);", "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n\
    \        Array.Sort(c0);\n        Array.Sort(c1);\n        return c0.SequenceEqual(c1);",
  "        var c0 = s0.ToCharArray();\n        var c1 = s1.ToCharArray();\n      \
    \  Array.Sort(c0);\n        Array.Sort(c1);\n        return new string(c0) ==\
    \ new string(c1);", "        var d0 = new Dictionary<char, int>();\n        var\
    \ d1 = new Dictionary<char, int>();\n        foreach (var c in s0) {\n       \
    \     if (!d0.ContainsKey(c)) {\n                d0[c] = 0;\n            }\n \
    \           d0[c]++;\n        }\n        foreach (var c in s1) {\n           \
    \ if (!d1.ContainsKey(c)) {\n                d1[c] = 0;\n            }\n     \
    \       d1[c]++;\n        }\n        return d0.Count == d1.Count && d0.All(kv\
    \ => d1.ContainsKey(kv.Key) && d1[kv.Key] == kv.Value);", "        var c0 = s0.ToCharArray();\n\
    \        var c1 = s1.ToCharArray();\n        Array.Sort(c0);\n        Array.Sort(c1);\n\
    \        return new string(c0) == new string(c1);", "        int[] c0 = new int[26];\n\
    \        int[] c1 = new int[26];\n        for (int i = 0; i < s0.Length; i++)\
    \ {\n            c0[s0[i] - 'a']++;\n        }\n        for (int i = 0; i < s1.Length;\
    \ i++) {\n            c1[s1[i] - 'a']++;\n        }\n        for (int i = 0; i\
    \ < 26; i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        var c0 = new int[26];\n\
    \        var c1 = new int[26];\n        foreach (var c in s0) {\n            c0[c\
    \ - 'a']++;\n        }\n        foreach (var c in s1) {\n            c1[c - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;"]
stop_tokens:
- "\n    }\n"

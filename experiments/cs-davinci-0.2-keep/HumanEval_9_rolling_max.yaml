name: HumanEval_9_rolling_max
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // From a given list of integers, generate a list of rolling maximum\
  \ element found until given moment\n    // in the sequence.\n    // >>> rolling_max([1,\
  \ 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public static List<long>\
  \ RollingMax(List<long> numbers) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
  \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
  \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
  \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new\
  \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
  \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
  \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
  \    }\n\n}\n"
completions: ["        var result = new List<long>();\n        long max = numbers[0];\n\
    \        result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n\
    \            max = Math.Max(max, numbers[i]);\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        var max = numbers[0];\n        result.Add(max);\n        for (int i =\
    \ 1; i < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        var max = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            max = Math.Max(max, number);\n      \
    \      result.Add(max);\n        }\n        return result;", "        var result\
    \ = new List<long>();\n        var max = long.MinValue;\n        foreach (var\
    \ number in numbers) {\n            max = Math.Max(max, number);\n           \
    \ result.Add(max);\n        }\n        return result;", "        var result =\
    \ new List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        var max = new List<long>();\n    \
    \    long currentMax = long.MinValue;\n        for (int i = 0; i < numbers.Count;\
    \ i++) {\n            currentMax = Math.Max(currentMax, numbers[i]);\n       \
    \     max.Add(currentMax);\n        }\n        return max;", "        var result\
    \ = new List<long>();\n        var max = long.MinValue;\n        foreach (var\
    \ number in numbers) {\n            max = Math.Max(max, number);\n           \
    \ result.Add(max);\n        }\n        return result;", "        var result =\
    \ new List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        long max = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            max = Math.Max(max, number);\n      \
    \      result.Add(max);\n        }\n        return result;", "        var result\
    \ = new List<long>();\n        var max = long.MinValue;\n        foreach (var\
    \ number in numbers) {\n            max = Math.Max(max, number);\n           \
    \ result.Add(max);\n        }\n        return result;", "        var maxes = new\
    \ List<long>();\n        long max = numbers[0];\n        maxes.Add(max);\n   \
    \     for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            maxes.Add(max);\n        }\n        return maxes;",
  "        var result = new List<long>();\n        var max = long.MinValue;\n    \
    \    foreach (var n in numbers) {\n            max = Math.Max(max, n);\n     \
    \       result.Add(max);\n        }\n        return result;", "        var result\
    \ = new List<long>();\n        long max = long.MinValue;\n        foreach (var\
    \ number in numbers) {\n            max = Math.Max(max, number);\n           \
    \ result.Add(max);\n        }\n        return result;", "        var result =\
    \ new List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        var max = long.MinValue;\n        foreach (var n in numbers) {\n    \
    \        max = Math.Max(max, n);\n            result.Add(max);\n        }\n  \
    \      return result;", "        var maxes = new List<long>();\n        long max\
    \ = long.MinValue;\n        foreach (var n in numbers) {\n            max = Math.Max(max,\
    \ n);\n            maxes.Add(max);\n        }\n        return maxes;", "     \
    \   List<long> result = new List<long>();\n        long max = numbers[0];\n  \
    \      result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n \
    \           if (numbers[i] > max) {\n                max = numbers[i];\n     \
    \       }\n            result.Add(max);\n        }\n        return result;", " \
    \       var result = new List<long>();\n        long max = numbers[0];\n     \
    \   result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n    \
    \        max = Math.Max(max, numbers[i]);\n            result.Add(max);\n    \
    \    }\n        return result;", "        var result = new List<long>();\n   \
    \     long max = long.MinValue;\n        foreach (var number in numbers) {\n \
    \           max = Math.Max(max, number);\n            result.Add(max);\n     \
    \   }\n        return result;", "        var max_so_far = numbers[0];\n      \
    \  var result = new List<long>();\n        result.Add(max_so_far);\n        for\
    \ (int i = 1; i < numbers.Count; i++) {\n            max_so_far = Math.Max(max_so_far,\
    \ numbers[i]);\n            result.Add(max_so_far);\n        }\n        return\
    \ result;", "        var result = new List<long>();\n        var max = long.MinValue;\n\
    \        foreach (var n in numbers) {\n            max = Math.Max(max, n);\n \
    \           result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        long max = long.MinValue;\n        foreach\
    \ (var num in numbers) {\n            max = Math.Max(max, num);\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ maxes = new List<long>();\n        long currentMax = long.MinValue;\n      \
    \  foreach (var number in numbers) {\n            currentMax = Math.Max(currentMax,\
    \ number);\n            maxes.Add(currentMax);\n        }\n        return maxes;",
  "        var result = new List<long>();\n        long max = numbers[0];\n      \
    \  result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n     \
    \       max = Math.Max(max, numbers[i]);\n            result.Add(max);\n     \
    \   }\n        return result;", "        var result = new List<long>();\n    \
    \    long max = numbers[0];\n        result.Add(max);\n        for (int i = 1;\
    \ i < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n  \
    \          result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        var max = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            max = Math.Max(max, number);\n      \
    \      result.Add(max);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        var result = new List<long>();\n \
    \       var max = long.MinValue;\n        foreach (var number in numbers) {\n\
    \            max = Math.Max(max, number);\n            result.Add(max);\n    \
    \    }\n        return result;", "        var result = new List<long>();\n   \
    \     var max = long.MinValue;\n        foreach (var number in numbers) {\n  \
    \          max = Math.Max(max, number);\n            result.Add(max);\n      \
    \  }\n        return result;", "        var result = new List<long>();\n     \
    \   var max = long.MinValue;\n        foreach (var number in numbers) {\n    \
    \        max = Math.Max(max, number);\n            result.Add(max);\n        }\n\
    \        return result;", "        var result = new List<long>();\n        var\
    \ max = numbers[0];\n        result.Add(max);\n        for (int i = 1; i < numbers.Count;\
    \ i++) {\n            max = Math.Max(max, numbers[i]);\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        var max = long.MinValue;\n        foreach (var number in numbers) {\n\
    \            max = Math.Max(max, number);\n            result.Add(max);\n    \
    \    }\n        return result;", "        var result = new List<long>();\n   \
    \     var max = long.MinValue;\n        foreach (var n in numbers) {\n       \
    \     max = Math.Max(max, n);\n            result.Add(max);\n        }\n     \
    \   return result;", "        var result = new List<long>();\n        long max\
    \ = long.MinValue;\n        foreach (var n in numbers) {\n            max = Math.Max(max,\
    \ n);\n            result.Add(max);\n        }\n        return result;", "   \
    \     var result = new List<long>();\n        var max = long.MinValue;\n     \
    \   foreach (var number in numbers) {\n            max = Math.Max(max, number);\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ max = new List<long>();\n        var currentMax = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            currentMax = Math.Max(currentMax, number);\n\
    \            max.Add(currentMax);\n        }\n        return max;", "        var\
    \ max = new List<long>();\n        long currentMax = numbers[0];\n        max.Add(currentMax);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > currentMax) {\n                currentMax = numbers[i];\n            }\n \
    \           max.Add(currentMax);\n        }\n        return max;", "        var\
    \ result = new List<long>();\n        long max = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            max = Math.Max(max, number);\n      \
    \      result.Add(max);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;",
  "        var result = new List<long>();\n        long max = numbers[0];\n      \
    \  result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n     \
    \       if (numbers[i] > max) {\n                max = numbers[i];\n         \
    \   }\n            result.Add(max);\n        }\n        return result;", "   \
    \     var result = new List<long>();\n        long max = numbers[0];\n       \
    \ result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n      \
    \      max = Math.Max(max, numbers[i]);\n            result.Add(max);\n      \
    \  }\n        return result;", "        var max = new List<long>();\n        long\
    \ current_max = numbers[0];\n        max.Add(current_max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > current_max) {\n\
    \                current_max = numbers[i];\n            }\n            max.Add(current_max);\n\
    \        }\n        return max;", "        var max_numbers = new List<long>();\n\
    \        var max_number = long.MinValue;\n        foreach (var number in numbers)\
    \ {\n            max_number = Math.Max(max_number, number);\n            max_numbers.Add(max_number);\n\
    \        }\n        return max_numbers;", "        var result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        var result = new List<long>();\n \
    \       long max = numbers[0];\n        result.Add(max);\n        for (int i =\
    \ 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n        \
    \        max = numbers[i];\n            }\n            result.Add(max);\n    \
    \    }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        var result = new List<long>();\n \
    \       long max = numbers[0];\n        result.Add(max);\n        for (int i =\
    \ 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n        \
    \        max = numbers[i];\n            }\n            result.Add(max);\n    \
    \    }\n        return result;", "        var result = new List<long>();\n   \
    \     long max = long.MinValue;\n        foreach (var number in numbers) {\n \
    \           if (number > max) {\n                max = number;\n            }\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        long max = long.MinValue;\n        foreach\
    \ (var n in numbers) {\n            max = Math.Max(max, n);\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long max = long.MinValue;\n        foreach (var n in numbers) {\n   \
    \         max = Math.Max(max, n);\n            result.Add(max);\n        }\n \
    \       return result;", "        var result = new List<long>();\n        long\
    \ max = numbers[0];\n        result.Add(max);\n        for (int i = 1; i < numbers.Count;\
    \ i++) {\n            max = Math.Max(max, numbers[i]);\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        var max = long.MinValue;\n        foreach (var number in numbers) {\n\
    \            max = Math.Max(max, number);\n            result.Add(max);\n    \
    \    }\n        return result;", "        var result = new List<long>();\n   \
    \     var max = long.MinValue;\n        foreach (var number in numbers) {\n  \
    \          max = Math.Max(max, number);\n            result.Add(max);\n      \
    \  }\n        return result;", "        var maxes = new List<long>();\n      \
    \  long max = long.MinValue;\n        foreach (var n in numbers) {\n         \
    \   max = Math.Max(max, n);\n            maxes.Add(max);\n        }\n        return\
    \ maxes;", "        var result = new List<long>();\n        var max = long.MinValue;\n\
    \        foreach (var number in numbers) {\n            max = Math.Max(max, number);\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        var max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long max = 0;\n        foreach (var n in numbers) {\n            max\
    \ = Math.Max(max, n);\n            result.Add(max);\n        }\n        return\
    \ result;", "        var result = new List<long>();\n        long max = numbers[0];\n\
    \        result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n\
    \            if (numbers[i] > max) {\n                max = numbers[i];\n    \
    \        }\n            result.Add(max);\n        }\n        return result;",
  "        var result = new List<long>();\n        long max = numbers[0];\n      \
    \  result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n     \
    \       if (numbers[i] > max) {\n                max = numbers[i];\n         \
    \   }\n            result.Add(max);\n        }\n        return result;", "   \
    \     var result = new List<long>();\n        long max = numbers[0];\n       \
    \ result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n      \
    \      if (numbers[i] > max) {\n                max = numbers[i];\n          \
    \  }\n            result.Add(max);\n        }\n        return result;", "    \
    \    var result = new List<long>();\n        var max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        var max = new List<long>();\n  \
    \      long currentMax = 0;\n        foreach (var number in numbers) {\n     \
    \       currentMax = Math.Max(currentMax, number);\n            max.Add(currentMax);\n\
    \        }\n        return max;", "        var result = new List<long>();\n  \
    \      long max = numbers[0];\n        result.Add(max);\n        for (int i =\
    \ 1; i < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        var max = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            max = Math.Max(max, number);\n      \
    \      result.Add(max);\n        }\n        return result;", "        var result\
    \ = new List<long>();\n        var max = long.MinValue;\n        foreach (var\
    \ number in numbers) {\n            max = Math.Max(max, number);\n           \
    \ result.Add(max);\n        }\n        return result;", "        var result =\
    \ new List<long>();\n        var max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;",
  "        var result = new List<long>();\n        var max = long.MinValue;\n    \
    \    foreach (var number in numbers) {\n            max = Math.Max(max, number);\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        var max = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            max = Math.Max(max, number);\n      \
    \      result.Add(max);\n        }\n        return result;", "        var max\
    \ = new List<long>();\n        long m = numbers[0];\n        max.Add(m);\n   \
    \     for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] >\
    \ m) {\n                m = numbers[i];\n            }\n            max.Add(m);\n\
    \        }\n        return max;", "        var result = new List<long>();\n  \
    \      var max = numbers[0];\n        result.Add(max);\n        for (int i = 1;\
    \ i < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n  \
    \          result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        var max = long.MinValue;\n        foreach\
    \ (var n in numbers) {\n            max = Math.Max(max, n);\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long max = long.MinValue;\n        foreach (var number in numbers) {\n\
    \            max = Math.Max(max, number);\n            result.Add(max);\n    \
    \    }\n        return result;"]
stop_tokens:
- "\n    }\n"

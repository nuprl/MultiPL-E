language: cs
name: HumanEval_18_how_many_times
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        int count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00010]\
    \ in <24a8c5bb208a43a0aaa785f66d7a88e4>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <24a8c5bb208a43a0aaa785f66d7a88e4>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00010]\
    \ in <24a8c5bb208a43a0aaa785f66d7a88e4>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <24a8c5bb208a43a0aaa785f66d7a88e4>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring)\n                count++;\n        }\n        return count;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <ced489733ed74c3297558e3ca58c4231>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <ced489733ed74c3297558e3ca58c4231>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <ced489733ed74c3297558e3ca58c4231>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <ced489733ed74c3297558e3ca58c4231>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        return str.Length - str.Replace(substring,\
    \ \"\").Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1db1b90a58004e37a5bc55abed9d237c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1db1b90a58004e37a5bc55abed9d237c>:0 \n"
  stdout: ''
  timestamp: 1659797595
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        int count = 0;\n        int i = 0;\n     \
    \   while ((i = str.IndexOf(substring, i)) != -1) {\n            i += substring.Length;\n\
    \            count++;\n        }\n        return count;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) ==\
    \ (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n  \
    \  Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7408b7eb33e8478a80f357127dc0541d>:0 \n"
  stdout: ''
  timestamp: 1659797595
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring)\n                count++;\n        }\n        return count;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <ced489733ed74c3297558e3ca58c4231>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <ced489733ed74c3297558e3ca58c4231>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <ced489733ed74c3297558e3ca58c4231>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <ced489733ed74c3297558e3ca58c4231>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        int index = 0;\n\
    \        while ((index = str.IndexOf(substring, index)) != -1) {\n           \
    \ index += substring.Length;\n            count++;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5943b9c4077f45b488ed4b63191a5396>:0 \n"
  stdout: ''
  timestamp: 1659797595
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        if (substring.Length == 0) {\n           \
    \ return 0;\n        }\n        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str[i] == substring[0]) {\n                bool match\
    \ = true;\n                for (int j = 1; j < substring.Length; j++) {\n    \
    \                if (i + j >= str.Length || str[i + j] != substring[j]) {\n  \
    \                      match = false;\n                        break;\n      \
    \              }\n                }\n                if (match) {\n          \
    \          count++;\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        int len = substring.Length;\n\
    \        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ len) == substring) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00010]\
    \ in <27bea77d6f644c0ea96cbbd2ecbc94c7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <27bea77d6f644c0ea96cbbd2ecbc94c7>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00010]\
    \ in <27bea77d6f644c0ea96cbbd2ecbc94c7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <27bea77d6f644c0ea96cbbd2ecbc94c7>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        if (substring.Length == 0) {\n           \
    \ return 0;\n        }\n        int count = 0;\n        int index = 0;\n     \
    \   while (true) {\n            index = str.IndexOf(substring, index);\n     \
    \       if (index == -1) {\n                break;\n            }\n          \
    \  count++;\n            index++;\n        }\n        return count;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static long HowManyTimes(string\
    \ str, string substring) {\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, substring.Length) ==\
    \ substring) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <b14435cc58ad4630a94e9bd5716b6bc3>:0 \n"
  stdout: ''
  timestamp: 1659797594

name: HumanEval_147_get_max_triples
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // You are given a positive integer n. You have to create an integer\
  \ array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
  \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a\
  \ where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example\
  \ :\n    // Input: n = 5\n    // Output: 1\n    // Explanation: \n    // a = [1,\
  \ 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static\
  \ long GetMaxTriples(long n) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))\
  \ == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))\
  \ == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
completions: ["        long result = 0;\n        long[] a = new long[n];\n       \
    \ for (long i = 1; i <= n; i++) {\n            a[i - 1] = i * i - i + 1;\n   \
    \     }\n        for (long i = 0; i < n; i++) {\n            for (long j = i +\
    \ 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n     \
    \               if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                       \
    \ result++;\n                    }\n                }\n            }\n       \
    \ }\n        return result;", "        // Your code goes here.\n        // You\
    \ can add helper methods.\n        long count = 0;\n        for (long i = 1; i\
    \ < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n              \
    \  for (long k = j + 1; k < n; k++) {\n                    if ((i * i - i + 1\
    \ + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;", "        // Write your code here\n        return 0;", "        long\
    \ count = 0;\n        for (long i = 1; i < n; i++) {\n            for (long j\
    \ = i + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;", "        // Write your\
    \ code here.\n        return 0;", "        // Write your code here\n        return\
    \ 0;", "        // Write your code here\n        return 0;", "        // Write\
    \ your code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\"\
    );\n        long count = 0;\n        for (long i = 1; i < n; i++) {\n        \
    \    for (long j = i + 1; j < n; j++) {\n                for (long k = j + 1;\
    \ k < n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k *\
    \ k - k + 1) % 3 == 0) {\n                        count++;\n                 \
    \   }\n                }\n            }\n        }\n        return count;", " \
    \       // Write your code here\n        return 0;", "        // Write your code\
    \ here\n        return 0;", "        // Write your code here\n        return 0;",
  "        long count = 0;\n        for (long i = 1; i < n; i++) {\n            for\
    \ (long j = i + 1; j < n; j++) {\n                for (long k = j + 1; k < n;\
    \ k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k +\
    \ 1) % 3 == 0) {\n                        count++;\n                    }\n  \
    \              }\n            }\n        }\n        return count;", "        long\
    \ result = 0;\n        // Write your code here.\n        return result;", "  \
    \      // Write your code here\n        return 0;", "        long count = 0;\n\
    \        for (long i = 1; i < n; i++) {\n            for (long j = i + 1; j <\
    \ n; j++) {\n                for (long k = j + 1; k < n; k++) {\n            \
    \        if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n   \
    \                     count++;\n                    }\n                }\n   \
    \         }\n        }\n        return count;", "        long count = 0;\n   \
    \     for (long i = 1; i < n; i++) {\n            for (long j = i + 1; j < n;\
    \ j++) {\n                for (long k = j + 1; k < n; k++) {\n               \
    \     if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n      \
    \                  count++;\n                    }\n                }\n      \
    \      }\n        }\n        return count;", "        // Write your code here\n\
    \        return 0;", "        // Write your code here.\n        return 0;", " \
    \       // Write your code here.\n        return 0;", "        // The number of\
    \ triples is equal to the number of triples of the form (i, j, k)\n        //\
    \ where i < j < k and i + j + k is divisible by 3.\n        // The number of triples\
    \ of the form (i, j, k) where i < j < k is equal to\n        // n * (n - 1) *\
    \ (n - 2) / 6.\n        // The number of triples of the form (i, j, k) where i\
    \ + j + k is divisible by 3 is\n        // equal to the number of triples of the\
    \ form (i, j, k) where i + j + k is divisible by 3\n        // and i < j < k.\n\
    \        // The number of triples of the form (i, j, k) where i + j + k is divisible\
    \ by 3 and i < j < k\n        // is equal to the number of triples of the form\
    \ (i, j, k) where i + j + k is divisible by 3\n        // and i < j < k and i\
    \ + j + k is even.\n        // The number of triples of the form (i, j, k) where\
    \ i + j + k is divisible by 3 and i < j < k\n        // and i + j + k is even\
    \ is equal to the number of triples of the form (i, j, k) where i + j + k\n  \
    \      // is divisible by 3 and i < j < k and i + j + k is even and i + j is even.\n\
    \        // The number of triples of the form (i, j, k) where i + j + k is divisible\
    \ by 3 and i < j < k\n        // and i + j + k is even and i + j is even is equal\
    \ to the number of triples of the form (i, j, k)\n        // where i + j + k is\
    \ divisible by 3 and i < j < k and i + j + k is even and i + j is even and i +\
    \ k is even.\n        // The number of triples of the form (i, j, k) where i +\
    \ j + k is divisible by 3 and i < j < k\n        // and i + j + k is even and\
    \ i + j is even and", "        // Write your code here\n        return 0;", " \
    \       // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long count = 0;\n        for (long i = 1; i < n;\
    \ i++) {\n            for (long j = i + 1; j < n; j++) {\n                for\
    \ (long k = j + 1; k < n; k++) {\n                    if ((i * i - i + 1 + j *\
    \ j - j + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n \
    \                   }\n                }\n            }\n        }\n        return\
    \ count;", "        // Write your code here.\n        return 0;", "        long\
    \ count = 0;\n        for (long i = 1; i < n; i++) {\n            for (long j\
    \ = i + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;", "        // Write your\
    \ code here\n        return 0;", "        // Write your code here\n        return\
    \ 0;", "        // Write your code here.\n        return 0;", "        // Write\
    \ your code here.\n        return 0;", "        // Write your code here\n    \
    \    return 0;", "        // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long count = 0;\n        for (long i = 1; i < n;\
    \ i++) {\n            for (long j = i + 1; j < n; j++) {\n                for\
    \ (long k = j + 1; k < n; k++) {\n                    if ((i * i - i + 1 + j *\
    \ j - j + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n \
    \                   }\n                }\n            }\n        }\n        return\
    \ count;", "        // Write your code here\n        return 0;", "        // Write\
    \ your code here.\n        return 0;", "        // Write your code here\n    \
    \    return 0;", "        // Your code goes here.\n        return 0;", "     \
    \   // Write your code here\n        return 0;", "        // Write your code here.\n\
    \        return 0;", "        // Write your code here\n        return 0;", " \
    \       // The number of triples is equal to the number of triples of the form\
    \ (i, j, k)\n        // where i < j < k, and i + j + k is a multiple of 3.\n \
    \       // Let's count the number of triples of the form (i, j, k) where i < j\
    \ < k,\n        // and i + j + k is a multiple of 3.\n        // Let's fix the\
    \ value of i.\n        // The number of triples of the form (i, j, k) where i\
    \ < j < k, and i + j + k is a multiple of 3\n        // is equal to the number\
    \ of triples of the form (0, j - i, k - i) where j - i < k - i,\n        // and\
    \ 0 + (j - i) + (k - i) is a multiple of 3.\n        // Let's fix the value of\
    \ j - i.\n        // The number of triples of the form (i, j, k) where i < j <\
    \ k, and i + j + k is a multiple of 3\n        // is equal to the number of triples\
    \ of the form (0, j - i, k - i) where j - i < k - i,\n        // and 0 + (j -\
    \ i) + (k - i) is a multiple of 3.\n        // Let's fix the value of k - i.\n\
    \        // The number of triples of the form (i, j, k) where i < j < k, and i\
    \ + j + k is a multiple of 3\n        // is equal to the number of triples of\
    \ the form (0, j - i, k - i) where j - i < k - i,\n        // and 0 + (j - i)\
    \ + (k - i) is a multiple of 3.\n        // The number of triples of the form\
    \ (0, j - i, k - i) where j - i < k - i,\n        // and 0 + (j - i) + (k - i)\
    \ is a multiple of 3 is equal to the number of triples of the form\n        //\
    \ (0, j - i, k - i) where j - i < k - i, and 0 + (j - i) + (k - i) is a multiple\
    \ of", "        // Write your code here\n        return 0;", "        // The array\
    \ a is a sequence of numbers of the form i * i - i + 1.\n        // The sum of\
    \ 3 consecutive numbers in a is:\n        // a[i] + a[i + 1] + a[i + 2] = 3 *\
    \ i * i - 3 * i + 3\n        // = 3 * (i * i - i + 1)\n        // = 3 * a[i]\n\
    \        // So the sum of 3 consecutive numbers in a is always a multiple of 3.\n\
    \        // The number of triples (a[i], a[j], a[k]) of a where i < j < k is\n\
    \        // the number of triples (i, j, k) where 1 \u2264 i < j < k \u2264 n.\n\
    \        // The number of triples (i, j, k) where 1 \u2264 i < j < k \u2264 n\
    \ is\n        // the number of triples (i, j, k) where 1 \u2264 i < j \u2264 n\
    \ and 1 \u2264 j < k \u2264 n.\n        // The number of triples (i, j, k) where\
    \ 1 \u2264 i < j \u2264 n and 1 \u2264 j < k \u2264 n is\n        // the number\
    \ of triples (i, j, k) where 1 \u2264 i \u2264 n and 1 \u2264 j < k \u2264 n.\n\
    \        // The number of triples (i, j, k) where 1 \u2264 i \u2264 n and 1 \u2264\
    \ j < k \u2264 n is\n        // the number of triples (i, j, k) where 1 \u2264\
    \ j < k \u2264 n.\n        // The number of triples (i, j, k) where 1 \u2264 j\
    \ < k \u2264 n is\n        // the number of triples (j, k) where 1 \u2264 j <\
    \ k \u2264 n.\n        // The number of triples (j, k) where 1 \u2264 j < k \u2264\
    \ n is\n        // the number of pairs (j, k) where 1 \u2264 j < k \u2264 n.\n\
    \        // The number of pairs (j, k) where 1 \u2264 j < k \u2264 n is\n    \
    \    // the number of pairs (j, k) where 1 \u2264 j \u2264 n and 1 \u2264 k \u2264\
    \ n.\n        // The number of pairs (j, k) where 1 \u2264 j \u2264 n and 1 \u2264\
    \ k \u2264 n is\n        // the number of pairs (j,", "        // Write your code\
    \ here.\n        return 0;", "        long result = 0;\n        for (long i =\
    \ 1; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n         \
    \       for (long k = j + 1; k < n; k++) {\n                    if ((i * i - i\
    \ + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n                        result++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ result;", "        // Write your code here\n        return 0;", "        //\
    \ TODO: Implement your solution here\n        return 0;", "        // Write your\
    \ code here\n        return 0;", "        long count = 0;\n        for (long i\
    \ = 1; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n       \
    \         for (long k = j + 1; k < n; k++) {\n                    if ((i * i -\
    \ i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n                       \
    \ count++;\n                    }\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        long[] a = new long[n];\n\
    \        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n  \
    \      }\n        for (int i = 0; i < n; i++) {\n            for (int j = i +\
    \ 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n      \
    \              if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;", "        // Write your code here\n        return 0;", "        // Write\
    \ your code here\n        return 0;", "        // Write your code here.\n    \
    \    return 0;", "        // Write your code here\n        return 0;", "     \
    \   // Write your code here.\n        return 0;", "        // Write your code\
    \ here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\");\n\
    \        long count = 0;\n        for (long i = 1; i < n; i++) {\n           \
    \ for (long j = i + 1; j < n; j++) {\n                for (long k = j + 1; k <\
    \ n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k * k -\
    \ k + 1) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  // Write your code here.\n        // We can use the fact that a[i] = i * i\
    \ - i + 1 is a multiple of 3 iff i is a multiple of 3.\n        // We can also\
    \ use the fact that a[i] + a[j] + a[k] is a multiple of 3 iff i + j + k is a multiple\
    \ of 3.\n        // So we can count the number of triples (i, j, k) where i, j,\
    \ k are all multiples of 3.\n        // We can also count the number of triples\
    \ (i, j, k) where i, j, k are all not multiples of 3.\n        // We can also\
    \ count the number of triples (i, j, k) where i, j are multiples of 3 and k is\
    \ not a multiple of 3.\n        // We can also count the number of triples (i,\
    \ j, k) where i, k are multiples of 3 and j is not a multiple of 3.\n        //\
    \ We can also count the number of triples (i, j, k) where j, k are multiples of\
    \ 3 and i is not a multiple of 3.\n        // We can also count the number of\
    \ triples (i, j, k) where i is a multiple of 3 and j, k are not multiples of 3.\n\
    \        // We can also count the number of triples (i, j, k) where j is a multiple\
    \ of 3 and i, k are not multiples of 3.\n        // We can also count the number\
    \ of triples (i, j, k) where k is a multiple of 3 and i, j are not multiples of\
    \ 3.\n        // We can also count the number of triples (i, j, k) where i is\
    \ not a multiple of 3 and j, k are multiples of 3.\n        // We can also count\
    \ the number of triples (i, j, k) where j is not a multiple of 3 and i, k are\
    \ multiples of 3.\n        // We can also count the number of triples (i, j, k)\
    \ where k is not a multiple of 3 and i, j are multiples of 3.\n        // We can\
    \ also count the number of triples (i, j, k) where i is not a multiple of 3 and\
    \ j", "        // Your code goes here.\n        long count = 0;\n        for (long\
    \ i = 1; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n     \
    \           for (long k = j + 1; k < n; k++) {\n                    if ((i * i\
    \ - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n                     \
    \   count++;\n                    }\n                }\n            }\n      \
    \  }\n        return count;", "        long count = 0;\n        for (long i =\
    \ 1; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n         \
    \       for (long k = j + 1; k < n; k++) {\n                    if ((i * i - i\
    \ + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;", "        // Write your code here\n        return 0;", "        // Write\
    \ your code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\"\
    );\n        long res = 0;\n        for (long i = 1; i < n; i++) {\n          \
    \  for (long j = i + 1; j < n; j++) {\n                for (long k = j + 1; k\
    \ < n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k * k\
    \ - k + 1) % 3 == 0) {\n                        res++;\n                    }\n\
    \                }\n            }\n        }\n        return res;", "        //\
    \ Write your code here.\n        return 0;", "        // Write your code here\n\
    \        return 0;", "        long count = 0;\n        for (long i = 1; i < n\
    \ - 1; i++) {\n            for (long j = i + 1; j < n; j++) {\n              \
    \  for (long k = j + 1; k <= n; k++) {\n                    if ((i * i - i + 1\
    \ + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;", "        // We can use the fact that a[i] = i * i - i + 1 is a multiple\
    \ of 3 iff i is a multiple of 3.\n        // So, we can just count the number\
    \ of triples of a[i] where i is a multiple of 3.\n        // Let's say there are\
    \ m such numbers. Then, we can choose 3 of them in m * (m - 1) * (m - 2) / 6 ways.\n\
    \        // We can also choose 2 of them in m * (m - 1) / 2 ways.\n        //\
    \ We can also choose 1 of them in m ways.\n        // So, the answer is m * (m\
    \ - 1) * (m - 2) / 6 + m * (m - 1) / 2 + m.\n        // We can calculate m as\
    \ n / 3 + n / 9 + n / 27 + ...\n        // This is a geometric series with ratio\
    \ 1 / 3.\n        // So, the answer is (n / 3) * (n / 3 + 1) * (n / 3 + 2) / 6\
    \ + (n / 3) * (n / 3 + 1) / 2 + n / 3.\n        // We can simplify this to (n\
    \ * (n + 1) * (n + 2) / 18 + n * (n + 1) / 12 + n / 3) / 2.\n        // We can\
    \ simplify this to (n * (n + 1) * (n + 2) + 6 * n * (n + 1) + 18 * n) / 72.\n\
    \        // We can simplify this to (n * (n + 1) * (n + 2) + 6 * n * (n + 1) +\
    \ 18 * n) >> 5.\n        return (n * (n + 1) * (n + 2) + 6 * n * (n + 1) + 18\
    \ * n) >> 5;", "        // Write your code here\n        return 0;", "       \
    \ // Write your code here\n        return 0;", "        // TODO: Implement your\
    \ solution here\n        return 0;", "        // Write your code here.\n     \
    \   return 0;", "        // Write your code here\n        return 0;", "      \
    \  // Write your code here\n        return 0;", "        // Write your code here.\n\
    \        return 0;", "        long count = 0;\n        for (long i = 1; i < n;\
    \ i++) {\n            for (long j = i + 1; j < n; j++) {\n                for\
    \ (long k = j + 1; k < n; k++) {\n                    if ((i * i - i + 1 + j *\
    \ j - j + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n \
    \                   }\n                }\n            }\n        }\n        return\
    \ count;", "        // Write your code here\n        return 0;", "        // Write\
    \ your code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\"\
    );\n        long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n \
    \           a[i] = i * i - i + 1;\n        }\n        long count = 0;\n      \
    \  for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++)\
    \ {\n                for (int k = j + 1; k < n; k++) {\n                    if\
    \ ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n      \
    \              }\n                }\n            }\n        }\n        return\
    \ count;", "        // Write your code here\n        return 0;", "        // Write\
    \ your code here\n        return 0;", "        // Write your code here\n     \
    \   return 0;", "        // TODO: Implement this function\n        return 0;",
  "        // Write your code here\n        return 0;", "        long count = 0;\n\
    \        for (long i = 1; i < n - 1; i++) {\n            for (long j = i + 1;\
    \ j < n; j++) {\n                for (long k = j + 1; k <= n; k++) {\n       \
    \             if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        for (long i = 1; i < n; i++) {\n            for (long j = i + 1; j <\
    \ n; j++) {\n                for (long k = j + 1; k < n; k++) {\n            \
    \        if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n   \
    \                     count++;\n                    }\n                }\n   \
    \         }\n        }\n        return count;", "        // Write your code here\n\
    \        return 0;", "        long[] a = new long[n];\n        for (int i = 0;\
    \ i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long count\
    \ = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1;\
    \ j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;", "        long sum = 0;\n        long[] a = new long[n];\n        for\
    \ (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n  \
    \      for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++)\
    \ {\n                for (int k = j + 1; k < n; k++) {\n                    if\
    \ ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        sum++;\n        \
    \            }\n                }\n            }\n        }\n        return sum;",
  "        // Write your code here\n        return 0;", "        long count = 0;\n\
    \        for (long i = 1; i < n; i++) {\n            for (long j = i + 1; j <\
    \ n; j++) {\n                for (long k = j + 1; k < n; k++) {\n            \
    \        if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n   \
    \                     count++;\n                    }\n                }\n   \
    \         }\n        }\n        return count;", "        // Write your code here.\n\
    \        return 0;", "        // Write your code here\n        return 0;", " \
    \       // Write your code here\n        return 0;", "        // Write your code\
    \ here.\n        return 0;", "        // Write your code here\n        return\
    \ 0;", "        // We want to find the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n        // and a[i] + a[j] + a[k] is a multiple of 3.\n\
    \        // We can rewrite this as:\n        // a[i] + a[j] + a[k] = 3 * m, where\
    \ m is an integer.\n        // a[i] + a[j] = 3 * m - a[k]\n        // a[i] + a[j]\
    \ = 3 * m - (i * i - i + 1)\n        // a[i] + a[j] = 3 * m - i * i + i - 1\n\
    \        // a[i] + a[j] = 3 * m - i * i + i - 1\n        // a[i] + a[j] = 3 *\
    \ m - i * i + i - 1\n        // a[i] + a[j] = 3 * m - i * i + i - 1\n        //\
    \ a[i] + a[j] = 3 * m - i * i + i - 1\n        // a[i] + a[j] = 3 * m - i * i\
    \ + i - 1\n        // a[i] + a[j] = 3 * m - i * i + i - 1\n        // a[i] + a[j]\
    \ = 3 * m - i * i + i - 1\n        // a[i] + a[j] = 3 * m - i * i + i - 1\n  \
    \      // a[i] + a[j] = 3 * m - i * i + i - 1\n        // a[i] + a[j] = 3 * m\
    \ - i * i + i - 1\n        // a[i] + a[j] = 3 * m - i * i + i - 1\n        //\
    \ a[i] + a[j] = 3 * m - i * i + i - 1\n        // a[i] + a[j] = 3 * m - i * i\
    \ + i - 1\n        // a[i] + a[j] = 3 * m - i * i + i - 1\n        // a[i] + a",
  "        // Write your code here\n        return 0;", "        // Your code goes\
    \ here.\n        return 0;", "        // Write your code here.\n        return\
    \ 0;", "        // Write your code here\n        return 0;", "        long count\
    \ = 0;\n        for (long i = 1; i < n - 1; i++) {\n            for (long j =\
    \ i + 1; j < n; j++) {\n                for (long k = j + 1; k <= n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;", "        // Write your\
    \ code here.\n        long count = 0;\n        for (long i = 1; i < n; i++) {\n\
    \            for (long j = i + 1; j < n; j++) {\n                for (long k =\
    \ j + 1; k < n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1\
    \ + k * k - k + 1) % 3 == 0) {\n                        count++;\n           \
    \         }\n                }\n            }\n        }\n        return count;",
  "        // Write your code here.\n        return 0;", "        long result = 0;\n\
    \        long[] a = new long[n];\n        for (long i = 1; i <= n; i++) {\n  \
    \          a[i - 1] = i * i - i + 1;\n        }\n        for (long i = 0; i <\
    \ n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                for\
    \ (long k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] + a[k])\
    \ % 3 == 0) {\n                        result++;\n                    }\n    \
    \            }\n            }\n        }\n        return result;", "        //\
    \ Write your code here.\n        return 0;", "        // Write your code here.\n\
    \        return 0;", "        // Write your code here\n        return 0;", " \
    \       // Write your code here.\n        return 0;", "        // Your code goes\
    \ here.\n        return 0;", "        long res = 0;\n        long[] a = new long[n];\n\
    \        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n  \
    \      }\n        for (int i = 0; i < n; i++) {\n            for (int j = i +\
    \ 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n      \
    \              if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        res++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ res;", "        // Write your code here.\n        return 0;", "        // Write\
    \ your code here.\n        return 0;", "        // Write your code here\n    \
    \    return 0;", "        // Your code goes here.\n        return 0;", "     \
    \   long count = 0;\n        for (long i = 1; i < n; i++) {\n            for (long\
    \ j = i + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;", "        // Write your\
    \ code here.\n        return 0;", "        // Write your code here\n        return\
    \ 0;", "        long count = 0;\n        for (long i = 1; i < n; i++) {\n    \
    \        for (long j = i + 1; j < n; j++) {\n                for (long k = j +\
    \ 1; k < n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k\
    \ * k - k + 1) % 3 == 0) {\n                        count++;\n               \
    \     }\n                }\n            }\n        }\n        return count;",
  "        // Write your code here\n        return 0;", "        // Write your code\
    \ here\n        return 0;", "        // The number of triples is the number of\
    \ ways to choose 3 numbers from n,\n        // where each number is a multiple\
    \ of 3.\n        // The number of ways to choose 3 numbers from n is n choose\
    \ 3.\n        // The number of ways to choose 3 numbers from n, where each number\
    \ is a multiple of 3,\n        // is the number of ways to choose 3 numbers from\
    \ n / 3.\n        // The number of ways to choose 3 numbers from n / 3 is (n /\
    \ 3) choose 3.\n        // The number of ways to choose 3 numbers from n / 3 is\
    \ (n / 3) choose 3.\n        // The number of ways to choose 3 numbers from n\
    \ / 3 is (n / 3) choose 3.\n        // The number of ways to choose 3 numbers\
    \ from n / 3 is (n / 3) choose 3.\n        // The number of ways to choose 3 numbers\
    \ from n / 3 is (n / 3) choose 3.\n        // The number of ways to choose 3 numbers\
    \ from n / 3 is (n / 3) choose 3.\n        // The number of ways to choose 3 numbers\
    \ from n / 3 is (n / 3) choose 3.\n        // The number of ways to choose 3 numbers\
    \ from n / 3 is (n / 3) choose 3.\n        // The number of ways to choose 3 numbers\
    \ from n / 3 is (n / 3) choose 3.\n        // The number of ways to choose 3 numbers\
    \ from n / 3 is (n / 3) choose 3.\n        // The number of ways to choose 3 numbers\
    \ from n / 3 is (n / 3) choose 3.\n        // The number of ways to choose 3 numbers\
    \ from n / 3 is (n / 3) choose 3.\n        // The number of ways to choose 3 numbers\
    \ from n / 3 is (n / 3) choose 3.\n        // The number of ways to choose 3 numbers\
    \ from n / 3 is (n / 3) choose 3.\n        // The number of ways to choose 3 numbers\
    \ from n / 3 is (n / 3) choose 3.\n        // The number of ways to choose 3 numbers\
    \ from n / 3 is (n / 3) choose 3.\n        // The number of ways to choose 3 numbers\
    \ from n / 3 is (n / 3) choose 3.\n        // The number of ways to choose 3 numbers\
    \ from n /", "        // Write your code here\n        return 0;", "        //\
    \ Write your code here\n        return 0;", "        // Write your code here\n\
    \        return 0;", "        // Write your code here\n        return 0;", " \
    \       // Write your code here\n        // To debug: Console.Error.WriteLine(\"\
    Debug messages...\");\n        long count = 0;\n        for (long i = 1; i < n;\
    \ i++) {\n            for (long j = i + 1; j < n; j++) {\n                for\
    \ (long k = j + 1; k < n; k++) {\n                    if ((i * i - i + 1 + j *\
    \ j - j + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n \
    \                   }\n                }\n            }\n        }\n        return\
    \ count;", "        long count = 0;\n        for (long i = 1; i < n - 1; i++)\
    \ {\n            for (long j = i + 1; j < n; j++) {\n                for (long\
    \ k = j + 1; k <= n; k++) {\n                    if ((i * i - i + 1 + j * j -\
    \ j + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n     \
    \               }\n                }\n            }\n        }\n        return\
    \ count;", "        // Write your code here\n        return 0;", "        long\
    \ count = 0;\n        for (long i = 1; i < n; i++) {\n            for (long j\
    \ = i + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;", "        // Write your\
    \ code here\n        return 0;", "        // Write your code here.\n        return\
    \ 0;", "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n     \
    \       sum += i * i - i + 1;\n        }\n        return sum / 3;", "        long\
    \ count = 0;\n        long[] a = new long[n];\n        for (int i = 0; i < n;\
    \ i++) {\n            a[i] = i * i - i + 1;\n        }\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  // Write your code here.\n        return 0;", "        long count = 0;\n  \
    \      for (long i = 1; i < n; i++) {\n            for (long j = i + 1; j < n;\
    \ j++) {\n                for (long k = j + 1; k < n; k++) {\n               \
    \     if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n      \
    \                  count++;\n                    }\n                }\n      \
    \      }\n        }\n        return count;", "        // Write your code here.\n\
    \        return 0;", "        // Write your code here\n        return 0;", " \
    \       // Write your code here.\n        return 0;"]
stop_tokens:
- "\n    }\n"

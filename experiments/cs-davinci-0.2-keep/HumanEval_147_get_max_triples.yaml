name: HumanEval_147_get_max_triples
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // You are given a positive integer n. You have to create an integer\
  \ array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
  \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a\
  \ where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example\
  \ :\n    // Input: n = 5\n    // Output: 1\n    // Explanation: \n    // a = [1,\
  \ 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static\
  \ long GetMaxTriples(long n) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))\
  \ == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))\
  \ == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
completions: ["        long result = 0;\n        long[] a = new long[n];\n       \
    \ for (long i = 1; i <= n; i++) {\n            a[i - 1] = i * i - i + 1;\n   \
    \     }\n        for (long i = 0; i < n; i++) {\n            for (long j = i +\
    \ 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n     \
    \               if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                       \
    \ result++;\n                    }\n                }\n            }\n       \
    \ }\n        return result;", "        // Your code goes here.\n        // You\
    \ can add helper methods.\n        long count = 0;\n        for (long i = 1; i\
    \ < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n              \
    \  for (long k = j + 1; k < n; k++) {\n                    if ((i * i - i + 1\
    \ + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;", "        // Write your code here\n        return 0;", "        long\
    \ count = 0;\n        for (long i = 1; i < n; i++) {\n            for (long j\
    \ = i + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;", "        // Write your\
    \ code here.\n        return 0;", "        // Write your code here\n        return\
    \ 0;", "        // Write your code here\n        return 0;", "        // Write\
    \ your code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\"\
    );\n        long count = 0;\n        for (long i = 1; i < n; i++) {\n        \
    \    for (long j = i + 1; j < n; j++) {\n                for (long k = j + 1;\
    \ k < n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k *\
    \ k - k + 1) % 3 == 0) {\n                        count++;\n                 \
    \   }\n                }\n            }\n        }\n        return count;", " \
    \       // Write your code here\n        return 0;", "        // Write your code\
    \ here\n        return 0;", "        // Write your code here\n        return 0;",
  "        long count = 0;\n        for (long i = 1; i < n; i++) {\n            for\
    \ (long j = i + 1; j < n; j++) {\n                for (long k = j + 1; k < n;\
    \ k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k +\
    \ 1) % 3 == 0) {\n                        count++;\n                    }\n  \
    \              }\n            }\n        }\n        return count;", "        long\
    \ result = 0;\n        // Write your code here.\n        return result;", "  \
    \      // Write your code here\n        return 0;", "        long count = 0;\n\
    \        for (long i = 1; i < n; i++) {\n            for (long j = i + 1; j <\
    \ n; j++) {\n                for (long k = j + 1; k < n; k++) {\n            \
    \        if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n   \
    \                     count++;\n                    }\n                }\n   \
    \         }\n        }\n        return count;", "        long count = 0;\n   \
    \     for (long i = 1; i < n; i++) {\n            for (long j = i + 1; j < n;\
    \ j++) {\n                for (long k = j + 1; k < n; k++) {\n               \
    \     if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n      \
    \                  count++;\n                    }\n                }\n      \
    \      }\n        }\n        return count;", "        // Write your code here\n\
    \        return 0;", "        // Write your code here.\n        return 0;", " \
    \       // Write your code here.\n        return 0;", "        // The number of\
    \ triples is equal to the number of triples of the form (i, j, k)\n        //\
    \ where i < j < k and i + j + k is divisible by 3.\n        // The number of triples\
    \ of the form (i, j, k) where i < j < k is equal to\n        // n * (n - 1) *\
    \ (n - 2) / 6.\n        // The number of triples of the form (i, j, k) where i\
    \ + j + k is divisible by 3 is\n        // equal to the number of triples of the\
    \ form (i, j, k) where i + j + k is divisible by 3\n        // and i < j < k.\n\
    \        // The number of triples of the form (i, j, k) where i + j + k is divisible\
    \ by 3 and i < j < k\n        // is equal to the number of triples of the form\
    \ (i, j, k) where i + j + k is divisible by 3\n        // and i < j < k and i\
    \ + j + k is even.\n        // The number of triples of the form (i, j, k) where\
    \ i + j + k is divisible by 3 and i < j < k\n        // and i + j + k is even\
    \ is equal to the number of triples of the form (i, j, k) where i + j + k\n  \
    \      // is divisible by 3 and i < j < k and i + j + k is even and i + j is even.\n\
    \        // The number of triples of the form (i, j, k) where i + j + k is divisible\
    \ by 3 and i < j < k\n        // and i + j + k is even and i + j is even is equal\
    \ to the number of triples of the form (i, j, k)\n        // where i + j + k is\
    \ divisible by 3 and i < j < k and i + j + k is even and i + j is even and i +\
    \ k is even.\n        // The number of triples of the form (i, j, k) where i +\
    \ j + k is divisible by 3 and i < j < k\n        // and i + j + k is even and\
    \ i + j is even and"]
stop_tokens:
- "\n    }\n"
